(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./node_modules/hammerjs/hammer.js":
/*!*****************************************!*\
  !*** ./node_modules/hammerjs/hammer.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.7 - 2016-04-22
 * http://hammerjs.github.io/
 *
 * Copyright (c) 2016 Jorik Tangelder;
 * Licensed under the MIT license */
(function(window, document, exportName, undefined) {
  'use strict';

var VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];
var TEST_ELEMENT = document.createElement('div');

var TYPE_FUNCTION = 'function';

var round = Math.round;
var abs = Math.abs;
var now = Date.now;

/**
 * set a timeout with a given scope
 * @param {Function} fn
 * @param {Number} timeout
 * @param {Object} context
 * @returns {number}
 */
function setTimeoutContext(fn, timeout, context) {
    return setTimeout(bindFn(fn, context), timeout);
}

/**
 * if the argument is an array, we want to execute the fn on each entry
 * if it aint an array we don't want to do a thing.
 * this is used by all the methods that accept a single and array argument.
 * @param {*|Array} arg
 * @param {String} fn
 * @param {Object} [context]
 * @returns {Boolean}
 */
function invokeArrayArg(arg, fn, context) {
    if (Array.isArray(arg)) {
        each(arg, context[fn], context);
        return true;
    }
    return false;
}

/**
 * walk objects and arrays
 * @param {Object} obj
 * @param {Function} iterator
 * @param {Object} context
 */
function each(obj, iterator, context) {
    var i;

    if (!obj) {
        return;
    }

    if (obj.forEach) {
        obj.forEach(iterator, context);
    } else if (obj.length !== undefined) {
        i = 0;
        while (i < obj.length) {
            iterator.call(context, obj[i], i, obj);
            i++;
        }
    } else {
        for (i in obj) {
            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);
        }
    }
}

/**
 * wrap a method with a deprecation warning and stack trace
 * @param {Function} method
 * @param {String} name
 * @param {String} message
 * @returns {Function} A new function wrapping the supplied method.
 */
function deprecate(method, name, message) {
    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\n' + message + ' AT \n';
    return function() {
        var e = new Error('get-stack-trace');
        var stack = e && e.stack ? e.stack.replace(/^[^\(]+?[\n$]/gm, '')
            .replace(/^\s+at\s+/gm, '')
            .replace(/^Object.<anonymous>\s*\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';

        var log = window.console && (window.console.warn || window.console.log);
        if (log) {
            log.call(window.console, deprecationMessage, stack);
        }
        return method.apply(this, arguments);
    };
}

/**
 * extend object.
 * means that properties in dest will be overwritten by the ones in src.
 * @param {Object} target
 * @param {...Object} objects_to_assign
 * @returns {Object} target
 */
var assign;
if (typeof Object.assign !== 'function') {
    assign = function assign(target) {
        if (target === undefined || target === null) {
            throw new TypeError('Cannot convert undefined or null to object');
        }

        var output = Object(target);
        for (var index = 1; index < arguments.length; index++) {
            var source = arguments[index];
            if (source !== undefined && source !== null) {
                for (var nextKey in source) {
                    if (source.hasOwnProperty(nextKey)) {
                        output[nextKey] = source[nextKey];
                    }
                }
            }
        }
        return output;
    };
} else {
    assign = Object.assign;
}

/**
 * extend object.
 * means that properties in dest will be overwritten by the ones in src.
 * @param {Object} dest
 * @param {Object} src
 * @param {Boolean} [merge=false]
 * @returns {Object} dest
 */
var extend = deprecate(function extend(dest, src, merge) {
    var keys = Object.keys(src);
    var i = 0;
    while (i < keys.length) {
        if (!merge || (merge && dest[keys[i]] === undefined)) {
            dest[keys[i]] = src[keys[i]];
        }
        i++;
    }
    return dest;
}, 'extend', 'Use `assign`.');

/**
 * merge the values from src in the dest.
 * means that properties that exist in dest will not be overwritten by src
 * @param {Object} dest
 * @param {Object} src
 * @returns {Object} dest
 */
var merge = deprecate(function merge(dest, src) {
    return extend(dest, src, true);
}, 'merge', 'Use `assign`.');

/**
 * simple class inheritance
 * @param {Function} child
 * @param {Function} base
 * @param {Object} [properties]
 */
function inherit(child, base, properties) {
    var baseP = base.prototype,
        childP;

    childP = child.prototype = Object.create(baseP);
    childP.constructor = child;
    childP._super = baseP;

    if (properties) {
        assign(childP, properties);
    }
}

/**
 * simple function bind
 * @param {Function} fn
 * @param {Object} context
 * @returns {Function}
 */
function bindFn(fn, context) {
    return function boundFn() {
        return fn.apply(context, arguments);
    };
}

/**
 * let a boolean value also be a function that must return a boolean
 * this first item in args will be used as the context
 * @param {Boolean|Function} val
 * @param {Array} [args]
 * @returns {Boolean}
 */
function boolOrFn(val, args) {
    if (typeof val == TYPE_FUNCTION) {
        return val.apply(args ? args[0] || undefined : undefined, args);
    }
    return val;
}

/**
 * use the val2 when val1 is undefined
 * @param {*} val1
 * @param {*} val2
 * @returns {*}
 */
function ifUndefined(val1, val2) {
    return (val1 === undefined) ? val2 : val1;
}

/**
 * addEventListener with multiple events at once
 * @param {EventTarget} target
 * @param {String} types
 * @param {Function} handler
 */
function addEventListeners(target, types, handler) {
    each(splitStr(types), function(type) {
        target.addEventListener(type, handler, false);
    });
}

/**
 * removeEventListener with multiple events at once
 * @param {EventTarget} target
 * @param {String} types
 * @param {Function} handler
 */
function removeEventListeners(target, types, handler) {
    each(splitStr(types), function(type) {
        target.removeEventListener(type, handler, false);
    });
}

/**
 * find if a node is in the given parent
 * @method hasParent
 * @param {HTMLElement} node
 * @param {HTMLElement} parent
 * @return {Boolean} found
 */
function hasParent(node, parent) {
    while (node) {
        if (node == parent) {
            return true;
        }
        node = node.parentNode;
    }
    return false;
}

/**
 * small indexOf wrapper
 * @param {String} str
 * @param {String} find
 * @returns {Boolean} found
 */
function inStr(str, find) {
    return str.indexOf(find) > -1;
}

/**
 * split string on whitespace
 * @param {String} str
 * @returns {Array} words
 */
function splitStr(str) {
    return str.trim().split(/\s+/g);
}

/**
 * find if a array contains the object using indexOf or a simple polyFill
 * @param {Array} src
 * @param {String} find
 * @param {String} [findByKey]
 * @return {Boolean|Number} false when not found, or the index
 */
function inArray(src, find, findByKey) {
    if (src.indexOf && !findByKey) {
        return src.indexOf(find);
    } else {
        var i = 0;
        while (i < src.length) {
            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {
                return i;
            }
            i++;
        }
        return -1;
    }
}

/**
 * convert array-like objects to real arrays
 * @param {Object} obj
 * @returns {Array}
 */
function toArray(obj) {
    return Array.prototype.slice.call(obj, 0);
}

/**
 * unique array with objects based on a key (like 'id') or just by the array's value
 * @param {Array} src [{id:1},{id:2},{id:1}]
 * @param {String} [key]
 * @param {Boolean} [sort=False]
 * @returns {Array} [{id:1},{id:2}]
 */
function uniqueArray(src, key, sort) {
    var results = [];
    var values = [];
    var i = 0;

    while (i < src.length) {
        var val = key ? src[i][key] : src[i];
        if (inArray(values, val) < 0) {
            results.push(src[i]);
        }
        values[i] = val;
        i++;
    }

    if (sort) {
        if (!key) {
            results = results.sort();
        } else {
            results = results.sort(function sortUniqueArray(a, b) {
                return a[key] > b[key];
            });
        }
    }

    return results;
}

/**
 * get the prefixed property
 * @param {Object} obj
 * @param {String} property
 * @returns {String|Undefined} prefixed
 */
function prefixed(obj, property) {
    var prefix, prop;
    var camelProp = property[0].toUpperCase() + property.slice(1);

    var i = 0;
    while (i < VENDOR_PREFIXES.length) {
        prefix = VENDOR_PREFIXES[i];
        prop = (prefix) ? prefix + camelProp : property;

        if (prop in obj) {
            return prop;
        }
        i++;
    }
    return undefined;
}

/**
 * get a unique id
 * @returns {number} uniqueId
 */
var _uniqueId = 1;
function uniqueId() {
    return _uniqueId++;
}

/**
 * get the window object of an element
 * @param {HTMLElement} element
 * @returns {DocumentView|Window}
 */
function getWindowForElement(element) {
    var doc = element.ownerDocument || element;
    return (doc.defaultView || doc.parentWindow || window);
}

var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;

var SUPPORT_TOUCH = ('ontouchstart' in window);
var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;
var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);

var INPUT_TYPE_TOUCH = 'touch';
var INPUT_TYPE_PEN = 'pen';
var INPUT_TYPE_MOUSE = 'mouse';
var INPUT_TYPE_KINECT = 'kinect';

var COMPUTE_INTERVAL = 25;

var INPUT_START = 1;
var INPUT_MOVE = 2;
var INPUT_END = 4;
var INPUT_CANCEL = 8;

var DIRECTION_NONE = 1;
var DIRECTION_LEFT = 2;
var DIRECTION_RIGHT = 4;
var DIRECTION_UP = 8;
var DIRECTION_DOWN = 16;

var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;
var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;
var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;

var PROPS_XY = ['x', 'y'];
var PROPS_CLIENT_XY = ['clientX', 'clientY'];

/**
 * create new input type manager
 * @param {Manager} manager
 * @param {Function} callback
 * @returns {Input}
 * @constructor
 */
function Input(manager, callback) {
    var self = this;
    this.manager = manager;
    this.callback = callback;
    this.element = manager.element;
    this.target = manager.options.inputTarget;

    // smaller wrapper around the handler, for the scope and the enabled state of the manager,
    // so when disabled the input events are completely bypassed.
    this.domHandler = function(ev) {
        if (boolOrFn(manager.options.enable, [manager])) {
            self.handler(ev);
        }
    };

    this.init();

}

Input.prototype = {
    /**
     * should handle the inputEvent data and trigger the callback
     * @virtual
     */
    handler: function() { },

    /**
     * bind the events
     */
    init: function() {
        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);
        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);
        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
    },

    /**
     * unbind the events
     */
    destroy: function() {
        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);
        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);
        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
    }
};

/**
 * create new input type manager
 * called by the Manager constructor
 * @param {Hammer} manager
 * @returns {Input}
 */
function createInputInstance(manager) {
    var Type;
    var inputClass = manager.options.inputClass;

    if (inputClass) {
        Type = inputClass;
    } else if (SUPPORT_POINTER_EVENTS) {
        Type = PointerEventInput;
    } else if (SUPPORT_ONLY_TOUCH) {
        Type = TouchInput;
    } else if (!SUPPORT_TOUCH) {
        Type = MouseInput;
    } else {
        Type = TouchMouseInput;
    }
    return new (Type)(manager, inputHandler);
}

/**
 * handle input events
 * @param {Manager} manager
 * @param {String} eventType
 * @param {Object} input
 */
function inputHandler(manager, eventType, input) {
    var pointersLen = input.pointers.length;
    var changedPointersLen = input.changedPointers.length;
    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));
    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));

    input.isFirst = !!isFirst;
    input.isFinal = !!isFinal;

    if (isFirst) {
        manager.session = {};
    }

    // source event is the normalized value of the domEvents
    // like 'touchstart, mouseup, pointerdown'
    input.eventType = eventType;

    // compute scale, rotation etc
    computeInputData(manager, input);

    // emit secret event
    manager.emit('hammer.input', input);

    manager.recognize(input);
    manager.session.prevInput = input;
}

/**
 * extend the data with some usable properties like scale, rotate, velocity etc
 * @param {Object} manager
 * @param {Object} input
 */
function computeInputData(manager, input) {
    var session = manager.session;
    var pointers = input.pointers;
    var pointersLength = pointers.length;

    // store the first input to calculate the distance and direction
    if (!session.firstInput) {
        session.firstInput = simpleCloneInputData(input);
    }

    // to compute scale and rotation we need to store the multiple touches
    if (pointersLength > 1 && !session.firstMultiple) {
        session.firstMultiple = simpleCloneInputData(input);
    } else if (pointersLength === 1) {
        session.firstMultiple = false;
    }

    var firstInput = session.firstInput;
    var firstMultiple = session.firstMultiple;
    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;

    var center = input.center = getCenter(pointers);
    input.timeStamp = now();
    input.deltaTime = input.timeStamp - firstInput.timeStamp;

    input.angle = getAngle(offsetCenter, center);
    input.distance = getDistance(offsetCenter, center);

    computeDeltaXY(session, input);
    input.offsetDirection = getDirection(input.deltaX, input.deltaY);

    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);
    input.overallVelocityX = overallVelocity.x;
    input.overallVelocityY = overallVelocity.y;
    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;

    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;
    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;

    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >
        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);

    computeIntervalInputData(session, input);

    // find the correct target
    var target = manager.element;
    if (hasParent(input.srcEvent.target, target)) {
        target = input.srcEvent.target;
    }
    input.target = target;
}

function computeDeltaXY(session, input) {
    var center = input.center;
    var offset = session.offsetDelta || {};
    var prevDelta = session.prevDelta || {};
    var prevInput = session.prevInput || {};

    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {
        prevDelta = session.prevDelta = {
            x: prevInput.deltaX || 0,
            y: prevInput.deltaY || 0
        };

        offset = session.offsetDelta = {
            x: center.x,
            y: center.y
        };
    }

    input.deltaX = prevDelta.x + (center.x - offset.x);
    input.deltaY = prevDelta.y + (center.y - offset.y);
}

/**
 * velocity is calculated every x ms
 * @param {Object} session
 * @param {Object} input
 */
function computeIntervalInputData(session, input) {
    var last = session.lastInterval || input,
        deltaTime = input.timeStamp - last.timeStamp,
        velocity, velocityX, velocityY, direction;

    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {
        var deltaX = input.deltaX - last.deltaX;
        var deltaY = input.deltaY - last.deltaY;

        var v = getVelocity(deltaTime, deltaX, deltaY);
        velocityX = v.x;
        velocityY = v.y;
        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;
        direction = getDirection(deltaX, deltaY);

        session.lastInterval = input;
    } else {
        // use latest velocity info if it doesn't overtake a minimum period
        velocity = last.velocity;
        velocityX = last.velocityX;
        velocityY = last.velocityY;
        direction = last.direction;
    }

    input.velocity = velocity;
    input.velocityX = velocityX;
    input.velocityY = velocityY;
    input.direction = direction;
}

/**
 * create a simple clone from the input used for storage of firstInput and firstMultiple
 * @param {Object} input
 * @returns {Object} clonedInputData
 */
function simpleCloneInputData(input) {
    // make a simple copy of the pointers because we will get a reference if we don't
    // we only need clientXY for the calculations
    var pointers = [];
    var i = 0;
    while (i < input.pointers.length) {
        pointers[i] = {
            clientX: round(input.pointers[i].clientX),
            clientY: round(input.pointers[i].clientY)
        };
        i++;
    }

    return {
        timeStamp: now(),
        pointers: pointers,
        center: getCenter(pointers),
        deltaX: input.deltaX,
        deltaY: input.deltaY
    };
}

/**
 * get the center of all the pointers
 * @param {Array} pointers
 * @return {Object} center contains `x` and `y` properties
 */
function getCenter(pointers) {
    var pointersLength = pointers.length;

    // no need to loop when only one touch
    if (pointersLength === 1) {
        return {
            x: round(pointers[0].clientX),
            y: round(pointers[0].clientY)
        };
    }

    var x = 0, y = 0, i = 0;
    while (i < pointersLength) {
        x += pointers[i].clientX;
        y += pointers[i].clientY;
        i++;
    }

    return {
        x: round(x / pointersLength),
        y: round(y / pointersLength)
    };
}

/**
 * calculate the velocity between two points. unit is in px per ms.
 * @param {Number} deltaTime
 * @param {Number} x
 * @param {Number} y
 * @return {Object} velocity `x` and `y`
 */
function getVelocity(deltaTime, x, y) {
    return {
        x: x / deltaTime || 0,
        y: y / deltaTime || 0
    };
}

/**
 * get the direction between two points
 * @param {Number} x
 * @param {Number} y
 * @return {Number} direction
 */
function getDirection(x, y) {
    if (x === y) {
        return DIRECTION_NONE;
    }

    if (abs(x) >= abs(y)) {
        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
    }
    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;
}

/**
 * calculate the absolute distance between two points
 * @param {Object} p1 {x, y}
 * @param {Object} p2 {x, y}
 * @param {Array} [props] containing x and y keys
 * @return {Number} distance
 */
function getDistance(p1, p2, props) {
    if (!props) {
        props = PROPS_XY;
    }
    var x = p2[props[0]] - p1[props[0]],
        y = p2[props[1]] - p1[props[1]];

    return Math.sqrt((x * x) + (y * y));
}

/**
 * calculate the angle between two coordinates
 * @param {Object} p1
 * @param {Object} p2
 * @param {Array} [props] containing x and y keys
 * @return {Number} angle
 */
function getAngle(p1, p2, props) {
    if (!props) {
        props = PROPS_XY;
    }
    var x = p2[props[0]] - p1[props[0]],
        y = p2[props[1]] - p1[props[1]];
    return Math.atan2(y, x) * 180 / Math.PI;
}

/**
 * calculate the rotation degrees between two pointersets
 * @param {Array} start array of pointers
 * @param {Array} end array of pointers
 * @return {Number} rotation
 */
function getRotation(start, end) {
    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);
}

/**
 * calculate the scale factor between two pointersets
 * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out
 * @param {Array} start array of pointers
 * @param {Array} end array of pointers
 * @return {Number} scale
 */
function getScale(start, end) {
    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);
}

var MOUSE_INPUT_MAP = {
    mousedown: INPUT_START,
    mousemove: INPUT_MOVE,
    mouseup: INPUT_END
};

var MOUSE_ELEMENT_EVENTS = 'mousedown';
var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';

/**
 * Mouse events input
 * @constructor
 * @extends Input
 */
function MouseInput() {
    this.evEl = MOUSE_ELEMENT_EVENTS;
    this.evWin = MOUSE_WINDOW_EVENTS;

    this.pressed = false; // mousedown state

    Input.apply(this, arguments);
}

inherit(MouseInput, Input, {
    /**
     * handle mouse events
     * @param {Object} ev
     */
    handler: function MEhandler(ev) {
        var eventType = MOUSE_INPUT_MAP[ev.type];

        // on start we want to have the left mouse button down
        if (eventType & INPUT_START && ev.button === 0) {
            this.pressed = true;
        }

        if (eventType & INPUT_MOVE && ev.which !== 1) {
            eventType = INPUT_END;
        }

        // mouse must be down
        if (!this.pressed) {
            return;
        }

        if (eventType & INPUT_END) {
            this.pressed = false;
        }

        this.callback(this.manager, eventType, {
            pointers: [ev],
            changedPointers: [ev],
            pointerType: INPUT_TYPE_MOUSE,
            srcEvent: ev
        });
    }
});

var POINTER_INPUT_MAP = {
    pointerdown: INPUT_START,
    pointermove: INPUT_MOVE,
    pointerup: INPUT_END,
    pointercancel: INPUT_CANCEL,
    pointerout: INPUT_CANCEL
};

// in IE10 the pointer types is defined as an enum
var IE10_POINTER_TYPE_ENUM = {
    2: INPUT_TYPE_TOUCH,
    3: INPUT_TYPE_PEN,
    4: INPUT_TYPE_MOUSE,
    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816
};

var POINTER_ELEMENT_EVENTS = 'pointerdown';
var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';

// IE10 has prefixed support, and case-sensitive
if (window.MSPointerEvent && !window.PointerEvent) {
    POINTER_ELEMENT_EVENTS = 'MSPointerDown';
    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';
}

/**
 * Pointer events input
 * @constructor
 * @extends Input
 */
function PointerEventInput() {
    this.evEl = POINTER_ELEMENT_EVENTS;
    this.evWin = POINTER_WINDOW_EVENTS;

    Input.apply(this, arguments);

    this.store = (this.manager.session.pointerEvents = []);
}

inherit(PointerEventInput, Input, {
    /**
     * handle mouse events
     * @param {Object} ev
     */
    handler: function PEhandler(ev) {
        var store = this.store;
        var removePointer = false;

        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');
        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];
        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;

        var isTouch = (pointerType == INPUT_TYPE_TOUCH);

        // get index of the event in the store
        var storeIndex = inArray(store, ev.pointerId, 'pointerId');

        // start and mouse must be down
        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {
            if (storeIndex < 0) {
                store.push(ev);
                storeIndex = store.length - 1;
            }
        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
            removePointer = true;
        }

        // it not found, so the pointer hasn't been down (so it's probably a hover)
        if (storeIndex < 0) {
            return;
        }

        // update the event in the store
        store[storeIndex] = ev;

        this.callback(this.manager, eventType, {
            pointers: store,
            changedPointers: [ev],
            pointerType: pointerType,
            srcEvent: ev
        });

        if (removePointer) {
            // remove from the store
            store.splice(storeIndex, 1);
        }
    }
});

var SINGLE_TOUCH_INPUT_MAP = {
    touchstart: INPUT_START,
    touchmove: INPUT_MOVE,
    touchend: INPUT_END,
    touchcancel: INPUT_CANCEL
};

var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';
var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';

/**
 * Touch events input
 * @constructor
 * @extends Input
 */
function SingleTouchInput() {
    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;
    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;
    this.started = false;

    Input.apply(this, arguments);
}

inherit(SingleTouchInput, Input, {
    handler: function TEhandler(ev) {
        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];

        // should we handle the touch events?
        if (type === INPUT_START) {
            this.started = true;
        }

        if (!this.started) {
            return;
        }

        var touches = normalizeSingleTouches.call(this, ev, type);

        // when done, reset the started state
        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {
            this.started = false;
        }

        this.callback(this.manager, type, {
            pointers: touches[0],
            changedPointers: touches[1],
            pointerType: INPUT_TYPE_TOUCH,
            srcEvent: ev
        });
    }
});

/**
 * @this {TouchInput}
 * @param {Object} ev
 * @param {Number} type flag
 * @returns {undefined|Array} [all, changed]
 */
function normalizeSingleTouches(ev, type) {
    var all = toArray(ev.touches);
    var changed = toArray(ev.changedTouches);

    if (type & (INPUT_END | INPUT_CANCEL)) {
        all = uniqueArray(all.concat(changed), 'identifier', true);
    }

    return [all, changed];
}

var TOUCH_INPUT_MAP = {
    touchstart: INPUT_START,
    touchmove: INPUT_MOVE,
    touchend: INPUT_END,
    touchcancel: INPUT_CANCEL
};

var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';

/**
 * Multi-user touch events input
 * @constructor
 * @extends Input
 */
function TouchInput() {
    this.evTarget = TOUCH_TARGET_EVENTS;
    this.targetIds = {};

    Input.apply(this, arguments);
}

inherit(TouchInput, Input, {
    handler: function MTEhandler(ev) {
        var type = TOUCH_INPUT_MAP[ev.type];
        var touches = getTouches.call(this, ev, type);
        if (!touches) {
            return;
        }

        this.callback(this.manager, type, {
            pointers: touches[0],
            changedPointers: touches[1],
            pointerType: INPUT_TYPE_TOUCH,
            srcEvent: ev
        });
    }
});

/**
 * @this {TouchInput}
 * @param {Object} ev
 * @param {Number} type flag
 * @returns {undefined|Array} [all, changed]
 */
function getTouches(ev, type) {
    var allTouches = toArray(ev.touches);
    var targetIds = this.targetIds;

    // when there is only one touch, the process can be simplified
    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {
        targetIds[allTouches[0].identifier] = true;
        return [allTouches, allTouches];
    }

    var i,
        targetTouches,
        changedTouches = toArray(ev.changedTouches),
        changedTargetTouches = [],
        target = this.target;

    // get target touches from touches
    targetTouches = allTouches.filter(function(touch) {
        return hasParent(touch.target, target);
    });

    // collect touches
    if (type === INPUT_START) {
        i = 0;
        while (i < targetTouches.length) {
            targetIds[targetTouches[i].identifier] = true;
            i++;
        }
    }

    // filter changed touches to only contain touches that exist in the collected target ids
    i = 0;
    while (i < changedTouches.length) {
        if (targetIds[changedTouches[i].identifier]) {
            changedTargetTouches.push(changedTouches[i]);
        }

        // cleanup removed touches
        if (type & (INPUT_END | INPUT_CANCEL)) {
            delete targetIds[changedTouches[i].identifier];
        }
        i++;
    }

    if (!changedTargetTouches.length) {
        return;
    }

    return [
        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'
        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),
        changedTargetTouches
    ];
}

/**
 * Combined touch and mouse input
 *
 * Touch has a higher priority then mouse, and while touching no mouse events are allowed.
 * This because touch devices also emit mouse events while doing a touch.
 *
 * @constructor
 * @extends Input
 */

var DEDUP_TIMEOUT = 2500;
var DEDUP_DISTANCE = 25;

function TouchMouseInput() {
    Input.apply(this, arguments);

    var handler = bindFn(this.handler, this);
    this.touch = new TouchInput(this.manager, handler);
    this.mouse = new MouseInput(this.manager, handler);

    this.primaryTouch = null;
    this.lastTouches = [];
}

inherit(TouchMouseInput, Input, {
    /**
     * handle mouse and touch events
     * @param {Hammer} manager
     * @param {String} inputEvent
     * @param {Object} inputData
     */
    handler: function TMEhandler(manager, inputEvent, inputData) {
        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),
            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);

        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {
            return;
        }

        // when we're in a touch event, record touches to  de-dupe synthetic mouse event
        if (isTouch) {
            recordTouches.call(this, inputEvent, inputData);
        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {
            return;
        }

        this.callback(manager, inputEvent, inputData);
    },

    /**
     * remove the event listeners
     */
    destroy: function destroy() {
        this.touch.destroy();
        this.mouse.destroy();
    }
});

function recordTouches(eventType, eventData) {
    if (eventType & INPUT_START) {
        this.primaryTouch = eventData.changedPointers[0].identifier;
        setLastTouch.call(this, eventData);
    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
        setLastTouch.call(this, eventData);
    }
}

function setLastTouch(eventData) {
    var touch = eventData.changedPointers[0];

    if (touch.identifier === this.primaryTouch) {
        var lastTouch = {x: touch.clientX, y: touch.clientY};
        this.lastTouches.push(lastTouch);
        var lts = this.lastTouches;
        var removeLastTouch = function() {
            var i = lts.indexOf(lastTouch);
            if (i > -1) {
                lts.splice(i, 1);
            }
        };
        setTimeout(removeLastTouch, DEDUP_TIMEOUT);
    }
}

function isSyntheticEvent(eventData) {
    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;
    for (var i = 0; i < this.lastTouches.length; i++) {
        var t = this.lastTouches[i];
        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);
        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {
            return true;
        }
    }
    return false;
}

var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');
var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;

// magical touchAction value
var TOUCH_ACTION_COMPUTE = 'compute';
var TOUCH_ACTION_AUTO = 'auto';
var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented
var TOUCH_ACTION_NONE = 'none';
var TOUCH_ACTION_PAN_X = 'pan-x';
var TOUCH_ACTION_PAN_Y = 'pan-y';
var TOUCH_ACTION_MAP = getTouchActionProps();

/**
 * Touch Action
 * sets the touchAction property or uses the js alternative
 * @param {Manager} manager
 * @param {String} value
 * @constructor
 */
function TouchAction(manager, value) {
    this.manager = manager;
    this.set(value);
}

TouchAction.prototype = {
    /**
     * set the touchAction value on the element or enable the polyfill
     * @param {String} value
     */
    set: function(value) {
        // find out the touch-action by the event handlers
        if (value == TOUCH_ACTION_COMPUTE) {
            value = this.compute();
        }

        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {
            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;
        }
        this.actions = value.toLowerCase().trim();
    },

    /**
     * just re-set the touchAction value
     */
    update: function() {
        this.set(this.manager.options.touchAction);
    },

    /**
     * compute the value for the touchAction property based on the recognizer's settings
     * @returns {String} value
     */
    compute: function() {
        var actions = [];
        each(this.manager.recognizers, function(recognizer) {
            if (boolOrFn(recognizer.options.enable, [recognizer])) {
                actions = actions.concat(recognizer.getTouchAction());
            }
        });
        return cleanTouchActions(actions.join(' '));
    },

    /**
     * this method is called on each input cycle and provides the preventing of the browser behavior
     * @param {Object} input
     */
    preventDefaults: function(input) {
        var srcEvent = input.srcEvent;
        var direction = input.offsetDirection;

        // if the touch action did prevented once this session
        if (this.manager.session.prevented) {
            srcEvent.preventDefault();
            return;
        }

        var actions = this.actions;
        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];
        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];
        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];

        if (hasNone) {
            //do not prevent defaults if this is a tap gesture

            var isTapPointer = input.pointers.length === 1;
            var isTapMovement = input.distance < 2;
            var isTapTouchTime = input.deltaTime < 250;

            if (isTapPointer && isTapMovement && isTapTouchTime) {
                return;
            }
        }

        if (hasPanX && hasPanY) {
            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent
            return;
        }

        if (hasNone ||
            (hasPanY && direction & DIRECTION_HORIZONTAL) ||
            (hasPanX && direction & DIRECTION_VERTICAL)) {
            return this.preventSrc(srcEvent);
        }
    },

    /**
     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)
     * @param {Object} srcEvent
     */
    preventSrc: function(srcEvent) {
        this.manager.session.prevented = true;
        srcEvent.preventDefault();
    }
};

/**
 * when the touchActions are collected they are not a valid value, so we need to clean things up. *
 * @param {String} actions
 * @returns {*}
 */
function cleanTouchActions(actions) {
    // none
    if (inStr(actions, TOUCH_ACTION_NONE)) {
        return TOUCH_ACTION_NONE;
    }

    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);
    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);

    // if both pan-x and pan-y are set (different recognizers
    // for different directions, e.g. horizontal pan but vertical swipe?)
    // we need none (as otherwise with pan-x pan-y combined none of these
    // recognizers will work, since the browser would handle all panning
    if (hasPanX && hasPanY) {
        return TOUCH_ACTION_NONE;
    }

    // pan-x OR pan-y
    if (hasPanX || hasPanY) {
        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;
    }

    // manipulation
    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {
        return TOUCH_ACTION_MANIPULATION;
    }

    return TOUCH_ACTION_AUTO;
}

function getTouchActionProps() {
    if (!NATIVE_TOUCH_ACTION) {
        return false;
    }
    var touchMap = {};
    var cssSupports = window.CSS && window.CSS.supports;
    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {

        // If css.supports is not supported but there is native touch-action assume it supports
        // all values. This is the case for IE 10 and 11.
        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;
    });
    return touchMap;
}

/**
 * Recognizer flow explained; *
 * All recognizers have the initial state of POSSIBLE when a input session starts.
 * The definition of a input session is from the first input until the last input, with all it's movement in it. *
 * Example session for mouse-input: mousedown -> mousemove -> mouseup
 *
 * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed
 * which determines with state it should be.
 *
 * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to
 * POSSIBLE to give it another change on the next cycle.
 *
 *               Possible
 *                  |
 *            +-----+---------------+
 *            |                     |
 *      +-----+-----+               |
 *      |           |               |
 *   Failed      Cancelled          |
 *                          +-------+------+
 *                          |              |
 *                      Recognized       Began
 *                                         |
 *                                      Changed
 *                                         |
 *                                  Ended/Recognized
 */
var STATE_POSSIBLE = 1;
var STATE_BEGAN = 2;
var STATE_CHANGED = 4;
var STATE_ENDED = 8;
var STATE_RECOGNIZED = STATE_ENDED;
var STATE_CANCELLED = 16;
var STATE_FAILED = 32;

/**
 * Recognizer
 * Every recognizer needs to extend from this class.
 * @constructor
 * @param {Object} options
 */
function Recognizer(options) {
    this.options = assign({}, this.defaults, options || {});

    this.id = uniqueId();

    this.manager = null;

    // default is enable true
    this.options.enable = ifUndefined(this.options.enable, true);

    this.state = STATE_POSSIBLE;

    this.simultaneous = {};
    this.requireFail = [];
}

Recognizer.prototype = {
    /**
     * @virtual
     * @type {Object}
     */
    defaults: {},

    /**
     * set options
     * @param {Object} options
     * @return {Recognizer}
     */
    set: function(options) {
        assign(this.options, options);

        // also update the touchAction, in case something changed about the directions/enabled state
        this.manager && this.manager.touchAction.update();
        return this;
    },

    /**
     * recognize simultaneous with an other recognizer.
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    recognizeWith: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {
            return this;
        }

        var simultaneous = this.simultaneous;
        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        if (!simultaneous[otherRecognizer.id]) {
            simultaneous[otherRecognizer.id] = otherRecognizer;
            otherRecognizer.recognizeWith(this);
        }
        return this;
    },

    /**
     * drop the simultaneous link. it doesnt remove the link on the other recognizer.
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    dropRecognizeWith: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {
            return this;
        }

        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        delete this.simultaneous[otherRecognizer.id];
        return this;
    },

    /**
     * recognizer can only run when an other is failing
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    requireFailure: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {
            return this;
        }

        var requireFail = this.requireFail;
        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        if (inArray(requireFail, otherRecognizer) === -1) {
            requireFail.push(otherRecognizer);
            otherRecognizer.requireFailure(this);
        }
        return this;
    },

    /**
     * drop the requireFailure link. it does not remove the link on the other recognizer.
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */
    dropRequireFailure: function(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {
            return this;
        }

        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        var index = inArray(this.requireFail, otherRecognizer);
        if (index > -1) {
            this.requireFail.splice(index, 1);
        }
        return this;
    },

    /**
     * has require failures boolean
     * @returns {boolean}
     */
    hasRequireFailures: function() {
        return this.requireFail.length > 0;
    },

    /**
     * if the recognizer can recognize simultaneous with an other recognizer
     * @param {Recognizer} otherRecognizer
     * @returns {Boolean}
     */
    canRecognizeWith: function(otherRecognizer) {
        return !!this.simultaneous[otherRecognizer.id];
    },

    /**
     * You should use `tryEmit` instead of `emit` directly to check
     * that all the needed recognizers has failed before emitting.
     * @param {Object} input
     */
    emit: function(input) {
        var self = this;
        var state = this.state;

        function emit(event) {
            self.manager.emit(event, input);
        }

        // 'panstart' and 'panmove'
        if (state < STATE_ENDED) {
            emit(self.options.event + stateStr(state));
        }

        emit(self.options.event); // simple 'eventName' events

        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)
            emit(input.additionalEvent);
        }

        // panend and pancancel
        if (state >= STATE_ENDED) {
            emit(self.options.event + stateStr(state));
        }
    },

    /**
     * Check that all the require failure recognizers has failed,
     * if true, it emits a gesture event,
     * otherwise, setup the state to FAILED.
     * @param {Object} input
     */
    tryEmit: function(input) {
        if (this.canEmit()) {
            return this.emit(input);
        }
        // it's failing anyway
        this.state = STATE_FAILED;
    },

    /**
     * can we emit?
     * @returns {boolean}
     */
    canEmit: function() {
        var i = 0;
        while (i < this.requireFail.length) {
            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {
                return false;
            }
            i++;
        }
        return true;
    },

    /**
     * update the recognizer
     * @param {Object} inputData
     */
    recognize: function(inputData) {
        // make a new copy of the inputData
        // so we can change the inputData without messing up the other recognizers
        var inputDataClone = assign({}, inputData);

        // is is enabled and allow recognizing?
        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {
            this.reset();
            this.state = STATE_FAILED;
            return;
        }

        // reset when we've reached the end
        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {
            this.state = STATE_POSSIBLE;
        }

        this.state = this.process(inputDataClone);

        // the recognizer has recognized a gesture
        // so trigger an event
        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {
            this.tryEmit(inputDataClone);
        }
    },

    /**
     * return the state of the recognizer
     * the actual recognizing happens in this method
     * @virtual
     * @param {Object} inputData
     * @returns {Const} STATE
     */
    process: function(inputData) { }, // jshint ignore:line

    /**
     * return the preferred touch-action
     * @virtual
     * @returns {Array}
     */
    getTouchAction: function() { },

    /**
     * called when the gesture isn't allowed to recognize
     * like when another is being recognized or it is disabled
     * @virtual
     */
    reset: function() { }
};

/**
 * get a usable string, used as event postfix
 * @param {Const} state
 * @returns {String} state
 */
function stateStr(state) {
    if (state & STATE_CANCELLED) {
        return 'cancel';
    } else if (state & STATE_ENDED) {
        return 'end';
    } else if (state & STATE_CHANGED) {
        return 'move';
    } else if (state & STATE_BEGAN) {
        return 'start';
    }
    return '';
}

/**
 * direction cons to string
 * @param {Const} direction
 * @returns {String}
 */
function directionStr(direction) {
    if (direction == DIRECTION_DOWN) {
        return 'down';
    } else if (direction == DIRECTION_UP) {
        return 'up';
    } else if (direction == DIRECTION_LEFT) {
        return 'left';
    } else if (direction == DIRECTION_RIGHT) {
        return 'right';
    }
    return '';
}

/**
 * get a recognizer by name if it is bound to a manager
 * @param {Recognizer|String} otherRecognizer
 * @param {Recognizer} recognizer
 * @returns {Recognizer}
 */
function getRecognizerByNameIfManager(otherRecognizer, recognizer) {
    var manager = recognizer.manager;
    if (manager) {
        return manager.get(otherRecognizer);
    }
    return otherRecognizer;
}

/**
 * This recognizer is just used as a base for the simple attribute recognizers.
 * @constructor
 * @extends Recognizer
 */
function AttrRecognizer() {
    Recognizer.apply(this, arguments);
}

inherit(AttrRecognizer, Recognizer, {
    /**
     * @namespace
     * @memberof AttrRecognizer
     */
    defaults: {
        /**
         * @type {Number}
         * @default 1
         */
        pointers: 1
    },

    /**
     * Used to check if it the recognizer receives valid input, like input.distance > 10.
     * @memberof AttrRecognizer
     * @param {Object} input
     * @returns {Boolean} recognized
     */
    attrTest: function(input) {
        var optionPointers = this.options.pointers;
        return optionPointers === 0 || input.pointers.length === optionPointers;
    },

    /**
     * Process the input and return the state for the recognizer
     * @memberof AttrRecognizer
     * @param {Object} input
     * @returns {*} State
     */
    process: function(input) {
        var state = this.state;
        var eventType = input.eventType;

        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);
        var isValid = this.attrTest(input);

        // on cancel input and we've recognized before, return STATE_CANCELLED
        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {
            return state | STATE_CANCELLED;
        } else if (isRecognized || isValid) {
            if (eventType & INPUT_END) {
                return state | STATE_ENDED;
            } else if (!(state & STATE_BEGAN)) {
                return STATE_BEGAN;
            }
            return state | STATE_CHANGED;
        }
        return STATE_FAILED;
    }
});

/**
 * Pan
 * Recognized when the pointer is down and moved in the allowed direction.
 * @constructor
 * @extends AttrRecognizer
 */
function PanRecognizer() {
    AttrRecognizer.apply(this, arguments);

    this.pX = null;
    this.pY = null;
}

inherit(PanRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof PanRecognizer
     */
    defaults: {
        event: 'pan',
        threshold: 10,
        pointers: 1,
        direction: DIRECTION_ALL
    },

    getTouchAction: function() {
        var direction = this.options.direction;
        var actions = [];
        if (direction & DIRECTION_HORIZONTAL) {
            actions.push(TOUCH_ACTION_PAN_Y);
        }
        if (direction & DIRECTION_VERTICAL) {
            actions.push(TOUCH_ACTION_PAN_X);
        }
        return actions;
    },

    directionTest: function(input) {
        var options = this.options;
        var hasMoved = true;
        var distance = input.distance;
        var direction = input.direction;
        var x = input.deltaX;
        var y = input.deltaY;

        // lock to axis?
        if (!(direction & options.direction)) {
            if (options.direction & DIRECTION_HORIZONTAL) {
                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;
                hasMoved = x != this.pX;
                distance = Math.abs(input.deltaX);
            } else {
                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;
                hasMoved = y != this.pY;
                distance = Math.abs(input.deltaY);
            }
        }
        input.direction = direction;
        return hasMoved && distance > options.threshold && direction & options.direction;
    },

    attrTest: function(input) {
        return AttrRecognizer.prototype.attrTest.call(this, input) &&
            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));
    },

    emit: function(input) {

        this.pX = input.deltaX;
        this.pY = input.deltaY;

        var direction = directionStr(input.direction);

        if (direction) {
            input.additionalEvent = this.options.event + direction;
        }
        this._super.emit.call(this, input);
    }
});

/**
 * Pinch
 * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).
 * @constructor
 * @extends AttrRecognizer
 */
function PinchRecognizer() {
    AttrRecognizer.apply(this, arguments);
}

inherit(PinchRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof PinchRecognizer
     */
    defaults: {
        event: 'pinch',
        threshold: 0,
        pointers: 2
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_NONE];
    },

    attrTest: function(input) {
        return this._super.attrTest.call(this, input) &&
            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);
    },

    emit: function(input) {
        if (input.scale !== 1) {
            var inOut = input.scale < 1 ? 'in' : 'out';
            input.additionalEvent = this.options.event + inOut;
        }
        this._super.emit.call(this, input);
    }
});

/**
 * Press
 * Recognized when the pointer is down for x ms without any movement.
 * @constructor
 * @extends Recognizer
 */
function PressRecognizer() {
    Recognizer.apply(this, arguments);

    this._timer = null;
    this._input = null;
}

inherit(PressRecognizer, Recognizer, {
    /**
     * @namespace
     * @memberof PressRecognizer
     */
    defaults: {
        event: 'press',
        pointers: 1,
        time: 251, // minimal time of the pointer to be pressed
        threshold: 9 // a minimal movement is ok, but keep it low
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_AUTO];
    },

    process: function(input) {
        var options = this.options;
        var validPointers = input.pointers.length === options.pointers;
        var validMovement = input.distance < options.threshold;
        var validTime = input.deltaTime > options.time;

        this._input = input;

        // we only allow little movement
        // and we've reached an end event, so a tap is possible
        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {
            this.reset();
        } else if (input.eventType & INPUT_START) {
            this.reset();
            this._timer = setTimeoutContext(function() {
                this.state = STATE_RECOGNIZED;
                this.tryEmit();
            }, options.time, this);
        } else if (input.eventType & INPUT_END) {
            return STATE_RECOGNIZED;
        }
        return STATE_FAILED;
    },

    reset: function() {
        clearTimeout(this._timer);
    },

    emit: function(input) {
        if (this.state !== STATE_RECOGNIZED) {
            return;
        }

        if (input && (input.eventType & INPUT_END)) {
            this.manager.emit(this.options.event + 'up', input);
        } else {
            this._input.timeStamp = now();
            this.manager.emit(this.options.event, this._input);
        }
    }
});

/**
 * Rotate
 * Recognized when two or more pointer are moving in a circular motion.
 * @constructor
 * @extends AttrRecognizer
 */
function RotateRecognizer() {
    AttrRecognizer.apply(this, arguments);
}

inherit(RotateRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof RotateRecognizer
     */
    defaults: {
        event: 'rotate',
        threshold: 0,
        pointers: 2
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_NONE];
    },

    attrTest: function(input) {
        return this._super.attrTest.call(this, input) &&
            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);
    }
});

/**
 * Swipe
 * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.
 * @constructor
 * @extends AttrRecognizer
 */
function SwipeRecognizer() {
    AttrRecognizer.apply(this, arguments);
}

inherit(SwipeRecognizer, AttrRecognizer, {
    /**
     * @namespace
     * @memberof SwipeRecognizer
     */
    defaults: {
        event: 'swipe',
        threshold: 10,
        velocity: 0.3,
        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,
        pointers: 1
    },

    getTouchAction: function() {
        return PanRecognizer.prototype.getTouchAction.call(this);
    },

    attrTest: function(input) {
        var direction = this.options.direction;
        var velocity;

        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {
            velocity = input.overallVelocity;
        } else if (direction & DIRECTION_HORIZONTAL) {
            velocity = input.overallVelocityX;
        } else if (direction & DIRECTION_VERTICAL) {
            velocity = input.overallVelocityY;
        }

        return this._super.attrTest.call(this, input) &&
            direction & input.offsetDirection &&
            input.distance > this.options.threshold &&
            input.maxPointers == this.options.pointers &&
            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;
    },

    emit: function(input) {
        var direction = directionStr(input.offsetDirection);
        if (direction) {
            this.manager.emit(this.options.event + direction, input);
        }

        this.manager.emit(this.options.event, input);
    }
});

/**
 * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur
 * between the given interval and position. The delay option can be used to recognize multi-taps without firing
 * a single tap.
 *
 * The eventData from the emitted event contains the property `tapCount`, which contains the amount of
 * multi-taps being recognized.
 * @constructor
 * @extends Recognizer
 */
function TapRecognizer() {
    Recognizer.apply(this, arguments);

    // previous time and center,
    // used for tap counting
    this.pTime = false;
    this.pCenter = false;

    this._timer = null;
    this._input = null;
    this.count = 0;
}

inherit(TapRecognizer, Recognizer, {
    /**
     * @namespace
     * @memberof PinchRecognizer
     */
    defaults: {
        event: 'tap',
        pointers: 1,
        taps: 1,
        interval: 300, // max time between the multi-tap taps
        time: 250, // max time of the pointer to be down (like finger on the screen)
        threshold: 9, // a minimal movement is ok, but keep it low
        posThreshold: 10 // a multi-tap can be a bit off the initial position
    },

    getTouchAction: function() {
        return [TOUCH_ACTION_MANIPULATION];
    },

    process: function(input) {
        var options = this.options;

        var validPointers = input.pointers.length === options.pointers;
        var validMovement = input.distance < options.threshold;
        var validTouchTime = input.deltaTime < options.time;

        this.reset();

        if ((input.eventType & INPUT_START) && (this.count === 0)) {
            return this.failTimeout();
        }

        // we only allow little movement
        // and we've reached an end event, so a tap is possible
        if (validMovement && validTouchTime && validPointers) {
            if (input.eventType != INPUT_END) {
                return this.failTimeout();
            }

            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;
            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;

            this.pTime = input.timeStamp;
            this.pCenter = input.center;

            if (!validMultiTap || !validInterval) {
                this.count = 1;
            } else {
                this.count += 1;
            }

            this._input = input;

            // if tap count matches we have recognized it,
            // else it has began recognizing...
            var tapCount = this.count % options.taps;
            if (tapCount === 0) {
                // no failing requirements, immediately trigger the tap event
                // or wait as long as the multitap interval to trigger
                if (!this.hasRequireFailures()) {
                    return STATE_RECOGNIZED;
                } else {
                    this._timer = setTimeoutContext(function() {
                        this.state = STATE_RECOGNIZED;
                        this.tryEmit();
                    }, options.interval, this);
                    return STATE_BEGAN;
                }
            }
        }
        return STATE_FAILED;
    },

    failTimeout: function() {
        this._timer = setTimeoutContext(function() {
            this.state = STATE_FAILED;
        }, this.options.interval, this);
        return STATE_FAILED;
    },

    reset: function() {
        clearTimeout(this._timer);
    },

    emit: function() {
        if (this.state == STATE_RECOGNIZED) {
            this._input.tapCount = this.count;
            this.manager.emit(this.options.event, this._input);
        }
    }
});

/**
 * Simple way to create a manager with a default set of recognizers.
 * @param {HTMLElement} element
 * @param {Object} [options]
 * @constructor
 */
function Hammer(element, options) {
    options = options || {};
    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);
    return new Manager(element, options);
}

/**
 * @const {string}
 */
Hammer.VERSION = '2.0.7';

/**
 * default settings
 * @namespace
 */
Hammer.defaults = {
    /**
     * set if DOM events are being triggered.
     * But this is slower and unused by simple implementations, so disabled by default.
     * @type {Boolean}
     * @default false
     */
    domEvents: false,

    /**
     * The value for the touchAction property/fallback.
     * When set to `compute` it will magically set the correct value based on the added recognizers.
     * @type {String}
     * @default compute
     */
    touchAction: TOUCH_ACTION_COMPUTE,

    /**
     * @type {Boolean}
     * @default true
     */
    enable: true,

    /**
     * EXPERIMENTAL FEATURE -- can be removed/changed
     * Change the parent input target element.
     * If Null, then it is being set the to main element.
     * @type {Null|EventTarget}
     * @default null
     */
    inputTarget: null,

    /**
     * force an input class
     * @type {Null|Function}
     * @default null
     */
    inputClass: null,

    /**
     * Default recognizer setup when calling `Hammer()`
     * When creating a new Manager these will be skipped.
     * @type {Array}
     */
    preset: [
        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]
        [RotateRecognizer, {enable: false}],
        [PinchRecognizer, {enable: false}, ['rotate']],
        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],
        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],
        [TapRecognizer],
        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],
        [PressRecognizer]
    ],

    /**
     * Some CSS properties can be used to improve the working of Hammer.
     * Add them to this method and they will be set when creating a new Manager.
     * @namespace
     */
    cssProps: {
        /**
         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.
         * @type {String}
         * @default 'none'
         */
        userSelect: 'none',

        /**
         * Disable the Windows Phone grippers when pressing an element.
         * @type {String}
         * @default 'none'
         */
        touchSelect: 'none',

        /**
         * Disables the default callout shown when you touch and hold a touch target.
         * On iOS, when you touch and hold a touch target such as a link, Safari displays
         * a callout containing information about the link. This property allows you to disable that callout.
         * @type {String}
         * @default 'none'
         */
        touchCallout: 'none',

        /**
         * Specifies whether zooming is enabled. Used by IE10>
         * @type {String}
         * @default 'none'
         */
        contentZooming: 'none',

        /**
         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.
         * @type {String}
         * @default 'none'
         */
        userDrag: 'none',

        /**
         * Overrides the highlight color shown when the user taps a link or a JavaScript
         * clickable element in iOS. This property obeys the alpha value, if specified.
         * @type {String}
         * @default 'rgba(0,0,0,0)'
         */
        tapHighlightColor: 'rgba(0,0,0,0)'
    }
};

var STOP = 1;
var FORCED_STOP = 2;

/**
 * Manager
 * @param {HTMLElement} element
 * @param {Object} [options]
 * @constructor
 */
function Manager(element, options) {
    this.options = assign({}, Hammer.defaults, options || {});

    this.options.inputTarget = this.options.inputTarget || element;

    this.handlers = {};
    this.session = {};
    this.recognizers = [];
    this.oldCssProps = {};

    this.element = element;
    this.input = createInputInstance(this);
    this.touchAction = new TouchAction(this, this.options.touchAction);

    toggleCssProps(this, true);

    each(this.options.recognizers, function(item) {
        var recognizer = this.add(new (item[0])(item[1]));
        item[2] && recognizer.recognizeWith(item[2]);
        item[3] && recognizer.requireFailure(item[3]);
    }, this);
}

Manager.prototype = {
    /**
     * set options
     * @param {Object} options
     * @returns {Manager}
     */
    set: function(options) {
        assign(this.options, options);

        // Options that need a little more setup
        if (options.touchAction) {
            this.touchAction.update();
        }
        if (options.inputTarget) {
            // Clean up existing event listeners and reinitialize
            this.input.destroy();
            this.input.target = options.inputTarget;
            this.input.init();
        }
        return this;
    },

    /**
     * stop recognizing for this session.
     * This session will be discarded, when a new [input]start event is fired.
     * When forced, the recognizer cycle is stopped immediately.
     * @param {Boolean} [force]
     */
    stop: function(force) {
        this.session.stopped = force ? FORCED_STOP : STOP;
    },

    /**
     * run the recognizers!
     * called by the inputHandler function on every movement of the pointers (touches)
     * it walks through all the recognizers and tries to detect the gesture that is being made
     * @param {Object} inputData
     */
    recognize: function(inputData) {
        var session = this.session;
        if (session.stopped) {
            return;
        }

        // run the touch-action polyfill
        this.touchAction.preventDefaults(inputData);

        var recognizer;
        var recognizers = this.recognizers;

        // this holds the recognizer that is being recognized.
        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED
        // if no recognizer is detecting a thing, it is set to `null`
        var curRecognizer = session.curRecognizer;

        // reset when the last recognizer is recognized
        // or when we're in a new session
        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {
            curRecognizer = session.curRecognizer = null;
        }

        var i = 0;
        while (i < recognizers.length) {
            recognizer = recognizers[i];

            // find out if we are allowed try to recognize the input for this one.
            // 1.   allow if the session is NOT forced stopped (see the .stop() method)
            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one
            //      that is being recognized.
            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.
            //      this can be setup with the `recognizeWith()` method on the recognizer.
            if (session.stopped !== FORCED_STOP && ( // 1
                    !curRecognizer || recognizer == curRecognizer || // 2
                    recognizer.canRecognizeWith(curRecognizer))) { // 3
                recognizer.recognize(inputData);
            } else {
                recognizer.reset();
            }

            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the
            // current active recognizer. but only if we don't already have an active recognizer
            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {
                curRecognizer = session.curRecognizer = recognizer;
            }
            i++;
        }
    },

    /**
     * get a recognizer by its event name.
     * @param {Recognizer|String} recognizer
     * @returns {Recognizer|Null}
     */
    get: function(recognizer) {
        if (recognizer instanceof Recognizer) {
            return recognizer;
        }

        var recognizers = this.recognizers;
        for (var i = 0; i < recognizers.length; i++) {
            if (recognizers[i].options.event == recognizer) {
                return recognizers[i];
            }
        }
        return null;
    },

    /**
     * add a recognizer to the manager
     * existing recognizers with the same event name will be removed
     * @param {Recognizer} recognizer
     * @returns {Recognizer|Manager}
     */
    add: function(recognizer) {
        if (invokeArrayArg(recognizer, 'add', this)) {
            return this;
        }

        // remove existing
        var existing = this.get(recognizer.options.event);
        if (existing) {
            this.remove(existing);
        }

        this.recognizers.push(recognizer);
        recognizer.manager = this;

        this.touchAction.update();
        return recognizer;
    },

    /**
     * remove a recognizer by name or instance
     * @param {Recognizer|String} recognizer
     * @returns {Manager}
     */
    remove: function(recognizer) {
        if (invokeArrayArg(recognizer, 'remove', this)) {
            return this;
        }

        recognizer = this.get(recognizer);

        // let's make sure this recognizer exists
        if (recognizer) {
            var recognizers = this.recognizers;
            var index = inArray(recognizers, recognizer);

            if (index !== -1) {
                recognizers.splice(index, 1);
                this.touchAction.update();
            }
        }

        return this;
    },

    /**
     * bind event
     * @param {String} events
     * @param {Function} handler
     * @returns {EventEmitter} this
     */
    on: function(events, handler) {
        if (events === undefined) {
            return;
        }
        if (handler === undefined) {
            return;
        }

        var handlers = this.handlers;
        each(splitStr(events), function(event) {
            handlers[event] = handlers[event] || [];
            handlers[event].push(handler);
        });
        return this;
    },

    /**
     * unbind event, leave emit blank to remove all handlers
     * @param {String} events
     * @param {Function} [handler]
     * @returns {EventEmitter} this
     */
    off: function(events, handler) {
        if (events === undefined) {
            return;
        }

        var handlers = this.handlers;
        each(splitStr(events), function(event) {
            if (!handler) {
                delete handlers[event];
            } else {
                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);
            }
        });
        return this;
    },

    /**
     * emit event to the listeners
     * @param {String} event
     * @param {Object} data
     */
    emit: function(event, data) {
        // we also want to trigger dom events
        if (this.options.domEvents) {
            triggerDomEvent(event, data);
        }

        // no handlers, so skip it all
        var handlers = this.handlers[event] && this.handlers[event].slice();
        if (!handlers || !handlers.length) {
            return;
        }

        data.type = event;
        data.preventDefault = function() {
            data.srcEvent.preventDefault();
        };

        var i = 0;
        while (i < handlers.length) {
            handlers[i](data);
            i++;
        }
    },

    /**
     * destroy the manager and unbinds all events
     * it doesn't unbind dom events, that is the user own responsibility
     */
    destroy: function() {
        this.element && toggleCssProps(this, false);

        this.handlers = {};
        this.session = {};
        this.input.destroy();
        this.element = null;
    }
};

/**
 * add/remove the css properties as defined in manager.options.cssProps
 * @param {Manager} manager
 * @param {Boolean} add
 */
function toggleCssProps(manager, add) {
    var element = manager.element;
    if (!element.style) {
        return;
    }
    var prop;
    each(manager.options.cssProps, function(value, name) {
        prop = prefixed(element.style, name);
        if (add) {
            manager.oldCssProps[prop] = element.style[prop];
            element.style[prop] = value;
        } else {
            element.style[prop] = manager.oldCssProps[prop] || '';
        }
    });
    if (!add) {
        manager.oldCssProps = {};
    }
}

/**
 * trigger dom event
 * @param {String} event
 * @param {Object} data
 */
function triggerDomEvent(event, data) {
    var gestureEvent = document.createEvent('Event');
    gestureEvent.initEvent(event, true, true);
    gestureEvent.gesture = data;
    data.target.dispatchEvent(gestureEvent);
}

assign(Hammer, {
    INPUT_START: INPUT_START,
    INPUT_MOVE: INPUT_MOVE,
    INPUT_END: INPUT_END,
    INPUT_CANCEL: INPUT_CANCEL,

    STATE_POSSIBLE: STATE_POSSIBLE,
    STATE_BEGAN: STATE_BEGAN,
    STATE_CHANGED: STATE_CHANGED,
    STATE_ENDED: STATE_ENDED,
    STATE_RECOGNIZED: STATE_RECOGNIZED,
    STATE_CANCELLED: STATE_CANCELLED,
    STATE_FAILED: STATE_FAILED,

    DIRECTION_NONE: DIRECTION_NONE,
    DIRECTION_LEFT: DIRECTION_LEFT,
    DIRECTION_RIGHT: DIRECTION_RIGHT,
    DIRECTION_UP: DIRECTION_UP,
    DIRECTION_DOWN: DIRECTION_DOWN,
    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,
    DIRECTION_VERTICAL: DIRECTION_VERTICAL,
    DIRECTION_ALL: DIRECTION_ALL,

    Manager: Manager,
    Input: Input,
    TouchAction: TouchAction,

    TouchInput: TouchInput,
    MouseInput: MouseInput,
    PointerEventInput: PointerEventInput,
    TouchMouseInput: TouchMouseInput,
    SingleTouchInput: SingleTouchInput,

    Recognizer: Recognizer,
    AttrRecognizer: AttrRecognizer,
    Tap: TapRecognizer,
    Pan: PanRecognizer,
    Swipe: SwipeRecognizer,
    Pinch: PinchRecognizer,
    Rotate: RotateRecognizer,
    Press: PressRecognizer,

    on: addEventListeners,
    off: removeEventListeners,
    each: each,
    merge: merge,
    extend: extend,
    assign: assign,
    inherit: inherit,
    bindFn: bindFn,
    prefixed: prefixed
});

// this prevents errors when Hammer is loaded in the presence of an AMD
//  style loader but by script tag, not by the loader.
var freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line
freeGlobal.Hammer = Hammer;

if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
        return Hammer;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
} else {}

})(window, document, 'Hammer');


/***/ }),

/***/ "./node_modules/web-animations-js/web-animations.min.js":
/*!**************************************************************!*\
  !*** ./node_modules/web-animations-js/web-animations.min.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright 2014 Google Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
//     You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//     See the License for the specific language governing permissions and
// limitations under the License.

!function(){var a={},b={};!function(a,b){function c(a){if("number"==typeof a)return a;var b={};for(var c in a)b[c]=a[c];return b}function d(){this._delay=0,this._endDelay=0,this._fill="none",this._iterationStart=0,this._iterations=1,this._duration=0,this._playbackRate=1,this._direction="normal",this._easing="linear",this._easingFunction=x}function e(){return a.isDeprecated("Invalid timing inputs","2016-03-02","TypeError exceptions will be thrown instead.",!0)}function f(b,c,e){var f=new d;return c&&(f.fill="both",f.duration="auto"),"number"!=typeof b||isNaN(b)?void 0!==b&&Object.getOwnPropertyNames(b).forEach(function(c){if("auto"!=b[c]){if(("number"==typeof f[c]||"duration"==c)&&("number"!=typeof b[c]||isNaN(b[c])))return;if("fill"==c&&-1==v.indexOf(b[c]))return;if("direction"==c&&-1==w.indexOf(b[c]))return;if("playbackRate"==c&&1!==b[c]&&a.isDeprecated("AnimationEffectTiming.playbackRate","2014-11-28","Use Animation.playbackRate instead."))return;f[c]=b[c]}}):f.duration=b,f}function g(a){return"number"==typeof a&&(a=isNaN(a)?{duration:0}:{duration:a}),a}function h(b,c){return b=a.numericTimingToObject(b),f(b,c)}function i(a,b,c,d){return a<0||a>1||c<0||c>1?x:function(e){function f(a,b,c){return 3*a*(1-c)*(1-c)*c+3*b*(1-c)*c*c+c*c*c}if(e<=0){var g=0;return a>0?g=b/a:!b&&c>0&&(g=d/c),g*e}if(e>=1){var h=0;return c<1?h=(d-1)/(c-1):1==c&&a<1&&(h=(b-1)/(a-1)),1+h*(e-1)}for(var i=0,j=1;i<j;){var k=(i+j)/2,l=f(a,c,k);if(Math.abs(e-l)<1e-5)return f(b,d,k);l<e?i=k:j=k}return f(b,d,k)}}function j(a,b){return function(c){if(c>=1)return 1;var d=1/a;return(c+=b*d)-c%d}}function k(a){C||(C=document.createElement("div").style),C.animationTimingFunction="",C.animationTimingFunction=a;var b=C.animationTimingFunction;if(""==b&&e())throw new TypeError(a+" is not a valid value for easing");return b}function l(a){if("linear"==a)return x;var b=E.exec(a);if(b)return i.apply(this,b.slice(1).map(Number));var c=F.exec(a);if(c)return j(Number(c[1]),A);var d=G.exec(a);return d?j(Number(d[1]),{start:y,middle:z,end:A}[d[2]]):B[a]||x}function m(a){return Math.abs(n(a)/a.playbackRate)}function n(a){return 0===a.duration||0===a.iterations?0:a.duration*a.iterations}function o(a,b,c){if(null==b)return H;var d=c.delay+a+c.endDelay;return b<Math.min(c.delay,d)?I:b>=Math.min(c.delay+a,d)?J:K}function p(a,b,c,d,e){switch(d){case I:return"backwards"==b||"both"==b?0:null;case K:return c-e;case J:return"forwards"==b||"both"==b?a:null;case H:return null}}function q(a,b,c,d,e){var f=e;return 0===a?b!==I&&(f+=c):f+=d/a,f}function r(a,b,c,d,e,f){var g=a===1/0?b%1:a%1;return 0!==g||c!==J||0===d||0===e&&0!==f||(g=1),g}function s(a,b,c,d){return a===J&&b===1/0?1/0:1===c?Math.floor(d)-1:Math.floor(d)}function t(a,b,c){var d=a;if("normal"!==a&&"reverse"!==a){var e=b;"alternate-reverse"===a&&(e+=1),d="normal",e!==1/0&&e%2!=0&&(d="reverse")}return"normal"===d?c:1-c}function u(a,b,c){var d=o(a,b,c),e=p(a,c.fill,b,d,c.delay);if(null===e)return null;var f=q(c.duration,d,c.iterations,e,c.iterationStart),g=r(f,c.iterationStart,d,c.iterations,e,c.duration),h=s(d,c.iterations,g,f),i=t(c.direction,h,g);return c._easingFunction(i)}var v="backwards|forwards|both|none".split("|"),w="reverse|alternate|alternate-reverse".split("|"),x=function(a){return a};d.prototype={_setMember:function(b,c){this["_"+b]=c,this._effect&&(this._effect._timingInput[b]=c,this._effect._timing=a.normalizeTimingInput(this._effect._timingInput),this._effect.activeDuration=a.calculateActiveDuration(this._effect._timing),this._effect._animation&&this._effect._animation._rebuildUnderlyingAnimation())},get playbackRate(){return this._playbackRate},set delay(a){this._setMember("delay",a)},get delay(){return this._delay},set endDelay(a){this._setMember("endDelay",a)},get endDelay(){return this._endDelay},set fill(a){this._setMember("fill",a)},get fill(){return this._fill},set iterationStart(a){if((isNaN(a)||a<0)&&e())throw new TypeError("iterationStart must be a non-negative number, received: "+a);this._setMember("iterationStart",a)},get iterationStart(){return this._iterationStart},set duration(a){if("auto"!=a&&(isNaN(a)||a<0)&&e())throw new TypeError("duration must be non-negative or auto, received: "+a);this._setMember("duration",a)},get duration(){return this._duration},set direction(a){this._setMember("direction",a)},get direction(){return this._direction},set easing(a){this._easingFunction=l(k(a)),this._setMember("easing",a)},get easing(){return this._easing},set iterations(a){if((isNaN(a)||a<0)&&e())throw new TypeError("iterations must be non-negative, received: "+a);this._setMember("iterations",a)},get iterations(){return this._iterations}};var y=1,z=.5,A=0,B={ease:i(.25,.1,.25,1),"ease-in":i(.42,0,1,1),"ease-out":i(0,0,.58,1),"ease-in-out":i(.42,0,.58,1),"step-start":j(1,y),"step-middle":j(1,z),"step-end":j(1,A)},C=null,D="\\s*(-?\\d+\\.?\\d*|-?\\.\\d+)\\s*",E=new RegExp("cubic-bezier\\("+D+","+D+","+D+","+D+"\\)"),F=/steps\(\s*(\d+)\s*\)/,G=/steps\(\s*(\d+)\s*,\s*(start|middle|end)\s*\)/,H=0,I=1,J=2,K=3;a.cloneTimingInput=c,a.makeTiming=f,a.numericTimingToObject=g,a.normalizeTimingInput=h,a.calculateActiveDuration=m,a.calculateIterationProgress=u,a.calculatePhase=o,a.normalizeEasing=k,a.parseEasingFunction=l}(a),function(a,b){function c(a,b){return a in k?k[a][b]||b:b}function d(a){return"display"===a||0===a.lastIndexOf("animation",0)||0===a.lastIndexOf("transition",0)}function e(a,b,e){if(!d(a)){var f=h[a];if(f){i.style[a]=b;for(var g in f){var j=f[g],k=i.style[j];e[j]=c(j,k)}}else e[a]=c(a,b)}}function f(a){var b=[];for(var c in a)if(!(c in["easing","offset","composite"])){var d=a[c];Array.isArray(d)||(d=[d]);for(var e,f=d.length,g=0;g<f;g++)e={},e.offset="offset"in a?a.offset:1==f?1:g/(f-1),"easing"in a&&(e.easing=a.easing),"composite"in a&&(e.composite=a.composite),e[c]=d[g],b.push(e)}return b.sort(function(a,b){return a.offset-b.offset}),b}function g(b){function c(){var a=d.length;null==d[a-1].offset&&(d[a-1].offset=1),a>1&&null==d[0].offset&&(d[0].offset=0);for(var b=0,c=d[0].offset,e=1;e<a;e++){var f=d[e].offset;if(null!=f){for(var g=1;g<e-b;g++)d[b+g].offset=c+(f-c)*g/(e-b);b=e,c=f}}}if(null==b)return[];window.Symbol&&Symbol.iterator&&Array.prototype.from&&b[Symbol.iterator]&&(b=Array.from(b)),Array.isArray(b)||(b=f(b));for(var d=b.map(function(b){var c={};for(var d in b){var f=b[d];if("offset"==d){if(null!=f){if(f=Number(f),!isFinite(f))throw new TypeError("Keyframe offsets must be numbers.");if(f<0||f>1)throw new TypeError("Keyframe offsets must be between 0 and 1.")}}else if("composite"==d){if("add"==f||"accumulate"==f)throw{type:DOMException.NOT_SUPPORTED_ERR,name:"NotSupportedError",message:"add compositing is not supported"};if("replace"!=f)throw new TypeError("Invalid composite mode "+f+".")}else f="easing"==d?a.normalizeEasing(f):""+f;e(d,f,c)}return void 0==c.offset&&(c.offset=null),void 0==c.easing&&(c.easing="linear"),c}),g=!0,h=-1/0,i=0;i<d.length;i++){var j=d[i].offset;if(null!=j){if(j<h)throw new TypeError("Keyframes are not loosely sorted by offset. Sort or specify offsets.");h=j}else g=!1}return d=d.filter(function(a){return a.offset>=0&&a.offset<=1}),g||c(),d}var h={background:["backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","backgroundAttachment","backgroundOrigin","backgroundClip","backgroundColor"],border:["borderTopColor","borderTopStyle","borderTopWidth","borderRightColor","borderRightStyle","borderRightWidth","borderBottomColor","borderBottomStyle","borderBottomWidth","borderLeftColor","borderLeftStyle","borderLeftWidth"],borderBottom:["borderBottomWidth","borderBottomStyle","borderBottomColor"],borderColor:["borderTopColor","borderRightColor","borderBottomColor","borderLeftColor"],borderLeft:["borderLeftWidth","borderLeftStyle","borderLeftColor"],borderRadius:["borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius"],borderRight:["borderRightWidth","borderRightStyle","borderRightColor"],borderTop:["borderTopWidth","borderTopStyle","borderTopColor"],borderWidth:["borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth"],flex:["flexGrow","flexShrink","flexBasis"],font:["fontFamily","fontSize","fontStyle","fontVariant","fontWeight","lineHeight"],margin:["marginTop","marginRight","marginBottom","marginLeft"],outline:["outlineColor","outlineStyle","outlineWidth"],padding:["paddingTop","paddingRight","paddingBottom","paddingLeft"]},i=document.createElementNS("http://www.w3.org/1999/xhtml","div"),j={thin:"1px",medium:"3px",thick:"5px"},k={borderBottomWidth:j,borderLeftWidth:j,borderRightWidth:j,borderTopWidth:j,fontSize:{"xx-small":"60%","x-small":"75%",small:"89%",medium:"100%",large:"120%","x-large":"150%","xx-large":"200%"},fontWeight:{normal:"400",bold:"700"},outlineWidth:j,textShadow:{none:"0px 0px 0px transparent"},boxShadow:{none:"0px 0px 0px 0px transparent"}};a.convertToArrayForm=f,a.normalizeKeyframes=g}(a),function(a){var b={};a.isDeprecated=function(a,c,d,e){var f=e?"are":"is",g=new Date,h=new Date(c);return h.setMonth(h.getMonth()+3),!(g<h&&(a in b||console.warn("Web Animations: "+a+" "+f+" deprecated and will stop working on "+h.toDateString()+". "+d),b[a]=!0,1))},a.deprecated=function(b,c,d,e){var f=e?"are":"is";if(a.isDeprecated(b,c,d,e))throw new Error(b+" "+f+" no longer supported. "+d)}}(a),function(){if(document.documentElement.animate){var c=document.documentElement.animate([],0),d=!0;if(c&&(d=!1,"play|currentTime|pause|reverse|playbackRate|cancel|finish|startTime|playState".split("|").forEach(function(a){void 0===c[a]&&(d=!0)})),!d)return}!function(a,b,c){function d(a){for(var b={},c=0;c<a.length;c++)for(var d in a[c])if("offset"!=d&&"easing"!=d&&"composite"!=d){var e={offset:a[c].offset,easing:a[c].easing,value:a[c][d]};b[d]=b[d]||[],b[d].push(e)}for(var f in b){var g=b[f];if(0!=g[0].offset||1!=g[g.length-1].offset)throw{type:DOMException.NOT_SUPPORTED_ERR,name:"NotSupportedError",message:"Partial keyframes are not supported"}}return b}function e(c){var d=[];for(var e in c)for(var f=c[e],g=0;g<f.length-1;g++){var h=g,i=g+1,j=f[h].offset,k=f[i].offset,l=j,m=k;0==g&&(l=-1/0,0==k&&(i=h)),g==f.length-2&&(m=1/0,1==j&&(h=i)),d.push({applyFrom:l,applyTo:m,startOffset:f[h].offset,endOffset:f[i].offset,easingFunction:a.parseEasingFunction(f[h].easing),property:e,interpolation:b.propertyInterpolation(e,f[h].value,f[i].value)})}return d.sort(function(a,b){return a.startOffset-b.startOffset}),d}b.convertEffectInput=function(c){var f=a.normalizeKeyframes(c),g=d(f),h=e(g);return function(a,c){if(null!=c)h.filter(function(a){return c>=a.applyFrom&&c<a.applyTo}).forEach(function(d){var e=c-d.startOffset,f=d.endOffset-d.startOffset,g=0==f?0:d.easingFunction(e/f);b.apply(a,d.property,d.interpolation(g))});else for(var d in g)"offset"!=d&&"easing"!=d&&"composite"!=d&&b.clear(a,d)}}}(a,b),function(a,b,c){function d(a){return a.replace(/-(.)/g,function(a,b){return b.toUpperCase()})}function e(a,b,c){h[c]=h[c]||[],h[c].push([a,b])}function f(a,b,c){for(var f=0;f<c.length;f++){e(a,b,d(c[f]))}}function g(c,e,f){var g=c;/-/.test(c)&&!a.isDeprecated("Hyphenated property names","2016-03-22","Use camelCase instead.",!0)&&(g=d(c)),"initial"!=e&&"initial"!=f||("initial"==e&&(e=i[g]),"initial"==f&&(f=i[g]));for(var j=e==f?[]:h[g],k=0;j&&k<j.length;k++){var l=j[k][0](e),m=j[k][0](f);if(void 0!==l&&void 0!==m){var n=j[k][1](l,m);if(n){var o=b.Interpolation.apply(null,n);return function(a){return 0==a?e:1==a?f:o(a)}}}}return b.Interpolation(!1,!0,function(a){return a?f:e})}var h={};b.addPropertiesHandler=f;var i={backgroundColor:"transparent",backgroundPosition:"0% 0%",borderBottomColor:"currentColor",borderBottomLeftRadius:"0px",borderBottomRightRadius:"0px",borderBottomWidth:"3px",borderLeftColor:"currentColor",borderLeftWidth:"3px",borderRightColor:"currentColor",borderRightWidth:"3px",borderSpacing:"2px",borderTopColor:"currentColor",borderTopLeftRadius:"0px",borderTopRightRadius:"0px",borderTopWidth:"3px",bottom:"auto",clip:"rect(0px, 0px, 0px, 0px)",color:"black",fontSize:"100%",fontWeight:"400",height:"auto",left:"auto",letterSpacing:"normal",lineHeight:"120%",marginBottom:"0px",marginLeft:"0px",marginRight:"0px",marginTop:"0px",maxHeight:"none",maxWidth:"none",minHeight:"0px",minWidth:"0px",opacity:"1.0",outlineColor:"invert",outlineOffset:"0px",outlineWidth:"3px",paddingBottom:"0px",paddingLeft:"0px",paddingRight:"0px",paddingTop:"0px",right:"auto",strokeDasharray:"none",strokeDashoffset:"0px",textIndent:"0px",textShadow:"0px 0px 0px transparent",top:"auto",transform:"",verticalAlign:"0px",visibility:"visible",width:"auto",wordSpacing:"normal",zIndex:"auto"};b.propertyInterpolation=g}(a,b),function(a,b,c){function d(b){var c=a.calculateActiveDuration(b),d=function(d){return a.calculateIterationProgress(c,d,b)};return d._totalDuration=b.delay+c+b.endDelay,d}b.KeyframeEffect=function(c,e,f,g){var h,i=d(a.normalizeTimingInput(f)),j=b.convertEffectInput(e),k=function(){j(c,h)};return k._update=function(a){return null!==(h=i(a))},k._clear=function(){j(c,null)},k._hasSameTarget=function(a){return c===a},k._target=c,k._totalDuration=i._totalDuration,k._id=g,k}}(a,b),function(a,b){function c(a,b){return!(!b.namespaceURI||-1==b.namespaceURI.indexOf("/svg"))&&(g in a||(a[g]=/Trident|MSIE|IEMobile|Edge|Android 4/i.test(a.navigator.userAgent)),a[g])}function d(a,b,c){c.enumerable=!0,c.configurable=!0,Object.defineProperty(a,b,c)}function e(a){this._element=a,this._surrogateStyle=document.createElementNS("http://www.w3.org/1999/xhtml","div").style,this._style=a.style,this._length=0,this._isAnimatedProperty={},this._updateSvgTransformAttr=c(window,a),this._savedTransformAttr=null;for(var b=0;b<this._style.length;b++){var d=this._style[b];this._surrogateStyle[d]=this._style[d]}this._updateIndices()}function f(a){if(!a._webAnimationsPatchedStyle){var b=new e(a);try{d(a,"style",{get:function(){return b}})}catch(b){a.style._set=function(b,c){a.style[b]=c},a.style._clear=function(b){a.style[b]=""}}a._webAnimationsPatchedStyle=a.style}}var g="_webAnimationsUpdateSvgTransformAttr",h={cssText:1,length:1,parentRule:1},i={getPropertyCSSValue:1,getPropertyPriority:1,getPropertyValue:1,item:1,removeProperty:1,setProperty:1},j={removeProperty:1,setProperty:1};e.prototype={get cssText(){return this._surrogateStyle.cssText},set cssText(a){for(var b={},c=0;c<this._surrogateStyle.length;c++)b[this._surrogateStyle[c]]=!0;this._surrogateStyle.cssText=a,this._updateIndices();for(var c=0;c<this._surrogateStyle.length;c++)b[this._surrogateStyle[c]]=!0;for(var d in b)this._isAnimatedProperty[d]||this._style.setProperty(d,this._surrogateStyle.getPropertyValue(d))},get length(){return this._surrogateStyle.length},get parentRule(){return this._style.parentRule},_updateIndices:function(){for(;this._length<this._surrogateStyle.length;)Object.defineProperty(this,this._length,{configurable:!0,enumerable:!1,get:function(a){return function(){return this._surrogateStyle[a]}}(this._length)}),this._length++;for(;this._length>this._surrogateStyle.length;)this._length--,Object.defineProperty(this,this._length,{configurable:!0,enumerable:!1,value:void 0})},_set:function(b,c){this._style[b]=c,this._isAnimatedProperty[b]=!0,this._updateSvgTransformAttr&&"transform"==a.unprefixedPropertyName(b)&&(null==this._savedTransformAttr&&(this._savedTransformAttr=this._element.getAttribute("transform")),this._element.setAttribute("transform",a.transformToSvgMatrix(c)))},_clear:function(b){this._style[b]=this._surrogateStyle[b],this._updateSvgTransformAttr&&"transform"==a.unprefixedPropertyName(b)&&(this._savedTransformAttr?this._element.setAttribute("transform",this._savedTransformAttr):this._element.removeAttribute("transform"),this._savedTransformAttr=null),delete this._isAnimatedProperty[b]}};for(var k in i)e.prototype[k]=function(a,b){return function(){var c=this._surrogateStyle[a].apply(this._surrogateStyle,arguments);return b&&(this._isAnimatedProperty[arguments[0]]||this._style[a].apply(this._style,arguments),this._updateIndices()),c}}(k,k in j);for(var l in document.documentElement.style)l in h||l in i||function(a){d(e.prototype,a,{get:function(){return this._surrogateStyle[a]},set:function(b){this._surrogateStyle[a]=b,this._updateIndices(),this._isAnimatedProperty[a]||(this._style[a]=b)}})}(l);a.apply=function(b,c,d){f(b),b.style._set(a.propertyName(c),d)},a.clear=function(b,c){b._webAnimationsPatchedStyle&&b.style._clear(a.propertyName(c))}}(b),function(a){window.Element.prototype.animate=function(b,c){var d="";return c&&c.id&&(d=c.id),a.timeline._play(a.KeyframeEffect(this,b,c,d))}}(b),function(a,b){function c(a,b,d){if("number"==typeof a&&"number"==typeof b)return a*(1-d)+b*d;if("boolean"==typeof a&&"boolean"==typeof b)return d<.5?a:b;if(a.length==b.length){for(var e=[],f=0;f<a.length;f++)e.push(c(a[f],b[f],d));return e}throw"Mismatched interpolation arguments "+a+":"+b}a.Interpolation=function(a,b,d){return function(e){return d(c(a,b,e))}}}(b),function(a,b){function c(a,b,c){return Math.max(Math.min(a,c),b)}function d(b,d,e){var f=a.dot(b,d);f=c(f,-1,1);var g=[];if(1===f)g=b;else for(var h=Math.acos(f),i=1*Math.sin(e*h)/Math.sqrt(1-f*f),j=0;j<4;j++)g.push(b[j]*(Math.cos(e*h)-f*i)+d[j]*i);return g}var e=function(){function a(a,b){for(var c=[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]],d=0;d<4;d++)for(var e=0;e<4;e++)for(var f=0;f<4;f++)c[d][e]+=b[d][f]*a[f][e];return c}function b(a){return 0==a[0][2]&&0==a[0][3]&&0==a[1][2]&&0==a[1][3]&&0==a[2][0]&&0==a[2][1]&&1==a[2][2]&&0==a[2][3]&&0==a[3][2]&&1==a[3][3]}function c(c,d,e,f,g){for(var h=[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]],i=0;i<4;i++)h[i][3]=g[i];for(var i=0;i<3;i++)for(var j=0;j<3;j++)h[3][i]+=c[j]*h[j][i];var k=f[0],l=f[1],m=f[2],n=f[3],o=[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]];o[0][0]=1-2*(l*l+m*m),o[0][1]=2*(k*l-m*n),o[0][2]=2*(k*m+l*n),o[1][0]=2*(k*l+m*n),o[1][1]=1-2*(k*k+m*m),o[1][2]=2*(l*m-k*n),o[2][0]=2*(k*m-l*n),o[2][1]=2*(l*m+k*n),o[2][2]=1-2*(k*k+l*l),h=a(h,o);var p=[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]];e[2]&&(p[2][1]=e[2],h=a(h,p)),e[1]&&(p[2][1]=0,p[2][0]=e[0],h=a(h,p)),e[0]&&(p[2][0]=0,p[1][0]=e[0],h=a(h,p));for(var i=0;i<3;i++)for(var j=0;j<3;j++)h[i][j]*=d[i];return b(h)?[h[0][0],h[0][1],h[1][0],h[1][1],h[3][0],h[3][1]]:h[0].concat(h[1],h[2],h[3])}return c}();a.composeMatrix=e,a.quat=d}(b),function(a,b,c){a.sequenceNumber=0;var d=function(a,b,c){this.target=a,this.currentTime=b,this.timelineTime=c,this.type="finish",this.bubbles=!1,this.cancelable=!1,this.currentTarget=a,this.defaultPrevented=!1,this.eventPhase=Event.AT_TARGET,this.timeStamp=Date.now()};b.Animation=function(b){this.id="",b&&b._id&&(this.id=b._id),this._sequenceNumber=a.sequenceNumber++,this._currentTime=0,this._startTime=null,this._paused=!1,this._playbackRate=1,this._inTimeline=!0,this._finishedFlag=!0,this.onfinish=null,this._finishHandlers=[],this._effect=b,this._inEffect=this._effect._update(0),this._idle=!0,this._currentTimePending=!1},b.Animation.prototype={_ensureAlive:function(){this.playbackRate<0&&0===this.currentTime?this._inEffect=this._effect._update(-1):this._inEffect=this._effect._update(this.currentTime),this._inTimeline||!this._inEffect&&this._finishedFlag||(this._inTimeline=!0,b.timeline._animations.push(this))},_tickCurrentTime:function(a,b){a!=this._currentTime&&(this._currentTime=a,this._isFinished&&!b&&(this._currentTime=this._playbackRate>0?this._totalDuration:0),this._ensureAlive())},get currentTime(){return this._idle||this._currentTimePending?null:this._currentTime},set currentTime(a){a=+a,isNaN(a)||(b.restart(),this._paused||null==this._startTime||(this._startTime=this._timeline.currentTime-a/this._playbackRate),this._currentTimePending=!1,this._currentTime!=a&&(this._idle&&(this._idle=!1,this._paused=!0),this._tickCurrentTime(a,!0),b.applyDirtiedAnimation(this)))},get startTime(){return this._startTime},set startTime(a){a=+a,isNaN(a)||this._paused||this._idle||(this._startTime=a,this._tickCurrentTime((this._timeline.currentTime-this._startTime)*this.playbackRate),b.applyDirtiedAnimation(this))},get playbackRate(){return this._playbackRate},set playbackRate(a){if(a!=this._playbackRate){var c=this.currentTime;this._playbackRate=a,this._startTime=null,"paused"!=this.playState&&"idle"!=this.playState&&(this._finishedFlag=!1,this._idle=!1,this._ensureAlive(),b.applyDirtiedAnimation(this)),null!=c&&(this.currentTime=c)}},get _isFinished(){return!this._idle&&(this._playbackRate>0&&this._currentTime>=this._totalDuration||this._playbackRate<0&&this._currentTime<=0)},get _totalDuration(){return this._effect._totalDuration},get playState(){return this._idle?"idle":null==this._startTime&&!this._paused&&0!=this.playbackRate||this._currentTimePending?"pending":this._paused?"paused":this._isFinished?"finished":"running"},_rewind:function(){if(this._playbackRate>=0)this._currentTime=0;else{if(!(this._totalDuration<1/0))throw new DOMException("Unable to rewind negative playback rate animation with infinite duration","InvalidStateError");this._currentTime=this._totalDuration}},play:function(){this._paused=!1,(this._isFinished||this._idle)&&(this._rewind(),this._startTime=null),this._finishedFlag=!1,this._idle=!1,this._ensureAlive(),b.applyDirtiedAnimation(this)},pause:function(){this._isFinished||this._paused||this._idle?this._idle&&(this._rewind(),this._idle=!1):this._currentTimePending=!0,this._startTime=null,this._paused=!0},finish:function(){this._idle||(this.currentTime=this._playbackRate>0?this._totalDuration:0,this._startTime=this._totalDuration-this.currentTime,this._currentTimePending=!1,b.applyDirtiedAnimation(this))},cancel:function(){this._inEffect&&(this._inEffect=!1,this._idle=!0,this._paused=!1,this._finishedFlag=!0,this._currentTime=0,this._startTime=null,this._effect._update(null),b.applyDirtiedAnimation(this))},reverse:function(){this.playbackRate*=-1,this.play()},addEventListener:function(a,b){"function"==typeof b&&"finish"==a&&this._finishHandlers.push(b)},removeEventListener:function(a,b){if("finish"==a){var c=this._finishHandlers.indexOf(b);c>=0&&this._finishHandlers.splice(c,1)}},_fireEvents:function(a){if(this._isFinished){if(!this._finishedFlag){var b=new d(this,this._currentTime,a),c=this._finishHandlers.concat(this.onfinish?[this.onfinish]:[]);setTimeout(function(){c.forEach(function(a){a.call(b.target,b)})},0),this._finishedFlag=!0}}else this._finishedFlag=!1},_tick:function(a,b){this._idle||this._paused||(null==this._startTime?b&&(this.startTime=a-this._currentTime/this.playbackRate):this._isFinished||this._tickCurrentTime((a-this._startTime)*this.playbackRate)),b&&(this._currentTimePending=!1,this._fireEvents(a))},get _needsTick(){return this.playState in{pending:1,running:1}||!this._finishedFlag},_targetAnimations:function(){var a=this._effect._target;return a._activeAnimations||(a._activeAnimations=[]),a._activeAnimations},_markTarget:function(){var a=this._targetAnimations();-1===a.indexOf(this)&&a.push(this)},_unmarkTarget:function(){var a=this._targetAnimations(),b=a.indexOf(this);-1!==b&&a.splice(b,1)}}}(a,b),function(a,b,c){function d(a){var b=j;j=[],a<q.currentTime&&(a=q.currentTime),q._animations.sort(e),q._animations=h(a,!0,q._animations)[0],b.forEach(function(b){b[1](a)}),g(),l=void 0}function e(a,b){return a._sequenceNumber-b._sequenceNumber}function f(){this._animations=[],this.currentTime=window.performance&&performance.now?performance.now():0}function g(){o.forEach(function(a){a()}),o.length=0}function h(a,c,d){p=!0,n=!1,b.timeline.currentTime=a,m=!1;var e=[],f=[],g=[],h=[];return d.forEach(function(b){b._tick(a,c),b._inEffect?(f.push(b._effect),b._markTarget()):(e.push(b._effect),b._unmarkTarget()),b._needsTick&&(m=!0);var d=b._inEffect||b._needsTick;b._inTimeline=d,d?g.push(b):h.push(b)}),o.push.apply(o,e),o.push.apply(o,f),m&&requestAnimationFrame(function(){}),p=!1,[g,h]}var i=window.requestAnimationFrame,j=[],k=0;window.requestAnimationFrame=function(a){var b=k++;return 0==j.length&&i(d),j.push([b,a]),b},window.cancelAnimationFrame=function(a){j.forEach(function(b){b[0]==a&&(b[1]=function(){})})},f.prototype={_play:function(c){c._timing=a.normalizeTimingInput(c.timing);var d=new b.Animation(c);return d._idle=!1,d._timeline=this,this._animations.push(d),b.restart(),b.applyDirtiedAnimation(d),d}};var l=void 0,m=!1,n=!1;b.restart=function(){return m||(m=!0,requestAnimationFrame(function(){}),n=!0),n},b.applyDirtiedAnimation=function(a){if(!p){a._markTarget();var c=a._targetAnimations();c.sort(e),h(b.timeline.currentTime,!1,c.slice())[1].forEach(function(a){var b=q._animations.indexOf(a);-1!==b&&q._animations.splice(b,1)}),g()}};var o=[],p=!1,q=new f;b.timeline=q}(a,b),function(a,b){function c(a,b){for(var c=0,d=0;d<a.length;d++)c+=a[d]*b[d];return c}function d(a,b){return[a[0]*b[0]+a[4]*b[1]+a[8]*b[2]+a[12]*b[3],a[1]*b[0]+a[5]*b[1]+a[9]*b[2]+a[13]*b[3],a[2]*b[0]+a[6]*b[1]+a[10]*b[2]+a[14]*b[3],a[3]*b[0]+a[7]*b[1]+a[11]*b[2]+a[15]*b[3],a[0]*b[4]+a[4]*b[5]+a[8]*b[6]+a[12]*b[7],a[1]*b[4]+a[5]*b[5]+a[9]*b[6]+a[13]*b[7],a[2]*b[4]+a[6]*b[5]+a[10]*b[6]+a[14]*b[7],a[3]*b[4]+a[7]*b[5]+a[11]*b[6]+a[15]*b[7],a[0]*b[8]+a[4]*b[9]+a[8]*b[10]+a[12]*b[11],a[1]*b[8]+a[5]*b[9]+a[9]*b[10]+a[13]*b[11],a[2]*b[8]+a[6]*b[9]+a[10]*b[10]+a[14]*b[11],a[3]*b[8]+a[7]*b[9]+a[11]*b[10]+a[15]*b[11],a[0]*b[12]+a[4]*b[13]+a[8]*b[14]+a[12]*b[15],a[1]*b[12]+a[5]*b[13]+a[9]*b[14]+a[13]*b[15],a[2]*b[12]+a[6]*b[13]+a[10]*b[14]+a[14]*b[15],a[3]*b[12]+a[7]*b[13]+a[11]*b[14]+a[15]*b[15]]}function e(a){var b=a.rad||0;return((a.deg||0)/360+(a.grad||0)/400+(a.turn||0))*(2*Math.PI)+b}function f(a){switch(a.t){case"rotatex":var b=e(a.d[0]);return[1,0,0,0,0,Math.cos(b),Math.sin(b),0,0,-Math.sin(b),Math.cos(b),0,0,0,0,1];case"rotatey":var b=e(a.d[0]);return[Math.cos(b),0,-Math.sin(b),0,0,1,0,0,Math.sin(b),0,Math.cos(b),0,0,0,0,1];case"rotate":case"rotatez":var b=e(a.d[0]);return[Math.cos(b),Math.sin(b),0,0,-Math.sin(b),Math.cos(b),0,0,0,0,1,0,0,0,0,1];case"rotate3d":var c=a.d[0],d=a.d[1],f=a.d[2],b=e(a.d[3]),g=c*c+d*d+f*f;if(0===g)c=1,d=0,f=0;else if(1!==g){var h=Math.sqrt(g);c/=h,d/=h,f/=h}var i=Math.sin(b/2),j=i*Math.cos(b/2),k=i*i;return[1-2*(d*d+f*f)*k,2*(c*d*k+f*j),2*(c*f*k-d*j),0,2*(c*d*k-f*j),1-2*(c*c+f*f)*k,2*(d*f*k+c*j),0,2*(c*f*k+d*j),2*(d*f*k-c*j),1-2*(c*c+d*d)*k,0,0,0,0,1];case"scale":return[a.d[0],0,0,0,0,a.d[1],0,0,0,0,1,0,0,0,0,1];case"scalex":return[a.d[0],0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];case"scaley":return[1,0,0,0,0,a.d[0],0,0,0,0,1,0,0,0,0,1];case"scalez":return[1,0,0,0,0,1,0,0,0,0,a.d[0],0,0,0,0,1];case"scale3d":return[a.d[0],0,0,0,0,a.d[1],0,0,0,0,a.d[2],0,0,0,0,1];case"skew":var l=e(a.d[0]),m=e(a.d[1]);return[1,Math.tan(m),0,0,Math.tan(l),1,0,0,0,0,1,0,0,0,0,1];case"skewx":var b=e(a.d[0]);return[1,0,0,0,Math.tan(b),1,0,0,0,0,1,0,0,0,0,1];case"skewy":var b=e(a.d[0]);return[1,Math.tan(b),0,0,0,1,0,0,0,0,1,0,0,0,0,1];case"translate":var c=a.d[0].px||0,d=a.d[1].px||0;return[1,0,0,0,0,1,0,0,0,0,1,0,c,d,0,1];case"translatex":var c=a.d[0].px||0;return[1,0,0,0,0,1,0,0,0,0,1,0,c,0,0,1];case"translatey":var d=a.d[0].px||0;return[1,0,0,0,0,1,0,0,0,0,1,0,0,d,0,1];case"translatez":var f=a.d[0].px||0;return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,f,1];case"translate3d":var c=a.d[0].px||0,d=a.d[1].px||0,f=a.d[2].px||0;return[1,0,0,0,0,1,0,0,0,0,1,0,c,d,f,1];case"perspective":return[1,0,0,0,0,1,0,0,0,0,1,a.d[0].px?-1/a.d[0].px:0,0,0,0,1];case"matrix":return[a.d[0],a.d[1],0,0,a.d[2],a.d[3],0,0,0,0,1,0,a.d[4],a.d[5],0,1];case"matrix3d":return a.d}}function g(a){return 0===a.length?[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]:a.map(f).reduce(d)}function h(a){return[i(g(a))]}var i=function(){function a(a){return a[0][0]*a[1][1]*a[2][2]+a[1][0]*a[2][1]*a[0][2]+a[2][0]*a[0][1]*a[1][2]-a[0][2]*a[1][1]*a[2][0]-a[1][2]*a[2][1]*a[0][0]-a[2][2]*a[0][1]*a[1][0]}function b(b){for(var c=1/a(b),d=b[0][0],e=b[0][1],f=b[0][2],g=b[1][0],h=b[1][1],i=b[1][2],j=b[2][0],k=b[2][1],l=b[2][2],m=[[(h*l-i*k)*c,(f*k-e*l)*c,(e*i-f*h)*c,0],[(i*j-g*l)*c,(d*l-f*j)*c,(f*g-d*i)*c,0],[(g*k-h*j)*c,(j*e-d*k)*c,(d*h-e*g)*c,0]],n=[],o=0;o<3;o++){for(var p=0,q=0;q<3;q++)p+=b[3][q]*m[q][o];n.push(p)}return n.push(1),m.push(n),m}function d(a){return[[a[0][0],a[1][0],a[2][0],a[3][0]],[a[0][1],a[1][1],a[2][1],a[3][1]],[a[0][2],a[1][2],a[2][2],a[3][2]],[a[0][3],a[1][3],a[2][3],a[3][3]]]}function e(a,b){for(var c=[],d=0;d<4;d++){for(var e=0,f=0;f<4;f++)e+=a[f]*b[f][d];c.push(e)}return c}function f(a){var b=g(a);return[a[0]/b,a[1]/b,a[2]/b]}function g(a){return Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2])}function h(a,b,c,d){return[c*a[0]+d*b[0],c*a[1]+d*b[1],c*a[2]+d*b[2]]}function i(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]]}function j(j){var k=[j.slice(0,4),j.slice(4,8),j.slice(8,12),j.slice(12,16)];if(1!==k[3][3])return null;for(var l=[],m=0;m<4;m++)l.push(k[m].slice());for(var m=0;m<3;m++)l[m][3]=0;if(0===a(l))return null;var n,o=[];k[0][3]||k[1][3]||k[2][3]?(o.push(k[0][3]),o.push(k[1][3]),o.push(k[2][3]),o.push(k[3][3]),n=e(o,d(b(l)))):n=[0,0,0,1];var p=k[3].slice(0,3),q=[];q.push(k[0].slice(0,3));var r=[];r.push(g(q[0])),q[0]=f(q[0]);var s=[];q.push(k[1].slice(0,3)),s.push(c(q[0],q[1])),q[1]=h(q[1],q[0],1,-s[0]),r.push(g(q[1])),q[1]=f(q[1]),s[0]/=r[1],q.push(k[2].slice(0,3)),s.push(c(q[0],q[2])),q[2]=h(q[2],q[0],1,-s[1]),s.push(c(q[1],q[2])),q[2]=h(q[2],q[1],1,-s[2]),r.push(g(q[2])),q[2]=f(q[2]),s[1]/=r[2],s[2]/=r[2];var t=i(q[1],q[2]);if(c(q[0],t)<0)for(var m=0;m<3;m++)r[m]*=-1,q[m][0]*=-1,q[m][1]*=-1,q[m][2]*=-1;var u,v,w=q[0][0]+q[1][1]+q[2][2]+1;return w>1e-4?(u=.5/Math.sqrt(w),v=[(q[2][1]-q[1][2])*u,(q[0][2]-q[2][0])*u,(q[1][0]-q[0][1])*u,.25/u]):q[0][0]>q[1][1]&&q[0][0]>q[2][2]?(u=2*Math.sqrt(1+q[0][0]-q[1][1]-q[2][2]),v=[.25*u,(q[0][1]+q[1][0])/u,(q[0][2]+q[2][0])/u,(q[2][1]-q[1][2])/u]):q[1][1]>q[2][2]?(u=2*Math.sqrt(1+q[1][1]-q[0][0]-q[2][2]),v=[(q[0][1]+q[1][0])/u,.25*u,(q[1][2]+q[2][1])/u,(q[0][2]-q[2][0])/u]):(u=2*Math.sqrt(1+q[2][2]-q[0][0]-q[1][1]),v=[(q[0][2]+q[2][0])/u,(q[1][2]+q[2][1])/u,.25*u,(q[1][0]-q[0][1])/u]),[p,r,s,v,n]}return j}();a.dot=c,a.makeMatrixDecomposition=h,a.transformListToMatrix=g}(b),function(a){function b(a,b){var c=a.exec(b);if(c)return c=a.ignoreCase?c[0].toLowerCase():c[0],[c,b.substr(c.length)]}function c(a,b){b=b.replace(/^\s*/,"");var c=a(b);if(c)return[c[0],c[1].replace(/^\s*/,"")]}function d(a,d,e){a=c.bind(null,a);for(var f=[];;){var g=a(e);if(!g)return[f,e];if(f.push(g[0]),e=g[1],!(g=b(d,e))||""==g[1])return[f,e];e=g[1]}}function e(a,b){for(var c=0,d=0;d<b.length&&(!/\s|,/.test(b[d])||0!=c);d++)if("("==b[d])c++;else if(")"==b[d]&&(c--,0==c&&d++,c<=0))break;var e=a(b.substr(0,d));return void 0==e?void 0:[e,b.substr(d)]}function f(a,b){for(var c=a,d=b;c&&d;)c>d?c%=d:d%=c;return c=a*b/(c+d)}function g(a){return function(b){var c=a(b);return c&&(c[0]=void 0),c}}function h(a,b){return function(c){return a(c)||[b,c]}}function i(b,c){for(var d=[],e=0;e<b.length;e++){var f=a.consumeTrimmed(b[e],c);if(!f||""==f[0])return;void 0!==f[0]&&d.push(f[0]),c=f[1]}if(""==c)return d}function j(a,b,c,d,e){for(var g=[],h=[],i=[],j=f(d.length,e.length),k=0;k<j;k++){var l=b(d[k%d.length],e[k%e.length]);if(!l)return;g.push(l[0]),h.push(l[1]),i.push(l[2])}return[g,h,function(b){var d=b.map(function(a,b){return i[b](a)}).join(c);return a?a(d):d}]}function k(a,b,c){for(var d=[],e=[],f=[],g=0,h=0;h<c.length;h++)if("function"==typeof c[h]){var i=c[h](a[g],b[g++]);d.push(i[0]),e.push(i[1]),f.push(i[2])}else!function(a){d.push(!1),e.push(!1),f.push(function(){return c[a]})}(h);return[d,e,function(a){for(var b="",c=0;c<a.length;c++)b+=f[c](a[c]);return b}]}a.consumeToken=b,a.consumeTrimmed=c,a.consumeRepeated=d,a.consumeParenthesised=e,a.ignore=g,a.optional=h,a.consumeList=i,a.mergeNestedRepeated=j.bind(null,null),a.mergeWrappedNestedRepeated=j,a.mergeList=k}(b),function(a){function b(b){function c(b){var c=a.consumeToken(/^inset/i,b);return c?(d.inset=!0,c):(c=a.consumeLengthOrPercent(b))?(d.lengths.push(c[0]),c):(c=a.consumeColor(b),c?(d.color=c[0],c):void 0)}var d={inset:!1,lengths:[],color:null},e=a.consumeRepeated(c,/^/,b);if(e&&e[0].length)return[d,e[1]]}function c(c){var d=a.consumeRepeated(b,/^,/,c);if(d&&""==d[1])return d[0]}function d(b,c){for(;b.lengths.length<Math.max(b.lengths.length,c.lengths.length);)b.lengths.push({px:0});for(;c.lengths.length<Math.max(b.lengths.length,c.lengths.length);)c.lengths.push({px:0});if(b.inset==c.inset&&!!b.color==!!c.color){for(var d,e=[],f=[[],0],g=[[],0],h=0;h<b.lengths.length;h++){var i=a.mergeDimensions(b.lengths[h],c.lengths[h],2==h);f[0].push(i[0]),g[0].push(i[1]),e.push(i[2])}if(b.color&&c.color){var j=a.mergeColors(b.color,c.color);f[1]=j[0],g[1]=j[1],d=j[2]}return[f,g,function(a){for(var c=b.inset?"inset ":" ",f=0;f<e.length;f++)c+=e[f](a[0][f])+" ";return d&&(c+=d(a[1])),c}]}}function e(b,c,d,e){function f(a){return{inset:a,color:[0,0,0,0],lengths:[{px:0},{px:0},{px:0},{px:0}]}}for(var g=[],h=[],i=0;i<d.length||i<e.length;i++){var j=d[i]||f(e[i].inset),k=e[i]||f(d[i].inset);g.push(j),h.push(k)}return a.mergeNestedRepeated(b,c,g,h)}var f=e.bind(null,d,", ");a.addPropertiesHandler(c,f,["box-shadow","text-shadow"])}(b),function(a,b){function c(a){return a.toFixed(3).replace(/0+$/,"").replace(/\.$/,"")}function d(a,b,c){return Math.min(b,Math.max(a,c))}function e(a){if(/^\s*[-+]?(\d*\.)?\d+\s*$/.test(a))return Number(a)}function f(a,b){return[a,b,c]}function g(a,b){if(0!=a)return i(0,1/0)(a,b)}function h(a,b){return[a,b,function(a){return Math.round(d(1,1/0,a))}]}function i(a,b){return function(e,f){return[e,f,function(e){return c(d(a,b,e))}]}}function j(a){var b=a.trim().split(/\s*[\s,]\s*/);if(0!==b.length){for(var c=[],d=0;d<b.length;d++){var f=e(b[d]);if(void 0===f)return;c.push(f)}return c}}function k(a,b){if(a.length==b.length)return[a,b,function(a){return a.map(c).join(" ")}]}function l(a,b){return[a,b,Math.round]}a.clamp=d,a.addPropertiesHandler(j,k,["stroke-dasharray"]),a.addPropertiesHandler(e,i(0,1/0),["border-image-width","line-height"]),a.addPropertiesHandler(e,i(0,1),["opacity","shape-image-threshold"]),a.addPropertiesHandler(e,g,["flex-grow","flex-shrink"]),a.addPropertiesHandler(e,h,["orphans","widows"]),a.addPropertiesHandler(e,l,["z-index"]),a.parseNumber=e,a.parseNumberList=j,a.mergeNumbers=f,a.numberToString=c}(b),function(a,b){function c(a,b){if("visible"==a||"visible"==b)return[0,1,function(c){return c<=0?a:c>=1?b:"visible"}]}a.addPropertiesHandler(String,c,["visibility"])}(b),function(a,b){function c(a){a=a.trim(),f.fillStyle="#000",f.fillStyle=a;var b=f.fillStyle;if(f.fillStyle="#fff",f.fillStyle=a,b==f.fillStyle){f.fillRect(0,0,1,1);var c=f.getImageData(0,0,1,1).data;f.clearRect(0,0,1,1);var d=c[3]/255;return[c[0]*d,c[1]*d,c[2]*d,d]}}function d(b,c){return[b,c,function(b){function c(a){return Math.max(0,Math.min(255,a))}if(b[3])for(var d=0;d<3;d++)b[d]=Math.round(c(b[d]/b[3]));return b[3]=a.numberToString(a.clamp(0,1,b[3])),"rgba("+b.join(",")+")"}]}var e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");e.width=e.height=1;var f=e.getContext("2d");a.addPropertiesHandler(c,d,["background-color","border-bottom-color","border-left-color","border-right-color","border-top-color","color","fill","flood-color","lighting-color","outline-color","stop-color","stroke","text-decoration-color"]),a.consumeColor=a.consumeParenthesised.bind(null,c),a.mergeColors=d}(b),function(a,b){function c(a){function b(){var b=h.exec(a);g=b?b[0]:void 0}function c(){var a=Number(g);return b(),a}function d(){if("("!==g)return c();b();var a=f();return")"!==g?NaN:(b(),a)}function e(){for(var a=d();"*"===g||"/"===g;){var c=g;b();var e=d();"*"===c?a*=e:a/=e}return a}function f(){for(var a=e();"+"===g||"-"===g;){var c=g;b();var d=e();"+"===c?a+=d:a-=d}return a}var g,h=/([\+\-\w\.]+|[\(\)\*\/])/g;return b(),f()}function d(a,b){if("0"==(b=b.trim().toLowerCase())&&"px".search(a)>=0)return{px:0};if(/^[^(]*$|^calc/.test(b)){b=b.replace(/calc\(/g,"(");var d={};b=b.replace(a,function(a){return d[a]=null,"U"+a});for(var e="U("+a.source+")",f=b.replace(/[-+]?(\d*\.)?\d+([Ee][-+]?\d+)?/g,"N").replace(new RegExp("N"+e,"g"),"D").replace(/\s[+-]\s/g,"O").replace(/\s/g,""),g=[/N\*(D)/g,/(N|D)[*\/]N/g,/(N|D)O\1/g,/\((N|D)\)/g],h=0;h<g.length;)g[h].test(f)?(f=f.replace(g[h],"$1"),h=0):h++;if("D"==f){for(var i in d){var j=c(b.replace(new RegExp("U"+i,"g"),"").replace(new RegExp(e,"g"),"*0"));if(!isFinite(j))return;d[i]=j}return d}}}function e(a,b){return f(a,b,!0)}function f(b,c,d){var e,f=[];for(e in b)f.push(e);for(e in c)f.indexOf(e)<0&&f.push(e);return b=f.map(function(a){return b[a]||0}),c=f.map(function(a){return c[a]||0}),[b,c,function(b){var c=b.map(function(c,e){return 1==b.length&&d&&(c=Math.max(c,0)),a.numberToString(c)+f[e]}).join(" + ");return b.length>1?"calc("+c+")":c}]}var g="px|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc",h=d.bind(null,new RegExp(g,"g")),i=d.bind(null,new RegExp(g+"|%","g")),j=d.bind(null,/deg|rad|grad|turn/g);a.parseLength=h,a.parseLengthOrPercent=i,a.consumeLengthOrPercent=a.consumeParenthesised.bind(null,i),a.parseAngle=j,a.mergeDimensions=f;var k=a.consumeParenthesised.bind(null,h),l=a.consumeRepeated.bind(void 0,k,/^/),m=a.consumeRepeated.bind(void 0,l,/^,/);a.consumeSizePairList=m;var n=function(a){var b=m(a);if(b&&""==b[1])return b[0]},o=a.mergeNestedRepeated.bind(void 0,e," "),p=a.mergeNestedRepeated.bind(void 0,o,",");a.mergeNonNegativeSizePair=o,a.addPropertiesHandler(n,p,["background-size"]),a.addPropertiesHandler(i,e,["border-bottom-width","border-image-width","border-left-width","border-right-width","border-top-width","flex-basis","font-size","height","line-height","max-height","max-width","outline-width","width"]),a.addPropertiesHandler(i,f,["border-bottom-left-radius","border-bottom-right-radius","border-top-left-radius","border-top-right-radius","bottom","left","letter-spacing","margin-bottom","margin-left","margin-right","margin-top","min-height","min-width","outline-offset","padding-bottom","padding-left","padding-right","padding-top","perspective","right","shape-margin","stroke-dashoffset","text-indent","top","vertical-align","word-spacing"])}(b),function(a,b){function c(b){return a.consumeLengthOrPercent(b)||a.consumeToken(/^auto/,b)}function d(b){var d=a.consumeList([a.ignore(a.consumeToken.bind(null,/^rect/)),a.ignore(a.consumeToken.bind(null,/^\(/)),a.consumeRepeated.bind(null,c,/^,/),a.ignore(a.consumeToken.bind(null,/^\)/))],b);if(d&&4==d[0].length)return d[0]}function e(b,c){return"auto"==b||"auto"==c?[!0,!1,function(d){var e=d?b:c;if("auto"==e)return"auto";var f=a.mergeDimensions(e,e);return f[2](f[0])}]:a.mergeDimensions(b,c)}function f(a){return"rect("+a+")"}var g=a.mergeWrappedNestedRepeated.bind(null,f,e,", ");a.parseBox=d,a.mergeBoxes=g,a.addPropertiesHandler(d,g,["clip"])}(b),function(a,b){function c(a){return function(b){var c=0;return a.map(function(a){return a===k?b[c++]:a})}}function d(a){return a}function e(b){if("none"==(b=b.toLowerCase().trim()))return[];for(var c,d=/\s*(\w+)\(([^)]*)\)/g,e=[],f=0;c=d.exec(b);){if(c.index!=f)return;f=c.index+c[0].length;var g=c[1],h=n[g];if(!h)return;var i=c[2].split(","),j=h[0];if(j.length<i.length)return;for(var k=[],o=0;o<j.length;o++){var p,q=i[o],r=j[o];if(void 0===(p=q?{A:function(b){return"0"==b.trim()?m:a.parseAngle(b)},N:a.parseNumber,T:a.parseLengthOrPercent,L:a.parseLength}[r.toUpperCase()](q):{a:m,n:k[0],t:l}[r]))return;k.push(p)}if(e.push({t:g,d:k}),d.lastIndex==b.length)return e}}function f(a){return a.toFixed(6).replace(".000000","")}function g(b,c){if(b.decompositionPair!==c){b.decompositionPair=c;var d=a.makeMatrixDecomposition(b)}if(c.decompositionPair!==b){c.decompositionPair=b;var e=a.makeMatrixDecomposition(c)}return null==d[0]||null==e[0]?[[!1],[!0],function(a){return a?c[0].d:b[0].d}]:(d[0].push(0),e[0].push(1),[d,e,function(b){var c=a.quat(d[0][3],e[0][3],b[5]);return a.composeMatrix(b[0],b[1],b[2],c,b[4]).map(f).join(",")}])}function h(a){return a.replace(/[xy]/,"")}function i(a){return a.replace(/(x|y|z|3d)?$/,"3d")}function j(b,c){var d=a.makeMatrixDecomposition&&!0,e=!1;if(!b.length||!c.length){b.length||(e=!0,b=c,c=[]);for(var f=0;f<b.length;f++){var j=b[f].t,k=b[f].d,l="scale"==j.substr(0,5)?1:0;c.push({t:j,d:k.map(function(a){if("number"==typeof a)return l;var b={};for(var c in a)b[c]=l;return b})})}}var m=function(a,b){return"perspective"==a&&"perspective"==b||("matrix"==a||"matrix3d"==a)&&("matrix"==b||"matrix3d"==b)},o=[],p=[],q=[];if(b.length!=c.length){if(!d)return;var r=g(b,c);o=[r[0]],p=[r[1]],q=[["matrix",[r[2]]]]}else for(var f=0;f<b.length;f++){var j,s=b[f].t,t=c[f].t,u=b[f].d,v=c[f].d,w=n[s],x=n[t];if(m(s,t)){if(!d)return;var r=g([b[f]],[c[f]]);o.push(r[0]),p.push(r[1]),q.push(["matrix",[r[2]]])}else{if(s==t)j=s;else if(w[2]&&x[2]&&h(s)==h(t))j=h(s),u=w[2](u),v=x[2](v);else{if(!w[1]||!x[1]||i(s)!=i(t)){if(!d)return;var r=g(b,c);o=[r[0]],p=[r[1]],q=[["matrix",[r[2]]]];break}j=i(s),u=w[1](u),v=x[1](v)}for(var y=[],z=[],A=[],B=0;B<u.length;B++){var C="number"==typeof u[B]?a.mergeNumbers:a.mergeDimensions,r=C(u[B],v[B]);y[B]=r[0],z[B]=r[1],A.push(r[2])}o.push(y),p.push(z),q.push([j,A])}}if(e){var D=o;o=p,p=D}return[o,p,function(a){return a.map(function(a,b){var c=a.map(function(a,c){return q[b][1][c](a)}).join(",");return"matrix"==q[b][0]&&16==c.split(",").length&&(q[b][0]="matrix3d"),q[b][0]+"("+c+")"}).join(" ")}]}var k=null,l={px:0},m={deg:0},n={matrix:["NNNNNN",[k,k,0,0,k,k,0,0,0,0,1,0,k,k,0,1],d],matrix3d:["NNNNNNNNNNNNNNNN",d],rotate:["A"],rotatex:["A"],rotatey:["A"],rotatez:["A"],rotate3d:["NNNA"],perspective:["L"],scale:["Nn",c([k,k,1]),d],scalex:["N",c([k,1,1]),c([k,1])],scaley:["N",c([1,k,1]),c([1,k])],scalez:["N",c([1,1,k])],scale3d:["NNN",d],skew:["Aa",null,d],skewx:["A",null,c([k,m])],skewy:["A",null,c([m,k])],translate:["Tt",c([k,k,l]),d],translatex:["T",c([k,l,l]),c([k,l])],translatey:["T",c([l,k,l]),c([l,k])],translatez:["L",c([l,l,k])],translate3d:["TTL",d]};a.addPropertiesHandler(e,j,["transform"]),a.transformToSvgMatrix=function(b){var c=a.transformListToMatrix(e(b));return"matrix("+f(c[0])+" "+f(c[1])+" "+f(c[4])+" "+f(c[5])+" "+f(c[12])+" "+f(c[13])+")"}}(b),function(a){function b(a){var b=Number(a);if(!(isNaN(b)||b<100||b>900||b%100!=0))return b}function c(b){return b=100*Math.round(b/100),b=a.clamp(100,900,b),400===b?"normal":700===b?"bold":String(b)}function d(a,b){return[a,b,c]}a.addPropertiesHandler(b,d,["font-weight"])}(b),function(a){function b(a){var b={};for(var c in a)b[c]=-a[c];return b}function c(b){return a.consumeToken(/^(left|center|right|top|bottom)\b/i,b)||a.consumeLengthOrPercent(b)}function d(b,d){var e=a.consumeRepeated(c,/^/,d);if(e&&""==e[1]){var f=e[0];if(f[0]=f[0]||"center",f[1]=f[1]||"center",3==b&&(f[2]=f[2]||{px:0}),f.length==b){if(/top|bottom/.test(f[0])||/left|right/.test(f[1])){var h=f[0];f[0]=f[1],f[1]=h}if(/left|right|center|Object/.test(f[0])&&/top|bottom|center|Object/.test(f[1]))return f.map(function(a){return"object"==typeof a?a:g[a]})}}}function e(d){var e=a.consumeRepeated(c,/^/,d);if(e){for(var f=e[0],h=[{"%":50},{"%":50}],i=0,j=!1,k=0;k<f.length;k++){var l=f[k];"string"==typeof l?(j=/bottom|right/.test(l),i={left:0,right:0,center:i,top:1,bottom:1}[l],h[i]=g[l],"center"==l&&i++):(j&&(l=b(l),l["%"]=(l["%"]||0)+100),h[i]=l,i++,j=!1)}return[h,e[1]]}}function f(b){var c=a.consumeRepeated(e,/^,/,b);if(c&&""==c[1])return c[0]}var g={left:{"%":0},center:{"%":50},right:{"%":100},top:{"%":0},bottom:{"%":100}},h=a.mergeNestedRepeated.bind(null,a.mergeDimensions," ");a.addPropertiesHandler(d.bind(null,3),h,["transform-origin"]),a.addPropertiesHandler(d.bind(null,2),h,["perspective-origin"]),a.consumePosition=e,a.mergeOffsetList=h;var i=a.mergeNestedRepeated.bind(null,h,", ");a.addPropertiesHandler(f,i,["background-position","object-position"])}(b),function(a){function b(b){var c=a.consumeToken(/^circle/,b);if(c&&c[0])return["circle"].concat(a.consumeList([a.ignore(a.consumeToken.bind(void 0,/^\(/)),d,a.ignore(a.consumeToken.bind(void 0,/^at/)),a.consumePosition,a.ignore(a.consumeToken.bind(void 0,/^\)/))],c[1]));var f=a.consumeToken(/^ellipse/,b);if(f&&f[0])return["ellipse"].concat(a.consumeList([a.ignore(a.consumeToken.bind(void 0,/^\(/)),e,a.ignore(a.consumeToken.bind(void 0,/^at/)),a.consumePosition,a.ignore(a.consumeToken.bind(void 0,/^\)/))],f[1]));var g=a.consumeToken(/^polygon/,b);return g&&g[0]?["polygon"].concat(a.consumeList([a.ignore(a.consumeToken.bind(void 0,/^\(/)),a.optional(a.consumeToken.bind(void 0,/^nonzero\s*,|^evenodd\s*,/),"nonzero,"),a.consumeSizePairList,a.ignore(a.consumeToken.bind(void 0,/^\)/))],g[1])):void 0}function c(b,c){if(b[0]===c[0])return"circle"==b[0]?a.mergeList(b.slice(1),c.slice(1),["circle(",a.mergeDimensions," at ",a.mergeOffsetList,")"]):"ellipse"==b[0]?a.mergeList(b.slice(1),c.slice(1),["ellipse(",a.mergeNonNegativeSizePair," at ",a.mergeOffsetList,")"]):"polygon"==b[0]&&b[1]==c[1]?a.mergeList(b.slice(2),c.slice(2),["polygon(",b[1],g,")"]):void 0}var d=a.consumeParenthesised.bind(null,a.parseLengthOrPercent),e=a.consumeRepeated.bind(void 0,d,/^/),f=a.mergeNestedRepeated.bind(void 0,a.mergeDimensions," "),g=a.mergeNestedRepeated.bind(void 0,f,",");a.addPropertiesHandler(b,c,["shape-outside"])}(b),function(a,b){function c(a,b){b.concat([a]).forEach(function(b){b in document.documentElement.style&&(d[a]=b),e[b]=a})}var d={},e={};c("transform",["webkitTransform","msTransform"]),c("transformOrigin",["webkitTransformOrigin"]),c("perspective",["webkitPerspective"]),c("perspectiveOrigin",["webkitPerspectiveOrigin"]),a.propertyName=function(a){return d[a]||a},a.unprefixedPropertyName=function(a){return e[a]||a}}(b)}(),function(){if(void 0===document.createElement("div").animate([]).oncancel){var a;if(window.performance&&performance.now)var a=function(){return performance.now()};else var a=function(){return Date.now()};var b=function(a,b,c){this.target=a,this.currentTime=b,this.timelineTime=c,this.type="cancel",this.bubbles=!1,this.cancelable=!1,this.currentTarget=a,this.defaultPrevented=!1,this.eventPhase=Event.AT_TARGET,this.timeStamp=Date.now()},c=window.Element.prototype.animate;window.Element.prototype.animate=function(d,e){var f=c.call(this,d,e);f._cancelHandlers=[],f.oncancel=null;var g=f.cancel;f.cancel=function(){g.call(this);var c=new b(this,null,a()),d=this._cancelHandlers.concat(this.oncancel?[this.oncancel]:[]);setTimeout(function(){d.forEach(function(a){a.call(c.target,c)})},0)};var h=f.addEventListener;f.addEventListener=function(a,b){"function"==typeof b&&"cancel"==a?this._cancelHandlers.push(b):h.call(this,a,b)};var i=f.removeEventListener;return f.removeEventListener=function(a,b){if("cancel"==a){var c=this._cancelHandlers.indexOf(b);c>=0&&this._cancelHandlers.splice(c,1)}else i.call(this,a,b)},f}}}(),function(a){var b=document.documentElement,c=null,d=!1;try{var e=getComputedStyle(b).getPropertyValue("opacity"),f="0"==e?"1":"0";c=b.animate({opacity:[f,f]},{duration:1}),c.currentTime=0,d=getComputedStyle(b).getPropertyValue("opacity")==f}catch(a){}finally{c&&c.cancel()}if(!d){var g=window.Element.prototype.animate;window.Element.prototype.animate=function(b,c){return window.Symbol&&Symbol.iterator&&Array.prototype.from&&b[Symbol.iterator]&&(b=Array.from(b)),Array.isArray(b)||null===b||(b=a.convertToArrayForm(b)),g.call(this,b,c)}}}(a)}();
//# sourceMappingURL=web-animations.min.js.map

/***/ }),

/***/ "./node_modules/zone.js/dist/zone.js":
/*!*******************************************!*\
  !*** ./node_modules/zone.js/dist/zone.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
* @license
* Copyright Google Inc. All Rights Reserved.
*
* Use of this source code is governed by an MIT-style license that can be
* found in the LICENSE file at https://angular.io/license
*/
(function (global, factory) {
	 true ? factory() :
	undefined;
}(this, (function () { 'use strict';

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
var Zone$1 = (function (global) {
    var performance = global['performance'];
    function mark(name) {
        performance && performance['mark'] && performance['mark'](name);
    }
    function performanceMeasure(name, label) {
        performance && performance['measure'] && performance['measure'](name, label);
    }
    mark('Zone');
    var checkDuplicate = global[('__zone_symbol__forceDuplicateZoneCheck')] === true;
    if (global['Zone']) {
        // if global['Zone'] already exists (maybe zone.js was already loaded or
        // some other lib also registered a global object named Zone), we may need
        // to throw an error, but sometimes user may not want this error.
        // For example,
        // we have two web pages, page1 includes zone.js, page2 doesn't.
        // and the 1st time user load page1 and page2, everything work fine,
        // but when user load page2 again, error occurs because global['Zone'] already exists.
        // so we add a flag to let user choose whether to throw this error or not.
        // By default, if existing Zone is from zone.js, we will not throw the error.
        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {
            throw new Error('Zone already loaded.');
        }
        else {
            return global['Zone'];
        }
    }
    var Zone = /** @class */ (function () {
        function Zone(parent, zoneSpec) {
            this._parent = parent;
            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';
            this._properties = zoneSpec && zoneSpec.properties || {};
            this._zoneDelegate =
                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);
        }
        Zone.assertZonePatched = function () {
            if (global['Promise'] !== patches['ZoneAwarePromise']) {
                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +
                    'has been overwritten.\n' +
                    'Most likely cause is that a Promise polyfill has been loaded ' +
                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +
                    'If you must load one, do so before loading zone.js.)');
            }
        };
        Object.defineProperty(Zone, "root", {
            get: function () {
                var zone = Zone.current;
                while (zone.parent) {
                    zone = zone.parent;
                }
                return zone;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Zone, "current", {
            get: function () {
                return _currentZoneFrame.zone;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Zone, "currentTask", {
            get: function () {
                return _currentTask;
            },
            enumerable: true,
            configurable: true
        });
        Zone.__load_patch = function (name, fn) {
            if (patches.hasOwnProperty(name)) {
                if (checkDuplicate) {
                    throw Error('Already loaded patch: ' + name);
                }
            }
            else if (!global['__Zone_disable_' + name]) {
                var perfName = 'Zone:' + name;
                mark(perfName);
                patches[name] = fn(global, Zone, _api);
                performanceMeasure(perfName, perfName);
            }
        };
        Object.defineProperty(Zone.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Zone.prototype, "name", {
            get: function () {
                return this._name;
            },
            enumerable: true,
            configurable: true
        });
        Zone.prototype.get = function (key) {
            var zone = this.getZoneWith(key);
            if (zone)
                return zone._properties[key];
        };
        Zone.prototype.getZoneWith = function (key) {
            var current = this;
            while (current) {
                if (current._properties.hasOwnProperty(key)) {
                    return current;
                }
                current = current._parent;
            }
            return null;
        };
        Zone.prototype.fork = function (zoneSpec) {
            if (!zoneSpec)
                throw new Error('ZoneSpec required!');
            return this._zoneDelegate.fork(this, zoneSpec);
        };
        Zone.prototype.wrap = function (callback, source) {
            if (typeof callback !== 'function') {
                throw new Error('Expecting function got: ' + callback);
            }
            var _callback = this._zoneDelegate.intercept(this, callback, source);
            var zone = this;
            return function () {
                return zone.runGuarded(_callback, this, arguments, source);
            };
        };
        Zone.prototype.run = function (callback, applyThis, applyArgs, source) {
            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };
            try {
                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);
            }
            finally {
                _currentZoneFrame = _currentZoneFrame.parent;
            }
        };
        Zone.prototype.runGuarded = function (callback, applyThis, applyArgs, source) {
            if (applyThis === void 0) { applyThis = null; }
            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };
            try {
                try {
                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);
                }
                catch (error) {
                    if (this._zoneDelegate.handleError(this, error)) {
                        throw error;
                    }
                }
            }
            finally {
                _currentZoneFrame = _currentZoneFrame.parent;
            }
        };
        Zone.prototype.runTask = function (task, applyThis, applyArgs) {
            if (task.zone != this) {
                throw new Error('A task can only be run in the zone of creation! (Creation: ' +
                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');
            }
            // https://github.com/angular/zone.js/issues/778, sometimes eventTask
            // will run in notScheduled(canceled) state, we should not try to
            // run such kind of task but just return
            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {
                return;
            }
            var reEntryGuard = task.state != running;
            reEntryGuard && task._transitionTo(running, scheduled);
            task.runCount++;
            var previousTask = _currentTask;
            _currentTask = task;
            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };
            try {
                if (task.type == macroTask && task.data && !task.data.isPeriodic) {
                    task.cancelFn = undefined;
                }
                try {
                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);
                }
                catch (error) {
                    if (this._zoneDelegate.handleError(this, error)) {
                        throw error;
                    }
                }
            }
            finally {
                // if the task's state is notScheduled or unknown, then it has already been cancelled
                // we should not reset the state to scheduled
                if (task.state !== notScheduled && task.state !== unknown) {
                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {
                        reEntryGuard && task._transitionTo(scheduled, running);
                    }
                    else {
                        task.runCount = 0;
                        this._updateTaskCount(task, -1);
                        reEntryGuard &&
                            task._transitionTo(notScheduled, running, notScheduled);
                    }
                }
                _currentZoneFrame = _currentZoneFrame.parent;
                _currentTask = previousTask;
            }
        };
        Zone.prototype.scheduleTask = function (task) {
            if (task.zone && task.zone !== this) {
                // check if the task was rescheduled, the newZone
                // should not be the children of the original zone
                var newZone = this;
                while (newZone) {
                    if (newZone === task.zone) {
                        throw Error("can not reschedule task to " + this.name + " which is descendants of the original zone " + task.zone.name);
                    }
                    newZone = newZone.parent;
                }
            }
            task._transitionTo(scheduling, notScheduled);
            var zoneDelegates = [];
            task._zoneDelegates = zoneDelegates;
            task._zone = this;
            try {
                task = this._zoneDelegate.scheduleTask(this, task);
            }
            catch (err) {
                // should set task's state to unknown when scheduleTask throw error
                // because the err may from reschedule, so the fromState maybe notScheduled
                task._transitionTo(unknown, scheduling, notScheduled);
                // TODO: @JiaLiPassion, should we check the result from handleError?
                this._zoneDelegate.handleError(this, err);
                throw err;
            }
            if (task._zoneDelegates === zoneDelegates) {
                // we have to check because internally the delegate can reschedule the task.
                this._updateTaskCount(task, 1);
            }
            if (task.state == scheduling) {
                task._transitionTo(scheduled, scheduling);
            }
            return task;
        };
        Zone.prototype.scheduleMicroTask = function (source, callback, data, customSchedule) {
            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));
        };
        Zone.prototype.scheduleMacroTask = function (source, callback, data, customSchedule, customCancel) {
            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));
        };
        Zone.prototype.scheduleEventTask = function (source, callback, data, customSchedule, customCancel) {
            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));
        };
        Zone.prototype.cancelTask = function (task) {
            if (task.zone != this)
                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +
                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');
            task._transitionTo(canceling, scheduled, running);
            try {
                this._zoneDelegate.cancelTask(this, task);
            }
            catch (err) {
                // if error occurs when cancelTask, transit the state to unknown
                task._transitionTo(unknown, canceling);
                this._zoneDelegate.handleError(this, err);
                throw err;
            }
            this._updateTaskCount(task, -1);
            task._transitionTo(notScheduled, canceling);
            task.runCount = 0;
            return task;
        };
        Zone.prototype._updateTaskCount = function (task, count) {
            var zoneDelegates = task._zoneDelegates;
            if (count == -1) {
                task._zoneDelegates = null;
            }
            for (var i = 0; i < zoneDelegates.length; i++) {
                zoneDelegates[i]._updateTaskCount(task.type, count);
            }
        };
        Zone.__symbol__ = __symbol__;
        return Zone;
    }());
    var DELEGATE_ZS = {
        name: '',
        onHasTask: function (delegate, _, target, hasTaskState) { return delegate.hasTask(target, hasTaskState); },
        onScheduleTask: function (delegate, _, target, task) {
            return delegate.scheduleTask(target, task);
        },
        onInvokeTask: function (delegate, _, target, task, applyThis, applyArgs) {
            return delegate.invokeTask(target, task, applyThis, applyArgs);
        },
        onCancelTask: function (delegate, _, target, task) { return delegate.cancelTask(target, task); }
    };
    var ZoneDelegate = /** @class */ (function () {
        function ZoneDelegate(zone, parentDelegate, zoneSpec) {
            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };
            this.zone = zone;
            this._parentDelegate = parentDelegate;
            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);
            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);
            this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate.zone);
            this._interceptZS =
                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);
            this._interceptDlgt =
                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);
            this._interceptCurrZone =
                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate.zone);
            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);
            this._invokeDlgt =
                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);
            this._invokeCurrZone = zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate.zone);
            this._handleErrorZS =
                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);
            this._handleErrorDlgt =
                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);
            this._handleErrorCurrZone =
                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate.zone);
            this._scheduleTaskZS =
                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);
            this._scheduleTaskDlgt = zoneSpec &&
                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);
            this._scheduleTaskCurrZone =
                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate.zone);
            this._invokeTaskZS =
                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);
            this._invokeTaskDlgt =
                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);
            this._invokeTaskCurrZone =
                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate.zone);
            this._cancelTaskZS =
                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);
            this._cancelTaskDlgt =
                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);
            this._cancelTaskCurrZone =
                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate.zone);
            this._hasTaskZS = null;
            this._hasTaskDlgt = null;
            this._hasTaskDlgtOwner = null;
            this._hasTaskCurrZone = null;
            var zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;
            var parentHasTask = parentDelegate && parentDelegate._hasTaskZS;
            if (zoneSpecHasTask || parentHasTask) {
                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such
                // a case all task related interceptors must go through this ZD. We can't short circuit it.
                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;
                this._hasTaskDlgt = parentDelegate;
                this._hasTaskDlgtOwner = this;
                this._hasTaskCurrZone = zone;
                if (!zoneSpec.onScheduleTask) {
                    this._scheduleTaskZS = DELEGATE_ZS;
                    this._scheduleTaskDlgt = parentDelegate;
                    this._scheduleTaskCurrZone = this.zone;
                }
                if (!zoneSpec.onInvokeTask) {
                    this._invokeTaskZS = DELEGATE_ZS;
                    this._invokeTaskDlgt = parentDelegate;
                    this._invokeTaskCurrZone = this.zone;
                }
                if (!zoneSpec.onCancelTask) {
                    this._cancelTaskZS = DELEGATE_ZS;
                    this._cancelTaskDlgt = parentDelegate;
                    this._cancelTaskCurrZone = this.zone;
                }
            }
        }
        ZoneDelegate.prototype.fork = function (targetZone, zoneSpec) {
            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :
                new Zone(targetZone, zoneSpec);
        };
        ZoneDelegate.prototype.intercept = function (targetZone, callback, source) {
            return this._interceptZS ?
                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :
                callback;
        };
        ZoneDelegate.prototype.invoke = function (targetZone, callback, applyThis, applyArgs, source) {
            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :
                callback.apply(applyThis, applyArgs);
        };
        ZoneDelegate.prototype.handleError = function (targetZone, error) {
            return this._handleErrorZS ?
                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :
                true;
        };
        ZoneDelegate.prototype.scheduleTask = function (targetZone, task) {
            var returnTask = task;
            if (this._scheduleTaskZS) {
                if (this._hasTaskZS) {
                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);
                }
                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);
                if (!returnTask)
                    returnTask = task;
            }
            else {
                if (task.scheduleFn) {
                    task.scheduleFn(task);
                }
                else if (task.type == microTask) {
                    scheduleMicroTask(task);
                }
                else {
                    throw new Error('Task is missing scheduleFn.');
                }
            }
            return returnTask;
        };
        ZoneDelegate.prototype.invokeTask = function (targetZone, task, applyThis, applyArgs) {
            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :
                task.callback.apply(applyThis, applyArgs);
        };
        ZoneDelegate.prototype.cancelTask = function (targetZone, task) {
            var value;
            if (this._cancelTaskZS) {
                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);
            }
            else {
                if (!task.cancelFn) {
                    throw Error('Task is not cancelable');
                }
                value = task.cancelFn(task);
            }
            return value;
        };
        ZoneDelegate.prototype.hasTask = function (targetZone, isEmpty) {
            // hasTask should not throw error so other ZoneDelegate
            // can still trigger hasTask callback
            try {
                this._hasTaskZS &&
                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);
            }
            catch (err) {
                this.handleError(targetZone, err);
            }
        };
        ZoneDelegate.prototype._updateTaskCount = function (type, count) {
            var counts = this._taskCounts;
            var prev = counts[type];
            var next = counts[type] = prev + count;
            if (next < 0) {
                throw new Error('More tasks executed then were scheduled.');
            }
            if (prev == 0 || next == 0) {
                var isEmpty = {
                    microTask: counts['microTask'] > 0,
                    macroTask: counts['macroTask'] > 0,
                    eventTask: counts['eventTask'] > 0,
                    change: type
                };
                this.hasTask(this.zone, isEmpty);
            }
        };
        return ZoneDelegate;
    }());
    var ZoneTask = /** @class */ (function () {
        function ZoneTask(type, source, callback, options, scheduleFn, cancelFn) {
            this._zone = null;
            this.runCount = 0;
            this._zoneDelegates = null;
            this._state = 'notScheduled';
            this.type = type;
            this.source = source;
            this.data = options;
            this.scheduleFn = scheduleFn;
            this.cancelFn = cancelFn;
            this.callback = callback;
            var self = this;
            // TODO: @JiaLiPassion options should have interface
            if (type === eventTask && options && options.useG) {
                this.invoke = ZoneTask.invokeTask;
            }
            else {
                this.invoke = function () {
                    return ZoneTask.invokeTask.call(global, self, this, arguments);
                };
            }
        }
        ZoneTask.invokeTask = function (task, target, args) {
            if (!task) {
                task = this;
            }
            _numberOfNestedTaskFrames++;
            try {
                task.runCount++;
                return task.zone.runTask(task, target, args);
            }
            finally {
                if (_numberOfNestedTaskFrames == 1) {
                    drainMicroTaskQueue();
                }
                _numberOfNestedTaskFrames--;
            }
        };
        Object.defineProperty(ZoneTask.prototype, "zone", {
            get: function () {
                return this._zone;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ZoneTask.prototype, "state", {
            get: function () {
                return this._state;
            },
            enumerable: true,
            configurable: true
        });
        ZoneTask.prototype.cancelScheduleRequest = function () {
            this._transitionTo(notScheduled, scheduling);
        };
        ZoneTask.prototype._transitionTo = function (toState, fromState1, fromState2) {
            if (this._state === fromState1 || this._state === fromState2) {
                this._state = toState;
                if (toState == notScheduled) {
                    this._zoneDelegates = null;
                }
            }
            else {
                throw new Error(this.type + " '" + this.source + "': can not transition to '" + toState + "', expecting state '" + fromState1 + "'" + (fromState2 ? ' or \'' + fromState2 + '\'' : '') + ", was '" + this._state + "'.");
            }
        };
        ZoneTask.prototype.toString = function () {
            if (this.data && typeof this.data.handleId !== 'undefined') {
                return this.data.handleId.toString();
            }
            else {
                return Object.prototype.toString.call(this);
            }
        };
        // add toJSON method to prevent cyclic error when
        // call JSON.stringify(zoneTask)
        ZoneTask.prototype.toJSON = function () {
            return {
                type: this.type,
                state: this.state,
                source: this.source,
                zone: this.zone.name,
                runCount: this.runCount
            };
        };
        return ZoneTask;
    }());
    //////////////////////////////////////////////////////
    //////////////////////////////////////////////////////
    ///  MICROTASK QUEUE
    //////////////////////////////////////////////////////
    //////////////////////////////////////////////////////
    var symbolSetTimeout = __symbol__('setTimeout');
    var symbolPromise = __symbol__('Promise');
    var symbolThen = __symbol__('then');
    var _microTaskQueue = [];
    var _isDrainingMicrotaskQueue = false;
    var nativeMicroTaskQueuePromise;
    function scheduleMicroTask(task) {
        // if we are not running in any task, and there has not been anything scheduled
        // we must bootstrap the initial task creation by manually scheduling the drain
        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {
            // We are not running in Task, so we need to kickstart the microtask queue.
            if (!nativeMicroTaskQueuePromise) {
                if (global[symbolPromise]) {
                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);
                }
            }
            if (nativeMicroTaskQueuePromise) {
                var nativeThen = nativeMicroTaskQueuePromise[symbolThen];
                if (!nativeThen) {
                    // native Promise is not patchable, we need to use `then` directly
                    // issue 1078
                    nativeThen = nativeMicroTaskQueuePromise['then'];
                }
                nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);
            }
            else {
                global[symbolSetTimeout](drainMicroTaskQueue, 0);
            }
        }
        task && _microTaskQueue.push(task);
    }
    function drainMicroTaskQueue() {
        if (!_isDrainingMicrotaskQueue) {
            _isDrainingMicrotaskQueue = true;
            while (_microTaskQueue.length) {
                var queue = _microTaskQueue;
                _microTaskQueue = [];
                for (var i = 0; i < queue.length; i++) {
                    var task = queue[i];
                    try {
                        task.zone.runTask(task, null, null);
                    }
                    catch (error) {
                        _api.onUnhandledError(error);
                    }
                }
            }
            _api.microtaskDrainDone();
            _isDrainingMicrotaskQueue = false;
        }
    }
    //////////////////////////////////////////////////////
    //////////////////////////////////////////////////////
    ///  BOOTSTRAP
    //////////////////////////////////////////////////////
    //////////////////////////////////////////////////////
    var NO_ZONE = { name: 'NO ZONE' };
    var notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';
    var microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';
    var patches = {};
    var _api = {
        symbol: __symbol__,
        currentZoneFrame: function () { return _currentZoneFrame; },
        onUnhandledError: noop,
        microtaskDrainDone: noop,
        scheduleMicroTask: scheduleMicroTask,
        showUncaughtError: function () { return !Zone[__symbol__('ignoreConsoleErrorUncaughtError')]; },
        patchEventTarget: function () { return []; },
        patchOnProperties: noop,
        patchMethod: function () { return noop; },
        bindArguments: function () { return []; },
        patchThen: function () { return noop; },
        patchMacroTask: function () { return noop; },
        setNativePromise: function (NativePromise) {
            // sometimes NativePromise.resolve static function
            // is not ready yet, (such as core-js/es6.promise)
            // so we need to check here.
            if (NativePromise && typeof NativePromise.resolve === 'function') {
                nativeMicroTaskQueuePromise = NativePromise.resolve(0);
            }
        },
        patchEventPrototype: function () { return noop; },
        isIEOrEdge: function () { return false; },
        getGlobalObjects: function () { return undefined; },
        ObjectDefineProperty: function () { return noop; },
        ObjectGetOwnPropertyDescriptor: function () { return undefined; },
        ObjectCreate: function () { return undefined; },
        ArraySlice: function () { return []; },
        patchClass: function () { return noop; },
        wrapWithCurrentZone: function () { return noop; },
        filterProperties: function () { return []; },
        attachOriginToPatched: function () { return noop; },
        _redefineProperty: function () { return noop; },
        patchCallbacks: function () { return noop; }
    };
    var _currentZoneFrame = { parent: null, zone: new Zone(null, null) };
    var _currentTask = null;
    var _numberOfNestedTaskFrames = 0;
    function noop() { }
    function __symbol__(name) {
        return '__zone_symbol__' + name;
    }
    performanceMeasure('Zone', 'Zone');
    return global['Zone'] = Zone;
})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);

var __values = (undefined && undefined.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
Zone.__load_patch('ZoneAwarePromise', function (global, Zone, api) {
    var ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var ObjectDefineProperty = Object.defineProperty;
    function readableObjectToString(obj) {
        if (obj && obj.toString === Object.prototype.toString) {
            var className = obj.constructor && obj.constructor.name;
            return (className ? className : '') + ': ' + JSON.stringify(obj);
        }
        return obj ? obj.toString() : Object.prototype.toString.call(obj);
    }
    var __symbol__ = api.symbol;
    var _uncaughtPromiseErrors = [];
    var symbolPromise = __symbol__('Promise');
    var symbolThen = __symbol__('then');
    var creationTrace = '__creationTrace__';
    api.onUnhandledError = function (e) {
        if (api.showUncaughtError()) {
            var rejection = e && e.rejection;
            if (rejection) {
                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);
            }
            else {
                console.error(e);
            }
        }
    };
    api.microtaskDrainDone = function () {
        while (_uncaughtPromiseErrors.length) {
            var _loop_1 = function () {
                var uncaughtPromiseError = _uncaughtPromiseErrors.shift();
                try {
                    uncaughtPromiseError.zone.runGuarded(function () {
                        throw uncaughtPromiseError;
                    });
                }
                catch (error) {
                    handleUnhandledRejection(error);
                }
            };
            while (_uncaughtPromiseErrors.length) {
                _loop_1();
            }
        }
    };
    var UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');
    function handleUnhandledRejection(e) {
        api.onUnhandledError(e);
        try {
            var handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];
            if (handler && typeof handler === 'function') {
                handler.call(this, e);
            }
        }
        catch (err) {
        }
    }
    function isThenable(value) {
        return value && value.then;
    }
    function forwardResolution(value) {
        return value;
    }
    function forwardRejection(rejection) {
        return ZoneAwarePromise.reject(rejection);
    }
    var symbolState = __symbol__('state');
    var symbolValue = __symbol__('value');
    var symbolFinally = __symbol__('finally');
    var symbolParentPromiseValue = __symbol__('parentPromiseValue');
    var symbolParentPromiseState = __symbol__('parentPromiseState');
    var source = 'Promise.then';
    var UNRESOLVED = null;
    var RESOLVED = true;
    var REJECTED = false;
    var REJECTED_NO_CATCH = 0;
    function makeResolver(promise, state) {
        return function (v) {
            try {
                resolvePromise(promise, state, v);
            }
            catch (err) {
                resolvePromise(promise, false, err);
            }
            // Do not return value or you will break the Promise spec.
        };
    }
    var once = function () {
        var wasCalled = false;
        return function wrapper(wrappedFunction) {
            return function () {
                if (wasCalled) {
                    return;
                }
                wasCalled = true;
                wrappedFunction.apply(null, arguments);
            };
        };
    };
    var TYPE_ERROR = 'Promise resolved with itself';
    var CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');
    // Promise Resolution
    function resolvePromise(promise, state, value) {
        var onceWrapper = once();
        if (promise === value) {
            throw new TypeError(TYPE_ERROR);
        }
        if (promise[symbolState] === UNRESOLVED) {
            // should only get value.then once based on promise spec.
            var then = null;
            try {
                if (typeof value === 'object' || typeof value === 'function') {
                    then = value && value.then;
                }
            }
            catch (err) {
                onceWrapper(function () {
                    resolvePromise(promise, false, err);
                })();
                return promise;
            }
            // if (value instanceof ZoneAwarePromise) {
            if (state !== REJECTED && value instanceof ZoneAwarePromise &&
                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&
                value[symbolState] !== UNRESOLVED) {
                clearRejectedNoCatch(value);
                resolvePromise(promise, value[symbolState], value[symbolValue]);
            }
            else if (state !== REJECTED && typeof then === 'function') {
                try {
                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));
                }
                catch (err) {
                    onceWrapper(function () {
                        resolvePromise(promise, false, err);
                    })();
                }
            }
            else {
                promise[symbolState] = state;
                var queue = promise[symbolValue];
                promise[symbolValue] = value;
                if (promise[symbolFinally] === symbolFinally) {
                    // the promise is generated by Promise.prototype.finally
                    if (state === RESOLVED) {
                        // the state is resolved, should ignore the value
                        // and use parent promise value
                        promise[symbolState] = promise[symbolParentPromiseState];
                        promise[symbolValue] = promise[symbolParentPromiseValue];
                    }
                }
                // record task information in value when error occurs, so we can
                // do some additional work such as render longStackTrace
                if (state === REJECTED && value instanceof Error) {
                    // check if longStackTraceZone is here
                    var trace = Zone.currentTask && Zone.currentTask.data &&
                        Zone.currentTask.data[creationTrace];
                    if (trace) {
                        // only keep the long stack trace into error when in longStackTraceZone
                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });
                    }
                }
                for (var i = 0; i < queue.length;) {
                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);
                }
                if (queue.length == 0 && state == REJECTED) {
                    promise[symbolState] = REJECTED_NO_CATCH;
                    try {
                        // try to print more readable error log
                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +
                            (value && value.stack ? '\n' + value.stack : ''));
                    }
                    catch (err) {
                        var error_1 = err;
                        error_1.rejection = value;
                        error_1.promise = promise;
                        error_1.zone = Zone.current;
                        error_1.task = Zone.currentTask;
                        _uncaughtPromiseErrors.push(error_1);
                        api.scheduleMicroTask(); // to make sure that it is running
                    }
                }
            }
        }
        // Resolving an already resolved promise is a noop.
        return promise;
    }
    var REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');
    function clearRejectedNoCatch(promise) {
        if (promise[symbolState] === REJECTED_NO_CATCH) {
            // if the promise is rejected no catch status
            // and queue.length > 0, means there is a error handler
            // here to handle the rejected promise, we should trigger
            // windows.rejectionhandled eventHandler or nodejs rejectionHandled
            // eventHandler
            try {
                var handler = Zone[REJECTION_HANDLED_HANDLER];
                if (handler && typeof handler === 'function') {
                    handler.call(this, { rejection: promise[symbolValue], promise: promise });
                }
            }
            catch (err) {
            }
            promise[symbolState] = REJECTED;
            for (var i = 0; i < _uncaughtPromiseErrors.length; i++) {
                if (promise === _uncaughtPromiseErrors[i].promise) {
                    _uncaughtPromiseErrors.splice(i, 1);
                }
            }
        }
    }
    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {
        clearRejectedNoCatch(promise);
        var promiseState = promise[symbolState];
        var delegate = promiseState ?
            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :
            (typeof onRejected === 'function') ? onRejected : forwardRejection;
        zone.scheduleMicroTask(source, function () {
            try {
                var parentPromiseValue = promise[symbolValue];
                var isFinallyPromise = chainPromise && symbolFinally === chainPromise[symbolFinally];
                if (isFinallyPromise) {
                    // if the promise is generated from finally call, keep parent promise's state and value
                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;
                    chainPromise[symbolParentPromiseState] = promiseState;
                }
                // should not pass value to finally callback
                var value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?
                    [] :
                    [parentPromiseValue]);
                resolvePromise(chainPromise, true, value);
            }
            catch (error) {
                // if error occurs, should always return this error
                resolvePromise(chainPromise, false, error);
            }
        }, chainPromise);
    }
    var ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';
    var ZoneAwarePromise = /** @class */ (function () {
        function ZoneAwarePromise(executor) {
            var promise = this;
            if (!(promise instanceof ZoneAwarePromise)) {
                throw new Error('Must be an instanceof Promise.');
            }
            promise[symbolState] = UNRESOLVED;
            promise[symbolValue] = []; // queue;
            try {
                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));
            }
            catch (error) {
                resolvePromise(promise, false, error);
            }
        }
        ZoneAwarePromise.toString = function () {
            return ZONE_AWARE_PROMISE_TO_STRING;
        };
        ZoneAwarePromise.resolve = function (value) {
            return resolvePromise(new this(null), RESOLVED, value);
        };
        ZoneAwarePromise.reject = function (error) {
            return resolvePromise(new this(null), REJECTED, error);
        };
        ZoneAwarePromise.race = function (values) {
            var e_1, _a;
            var resolve;
            var reject;
            var promise = new this(function (res, rej) {
                resolve = res;
                reject = rej;
            });
            function onResolve(value) {
                resolve(value);
            }
            function onReject(error) {
                reject(error);
            }
            try {
                for (var values_1 = __values(values), values_1_1 = values_1.next(); !values_1_1.done; values_1_1 = values_1.next()) {
                    var value = values_1_1.value;
                    if (!isThenable(value)) {
                        value = this.resolve(value);
                    }
                    value.then(onResolve, onReject);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (values_1_1 && !values_1_1.done && (_a = values_1.return)) _a.call(values_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
            return promise;
        };
        ZoneAwarePromise.all = function (values) {
            var e_2, _a;
            var resolve;
            var reject;
            var promise = new this(function (res, rej) {
                resolve = res;
                reject = rej;
            });
            // Start at 2 to prevent prematurely resolving if .then is called immediately.
            var unresolvedCount = 2;
            var valueIndex = 0;
            var resolvedValues = [];
            var _loop_2 = function (value) {
                if (!isThenable(value)) {
                    value = this_1.resolve(value);
                }
                var curValueIndex = valueIndex;
                value.then(function (value) {
                    resolvedValues[curValueIndex] = value;
                    unresolvedCount--;
                    if (unresolvedCount === 0) {
                        resolve(resolvedValues);
                    }
                }, reject);
                unresolvedCount++;
                valueIndex++;
            };
            var this_1 = this;
            try {
                for (var values_2 = __values(values), values_2_1 = values_2.next(); !values_2_1.done; values_2_1 = values_2.next()) {
                    var value = values_2_1.value;
                    _loop_2(value);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (values_2_1 && !values_2_1.done && (_a = values_2.return)) _a.call(values_2);
                }
                finally { if (e_2) throw e_2.error; }
            }
            // Make the unresolvedCount zero-based again.
            unresolvedCount -= 2;
            if (unresolvedCount === 0) {
                resolve(resolvedValues);
            }
            return promise;
        };
        Object.defineProperty(ZoneAwarePromise.prototype, Symbol.toStringTag, {
            get: function () {
                return 'Promise';
            },
            enumerable: true,
            configurable: true
        });
        ZoneAwarePromise.prototype.then = function (onFulfilled, onRejected) {
            var chainPromise = new this.constructor(null);
            var zone = Zone.current;
            if (this[symbolState] == UNRESOLVED) {
                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);
            }
            else {
                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);
            }
            return chainPromise;
        };
        ZoneAwarePromise.prototype.catch = function (onRejected) {
            return this.then(null, onRejected);
        };
        ZoneAwarePromise.prototype.finally = function (onFinally) {
            var chainPromise = new this.constructor(null);
            chainPromise[symbolFinally] = symbolFinally;
            var zone = Zone.current;
            if (this[symbolState] == UNRESOLVED) {
                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);
            }
            else {
                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);
            }
            return chainPromise;
        };
        return ZoneAwarePromise;
    }());
    // Protect against aggressive optimizers dropping seemingly unused properties.
    // E.g. Closure Compiler in advanced mode.
    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;
    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;
    ZoneAwarePromise['race'] = ZoneAwarePromise.race;
    ZoneAwarePromise['all'] = ZoneAwarePromise.all;
    var NativePromise = global[symbolPromise] = global['Promise'];
    var ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');
    var desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');
    if (!desc || desc.configurable) {
        desc && delete desc.writable;
        desc && delete desc.value;
        if (!desc) {
            desc = { configurable: true, enumerable: true };
        }
        desc.get = function () {
            // if we already set ZoneAwarePromise, use patched one
            // otherwise return native one.
            return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];
        };
        desc.set = function (NewNativePromise) {
            if (NewNativePromise === ZoneAwarePromise) {
                // if the NewNativePromise is ZoneAwarePromise
                // save to global
                global[ZONE_AWARE_PROMISE] = NewNativePromise;
            }
            else {
                // if the NewNativePromise is not ZoneAwarePromise
                // for example: after load zone.js, some library just
                // set es6-promise to global, if we set it to global
                // directly, assertZonePatched will fail and angular
                // will not loaded, so we just set the NewNativePromise
                // to global[symbolPromise], so the result is just like
                // we load ES6 Promise before zone.js
                global[symbolPromise] = NewNativePromise;
                if (!NewNativePromise.prototype[symbolThen]) {
                    patchThen(NewNativePromise);
                }
                api.setNativePromise(NewNativePromise);
            }
        };
        ObjectDefineProperty(global, 'Promise', desc);
    }
    global['Promise'] = ZoneAwarePromise;
    var symbolThenPatched = __symbol__('thenPatched');
    function patchThen(Ctor) {
        var proto = Ctor.prototype;
        var prop = ObjectGetOwnPropertyDescriptor(proto, 'then');
        if (prop && (prop.writable === false || !prop.configurable)) {
            // check Ctor.prototype.then propertyDescriptor is writable or not
            // in meteor env, writable is false, we should ignore such case
            return;
        }
        var originalThen = proto.then;
        // Keep a reference to the original method.
        proto[symbolThen] = originalThen;
        Ctor.prototype.then = function (onResolve, onReject) {
            var _this = this;
            var wrapped = new ZoneAwarePromise(function (resolve, reject) {
                originalThen.call(_this, resolve, reject);
            });
            return wrapped.then(onResolve, onReject);
        };
        Ctor[symbolThenPatched] = true;
    }
    api.patchThen = patchThen;
    function zoneify(fn) {
        return function () {
            var resultPromise = fn.apply(this, arguments);
            if (resultPromise instanceof ZoneAwarePromise) {
                return resultPromise;
            }
            var ctor = resultPromise.constructor;
            if (!ctor[symbolThenPatched]) {
                patchThen(ctor);
            }
            return resultPromise;
        };
    }
    if (NativePromise) {
        patchThen(NativePromise);
        var fetch_1 = global['fetch'];
        if (typeof fetch_1 == 'function') {
            global[api.symbol('fetch')] = fetch_1;
            global['fetch'] = zoneify(fetch_1);
        }
    }
    // This is not part of public API, but it is useful for tests, so we expose it.
    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;
    return ZoneAwarePromise;
});

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Suppress closure compiler errors about unknown 'Zone' variable
 * @fileoverview
 * @suppress {undefinedVars,globalThis,missingRequire}
 */
// issue #989, to reduce bundle size, use short name
/** Object.getOwnPropertyDescriptor */
var ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
/** Object.defineProperty */
var ObjectDefineProperty = Object.defineProperty;
/** Object.getPrototypeOf */
var ObjectGetPrototypeOf = Object.getPrototypeOf;
/** Object.create */
var ObjectCreate = Object.create;
/** Array.prototype.slice */
var ArraySlice = Array.prototype.slice;
/** addEventListener string const */
var ADD_EVENT_LISTENER_STR = 'addEventListener';
/** removeEventListener string const */
var REMOVE_EVENT_LISTENER_STR = 'removeEventListener';
/** zoneSymbol addEventListener */
var ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);
/** zoneSymbol removeEventListener */
var ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);
/** true string const */
var TRUE_STR = 'true';
/** false string const */
var FALSE_STR = 'false';
/** __zone_symbol__ string const */
var ZONE_SYMBOL_PREFIX = '__zone_symbol__';
function wrapWithCurrentZone(callback, source) {
    return Zone.current.wrap(callback, source);
}
function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {
    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);
}
var zoneSymbol = Zone.__symbol__;
var isWindowExists = typeof window !== 'undefined';
var internalWindow = isWindowExists ? window : undefined;
var _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;
var REMOVE_ATTRIBUTE = 'removeAttribute';
var NULL_ON_PROP_VALUE = [null];
function bindArguments(args, source) {
    for (var i = args.length - 1; i >= 0; i--) {
        if (typeof args[i] === 'function') {
            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);
        }
    }
    return args;
}
function patchPrototype(prototype, fnNames) {
    var source = prototype.constructor['name'];
    var _loop_1 = function (i) {
        var name_1 = fnNames[i];
        var delegate = prototype[name_1];
        if (delegate) {
            var prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name_1);
            if (!isPropertyWritable(prototypeDesc)) {
                return "continue";
            }
            prototype[name_1] = (function (delegate) {
                var patched = function () {
                    return delegate.apply(this, bindArguments(arguments, source + '.' + name_1));
                };
                attachOriginToPatched(patched, delegate);
                return patched;
            })(delegate);
        }
    };
    for (var i = 0; i < fnNames.length; i++) {
        _loop_1(i);
    }
}
function isPropertyWritable(propertyDesc) {
    if (!propertyDesc) {
        return true;
    }
    if (propertyDesc.writable === false) {
        return false;
    }
    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');
}
var isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);
// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify
// this code.
var isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&
    {}.toString.call(_global.process) === '[object process]');
var isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);
// we are in electron of nw, so we are both browser and nodejs
// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify
// this code.
var isMix = typeof _global.process !== 'undefined' &&
    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&
    !!(isWindowExists && internalWindow['HTMLElement']);
var zoneSymbolEventNames = {};
var wrapFn = function (event) {
    // https://github.com/angular/zone.js/issues/911, in IE, sometimes
    // event will be undefined, so we need to use window.event
    event = event || _global.event;
    if (!event) {
        return;
    }
    var eventNameSymbol = zoneSymbolEventNames[event.type];
    if (!eventNameSymbol) {
        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);
    }
    var target = this || event.target || _global;
    var listener = target[eventNameSymbol];
    var result;
    if (isBrowser && target === internalWindow && event.type === 'error') {
        // window.onerror have different signiture
        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror
        // and onerror callback will prevent default when callback return true
        var errorEvent = event;
        result = listener &&
            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);
        if (result === true) {
            event.preventDefault();
        }
    }
    else {
        result = listener && listener.apply(this, arguments);
        if (result != undefined && !result) {
            event.preventDefault();
        }
    }
    return result;
};
function patchProperty(obj, prop, prototype) {
    var desc = ObjectGetOwnPropertyDescriptor(obj, prop);
    if (!desc && prototype) {
        // when patch window object, use prototype to check prop exist or not
        var prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);
        if (prototypeDesc) {
            desc = { enumerable: true, configurable: true };
        }
    }
    // if the descriptor not exists or is not configurable
    // just return
    if (!desc || !desc.configurable) {
        return;
    }
    var onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');
    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {
        return;
    }
    // A property descriptor cannot have getter/setter and be writable
    // deleting the writable and value properties avoids this error:
    //
    // TypeError: property descriptors must not specify a value or be writable when a
    // getter or setter has been specified
    delete desc.writable;
    delete desc.value;
    var originalDescGet = desc.get;
    var originalDescSet = desc.set;
    // substr(2) cuz 'onclick' -> 'click', etc
    var eventName = prop.substr(2);
    var eventNameSymbol = zoneSymbolEventNames[eventName];
    if (!eventNameSymbol) {
        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);
    }
    desc.set = function (newValue) {
        // in some of windows's onproperty callback, this is undefined
        // so we need to check it
        var target = this;
        if (!target && obj === _global) {
            target = _global;
        }
        if (!target) {
            return;
        }
        var previousValue = target[eventNameSymbol];
        if (previousValue) {
            target.removeEventListener(eventName, wrapFn);
        }
        // issue #978, when onload handler was added before loading zone.js
        // we should remove it with originalDescSet
        if (originalDescSet) {
            originalDescSet.apply(target, NULL_ON_PROP_VALUE);
        }
        if (typeof newValue === 'function') {
            target[eventNameSymbol] = newValue;
            target.addEventListener(eventName, wrapFn, false);
        }
        else {
            target[eventNameSymbol] = null;
        }
    };
    // The getter would return undefined for unassigned properties but the default value of an
    // unassigned property is null
    desc.get = function () {
        // in some of windows's onproperty callback, this is undefined
        // so we need to check it
        var target = this;
        if (!target && obj === _global) {
            target = _global;
        }
        if (!target) {
            return null;
        }
        var listener = target[eventNameSymbol];
        if (listener) {
            return listener;
        }
        else if (originalDescGet) {
            // result will be null when use inline event attribute,
            // such as <button onclick="func();">OK</button>
            // because the onclick function is internal raw uncompiled handler
            // the onclick will be evaluated when first time event was triggered or
            // the property is accessed, https://github.com/angular/zone.js/issues/525
            // so we should use original native get to retrieve the handler
            var value = originalDescGet && originalDescGet.call(this);
            if (value) {
                desc.set.call(this, value);
                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {
                    target.removeAttribute(prop);
                }
                return value;
            }
        }
        return null;
    };
    ObjectDefineProperty(obj, prop, desc);
    obj[onPropPatchedSymbol] = true;
}
function patchOnProperties(obj, properties, prototype) {
    if (properties) {
        for (var i = 0; i < properties.length; i++) {
            patchProperty(obj, 'on' + properties[i], prototype);
        }
    }
    else {
        var onProperties = [];
        for (var prop in obj) {
            if (prop.substr(0, 2) == 'on') {
                onProperties.push(prop);
            }
        }
        for (var j = 0; j < onProperties.length; j++) {
            patchProperty(obj, onProperties[j], prototype);
        }
    }
}
var originalInstanceKey = zoneSymbol('originalInstance');
// wrap some native API on `window`
function patchClass(className) {
    var OriginalClass = _global[className];
    if (!OriginalClass)
        return;
    // keep original class in global
    _global[zoneSymbol(className)] = OriginalClass;
    _global[className] = function () {
        var a = bindArguments(arguments, className);
        switch (a.length) {
            case 0:
                this[originalInstanceKey] = new OriginalClass();
                break;
            case 1:
                this[originalInstanceKey] = new OriginalClass(a[0]);
                break;
            case 2:
                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);
                break;
            case 3:
                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);
                break;
            case 4:
                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);
                break;
            default:
                throw new Error('Arg list too long.');
        }
    };
    // attach original delegate to patched function
    attachOriginToPatched(_global[className], OriginalClass);
    var instance = new OriginalClass(function () { });
    var prop;
    for (prop in instance) {
        // https://bugs.webkit.org/show_bug.cgi?id=44721
        if (className === 'XMLHttpRequest' && prop === 'responseBlob')
            continue;
        (function (prop) {
            if (typeof instance[prop] === 'function') {
                _global[className].prototype[prop] = function () {
                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);
                };
            }
            else {
                ObjectDefineProperty(_global[className].prototype, prop, {
                    set: function (fn) {
                        if (typeof fn === 'function') {
                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);
                            // keep callback in wrapped function so we can
                            // use it in Function.prototype.toString to return
                            // the native one.
                            attachOriginToPatched(this[originalInstanceKey][prop], fn);
                        }
                        else {
                            this[originalInstanceKey][prop] = fn;
                        }
                    },
                    get: function () {
                        return this[originalInstanceKey][prop];
                    }
                });
            }
        }(prop));
    }
    for (prop in OriginalClass) {
        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {
            _global[className][prop] = OriginalClass[prop];
        }
    }
}
function copySymbolProperties(src, dest) {
    if (typeof Object.getOwnPropertySymbols !== 'function') {
        return;
    }
    var symbols = Object.getOwnPropertySymbols(src);
    symbols.forEach(function (symbol) {
        var desc = Object.getOwnPropertyDescriptor(src, symbol);
        Object.defineProperty(dest, symbol, {
            get: function () {
                return src[symbol];
            },
            set: function (value) {
                if (desc && (!desc.writable || typeof desc.set !== 'function')) {
                    // if src[symbol] is not writable or not have a setter, just return
                    return;
                }
                src[symbol] = value;
            },
            enumerable: desc ? desc.enumerable : true,
            configurable: desc ? desc.configurable : true
        });
    });
}
var shouldCopySymbolProperties = false;

function patchMethod(target, name, patchFn) {
    var proto = target;
    while (proto && !proto.hasOwnProperty(name)) {
        proto = ObjectGetPrototypeOf(proto);
    }
    if (!proto && target[name]) {
        // somehow we did not find it, but we can see it. This happens on IE for Window properties.
        proto = target;
    }
    var delegateName = zoneSymbol(name);
    var delegate = null;
    if (proto && !(delegate = proto[delegateName])) {
        delegate = proto[delegateName] = proto[name];
        // check whether proto[name] is writable
        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob
        var desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);
        if (isPropertyWritable(desc)) {
            var patchDelegate_1 = patchFn(delegate, delegateName, name);
            proto[name] = function () {
                return patchDelegate_1(this, arguments);
            };
            attachOriginToPatched(proto[name], delegate);
            if (shouldCopySymbolProperties) {
                copySymbolProperties(delegate, proto[name]);
            }
        }
    }
    return delegate;
}
// TODO: @JiaLiPassion, support cancel task later if necessary
function patchMacroTask(obj, funcName, metaCreator) {
    var setNative = null;
    function scheduleTask(task) {
        var data = task.data;
        data.args[data.cbIdx] = function () {
            task.invoke.apply(this, arguments);
        };
        setNative.apply(data.target, data.args);
        return task;
    }
    setNative = patchMethod(obj, funcName, function (delegate) { return function (self, args) {
        var meta = metaCreator(self, args);
        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {
            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);
        }
        else {
            // cause an error by calling it directly.
            return delegate.apply(self, args);
        }
    }; });
}

function attachOriginToPatched(patched, original) {
    patched[zoneSymbol('OriginalDelegate')] = original;
}
var isDetectedIEOrEdge = false;
var ieOrEdge = false;
function isIE() {
    try {
        var ua = internalWindow.navigator.userAgent;
        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {
            return true;
        }
    }
    catch (error) {
    }
    return false;
}
function isIEOrEdge() {
    if (isDetectedIEOrEdge) {
        return ieOrEdge;
    }
    isDetectedIEOrEdge = true;
    try {
        var ua = internalWindow.navigator.userAgent;
        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {
            ieOrEdge = true;
        }
    }
    catch (error) {
    }
    return ieOrEdge;
}

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// override Function.prototype.toString to make zone.js patched function
// look like native function
Zone.__load_patch('toString', function (global) {
    // patch Func.prototype.toString to let them look like native
    var originalFunctionToString = Function.prototype.toString;
    var ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');
    var PROMISE_SYMBOL = zoneSymbol('Promise');
    var ERROR_SYMBOL = zoneSymbol('Error');
    var newFunctionToString = function toString() {
        if (typeof this === 'function') {
            var originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];
            if (originalDelegate) {
                if (typeof originalDelegate === 'function') {
                    return originalFunctionToString.call(originalDelegate);
                }
                else {
                    return Object.prototype.toString.call(originalDelegate);
                }
            }
            if (this === Promise) {
                var nativePromise = global[PROMISE_SYMBOL];
                if (nativePromise) {
                    return originalFunctionToString.call(nativePromise);
                }
            }
            if (this === Error) {
                var nativeError = global[ERROR_SYMBOL];
                if (nativeError) {
                    return originalFunctionToString.call(nativeError);
                }
            }
        }
        return originalFunctionToString.call(this);
    };
    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;
    Function.prototype.toString = newFunctionToString;
    // patch Object.prototype.toString to let them look like native
    var originalObjectToString = Object.prototype.toString;
    var PROMISE_OBJECT_TO_STRING = '[object Promise]';
    Object.prototype.toString = function () {
        if (this instanceof Promise) {
            return PROMISE_OBJECT_TO_STRING;
        }
        return originalObjectToString.call(this);
    };
});

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * @fileoverview
 * @suppress {missingRequire}
 */
var passiveSupported = false;
if (typeof window !== 'undefined') {
    try {
        var options = Object.defineProperty({}, 'passive', {
            get: function () {
                passiveSupported = true;
            }
        });
        window.addEventListener('test', options, options);
        window.removeEventListener('test', options, options);
    }
    catch (err) {
        passiveSupported = false;
    }
}
// an identifier to tell ZoneTask do not create a new invoke closure
var OPTIMIZED_ZONE_EVENT_TASK_DATA = {
    useG: true
};
var zoneSymbolEventNames$1 = {};
var globalSources = {};
var EVENT_NAME_SYMBOL_REGX = /^__zone_symbol__(\w+)(true|false)$/;
var IMMEDIATE_PROPAGATION_SYMBOL = ('__zone_symbol__propagationStopped');
function patchEventTarget(_global, apis, patchOptions) {
    var ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;
    var REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;
    var LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';
    var REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';
    var zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);
    var ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';
    var PREPEND_EVENT_LISTENER = 'prependListener';
    var PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';
    var invokeTask = function (task, target, event) {
        // for better performance, check isRemoved which is set
        // by removeEventListener
        if (task.isRemoved) {
            return;
        }
        var delegate = task.callback;
        if (typeof delegate === 'object' && delegate.handleEvent) {
            // create the bind version of handleEvent when invoke
            task.callback = function (event) { return delegate.handleEvent(event); };
            task.originalDelegate = delegate;
        }
        // invoke static task.invoke
        task.invoke(task, target, [event]);
        var options = task.options;
        if (options && typeof options === 'object' && options.once) {
            // if options.once is true, after invoke once remove listener here
            // only browser need to do this, nodejs eventEmitter will cal removeListener
            // inside EventEmitter.once
            var delegate_1 = task.originalDelegate ? task.originalDelegate : task.callback;
            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate_1, options);
        }
    };
    // global shared zoneAwareCallback to handle all event callback with capture = false
    var globalZoneAwareCallback = function (event) {
        // https://github.com/angular/zone.js/issues/911, in IE, sometimes
        // event will be undefined, so we need to use window.event
        event = event || _global.event;
        if (!event) {
            return;
        }
        // event.target is needed for Samsung TV and SourceBuffer
        // || global is needed https://github.com/angular/zone.js/issues/190
        var target = this || event.target || _global;
        var tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];
        if (tasks) {
            // invoke all tasks which attached to current target with given event.type and capture = false
            // for performance concern, if task.length === 1, just invoke
            if (tasks.length === 1) {
                invokeTask(tasks[0], target, event);
            }
            else {
                // https://github.com/angular/zone.js/issues/836
                // copy the tasks array before invoke, to avoid
                // the callback will remove itself or other listener
                var copyTasks = tasks.slice();
                for (var i = 0; i < copyTasks.length; i++) {
                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {
                        break;
                    }
                    invokeTask(copyTasks[i], target, event);
                }
            }
        }
    };
    // global shared zoneAwareCallback to handle all event callback with capture = true
    var globalZoneAwareCaptureCallback = function (event) {
        // https://github.com/angular/zone.js/issues/911, in IE, sometimes
        // event will be undefined, so we need to use window.event
        event = event || _global.event;
        if (!event) {
            return;
        }
        // event.target is needed for Samsung TV and SourceBuffer
        // || global is needed https://github.com/angular/zone.js/issues/190
        var target = this || event.target || _global;
        var tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];
        if (tasks) {
            // invoke all tasks which attached to current target with given event.type and capture = false
            // for performance concern, if task.length === 1, just invoke
            if (tasks.length === 1) {
                invokeTask(tasks[0], target, event);
            }
            else {
                // https://github.com/angular/zone.js/issues/836
                // copy the tasks array before invoke, to avoid
                // the callback will remove itself or other listener
                var copyTasks = tasks.slice();
                for (var i = 0; i < copyTasks.length; i++) {
                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {
                        break;
                    }
                    invokeTask(copyTasks[i], target, event);
                }
            }
        }
    };
    function patchEventTargetMethods(obj, patchOptions) {
        if (!obj) {
            return false;
        }
        var useGlobalCallback = true;
        if (patchOptions && patchOptions.useG !== undefined) {
            useGlobalCallback = patchOptions.useG;
        }
        var validateHandler = patchOptions && patchOptions.vh;
        var checkDuplicate = true;
        if (patchOptions && patchOptions.chkDup !== undefined) {
            checkDuplicate = patchOptions.chkDup;
        }
        var returnTarget = false;
        if (patchOptions && patchOptions.rt !== undefined) {
            returnTarget = patchOptions.rt;
        }
        var proto = obj;
        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {
            proto = ObjectGetPrototypeOf(proto);
        }
        if (!proto && obj[ADD_EVENT_LISTENER]) {
            // somehow we did not find it, but we can see it. This happens on IE for Window properties.
            proto = obj;
        }
        if (!proto) {
            return false;
        }
        if (proto[zoneSymbolAddEventListener]) {
            return false;
        }
        var eventNameToString = patchOptions && patchOptions.eventNameToString;
        // a shared global taskData to pass data for scheduleEventTask
        // so we do not need to create a new object just for pass some data
        var taskData = {};
        var nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];
        var nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =
            proto[REMOVE_EVENT_LISTENER];
        var nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =
            proto[LISTENERS_EVENT_LISTENER];
        var nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =
            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];
        var nativePrependEventListener;
        if (patchOptions && patchOptions.prepend) {
            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =
                proto[patchOptions.prepend];
        }
        function checkIsPassive(task) {
            if (!passiveSupported && typeof taskData.options !== 'boolean' &&
                typeof taskData.options !== 'undefined' && taskData.options !== null) {
                // options is a non-null non-undefined object
                // passive is not supported
                // don't pass options as object
                // just pass capture as a boolean
                task.options = !!taskData.options.capture;
                taskData.options = task.options;
            }
        }
        var customScheduleGlobal = function (task) {
            // if there is already a task for the eventName + capture,
            // just return, because we use the shared globalZoneAwareCallback here.
            if (taskData.isExisting) {
                return;
            }
            checkIsPassive(task);
            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);
        };
        var customCancelGlobal = function (task) {
            // if task is not marked as isRemoved, this call is directly
            // from Zone.prototype.cancelTask, we should remove the task
            // from tasksList of target first
            if (!task.isRemoved) {
                var symbolEventNames = zoneSymbolEventNames$1[task.eventName];
                var symbolEventName = void 0;
                if (symbolEventNames) {
                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];
                }
                var existingTasks = symbolEventName && task.target[symbolEventName];
                if (existingTasks) {
                    for (var i = 0; i < existingTasks.length; i++) {
                        var existingTask = existingTasks[i];
                        if (existingTask === task) {
                            existingTasks.splice(i, 1);
                            // set isRemoved to data for faster invokeTask check
                            task.isRemoved = true;
                            if (existingTasks.length === 0) {
                                // all tasks for the eventName + capture have gone,
                                // remove globalZoneAwareCallback and remove the task cache from target
                                task.allRemoved = true;
                                task.target[symbolEventName] = null;
                            }
                            break;
                        }
                    }
                }
            }
            // if all tasks for the eventName + capture have gone,
            // we will really remove the global event callback,
            // if not, return
            if (!task.allRemoved) {
                return;
            }
            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);
        };
        var customScheduleNonGlobal = function (task) {
            checkIsPassive(task);
            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);
        };
        var customSchedulePrepend = function (task) {
            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);
        };
        var customCancelNonGlobal = function (task) {
            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);
        };
        var customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;
        var customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;
        var compareTaskCallbackVsDelegate = function (task, delegate) {
            var typeOfDelegate = typeof delegate;
            return (typeOfDelegate === 'function' && task.callback === delegate) ||
                (typeOfDelegate === 'object' && task.originalDelegate === delegate);
        };
        var compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;
        var blackListedEvents = Zone[Zone.__symbol__('BLACK_LISTED_EVENTS')];
        var makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget, prepend) {
            if (returnTarget === void 0) { returnTarget = false; }
            if (prepend === void 0) { prepend = false; }
            return function () {
                var target = this || _global;
                var eventName = arguments[0];
                var delegate = arguments[1];
                if (!delegate) {
                    return nativeListener.apply(this, arguments);
                }
                if (isNode && eventName === 'uncaughtException') {
                    // don't patch uncaughtException of nodejs to prevent endless loop
                    return nativeListener.apply(this, arguments);
                }
                // don't create the bind delegate function for handleEvent
                // case here to improve addEventListener performance
                // we will create the bind delegate when invoke
                var isHandleEvent = false;
                if (typeof delegate !== 'function') {
                    if (!delegate.handleEvent) {
                        return nativeListener.apply(this, arguments);
                    }
                    isHandleEvent = true;
                }
                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {
                    return;
                }
                var options = arguments[2];
                if (blackListedEvents) {
                    // check black list
                    for (var i = 0; i < blackListedEvents.length; i++) {
                        if (eventName === blackListedEvents[i]) {
                            return nativeListener.apply(this, arguments);
                        }
                    }
                }
                var capture;
                var once = false;
                if (options === undefined) {
                    capture = false;
                }
                else if (options === true) {
                    capture = true;
                }
                else if (options === false) {
                    capture = false;
                }
                else {
                    capture = options ? !!options.capture : false;
                    once = options ? !!options.once : false;
                }
                var zone = Zone.current;
                var symbolEventNames = zoneSymbolEventNames$1[eventName];
                var symbolEventName;
                if (!symbolEventNames) {
                    // the code is duplicate, but I just want to get some better performance
                    var falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;
                    var trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;
                    var symbol = ZONE_SYMBOL_PREFIX + falseEventName;
                    var symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;
                    zoneSymbolEventNames$1[eventName] = {};
                    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;
                    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;
                    symbolEventName = capture ? symbolCapture : symbol;
                }
                else {
                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];
                }
                var existingTasks = target[symbolEventName];
                var isExisting = false;
                if (existingTasks) {
                    // already have task registered
                    isExisting = true;
                    if (checkDuplicate) {
                        for (var i = 0; i < existingTasks.length; i++) {
                            if (compare(existingTasks[i], delegate)) {
                                // same callback, same capture, same event name, just return
                                return;
                            }
                        }
                    }
                }
                else {
                    existingTasks = target[symbolEventName] = [];
                }
                var source;
                var constructorName = target.constructor['name'];
                var targetSource = globalSources[constructorName];
                if (targetSource) {
                    source = targetSource[eventName];
                }
                if (!source) {
                    source = constructorName + addSource +
                        (eventNameToString ? eventNameToString(eventName) : eventName);
                }
                // do not create a new object as task.data to pass those things
                // just use the global shared one
                taskData.options = options;
                if (once) {
                    // if addEventListener with once options, we don't pass it to
                    // native addEventListener, instead we keep the once setting
                    // and handle ourselves.
                    taskData.options.once = false;
                }
                taskData.target = target;
                taskData.capture = capture;
                taskData.eventName = eventName;
                taskData.isExisting = isExisting;
                var data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;
                // keep taskData into data to allow onScheduleEventTask to access the task information
                if (data) {
                    data.taskData = taskData;
                }
                var task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);
                // should clear taskData.target to avoid memory leak
                // issue, https://github.com/angular/angular/issues/20442
                taskData.target = null;
                // need to clear up taskData because it is a global object
                if (data) {
                    data.taskData = null;
                }
                // have to save those information to task in case
                // application may call task.zone.cancelTask() directly
                if (once) {
                    options.once = true;
                }
                if (!(!passiveSupported && typeof task.options === 'boolean')) {
                    // if not support passive, and we pass an option object
                    // to addEventListener, we should save the options to task
                    task.options = options;
                }
                task.target = target;
                task.capture = capture;
                task.eventName = eventName;
                if (isHandleEvent) {
                    // save original delegate for compare to check duplicate
                    task.originalDelegate = delegate;
                }
                if (!prepend) {
                    existingTasks.push(task);
                }
                else {
                    existingTasks.unshift(task);
                }
                if (returnTarget) {
                    return target;
                }
            };
        };
        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);
        if (nativePrependEventListener) {
            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);
        }
        proto[REMOVE_EVENT_LISTENER] = function () {
            var target = this || _global;
            var eventName = arguments[0];
            var options = arguments[2];
            var capture;
            if (options === undefined) {
                capture = false;
            }
            else if (options === true) {
                capture = true;
            }
            else if (options === false) {
                capture = false;
            }
            else {
                capture = options ? !!options.capture : false;
            }
            var delegate = arguments[1];
            if (!delegate) {
                return nativeRemoveEventListener.apply(this, arguments);
            }
            if (validateHandler &&
                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {
                return;
            }
            var symbolEventNames = zoneSymbolEventNames$1[eventName];
            var symbolEventName;
            if (symbolEventNames) {
                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];
            }
            var existingTasks = symbolEventName && target[symbolEventName];
            if (existingTasks) {
                for (var i = 0; i < existingTasks.length; i++) {
                    var existingTask = existingTasks[i];
                    if (compare(existingTask, delegate)) {
                        existingTasks.splice(i, 1);
                        // set isRemoved to data for faster invokeTask check
                        existingTask.isRemoved = true;
                        if (existingTasks.length === 0) {
                            // all tasks for the eventName + capture have gone,
                            // remove globalZoneAwareCallback and remove the task cache from target
                            existingTask.allRemoved = true;
                            target[symbolEventName] = null;
                        }
                        existingTask.zone.cancelTask(existingTask);
                        if (returnTarget) {
                            return target;
                        }
                        return;
                    }
                }
            }
            // issue 930, didn't find the event name or callback
            // from zone kept existingTasks, the callback maybe
            // added outside of zone, we need to call native removeEventListener
            // to try to remove it.
            return nativeRemoveEventListener.apply(this, arguments);
        };
        proto[LISTENERS_EVENT_LISTENER] = function () {
            var target = this || _global;
            var eventName = arguments[0];
            var listeners = [];
            var tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);
            for (var i = 0; i < tasks.length; i++) {
                var task = tasks[i];
                var delegate = task.originalDelegate ? task.originalDelegate : task.callback;
                listeners.push(delegate);
            }
            return listeners;
        };
        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {
            var target = this || _global;
            var eventName = arguments[0];
            if (!eventName) {
                var keys = Object.keys(target);
                for (var i = 0; i < keys.length; i++) {
                    var prop = keys[i];
                    var match = EVENT_NAME_SYMBOL_REGX.exec(prop);
                    var evtName = match && match[1];
                    // in nodejs EventEmitter, removeListener event is
                    // used for monitoring the removeListener call,
                    // so just keep removeListener eventListener until
                    // all other eventListeners are removed
                    if (evtName && evtName !== 'removeListener') {
                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);
                    }
                }
                // remove removeListener listener finally
                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');
            }
            else {
                var symbolEventNames = zoneSymbolEventNames$1[eventName];
                if (symbolEventNames) {
                    var symbolEventName = symbolEventNames[FALSE_STR];
                    var symbolCaptureEventName = symbolEventNames[TRUE_STR];
                    var tasks = target[symbolEventName];
                    var captureTasks = target[symbolCaptureEventName];
                    if (tasks) {
                        var removeTasks = tasks.slice();
                        for (var i = 0; i < removeTasks.length; i++) {
                            var task = removeTasks[i];
                            var delegate = task.originalDelegate ? task.originalDelegate : task.callback;
                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);
                        }
                    }
                    if (captureTasks) {
                        var removeTasks = captureTasks.slice();
                        for (var i = 0; i < removeTasks.length; i++) {
                            var task = removeTasks[i];
                            var delegate = task.originalDelegate ? task.originalDelegate : task.callback;
                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);
                        }
                    }
                }
            }
            if (returnTarget) {
                return this;
            }
        };
        // for native toString patch
        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);
        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);
        if (nativeRemoveAllListeners) {
            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);
        }
        if (nativeListeners) {
            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);
        }
        return true;
    }
    var results = [];
    for (var i = 0; i < apis.length; i++) {
        results[i] = patchEventTargetMethods(apis[i], patchOptions);
    }
    return results;
}
function findEventTasks(target, eventName) {
    var foundTasks = [];
    for (var prop in target) {
        var match = EVENT_NAME_SYMBOL_REGX.exec(prop);
        var evtName = match && match[1];
        if (evtName && (!eventName || evtName === eventName)) {
            var tasks = target[prop];
            if (tasks) {
                for (var i = 0; i < tasks.length; i++) {
                    foundTasks.push(tasks[i]);
                }
            }
        }
    }
    return foundTasks;
}
function patchEventPrototype(global, api) {
    var Event = global['Event'];
    if (Event && Event.prototype) {
        api.patchMethod(Event.prototype, 'stopImmediatePropagation', function (delegate) { return function (self, args) {
            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;
            // we need to call the native stopImmediatePropagation
            // in case in some hybrid application, some part of
            // application will be controlled by zone, some are not
            delegate && delegate.apply(self, args);
        }; });
    }
}

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
function patchCallbacks(api, target, targetName, method, callbacks) {
    var symbol = Zone.__symbol__(method);
    if (target[symbol]) {
        return;
    }
    var nativeDelegate = target[symbol] = target[method];
    target[method] = function (name, opts, options) {
        if (opts && opts.prototype) {
            callbacks.forEach(function (callback) {
                var source = targetName + "." + method + "::" + callback;
                var prototype = opts.prototype;
                if (prototype.hasOwnProperty(callback)) {
                    var descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);
                    if (descriptor && descriptor.value) {
                        descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);
                        api._redefineProperty(opts.prototype, callback, descriptor);
                    }
                    else if (prototype[callback]) {
                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);
                    }
                }
                else if (prototype[callback]) {
                    prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);
                }
            });
        }
        return nativeDelegate.call(target, name, opts, options);
    };
    api.attachOriginToPatched(target[method], nativeDelegate);
}

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/*
 * This is necessary for Chrome and Chrome mobile, to enable
 * things like redefining `createdCallback` on an element.
 */
var zoneSymbol$1 = Zone.__symbol__;
var _defineProperty = Object[zoneSymbol$1('defineProperty')] = Object.defineProperty;
var _getOwnPropertyDescriptor = Object[zoneSymbol$1('getOwnPropertyDescriptor')] =
    Object.getOwnPropertyDescriptor;
var _create = Object.create;
var unconfigurablesKey = zoneSymbol$1('unconfigurables');
function propertyPatch() {
    Object.defineProperty = function (obj, prop, desc) {
        if (isUnconfigurable(obj, prop)) {
            throw new TypeError('Cannot assign to read only property \'' + prop + '\' of ' + obj);
        }
        var originalConfigurableFlag = desc.configurable;
        if (prop !== 'prototype') {
            desc = rewriteDescriptor(obj, prop, desc);
        }
        return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);
    };
    Object.defineProperties = function (obj, props) {
        Object.keys(props).forEach(function (prop) {
            Object.defineProperty(obj, prop, props[prop]);
        });
        return obj;
    };
    Object.create = function (obj, proto) {
        if (typeof proto === 'object' && !Object.isFrozen(proto)) {
            Object.keys(proto).forEach(function (prop) {
                proto[prop] = rewriteDescriptor(obj, prop, proto[prop]);
            });
        }
        return _create(obj, proto);
    };
    Object.getOwnPropertyDescriptor = function (obj, prop) {
        var desc = _getOwnPropertyDescriptor(obj, prop);
        if (desc && isUnconfigurable(obj, prop)) {
            desc.configurable = false;
        }
        return desc;
    };
}
function _redefineProperty(obj, prop, desc) {
    var originalConfigurableFlag = desc.configurable;
    desc = rewriteDescriptor(obj, prop, desc);
    return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);
}
function isUnconfigurable(obj, prop) {
    return obj && obj[unconfigurablesKey] && obj[unconfigurablesKey][prop];
}
function rewriteDescriptor(obj, prop, desc) {
    // issue-927, if the desc is frozen, don't try to change the desc
    if (!Object.isFrozen(desc)) {
        desc.configurable = true;
    }
    if (!desc.configurable) {
        // issue-927, if the obj is frozen, don't try to set the desc to obj
        if (!obj[unconfigurablesKey] && !Object.isFrozen(obj)) {
            _defineProperty(obj, unconfigurablesKey, { writable: true, value: {} });
        }
        if (obj[unconfigurablesKey]) {
            obj[unconfigurablesKey][prop] = true;
        }
    }
    return desc;
}
function _tryDefineProperty(obj, prop, desc, originalConfigurableFlag) {
    try {
        return _defineProperty(obj, prop, desc);
    }
    catch (error) {
        if (desc.configurable) {
            // In case of errors, when the configurable flag was likely set by rewriteDescriptor(), let's
            // retry with the original flag value
            if (typeof originalConfigurableFlag == 'undefined') {
                delete desc.configurable;
            }
            else {
                desc.configurable = originalConfigurableFlag;
            }
            try {
                return _defineProperty(obj, prop, desc);
            }
            catch (error) {
                var descJson = null;
                try {
                    descJson = JSON.stringify(desc);
                }
                catch (error) {
                    descJson = desc.toString();
                }
                console.log("Attempting to configure '" + prop + "' with descriptor '" + descJson + "' on object '" + obj + "' and got error, giving up: " + error);
            }
        }
        else {
            throw error;
        }
    }
}

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * @fileoverview
 * @suppress {globalThis}
 */
var globalEventHandlersEventNames = [
    'abort',
    'animationcancel',
    'animationend',
    'animationiteration',
    'auxclick',
    'beforeinput',
    'blur',
    'cancel',
    'canplay',
    'canplaythrough',
    'change',
    'compositionstart',
    'compositionupdate',
    'compositionend',
    'cuechange',
    'click',
    'close',
    'contextmenu',
    'curechange',
    'dblclick',
    'drag',
    'dragend',
    'dragenter',
    'dragexit',
    'dragleave',
    'dragover',
    'drop',
    'durationchange',
    'emptied',
    'ended',
    'error',
    'focus',
    'focusin',
    'focusout',
    'gotpointercapture',
    'input',
    'invalid',
    'keydown',
    'keypress',
    'keyup',
    'load',
    'loadstart',
    'loadeddata',
    'loadedmetadata',
    'lostpointercapture',
    'mousedown',
    'mouseenter',
    'mouseleave',
    'mousemove',
    'mouseout',
    'mouseover',
    'mouseup',
    'mousewheel',
    'orientationchange',
    'pause',
    'play',
    'playing',
    'pointercancel',
    'pointerdown',
    'pointerenter',
    'pointerleave',
    'pointerlockchange',
    'mozpointerlockchange',
    'webkitpointerlockerchange',
    'pointerlockerror',
    'mozpointerlockerror',
    'webkitpointerlockerror',
    'pointermove',
    'pointout',
    'pointerover',
    'pointerup',
    'progress',
    'ratechange',
    'reset',
    'resize',
    'scroll',
    'seeked',
    'seeking',
    'select',
    'selectionchange',
    'selectstart',
    'show',
    'sort',
    'stalled',
    'submit',
    'suspend',
    'timeupdate',
    'volumechange',
    'touchcancel',
    'touchmove',
    'touchstart',
    'touchend',
    'transitioncancel',
    'transitionend',
    'waiting',
    'wheel'
];
var documentEventNames = [
    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',
    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',
    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',
    'visibilitychange', 'resume'
];
var windowEventNames = [
    'absolutedeviceorientation',
    'afterinput',
    'afterprint',
    'appinstalled',
    'beforeinstallprompt',
    'beforeprint',
    'beforeunload',
    'devicelight',
    'devicemotion',
    'deviceorientation',
    'deviceorientationabsolute',
    'deviceproximity',
    'hashchange',
    'languagechange',
    'message',
    'mozbeforepaint',
    'offline',
    'online',
    'paint',
    'pageshow',
    'pagehide',
    'popstate',
    'rejectionhandled',
    'storage',
    'unhandledrejection',
    'unload',
    'userproximity',
    'vrdisplyconnected',
    'vrdisplaydisconnected',
    'vrdisplaypresentchange'
];
var htmlElementEventNames = [
    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',
    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',
    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'
];
var mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];
var ieElementEventNames = [
    'activate',
    'afterupdate',
    'ariarequest',
    'beforeactivate',
    'beforedeactivate',
    'beforeeditfocus',
    'beforeupdate',
    'cellchange',
    'controlselect',
    'dataavailable',
    'datasetchanged',
    'datasetcomplete',
    'errorupdate',
    'filterchange',
    'layoutcomplete',
    'losecapture',
    'move',
    'moveend',
    'movestart',
    'propertychange',
    'resizeend',
    'resizestart',
    'rowenter',
    'rowexit',
    'rowsdelete',
    'rowsinserted',
    'command',
    'compassneedscalibration',
    'deactivate',
    'help',
    'mscontentzoom',
    'msmanipulationstatechanged',
    'msgesturechange',
    'msgesturedoubletap',
    'msgestureend',
    'msgesturehold',
    'msgesturestart',
    'msgesturetap',
    'msgotpointercapture',
    'msinertiastart',
    'mslostpointercapture',
    'mspointercancel',
    'mspointerdown',
    'mspointerenter',
    'mspointerhover',
    'mspointerleave',
    'mspointermove',
    'mspointerout',
    'mspointerover',
    'mspointerup',
    'pointerout',
    'mssitemodejumplistitemremoved',
    'msthumbnailclick',
    'stop',
    'storagecommit'
];
var webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];
var formEventNames = ['autocomplete', 'autocompleteerror'];
var detailEventNames = ['toggle'];
var frameEventNames = ['load'];
var frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];
var marqueeEventNames = ['bounce', 'finish', 'start'];
var XMLHttpRequestEventNames = [
    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',
    'readystatechange'
];
var IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];
var websocketEventNames = ['close', 'error', 'open', 'message'];
var workerEventNames = ['error', 'message'];
var eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);
function filterProperties(target, onProperties, ignoreProperties) {
    if (!ignoreProperties || ignoreProperties.length === 0) {
        return onProperties;
    }
    var tip = ignoreProperties.filter(function (ip) { return ip.target === target; });
    if (!tip || tip.length === 0) {
        return onProperties;
    }
    var targetIgnoreProperties = tip[0].ignoreProperties;
    return onProperties.filter(function (op) { return targetIgnoreProperties.indexOf(op) === -1; });
}
function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {
    // check whether target is available, sometimes target will be undefined
    // because different browser or some 3rd party plugin.
    if (!target) {
        return;
    }
    var filteredProperties = filterProperties(target, onProperties, ignoreProperties);
    patchOnProperties(target, filteredProperties, prototype);
}
function propertyDescriptorPatch(api, _global) {
    if (isNode && !isMix) {
        return;
    }
    if (Zone[api.symbol('patchEvents')]) {
        // events are already been patched by legacy patch.
        return;
    }
    var supportsWebSocket = typeof WebSocket !== 'undefined';
    var ignoreProperties = _global['__Zone_ignore_on_properties'];
    // for browsers that we can patch the descriptor:  Chrome & Firefox
    if (isBrowser) {
        var internalWindow = window;
        var ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];
        // in IE/Edge, onProp not exist in window object, but in WindowPrototype
        // so we need to pass WindowPrototype to check onProp exist or not
        patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));
        patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);
        if (typeof internalWindow['SVGElement'] !== 'undefined') {
            patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);
        }
        patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);
        patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);
        patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);
        patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);
        patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);
        patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);
        patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);
        var HTMLMarqueeElement_1 = internalWindow['HTMLMarqueeElement'];
        if (HTMLMarqueeElement_1) {
            patchFilteredProperties(HTMLMarqueeElement_1.prototype, marqueeEventNames, ignoreProperties);
        }
        var Worker_1 = internalWindow['Worker'];
        if (Worker_1) {
            patchFilteredProperties(Worker_1.prototype, workerEventNames, ignoreProperties);
        }
    }
    var XMLHttpRequest = _global['XMLHttpRequest'];
    if (XMLHttpRequest) {
        // XMLHttpRequest is not available in ServiceWorker, so we need to check here
        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);
    }
    var XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];
    if (XMLHttpRequestEventTarget) {
        patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);
    }
    if (typeof IDBIndex !== 'undefined') {
        patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);
        patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);
        patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);
        patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);
        patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);
        patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);
    }
    if (supportsWebSocket) {
        patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);
    }
}

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
Zone.__load_patch('util', function (global, Zone, api) {
    api.patchOnProperties = patchOnProperties;
    api.patchMethod = patchMethod;
    api.bindArguments = bindArguments;
    api.patchMacroTask = patchMacroTask;
    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to
    // define which events will not be patched by `Zone.js`.
    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep
    // the name consistent with angular repo.
    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for
    // backwards compatibility.
    var SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');
    var SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');
    if (global[SYMBOL_UNPATCHED_EVENTS]) {
        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];
    }
    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {
        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =
            global[SYMBOL_BLACK_LISTED_EVENTS];
    }
    api.patchEventPrototype = patchEventPrototype;
    api.patchEventTarget = patchEventTarget;
    api.isIEOrEdge = isIEOrEdge;
    api.ObjectDefineProperty = ObjectDefineProperty;
    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;
    api.ObjectCreate = ObjectCreate;
    api.ArraySlice = ArraySlice;
    api.patchClass = patchClass;
    api.wrapWithCurrentZone = wrapWithCurrentZone;
    api.filterProperties = filterProperties;
    api.attachOriginToPatched = attachOriginToPatched;
    api._redefineProperty = _redefineProperty;
    api.patchCallbacks = patchCallbacks;
    api.getGlobalObjects = function () { return ({
        globalSources: globalSources,
        zoneSymbolEventNames: zoneSymbolEventNames$1,
        eventNames: eventNames,
        isBrowser: isBrowser,
        isMix: isMix,
        isNode: isNode,
        TRUE_STR: TRUE_STR,
        FALSE_STR: FALSE_STR,
        ZONE_SYMBOL_PREFIX: ZONE_SYMBOL_PREFIX,
        ADD_EVENT_LISTENER_STR: ADD_EVENT_LISTENER_STR,
        REMOVE_EVENT_LISTENER_STR: REMOVE_EVENT_LISTENER_STR
    }); };
});

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
function eventTargetLegacyPatch(_global, api) {
    var _a = api.getGlobalObjects(), eventNames = _a.eventNames, globalSources = _a.globalSources, zoneSymbolEventNames = _a.zoneSymbolEventNames, TRUE_STR = _a.TRUE_STR, FALSE_STR = _a.FALSE_STR, ZONE_SYMBOL_PREFIX = _a.ZONE_SYMBOL_PREFIX;
    var WTF_ISSUE_555 = 'Anchor,Area,Audio,BR,Base,BaseFont,Body,Button,Canvas,Content,DList,Directory,Div,Embed,FieldSet,Font,Form,Frame,FrameSet,HR,Head,Heading,Html,IFrame,Image,Input,Keygen,LI,Label,Legend,Link,Map,Marquee,Media,Menu,Meta,Meter,Mod,OList,Object,OptGroup,Option,Output,Paragraph,Pre,Progress,Quote,Script,Select,Source,Span,Style,TableCaption,TableCell,TableCol,Table,TableRow,TableSection,TextArea,Title,Track,UList,Unknown,Video';
    var NO_EVENT_TARGET = 'ApplicationCache,EventSource,FileReader,InputMethodContext,MediaController,MessagePort,Node,Performance,SVGElementInstance,SharedWorker,TextTrack,TextTrackCue,TextTrackList,WebKitNamedFlow,Window,Worker,WorkerGlobalScope,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload,IDBRequest,IDBOpenDBRequest,IDBDatabase,IDBTransaction,IDBCursor,DBIndex,WebSocket'
        .split(',');
    var EVENT_TARGET = 'EventTarget';
    var apis = [];
    var isWtf = _global['wtf'];
    var WTF_ISSUE_555_ARRAY = WTF_ISSUE_555.split(',');
    if (isWtf) {
        // Workaround for: https://github.com/google/tracing-framework/issues/555
        apis = WTF_ISSUE_555_ARRAY.map(function (v) { return 'HTML' + v + 'Element'; }).concat(NO_EVENT_TARGET);
    }
    else if (_global[EVENT_TARGET]) {
        apis.push(EVENT_TARGET);
    }
    else {
        // Note: EventTarget is not available in all browsers,
        // if it's not available, we instead patch the APIs in the IDL that inherit from EventTarget
        apis = NO_EVENT_TARGET;
    }
    var isDisableIECheck = _global['__Zone_disable_IE_check'] || false;
    var isEnableCrossContextCheck = _global['__Zone_enable_cross_context_check'] || false;
    var ieOrEdge = api.isIEOrEdge();
    var ADD_EVENT_LISTENER_SOURCE = '.addEventListener:';
    var FUNCTION_WRAPPER = '[object FunctionWrapper]';
    var BROWSER_TOOLS = 'function __BROWSERTOOLS_CONSOLE_SAFEFUNC() { [native code] }';
    //  predefine all __zone_symbol__ + eventName + true/false string
    for (var i = 0; i < eventNames.length; i++) {
        var eventName = eventNames[i];
        var falseEventName = eventName + FALSE_STR;
        var trueEventName = eventName + TRUE_STR;
        var symbol = ZONE_SYMBOL_PREFIX + falseEventName;
        var symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;
        zoneSymbolEventNames[eventName] = {};
        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;
        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;
    }
    //  predefine all task.source string
    for (var i = 0; i < WTF_ISSUE_555.length; i++) {
        var target = WTF_ISSUE_555_ARRAY[i];
        var targets = globalSources[target] = {};
        for (var j = 0; j < eventNames.length; j++) {
            var eventName = eventNames[j];
            targets[eventName] = target + ADD_EVENT_LISTENER_SOURCE + eventName;
        }
    }
    var checkIEAndCrossContext = function (nativeDelegate, delegate, target, args) {
        if (!isDisableIECheck && ieOrEdge) {
            if (isEnableCrossContextCheck) {
                try {
                    var testString = delegate.toString();
                    if ((testString === FUNCTION_WRAPPER || testString == BROWSER_TOOLS)) {
                        nativeDelegate.apply(target, args);
                        return false;
                    }
                }
                catch (error) {
                    nativeDelegate.apply(target, args);
                    return false;
                }
            }
            else {
                var testString = delegate.toString();
                if ((testString === FUNCTION_WRAPPER || testString == BROWSER_TOOLS)) {
                    nativeDelegate.apply(target, args);
                    return false;
                }
            }
        }
        else if (isEnableCrossContextCheck) {
            try {
                delegate.toString();
            }
            catch (error) {
                nativeDelegate.apply(target, args);
                return false;
            }
        }
        return true;
    };
    var apiTypes = [];
    for (var i = 0; i < apis.length; i++) {
        var type = _global[apis[i]];
        apiTypes.push(type && type.prototype);
    }
    // vh is validateHandler to check event handler
    // is valid or not(for security check)
    api.patchEventTarget(_global, apiTypes, { vh: checkIEAndCrossContext });
    Zone[api.symbol('patchEventTarget')] = !!_global[EVENT_TARGET];
    return true;
}

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// we have to patch the instance since the proto is non-configurable
function apply(api, _global) {
    var _a = api.getGlobalObjects(), ADD_EVENT_LISTENER_STR = _a.ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR = _a.REMOVE_EVENT_LISTENER_STR;
    var WS = _global.WebSocket;
    // On Safari window.EventTarget doesn't exist so need to patch WS add/removeEventListener
    // On older Chrome, no need since EventTarget was already patched
    if (!_global.EventTarget) {
        api.patchEventTarget(_global, [WS.prototype]);
    }
    _global.WebSocket = function (x, y) {
        var socket = arguments.length > 1 ? new WS(x, y) : new WS(x);
        var proxySocket;
        var proxySocketProto;
        // Safari 7.0 has non-configurable own 'onmessage' and friends properties on the socket instance
        var onmessageDesc = api.ObjectGetOwnPropertyDescriptor(socket, 'onmessage');
        if (onmessageDesc && onmessageDesc.configurable === false) {
            proxySocket = api.ObjectCreate(socket);
            // socket have own property descriptor 'onopen', 'onmessage', 'onclose', 'onerror'
            // but proxySocket not, so we will keep socket as prototype and pass it to
            // patchOnProperties method
            proxySocketProto = socket;
            [ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR, 'send', 'close'].forEach(function (propName) {
                proxySocket[propName] = function () {
                    var args = api.ArraySlice.call(arguments);
                    if (propName === ADD_EVENT_LISTENER_STR || propName === REMOVE_EVENT_LISTENER_STR) {
                        var eventName = args.length > 0 ? args[0] : undefined;
                        if (eventName) {
                            var propertySymbol = Zone.__symbol__('ON_PROPERTY' + eventName);
                            socket[propertySymbol] = proxySocket[propertySymbol];
                        }
                    }
                    return socket[propName].apply(socket, args);
                };
            });
        }
        else {
            // we can patch the real socket
            proxySocket = socket;
        }
        api.patchOnProperties(proxySocket, ['close', 'error', 'message', 'open'], proxySocketProto);
        return proxySocket;
    };
    var globalWebSocket = _global['WebSocket'];
    for (var prop in WS) {
        globalWebSocket[prop] = WS[prop];
    }
}

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * @fileoverview
 * @suppress {globalThis}
 */
function propertyDescriptorLegacyPatch(api, _global) {
    var _a = api.getGlobalObjects(), isNode = _a.isNode, isMix = _a.isMix;
    if (isNode && !isMix) {
        return;
    }
    if (!canPatchViaPropertyDescriptor(api, _global)) {
        var supportsWebSocket = typeof WebSocket !== 'undefined';
        // Safari, Android browsers (Jelly Bean)
        patchViaCapturingAllTheEvents(api);
        api.patchClass('XMLHttpRequest');
        if (supportsWebSocket) {
            apply(api, _global);
        }
        Zone[api.symbol('patchEvents')] = true;
    }
}
function canPatchViaPropertyDescriptor(api, _global) {
    var _a = api.getGlobalObjects(), isBrowser = _a.isBrowser, isMix = _a.isMix;
    if ((isBrowser || isMix) &&
        !api.ObjectGetOwnPropertyDescriptor(HTMLElement.prototype, 'onclick') &&
        typeof Element !== 'undefined') {
        // WebKit https://bugs.webkit.org/show_bug.cgi?id=134364
        // IDL interface attributes are not configurable
        var desc = api.ObjectGetOwnPropertyDescriptor(Element.prototype, 'onclick');
        if (desc && !desc.configurable)
            return false;
        // try to use onclick to detect whether we can patch via propertyDescriptor
        // because XMLHttpRequest is not available in service worker
        if (desc) {
            api.ObjectDefineProperty(Element.prototype, 'onclick', {
                enumerable: true,
                configurable: true,
                get: function () {
                    return true;
                }
            });
            var div = document.createElement('div');
            var result = !!div.onclick;
            api.ObjectDefineProperty(Element.prototype, 'onclick', desc);
            return result;
        }
    }
    var XMLHttpRequest = _global['XMLHttpRequest'];
    if (!XMLHttpRequest) {
        // XMLHttpRequest is not available in service worker
        return false;
    }
    var ON_READY_STATE_CHANGE = 'onreadystatechange';
    var XMLHttpRequestPrototype = XMLHttpRequest.prototype;
    var xhrDesc = api.ObjectGetOwnPropertyDescriptor(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE);
    // add enumerable and configurable here because in opera
    // by default XMLHttpRequest.prototype.onreadystatechange is undefined
    // without adding enumerable and configurable will cause onreadystatechange
    // non-configurable
    // and if XMLHttpRequest.prototype.onreadystatechange is undefined,
    // we should set a real desc instead a fake one
    if (xhrDesc) {
        api.ObjectDefineProperty(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE, {
            enumerable: true,
            configurable: true,
            get: function () {
                return true;
            }
        });
        var req = new XMLHttpRequest();
        var result = !!req.onreadystatechange;
        // restore original desc
        api.ObjectDefineProperty(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE, xhrDesc || {});
        return result;
    }
    else {
        var SYMBOL_FAKE_ONREADYSTATECHANGE_1 = api.symbol('fake');
        api.ObjectDefineProperty(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE, {
            enumerable: true,
            configurable: true,
            get: function () {
                return this[SYMBOL_FAKE_ONREADYSTATECHANGE_1];
            },
            set: function (value) {
                this[SYMBOL_FAKE_ONREADYSTATECHANGE_1] = value;
            }
        });
        var req = new XMLHttpRequest();
        var detectFunc = function () { };
        req.onreadystatechange = detectFunc;
        var result = req[SYMBOL_FAKE_ONREADYSTATECHANGE_1] === detectFunc;
        req.onreadystatechange = null;
        return result;
    }
}
// Whenever any eventListener fires, we check the eventListener target and all parents
// for `onwhatever` properties and replace them with zone-bound functions
// - Chrome (for now)
function patchViaCapturingAllTheEvents(api) {
    var eventNames = api.getGlobalObjects().eventNames;
    var unboundKey = api.symbol('unbound');
    var _loop_1 = function (i) {
        var property = eventNames[i];
        var onproperty = 'on' + property;
        self.addEventListener(property, function (event) {
            var elt = event.target, bound, source;
            if (elt) {
                source = elt.constructor['name'] + '.' + onproperty;
            }
            else {
                source = 'unknown.' + onproperty;
            }
            while (elt) {
                if (elt[onproperty] && !elt[onproperty][unboundKey]) {
                    bound = api.wrapWithCurrentZone(elt[onproperty], source);
                    bound[unboundKey] = elt[onproperty];
                    elt[onproperty] = bound;
                }
                elt = elt.parentElement;
            }
        }, true);
    };
    for (var i = 0; i < eventNames.length; i++) {
        _loop_1(i);
    }
}

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
function registerElementPatch(_global, api) {
    var _a = api.getGlobalObjects(), isBrowser = _a.isBrowser, isMix = _a.isMix;
    if ((!isBrowser && !isMix) || !('registerElement' in _global.document)) {
        return;
    }
    var callbacks = ['createdCallback', 'attachedCallback', 'detachedCallback', 'attributeChangedCallback'];
    api.patchCallbacks(api, document, 'Document', 'registerElement', callbacks);
}

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * @fileoverview
 * @suppress {missingRequire}
 */
(function (_global) {
    _global['__zone_symbol__legacyPatch'] = function () {
        var Zone = _global['Zone'];
        Zone.__load_patch('registerElement', function (global, Zone, api) {
            registerElementPatch(global, api);
        });
        Zone.__load_patch('EventTargetLegacy', function (global, Zone, api) {
            eventTargetLegacyPatch(global, api);
            propertyDescriptorLegacyPatch(api, global);
        });
    };
})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * @fileoverview
 * @suppress {missingRequire}
 */
var taskSymbol = zoneSymbol('zoneTask');
function patchTimer(window, setName, cancelName, nameSuffix) {
    var setNative = null;
    var clearNative = null;
    setName += nameSuffix;
    cancelName += nameSuffix;
    var tasksByHandleId = {};
    function scheduleTask(task) {
        var data = task.data;
        function timer() {
            try {
                task.invoke.apply(this, arguments);
            }
            finally {
                // issue-934, task will be cancelled
                // even it is a periodic task such as
                // setInterval
                if (!(task.data && task.data.isPeriodic)) {
                    if (typeof data.handleId === 'number') {
                        // in non-nodejs env, we remove timerId
                        // from local cache
                        delete tasksByHandleId[data.handleId];
                    }
                    else if (data.handleId) {
                        // Node returns complex objects as handleIds
                        // we remove task reference from timer object
                        data.handleId[taskSymbol] = null;
                    }
                }
            }
        }
        data.args[0] = timer;
        data.handleId = setNative.apply(window, data.args);
        return task;
    }
    function clearTask(task) {
        return clearNative(task.data.handleId);
    }
    setNative =
        patchMethod(window, setName, function (delegate) { return function (self, args) {
            if (typeof args[0] === 'function') {
                var options = {
                    isPeriodic: nameSuffix === 'Interval',
                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :
                        undefined,
                    args: args
                };
                var task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);
                if (!task) {
                    return task;
                }
                // Node.js must additionally support the ref and unref functions.
                var handle = task.data.handleId;
                if (typeof handle === 'number') {
                    // for non nodejs env, we save handleId: task
                    // mapping in local cache for clearTimeout
                    tasksByHandleId[handle] = task;
                }
                else if (handle) {
                    // for nodejs env, we save task
                    // reference in timerId Object for clearTimeout
                    handle[taskSymbol] = task;
                }
                // check whether handle is null, because some polyfill or browser
                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame
                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&
                    typeof handle.unref === 'function') {
                    task.ref = handle.ref.bind(handle);
                    task.unref = handle.unref.bind(handle);
                }
                if (typeof handle === 'number' || handle) {
                    return handle;
                }
                return task;
            }
            else {
                // cause an error by calling it directly.
                return delegate.apply(window, args);
            }
        }; });
    clearNative =
        patchMethod(window, cancelName, function (delegate) { return function (self, args) {
            var id = args[0];
            var task;
            if (typeof id === 'number') {
                // non nodejs env.
                task = tasksByHandleId[id];
            }
            else {
                // nodejs env.
                task = id && id[taskSymbol];
                // other environments.
                if (!task) {
                    task = id;
                }
            }
            if (task && typeof task.type === 'string') {
                if (task.state !== 'notScheduled' &&
                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {
                    if (typeof id === 'number') {
                        delete tasksByHandleId[id];
                    }
                    else if (id) {
                        id[taskSymbol] = null;
                    }
                    // Do not cancel already canceled functions
                    task.zone.cancelTask(task);
                }
            }
            else {
                // cause an error by calling it directly.
                delegate.apply(window, args);
            }
        }; });
}

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
function patchCustomElements(_global, api) {
    var _a = api.getGlobalObjects(), isBrowser = _a.isBrowser, isMix = _a.isMix;
    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {
        return;
    }
    var callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];
    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);
}

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
function eventTargetPatch(_global, api) {
    if (Zone[api.symbol('patchEventTarget')]) {
        // EventTarget is already patched.
        return;
    }
    var _a = api.getGlobalObjects(), eventNames = _a.eventNames, zoneSymbolEventNames = _a.zoneSymbolEventNames, TRUE_STR = _a.TRUE_STR, FALSE_STR = _a.FALSE_STR, ZONE_SYMBOL_PREFIX = _a.ZONE_SYMBOL_PREFIX;
    //  predefine all __zone_symbol__ + eventName + true/false string
    for (var i = 0; i < eventNames.length; i++) {
        var eventName = eventNames[i];
        var falseEventName = eventName + FALSE_STR;
        var trueEventName = eventName + TRUE_STR;
        var symbol = ZONE_SYMBOL_PREFIX + falseEventName;
        var symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;
        zoneSymbolEventNames[eventName] = {};
        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;
        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;
    }
    var EVENT_TARGET = _global['EventTarget'];
    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {
        return;
    }
    api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);
    return true;
}
function patchEvent$1(global, api) {
    api.patchEventPrototype(global, api);
}

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * @fileoverview
 * @suppress {missingRequire}
 */
Zone.__load_patch('legacy', function (global) {
    var legacyPatch = global[Zone.__symbol__('legacyPatch')];
    if (legacyPatch) {
        legacyPatch();
    }
});
Zone.__load_patch('timers', function (global) {
    var set = 'set';
    var clear = 'clear';
    patchTimer(global, set, clear, 'Timeout');
    patchTimer(global, set, clear, 'Interval');
    patchTimer(global, set, clear, 'Immediate');
});
Zone.__load_patch('requestAnimationFrame', function (global) {
    patchTimer(global, 'request', 'cancel', 'AnimationFrame');
    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');
    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');
});
Zone.__load_patch('blocking', function (global, Zone) {
    var blockingMethods = ['alert', 'prompt', 'confirm'];
    for (var i = 0; i < blockingMethods.length; i++) {
        var name_1 = blockingMethods[i];
        patchMethod(global, name_1, function (delegate, symbol, name) {
            return function (s, args) {
                return Zone.current.run(delegate, global, args, name);
            };
        });
    }
});
Zone.__load_patch('EventTarget', function (global, Zone, api) {
    patchEvent$1(global, api);
    eventTargetPatch(global, api);
    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener
    var XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];
    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {
        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);
    }
    patchClass('MutationObserver');
    patchClass('WebKitMutationObserver');
    patchClass('IntersectionObserver');
    patchClass('FileReader');
});
Zone.__load_patch('on_property', function (global, Zone, api) {
    propertyDescriptorPatch(api, global);
    propertyPatch();
});
Zone.__load_patch('customElements', function (global, Zone, api) {
    patchCustomElements(global, api);
});
Zone.__load_patch('XHR', function (global, Zone) {
    // Treat XMLHttpRequest as a macrotask.
    patchXHR(global);
    var XHR_TASK = zoneSymbol('xhrTask');
    var XHR_SYNC = zoneSymbol('xhrSync');
    var XHR_LISTENER = zoneSymbol('xhrListener');
    var XHR_SCHEDULED = zoneSymbol('xhrScheduled');
    var XHR_URL = zoneSymbol('xhrURL');
    var XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');
    function patchXHR(window) {
        var XMLHttpRequest = window['XMLHttpRequest'];
        if (!XMLHttpRequest) {
            // XMLHttpRequest is not available in service worker
            return;
        }
        var XMLHttpRequestPrototype = XMLHttpRequest.prototype;
        function findPendingTask(target) {
            return target[XHR_TASK];
        }
        var oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];
        var oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];
        if (!oriAddListener) {
            var XMLHttpRequestEventTarget_1 = window['XMLHttpRequestEventTarget'];
            if (XMLHttpRequestEventTarget_1) {
                var XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget_1.prototype;
                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];
                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];
            }
        }
        var READY_STATE_CHANGE = 'readystatechange';
        var SCHEDULED = 'scheduled';
        function scheduleTask(task) {
            var data = task.data;
            var target = data.target;
            target[XHR_SCHEDULED] = false;
            target[XHR_ERROR_BEFORE_SCHEDULED] = false;
            // remove existing event listener
            var listener = target[XHR_LISTENER];
            if (!oriAddListener) {
                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];
                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];
            }
            if (listener) {
                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);
            }
            var newListener = target[XHR_LISTENER] = function () {
                if (target.readyState === target.DONE) {
                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with
                    // readyState=4 multiple times, so we need to check task state here
                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {
                        // check whether the xhr has registered onload listener
                        // if that is the case, the task should invoke after all
                        // onload listeners finish.
                        var loadTasks = target['__zone_symbol__loadfalse'];
                        if (loadTasks && loadTasks.length > 0) {
                            var oriInvoke_1 = task.invoke;
                            task.invoke = function () {
                                // need to load the tasks again, because in other
                                // load listener, they may remove themselves
                                var loadTasks = target['__zone_symbol__loadfalse'];
                                for (var i = 0; i < loadTasks.length; i++) {
                                    if (loadTasks[i] === task) {
                                        loadTasks.splice(i, 1);
                                    }
                                }
                                if (!data.aborted && task.state === SCHEDULED) {
                                    oriInvoke_1.call(task);
                                }
                            };
                            loadTasks.push(task);
                        }
                        else {
                            task.invoke();
                        }
                    }
                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {
                        // error occurs when xhr.send()
                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;
                    }
                }
            };
            oriAddListener.call(target, READY_STATE_CHANGE, newListener);
            var storedTask = target[XHR_TASK];
            if (!storedTask) {
                target[XHR_TASK] = task;
            }
            sendNative.apply(target, data.args);
            target[XHR_SCHEDULED] = true;
            return task;
        }
        function placeholderCallback() { }
        function clearTask(task) {
            var data = task.data;
            // Note - ideally, we would call data.target.removeEventListener here, but it's too late
            // to prevent it from firing. So instead, we store info for the event listener.
            data.aborted = true;
            return abortNative.apply(data.target, data.args);
        }
        var openNative = patchMethod(XMLHttpRequestPrototype, 'open', function () { return function (self, args) {
            self[XHR_SYNC] = args[2] == false;
            self[XHR_URL] = args[1];
            return openNative.apply(self, args);
        }; });
        var XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';
        var fetchTaskAborting = zoneSymbol('fetchTaskAborting');
        var fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');
        var sendNative = patchMethod(XMLHttpRequestPrototype, 'send', function () { return function (self, args) {
            if (Zone.current[fetchTaskScheduling] === true) {
                // a fetch is scheduling, so we are using xhr to polyfill fetch
                // and because we already schedule macroTask for fetch, we should
                // not schedule a macroTask for xhr again
                return sendNative.apply(self, args);
            }
            if (self[XHR_SYNC]) {
                // if the XHR is sync there is no task to schedule, just execute the code.
                return sendNative.apply(self, args);
            }
            else {
                var options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };
                var task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);
                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&
                    task.state === SCHEDULED) {
                    // xhr request throw error when send
                    // we should invoke task instead of leaving a scheduled
                    // pending macroTask
                    task.invoke();
                }
            }
        }; });
        var abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', function () { return function (self, args) {
            var task = findPendingTask(self);
            if (task && typeof task.type == 'string') {
                // If the XHR has already completed, do nothing.
                // If the XHR has already been aborted, do nothing.
                // Fix #569, call abort multiple times before done will cause
                // macroTask task count be negative number
                if (task.cancelFn == null || (task.data && task.data.aborted)) {
                    return;
                }
                task.zone.cancelTask(task);
            }
            else if (Zone.current[fetchTaskAborting] === true) {
                // the abort is called from fetch polyfill, we need to call native abort of XHR.
                return abortNative.apply(self, args);
            }
            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no
            // task
            // to cancel. Do nothing.
        }; });
    }
});
Zone.__load_patch('geolocation', function (global) {
    /// GEO_LOCATION
    if (global['navigator'] && global['navigator'].geolocation) {
        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);
    }
});
Zone.__load_patch('PromiseRejectionEvent', function (global, Zone) {
    // handle unhandled promise rejection
    function findPromiseRejectionHandler(evtName) {
        return function (e) {
            var eventTasks = findEventTasks(global, evtName);
            eventTasks.forEach(function (eventTask) {
                // windows has added unhandledrejection event listener
                // trigger the event listener
                var PromiseRejectionEvent = global['PromiseRejectionEvent'];
                if (PromiseRejectionEvent) {
                    var evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });
                    eventTask.invoke(evt);
                }
            });
        };
    }
    if (global['PromiseRejectionEvent']) {
        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =
            findPromiseRejectionHandler('unhandledrejection');
        Zone[zoneSymbol('rejectionHandledHandler')] =
            findPromiseRejectionHandler('rejectionhandled');
    }
});

/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

})));


/***/ }),

/***/ "./src/$$_lazy_route_resource lazy recursive":
/*!**********************************************************!*\
  !*** ./src/$$_lazy_route_resource lazy namespace object ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./src/$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./src/app/cdk-virtual-scroll.ts":
/*!***************************************!*\
  !*** ./src/app/cdk-virtual-scroll.ts ***!
  \***************************************/
/*! exports provided: CdkVirtualScrollOverviewExample */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkVirtualScrollOverviewExample", function() { return CdkVirtualScrollOverviewExample; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

/** @title Basic virtual scroll */
var CdkVirtualScrollOverviewExample = /** @class */ (function () {
    function CdkVirtualScrollOverviewExample() {
        this.items = new Array(1000000).fill(undefined).map(function (_, i) { return "Item #" + i; });
    }
    CdkVirtualScrollOverviewExample = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: "cdk-virtual-scroll",
            template: "\n    <cdk-virtual-scroll-viewport itemSize=\"20\" class=\"example-viewport\">\n      <div *cdkVirtualFor=\"let item of items\" class=\"example-item\">\n        {{ item }}\n      </div>\n    </cdk-virtual-scroll-viewport>\n  ",
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: ["\n      .example-viewport {\n        height: 700px;\n        width: 200px;\n        border: 1px solid black;\n      }\n    ", "\n      .example-item {\n        height: 20px;\n      }\n    "]
        })
    ], CdkVirtualScrollOverviewExample);
    return CdkVirtualScrollOverviewExample;
}());



/***/ }),

/***/ "./src/app/data.service.ts":
/*!*********************************!*\
  !*** ./src/app/data.service.ts ***!
  \*********************************/
/*! exports provided: DataService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataService", function() { return DataService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var DataService = /** @class */ (function () {
    function DataService() {
    }
    DataService.prototype.getData = function () {
        return {
            "element": "vscode",
            "collapsible": true,
            "collapsed": false,
            "children": [
                { "element": ".build" },
                { "element": ".editorconfig" },
                { "element": ".eslintrc.json" },
                { "element": ".git" },
                { "element": ".gitattributes" },
                {
                    "element": ".github",
                    "collapsible": true,
                    "collapsed": false,
                    "children": [
                        {
                            "element": "ISSUE_TEMPLATE",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "bug_report.md" },
                                { "element": "feature_request.md" },
                                { "element": "question.md" }
                            ]
                        },
                        { "element": "calendar.yml" },
                        { "element": "classifier.yml" },
                        { "element": "commands.yml" },
                        { "element": "copycat.yml" },
                        {
                            "element": "endgame",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [{ "element": "insiders.yml" }]
                        },
                        { "element": "insiders.yml" },
                        { "element": "locker.yml" },
                        { "element": "needs_more_info.yml" },
                        { "element": "new_release.yml" },
                        { "element": "similarity.yml" }
                    ]
                },
                { "element": ".gitignore" },
                { "element": ".mention-bot" },
                { "element": ".nvmrc" },
                {
                    "element": ".vscode",
                    "collapsible": true,
                    "collapsed": false,
                    "children": [
                        { "element": "cglicenses.schema.json" },
                        { "element": "cgmanifest.schema.json" },
                        { "element": "extensions.json" },
                        { "element": "launch.json" },
                        { "element": "settings.json" },
                        { "element": "shared.code-snippets" },
                        { "element": "tasks.json" }
                    ]
                },
                { "element": ".yarnrc" },
                { "element": "CONTRIBUTING.md" },
                { "element": "LICENSE.txt" },
                { "element": "README.md" },
                { "element": "ThirdPartyNotices.txt" },
                { "element": "azure-pipelines.yml" },
                {
                    "element": "build",
                    "collapsible": true,
                    "collapsed": false,
                    "children": [
                        { "element": ".nativeignore" },
                        {
                            "element": "azure-pipelines",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": "common",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".gitignore" },
                                        { "element": "extract-telemetry.sh" },
                                        { "element": "installDistroDependencies.ts" },
                                        { "element": "publish.ts" },
                                        { "element": "release.ts" },
                                        { "element": "symbols.ts" },
                                        { "element": "sync-mooncake.ts" }
                                    ]
                                },
                                { "element": "compile.yml" },
                                {
                                    "element": "darwin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "continuous-build-darwin.yml" },
                                        { "element": "product-build-darwin.yml" },
                                        { "element": "publish.sh" }
                                    ]
                                },
                                { "element": "distro-build.yml" },
                                {
                                    "element": "linux",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".gitignore" },
                                        { "element": "build-alpine.sh" },
                                        { "element": "build-arm.sh" },
                                        { "element": "continuous-build-linux.yml" },
                                        { "element": "frozen-check.js" },
                                        { "element": "prebuild-alpine.sh" },
                                        { "element": "prebuild-arm.sh" },
                                        { "element": "product-build-linux-alpine.yml" },
                                        { "element": "product-build-linux-arm.yml" },
                                        { "element": "product-build-linux.yml" },
                                        { "element": "publish-alpine.sh" },
                                        { "element": "publish-arm.sh" },
                                        { "element": "publish.sh" },
                                        { "element": "snap-build-linux.yml" },
                                        { "element": "xvfb.init" }
                                    ]
                                },
                                { "element": "product-build.yml" },
                                {
                                    "element": "publish-types",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".gitignore" },
                                        { "element": "check-version.ts" },
                                        { "element": "publish-types.yml" },
                                        { "element": "update-types.ts" }
                                    ]
                                },
                                { "element": "release.yml" },
                                { "element": "sync-mooncake.yml" },
                                {
                                    "element": "win32",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ESRPClient" },
                                        { "element": "continuous-build-win32.yml" },
                                        { "element": "exec.ps1" },
                                        { "element": "import-esrp-auth-cert.ps1" },
                                        { "element": "product-build-win32.yml" },
                                        { "element": "publish.ps1" },
                                        { "element": "sign.ps1" }
                                    ]
                                }
                            ]
                        },
                        { "element": "builtInExtensions.json" },
                        {
                            "element": "builtin",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintrc" },
                                { "element": "browser-main.js" },
                                { "element": "index.html" },
                                { "element": "main.js" },
                                { "element": "package.json" }
                            ]
                        },
                        { "element": "dependencies.js" },
                        { "element": "gulpfile.compile.js" },
                        { "element": "gulpfile.editor.js" },
                        { "element": "gulpfile.extensions.js" },
                        { "element": "gulpfile.hygiene.js" },
                        { "element": "gulpfile.mixin.js" },
                        { "element": "gulpfile.reh.js" },
                        { "element": "gulpfile.vscode.js" },
                        { "element": "gulpfile.vscode.linux.js" },
                        { "element": "gulpfile.vscode.win32.js" },
                        { "element": "jsconfig.json" },
                        {
                            "element": "lib",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "asar.js" },
                                { "element": "asar.ts" },
                                { "element": "builtInExtensions.js" },
                                { "element": "bundle.js" },
                                { "element": "bundle.ts" },
                                { "element": "compilation.js" },
                                { "element": "compilation.ts" },
                                { "element": "electron.js" },
                                { "element": "extensions.js" },
                                { "element": "extensions.ts" },
                                { "element": "git.js" },
                                { "element": "git.ts" },
                                { "element": "i18n.js" },
                                { "element": "i18n.resources.json" },
                                { "element": "i18n.ts" },
                                { "element": "nls.js" },
                                { "element": "nls.ts" },
                                { "element": "node.js" },
                                { "element": "node.ts" },
                                { "element": "optimize.js" },
                                { "element": "optimize.ts" },
                                { "element": "reporter.js" },
                                { "element": "reporter.ts" },
                                { "element": "snapshotLoader.js" },
                                { "element": "snapshotLoader.ts" },
                                { "element": "standalone.js" },
                                { "element": "standalone.ts" },
                                { "element": "stats.js" },
                                { "element": "stats.ts" },
                                { "element": "task.js" },
                                { "element": "task.ts" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "i18n.test.js" },
                                        { "element": "i18n.test.ts" }
                                    ]
                                },
                                { "element": "treeshaking.js" },
                                { "element": "treeshaking.ts" },
                                {
                                    "element": "tslint",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "duplicateImportsRule.js" },
                                        { "element": "duplicateImportsRule.ts" },
                                        { "element": "importPatternsRule.js" },
                                        { "element": "importPatternsRule.ts" },
                                        { "element": "layeringRule.js" },
                                        { "element": "layeringRule.ts" },
                                        { "element": "noNewBufferRule.js" },
                                        { "element": "noNewBufferRule.ts" },
                                        { "element": "noNlsInStandaloneEditorRule.js" },
                                        { "element": "noNlsInStandaloneEditorRule.ts" },
                                        { "element": "noStandaloneEditorRule.js" },
                                        { "element": "noStandaloneEditorRule.ts" },
                                        { "element": "noUnexternalizedStringsRule.js" },
                                        { "element": "noUnexternalizedStringsRule.ts" },
                                        { "element": "translationRemindRule.js" },
                                        { "element": "translationRemindRule.ts" }
                                    ]
                                },
                                {
                                    "element": "typings",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "cgmanifest.json" },
                                        { "element": "event-stream.d.ts" },
                                        { "element": "github-releases.d.ts" },
                                        { "element": "gulp-bom.d.ts" },
                                        { "element": "gulp-cssnano.d.ts" },
                                        { "element": "gulp-flatmap.d.ts" },
                                        { "element": "gulp-remote-src.d.ts" },
                                        { "element": "gulp-tsb.d.ts" },
                                        { "element": "is.d.ts" },
                                        { "element": "lazy.js.d.ts" },
                                        { "element": "vinyl.d.ts" }
                                    ]
                                },
                                { "element": "util.js" },
                                { "element": "util.ts" },
                                {
                                    "element": "watch",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".gitignore" },
                                        { "element": "index.js" },
                                        { "element": "package.json" },
                                        { "element": "watch-win32.js" },
                                        { "element": "watcher.exe" },
                                        { "element": "yarn.lock" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "monaco",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README-npm.md" },
                                { "element": "README.md" },
                                { "element": "ThirdPartyNotices.txt" },
                                { "element": "api.js" },
                                { "element": "api.ts" },
                                { "element": "monaco.d.ts.recipe" },
                                { "element": "monaco.usage.recipe" },
                                { "element": "package.json" },
                                { "element": "version.txt" }
                            ]
                        },
                        {
                            "element": "npm",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "postinstall.js" },
                                { "element": "preinstall.js" },
                                { "element": "update-all-grammars.js" },
                                { "element": "update-distro.js" },
                                { "element": "update-grammar.js" },
                                { "element": "update-localization-extension.js" },
                                { "element": "update-theme.js" }
                            ]
                        },
                        { "element": "package.json" },
                        { "element": "tsconfig.build.json" },
                        { "element": "tsconfig.json" },
                        { "element": "tslint.json" },
                        {
                            "element": "win32",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".gitignore" },
                                { "element": "Cargo.lock" },
                                { "element": "code.iss" },
                                {
                                    "element": "i18n",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Default.isl" },
                                        { "element": "Default.ko.isl" },
                                        { "element": "Default.zh-cn.isl" },
                                        { "element": "Default.zh-tw.isl" },
                                        { "element": "messages.de.isl" },
                                        { "element": "messages.en.isl" },
                                        { "element": "messages.es.isl" },
                                        { "element": "messages.fr.isl" },
                                        { "element": "messages.hu.isl" },
                                        { "element": "messages.it.isl" },
                                        { "element": "messages.ja.isl" },
                                        { "element": "messages.ko.isl" },
                                        { "element": "messages.pt-br.isl" },
                                        { "element": "messages.ru.isl" },
                                        { "element": "messages.tr.isl" },
                                        { "element": "messages.zh-cn.isl" },
                                        { "element": "messages.zh-tw.isl" }
                                    ]
                                },
                                { "element": "inno_updater.exe" },
                                { "element": "vcruntime140.dll" }
                            ]
                        },
                        { "element": "yarn.lock" }
                    ]
                },
                { "element": "cglicenses.json" },
                { "element": "cgmanifest.json" },
                {
                    "element": "extensions",
                    "collapsible": true,
                    "collapsed": false,
                    "children": [
                        {
                            "element": "bat",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "snippets",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "batchfile.snippets.json" }]
                                },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "batchfile.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        { "element": "cgmanifest.json" },
                        {
                            "element": "clojure",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "clojure.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "coffeescript",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "snippets",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "coffeescript.snippets.json" }]
                                },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "coffeescript.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "configuration-editing",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "extension.webpack.config.js" },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "extension.js" },
                                        { "element": "extension.js.map" },
                                        { "element": "settingsDocumentHelper.js" },
                                        { "element": "settingsDocumentHelper.js.map" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "schemas",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "devContainer.schema.json" }]
                                },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "extension.ts" },
                                        { "element": "settingsDocumentHelper.ts" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "cpp",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "update-grammars.js" }]
                                },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "snippets",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "c.json" }, { "element": "cpp.json" }]
                                },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "c.tmLanguage.json" },
                                        { "element": "cpp.tmLanguage.json" },
                                        { "element": "platform.tmLanguage.json" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "csharp",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "snippets",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "csharp.json" }]
                                },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "csharp.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "css",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": ".vscode",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "launch.json" }]
                                },
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "css.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "css-language-features",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": ".vscode",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "launch.json" },
                                        { "element": "settings.json" },
                                        { "element": "tasks.json" }
                                    ]
                                },
                                { "element": ".vscodeignore" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "README.md" },
                                {
                                    "element": "client",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "out" },
                                        { "element": "src" },
                                        { "element": "tsconfig.json" }
                                    ]
                                },
                                { "element": "extension.webpack.config.js" },
                                {
                                    "element": "icons",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "css.png" }]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "server",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".vscode" },
                                        { "element": "extension.webpack.config.js" },
                                        { "element": "out" },
                                        { "element": "package.json" },
                                        { "element": "src" },
                                        { "element": "test" },
                                        { "element": "tsconfig.json" },
                                        { "element": "yarn.lock" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "mocha.opts" }]
                                },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "debug-auto-launch",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "extension.webpack.config.js" },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "extension.js" },
                                        { "element": "extension.js.map" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "extension.ts" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "debug-server-ready",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": ".vscode",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "launch.json" }]
                                },
                                { "element": ".vscodeignore" },
                                { "element": "extension.webpack.config.js" },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "extension.js" },
                                        { "element": "extension.js.map" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "extension.ts" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "docker",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "docker.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "emmet",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": ".vscode",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "launch.json" },
                                        { "element": "settings.json" }
                                    ]
                                },
                                { "element": ".vscodeignore" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "README.md" },
                                { "element": "cgmanifest.json" },
                                { "element": "extension.webpack.config.js" },
                                {
                                    "element": "images",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "icon.png" }]
                                },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "abbreviationActions.js" },
                                        { "element": "abbreviationActions.js.map" },
                                        { "element": "balance.js" },
                                        { "element": "balance.js.map" },
                                        { "element": "bufferStream.js" },
                                        { "element": "bufferStream.js.map" },
                                        { "element": "defaultCompletionProvider.js" },
                                        { "element": "defaultCompletionProvider.js.map" },
                                        { "element": "editPoint.js" },
                                        { "element": "editPoint.js.map" },
                                        { "element": "evaluateMathExpression.js" },
                                        { "element": "evaluateMathExpression.js.map" },
                                        { "element": "extension.js" },
                                        { "element": "extension.js.map" },
                                        { "element": "imageSizeHelper.js" },
                                        { "element": "imageSizeHelper.js.map" },
                                        { "element": "incrementDecrement.js" },
                                        { "element": "incrementDecrement.js.map" },
                                        { "element": "locateFile.js" },
                                        { "element": "locateFile.js.map" },
                                        { "element": "matchTag.js" },
                                        { "element": "matchTag.js.map" },
                                        { "element": "mergeLines.js" },
                                        { "element": "mergeLines.js.map" },
                                        { "element": "reflectCssValue.js" },
                                        { "element": "reflectCssValue.js.map" },
                                        { "element": "removeTag.js" },
                                        { "element": "removeTag.js.map" },
                                        { "element": "selectItem.js" },
                                        { "element": "selectItem.js.map" },
                                        { "element": "selectItemHTML.js" },
                                        { "element": "selectItemHTML.js.map" },
                                        { "element": "selectItemStylesheet.js" },
                                        { "element": "selectItemStylesheet.js.map" },
                                        { "element": "splitJoinTag.js" },
                                        { "element": "splitJoinTag.js.map" },
                                        { "element": "test" },
                                        { "element": "toggleComment.js" },
                                        { "element": "toggleComment.js.map" },
                                        { "element": "typings" },
                                        { "element": "updateImageSize.js" },
                                        { "element": "updateImageSize.js.map" },
                                        { "element": "updateTag.js" },
                                        { "element": "updateTag.js.map" },
                                        { "element": "util.js" },
                                        { "element": "util.js.map" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "abbreviationActions.ts" },
                                        { "element": "balance.ts" },
                                        { "element": "bufferStream.ts" },
                                        { "element": "defaultCompletionProvider.ts" },
                                        { "element": "editPoint.ts" },
                                        { "element": "evaluateMathExpression.ts" },
                                        { "element": "extension.ts" },
                                        { "element": "imageSizeHelper.ts" },
                                        { "element": "incrementDecrement.ts" },
                                        { "element": "locateFile.ts" },
                                        { "element": "matchTag.ts" },
                                        { "element": "mergeLines.ts" },
                                        { "element": "reflectCssValue.ts" },
                                        { "element": "removeTag.ts" },
                                        { "element": "selectItem.ts" },
                                        { "element": "selectItemHTML.ts" },
                                        { "element": "selectItemStylesheet.ts" },
                                        { "element": "splitJoinTag.ts" },
                                        { "element": "test" },
                                        { "element": "toggleComment.ts" },
                                        { "element": "typings" },
                                        { "element": "updateImageSize.ts" },
                                        { "element": "updateTag.ts" },
                                        { "element": "util.ts" }
                                    ]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "extension-editing",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "extension.webpack.config.js" },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "extension.js" },
                                        { "element": "extension.js.map" },
                                        { "element": "extensionLinter.js" },
                                        { "element": "extensionLinter.js.map" },
                                        { "element": "packageDocumentHelper.js" },
                                        { "element": "packageDocumentHelper.js.map" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "extension.ts" },
                                        { "element": "extensionLinter.ts" },
                                        { "element": "packageDocumentHelper.ts" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "fsharp",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "snippets",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "fsharp.json" }]
                                },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "fsharp.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "git",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "README.md" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "update-grammars.js" }]
                                },
                                { "element": "cgmanifest.json" },
                                { "element": "extension.webpack.config.js" },
                                {
                                    "element": "languages",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "diff.language-configuration.json" },
                                        { "element": "git-commit.language-configuration.json" },
                                        { "element": "git-rebase.language-configuration.json" },
                                        { "element": "ignore.language-configuration.json" }
                                    ]
                                },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "api" },
                                        { "element": "askpass-empty.sh" },
                                        { "element": "askpass-main.js" },
                                        { "element": "askpass-main.js.map" },
                                        { "element": "askpass.js" },
                                        { "element": "askpass.js.map" },
                                        { "element": "askpass.sh" },
                                        { "element": "autofetch.js" },
                                        { "element": "autofetch.js.map" },
                                        { "element": "commands.js" },
                                        { "element": "commands.js.map" },
                                        { "element": "contentProvider.js" },
                                        { "element": "contentProvider.js.map" },
                                        { "element": "decorationProvider.js" },
                                        { "element": "decorationProvider.js.map" },
                                        { "element": "decorators.js" },
                                        { "element": "decorators.js.map" },
                                        { "element": "encoding.js" },
                                        { "element": "encoding.js.map" },
                                        { "element": "git.js" },
                                        { "element": "git.js.map" },
                                        { "element": "main.js" },
                                        { "element": "main.js.map" },
                                        { "element": "model.js" },
                                        { "element": "model.js.map" },
                                        { "element": "protocolHandler.js" },
                                        { "element": "protocolHandler.js.map" },
                                        { "element": "repository.js" },
                                        { "element": "repository.js.map" },
                                        { "element": "staging.js" },
                                        { "element": "staging.js.map" },
                                        { "element": "statusbar.js" },
                                        { "element": "statusbar.js.map" },
                                        { "element": "test" },
                                        { "element": "typings" },
                                        { "element": "uri.js" },
                                        { "element": "uri.js.map" },
                                        { "element": "util.js" },
                                        { "element": "util.js.map" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "resources",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "icons" }]
                                },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "api" },
                                        { "element": "askpass-empty.sh" },
                                        { "element": "askpass-main.ts" },
                                        { "element": "askpass.sh" },
                                        { "element": "askpass.ts" },
                                        { "element": "autofetch.ts" },
                                        { "element": "commands.ts" },
                                        { "element": "contentProvider.ts" },
                                        { "element": "decorationProvider.ts" },
                                        { "element": "decorators.ts" },
                                        { "element": "encoding.ts" },
                                        { "element": "git.ts" },
                                        { "element": "main.ts" },
                                        { "element": "model.ts" },
                                        { "element": "protocolHandler.ts" },
                                        { "element": "repository.ts" },
                                        { "element": "staging.ts" },
                                        { "element": "statusbar.ts" },
                                        { "element": "test" },
                                        { "element": "typings" },
                                        { "element": "uri.ts" },
                                        { "element": "util.ts" }
                                    ]
                                },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "diff.tmLanguage.json" },
                                        { "element": "git-commit.tmLanguage.json" },
                                        { "element": "git-rebase.tmLanguage.json" },
                                        { "element": "ignore.tmLanguage.json" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" },
                                        { "element": "mocha.opts" }
                                    ]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "git-ui",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "README.md" },
                                { "element": "cgmanifest.json" },
                                { "element": "extension.webpack.config.js" },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "main.js" },
                                        { "element": "main.js.map" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "resources",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "icons" }]
                                },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "main.ts" }, { "element": "typings" }]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "go",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "go.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "groovy",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "snippets",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "groovy.json" }]
                                },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "groovy.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "grunt",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "README.md" },
                                { "element": "extension.webpack.config.js" },
                                {
                                    "element": "images",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "grunt.png" }]
                                },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "main.js" },
                                        { "element": "main.js.map" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "main.ts" }, { "element": "typings" }]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "gulp",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "README.md" },
                                { "element": "extension.webpack.config.js" },
                                {
                                    "element": "images",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "gulp.png" }]
                                },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "main.js" },
                                        { "element": "main.js.map" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "main.ts" }, { "element": "typings" }]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "handlebars",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "Handlebars.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "hlsl",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "hlsl.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "html",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "html-derivative.tmLanguage.json" },
                                        { "element": "html.tmLanguage.json" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "html-language-features",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": ".vscode",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "launch.json" },
                                        { "element": "settings.json" },
                                        { "element": "tasks.json" }
                                    ]
                                },
                                { "element": ".vscodeignore" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "README.md" },
                                { "element": "cgmanifest.json" },
                                {
                                    "element": "client",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "out" },
                                        { "element": "src" },
                                        { "element": "tsconfig.json" }
                                    ]
                                },
                                { "element": "extension.webpack.config.js" },
                                {
                                    "element": "icons",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "html.png" }]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "server",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".vscode" },
                                        { "element": "extension.webpack.config.js" },
                                        { "element": "lib" },
                                        { "element": "out" },
                                        { "element": "package.json" },
                                        { "element": "src" },
                                        { "element": "test" },
                                        { "element": "tsconfig.json" },
                                        { "element": "yarn.lock" }
                                    ]
                                },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "ini",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "ini.language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                { "element": "properties.language-configuration.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "ini.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "jake",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "README.md" },
                                { "element": "extension.webpack.config.js" },
                                {
                                    "element": "images",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "cowboy_hat.png" }]
                                },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "main.js" },
                                        { "element": "main.js.map" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "main.ts" }, { "element": "typings" }]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "java",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "snippets",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "java.snippets.json" }]
                                },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "java.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "javascript",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "javascript-language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "schemas",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "jsconfig.schema.json" }]
                                },
                                {
                                    "element": "snippets",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "javascript.json" }]
                                },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "JavaScript.tmLanguage.json" },
                                        { "element": "JavaScriptReact.tmLanguage.json" },
                                        { "element": "Readme.md" },
                                        { "element": "Regular Expressions (JavaScript).tmLanguage" }
                                    ]
                                },
                                { "element": "tags-language-configuration.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "json",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "update-grammars.js" }]
                                },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "JSON.tmLanguage.json" },
                                        { "element": "JSONC.tmLanguage.json" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "json-language-features",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": ".vscode",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "launch.json" },
                                        { "element": "tasks.json" }
                                    ]
                                },
                                { "element": ".vscodeignore" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "README.md" },
                                {
                                    "element": "client",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "out" },
                                        { "element": "src" },
                                        { "element": "tsconfig.json" }
                                    ]
                                },
                                { "element": "extension.webpack.config.js" },
                                {
                                    "element": "icons",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "json.png" }]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "server",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".npmignore" },
                                        { "element": ".vscode" },
                                        { "element": "README.md" },
                                        { "element": "bin" },
                                        { "element": "extension.webpack.config.js" },
                                        { "element": "out" },
                                        { "element": "package.json" },
                                        { "element": "src" },
                                        { "element": "test" },
                                        { "element": "tsconfig.json" },
                                        { "element": "yarn.lock" }
                                    ]
                                },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "less",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "less.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "log",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "log.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "lua",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "lua.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "make",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "make.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "markdown-basics",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "snippets",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "markdown.json" }]
                                },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "markdown.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "markdown-language-features",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "README.md" },
                                { "element": "cgmanifest.json" },
                                { "element": "extension.webpack.config.js" },
                                { "element": "icon.png" },
                                {
                                    "element": "media",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "highlight.css" },
                                        { "element": "index.js" },
                                        { "element": "markdown.css" },
                                        { "element": "pre.js" },
                                        { "element": "preview-dark.svg" },
                                        { "element": "preview-light.svg" },
                                        { "element": "preview-right-dark.svg" },
                                        { "element": "preview-right-light.svg" },
                                        { "element": "view-source-dark.svg" },
                                        { "element": "view-source-light.svg" }
                                    ]
                                },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "commandManager.js" },
                                        { "element": "commandManager.js.map" },
                                        { "element": "commands" },
                                        { "element": "extension.js" },
                                        { "element": "extension.js.map" },
                                        { "element": "features" },
                                        { "element": "logger.js" },
                                        { "element": "logger.js.map" },
                                        { "element": "markdownEngine.js" },
                                        { "element": "markdownEngine.js.map" },
                                        { "element": "markdownExtensions.js" },
                                        { "element": "markdownExtensions.js.map" },
                                        { "element": "security.js" },
                                        { "element": "security.js.map" },
                                        { "element": "slugify.js" },
                                        { "element": "slugify.js.map" },
                                        { "element": "tableOfContentsProvider.js" },
                                        { "element": "tableOfContentsProvider.js.map" },
                                        { "element": "telemetryReporter.js" },
                                        { "element": "telemetryReporter.js.map" },
                                        { "element": "test" },
                                        { "element": "typings" },
                                        { "element": "util" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "preview-src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "activeLineMarker.ts" },
                                        { "element": "csp.ts" },
                                        { "element": "events.ts" },
                                        { "element": "index.ts" },
                                        { "element": "loading.ts" },
                                        { "element": "messaging.ts" },
                                        { "element": "pre.ts" },
                                        { "element": "scroll-sync.ts" },
                                        { "element": "settings.ts" },
                                        { "element": "strings.ts" },
                                        { "element": "tsconfig.json" }
                                    ]
                                },
                                {
                                    "element": "schemas",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "package.schema.json" }]
                                },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "commandManager.ts" },
                                        { "element": "commands" },
                                        { "element": "extension.ts" },
                                        { "element": "features" },
                                        { "element": "logger.ts" },
                                        { "element": "markdownEngine.ts" },
                                        { "element": "markdownExtensions.ts" },
                                        { "element": "security.ts" },
                                        { "element": "slugify.ts" },
                                        { "element": "tableOfContentsProvider.ts" },
                                        { "element": "telemetryReporter.ts" },
                                        { "element": "test" },
                                        { "element": "typings" },
                                        { "element": "util" }
                                    ]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "webpack.config.js" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "merge-conflict",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "README.md" },
                                { "element": "extension.webpack.config.js" },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "codelensProvider.js" },
                                        { "element": "codelensProvider.js.map" },
                                        { "element": "commandHandler.js" },
                                        { "element": "commandHandler.js.map" },
                                        { "element": "contentProvider.js" },
                                        { "element": "contentProvider.js.map" },
                                        { "element": "delayer.js" },
                                        { "element": "delayer.js.map" },
                                        { "element": "documentMergeConflict.js" },
                                        { "element": "documentMergeConflict.js.map" },
                                        { "element": "documentTracker.js" },
                                        { "element": "documentTracker.js.map" },
                                        { "element": "extension.js" },
                                        { "element": "extension.js.map" },
                                        { "element": "interfaces.js" },
                                        { "element": "interfaces.js.map" },
                                        { "element": "mergeConflictParser.js" },
                                        { "element": "mergeConflictParser.js.map" },
                                        { "element": "mergeDecorator.js" },
                                        { "element": "mergeDecorator.js.map" },
                                        { "element": "services.js" },
                                        { "element": "services.js.map" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "resources",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "icons" }]
                                },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "codelensProvider.ts" },
                                        { "element": "commandHandler.ts" },
                                        { "element": "contentProvider.ts" },
                                        { "element": "delayer.ts" },
                                        { "element": "documentMergeConflict.ts" },
                                        { "element": "documentTracker.ts" },
                                        { "element": "extension.ts" },
                                        { "element": "interfaces.ts" },
                                        { "element": "mergeConflictParser.ts" },
                                        { "element": "mergeDecorator.ts" },
                                        { "element": "services.ts" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "npm",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": ".vscode",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "launch.json" },
                                        { "element": "tasks.json" }
                                    ]
                                },
                                { "element": ".vscodeignore" },
                                { "element": "README.md" },
                                { "element": "extension.webpack.config.js" },
                                {
                                    "element": "images",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "npm_icon.png" }]
                                },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "commands.js" },
                                        { "element": "commands.js.map" },
                                        { "element": "features" },
                                        { "element": "main.js" },
                                        { "element": "main.js.map" },
                                        { "element": "npmView.js" },
                                        { "element": "npmView.js.map" },
                                        { "element": "scriptHover.js" },
                                        { "element": "scriptHover.js.map" },
                                        { "element": "tasks.js" },
                                        { "element": "tasks.js.map" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "resources",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "dark" }, { "element": "light" }]
                                },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "commands.ts" },
                                        { "element": "features" },
                                        { "element": "main.ts" },
                                        { "element": "npmView.ts" },
                                        { "element": "scriptHover.ts" },
                                        { "element": "tasks.ts" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "objective-c",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "update-grammars.js" }]
                                },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "objective-c++.tmLanguage.json" },
                                        { "element": "objective-c.tmLanguage.json" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        { "element": "package.json" },
                        {
                            "element": "perl",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                { "element": "perl.language-configuration.json" },
                                { "element": "perl6.language-configuration.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "perl.tmLanguage.json" },
                                        { "element": "perl6.tmLanguage.json" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "php",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": ".vscode",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "launch.json" },
                                        { "element": "tasks.json" }
                                    ]
                                },
                                { "element": ".vscodeignore" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "update-grammar.js" }]
                                },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "snippets",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "php.snippets.json" }]
                                },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "html.tmLanguage.json" },
                                        { "element": "php.tmLanguage.json" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "php-language-features",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "README.md" },
                                { "element": "extension.webpack.config.js" },
                                {
                                    "element": "icons",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "logo.png" }]
                                },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "features" },
                                        { "element": "phpMain.js" },
                                        { "element": "phpMain.js.map" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "features" },
                                        { "element": "phpMain.ts" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        { "element": "postinstall.js" },
                        {
                            "element": "powershell",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "snippets",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "powershell.json" }]
                                },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "powershell.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "pug",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "pug.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "python",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": ".vscode",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "launch.json" },
                                        { "element": "tasks.json" }
                                    ]
                                },
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "pythonMain.js" },
                                        { "element": "pythonMain.js.map" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "pythonMain.ts" },
                                        { "element": "typings" }
                                    ]
                                },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "MagicPython.tmLanguage.json" },
                                        { "element": "MagicRegExp.tmLanguage.json" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                },
                                { "element": "tsconfig.json" }
                            ]
                        },
                        {
                            "element": "r",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "r.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "razor",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "cshtml.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "ruby",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "ruby.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "rust",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "rust.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "scss",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "sassdoc.tmLanguage.json" },
                                        { "element": "scss.tmLanguage.json" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "shaderlab",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "shaderlab.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        { "element": "shared.tsconfig.json" },
                        { "element": "shared.webpack.config.js" },
                        {
                            "element": "shellscript",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "shell-unix-bash.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "sql",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "sql.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "swift",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "LICENSE.md" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "snippets",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "swift.json" }]
                                },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "swift.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "theme-abyss",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "themes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "abyss-color-theme.json" }]
                                }
                            ]
                        },
                        {
                            "element": "theme-defaults",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": "fileicons",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "images" },
                                        { "element": "vs_minimal-icon-theme.json" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "themes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "dark_defaults.json" },
                                        { "element": "dark_plus.json" },
                                        { "element": "dark_vs.json" },
                                        { "element": "hc_black.json" },
                                        { "element": "hc_black_defaults.json" },
                                        { "element": "light_defaults.json" },
                                        { "element": "light_plus.json" },
                                        { "element": "light_vs.json" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "theme-kimbie-dark",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "themes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "kimbie-dark-color-theme.json" }]
                                }
                            ]
                        },
                        {
                            "element": "theme-monokai",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "themes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "monokai-color-theme.json" }]
                                }
                            ]
                        },
                        {
                            "element": "theme-monokai-dimmed",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "themes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "dimmed-monokai-color-theme.json" }]
                                }
                            ]
                        },
                        {
                            "element": "theme-quietlight",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "themes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "quietlight-color-theme.json" }]
                                }
                            ]
                        },
                        {
                            "element": "theme-red",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "themes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "Red-color-theme.json" }]
                                }
                            ]
                        },
                        {
                            "element": "theme-seti",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "ThirdPartyNotices.txt" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "update-icon-theme.js" }]
                                },
                                { "element": "cgmanifest.json" },
                                {
                                    "element": "icons",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "seti-circular-128x128.png" },
                                        { "element": "seti.woff" },
                                        { "element": "vs-seti-icon-theme.json" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" }
                            ]
                        },
                        {
                            "element": "theme-solarized-dark",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "themes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "solarized-dark-color-theme.json" }]
                                }
                            ]
                        },
                        {
                            "element": "theme-solarized-light",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "themes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "solarized-light-color-theme.json" }]
                                }
                            ]
                        },
                        {
                            "element": "theme-tomorrow-night-blue",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "themes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "tomorrow-night-blue-theme.json" }]
                                }
                            ]
                        },
                        {
                            "element": "typescript-basics",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "update-grammars.js" }]
                                },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "schemas",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "tsconfig.schema.json" }]
                                },
                                {
                                    "element": "snippets",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "typescript.json" }]
                                },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Readme.md" },
                                        { "element": "TypeScript.tmLanguage.json" },
                                        { "element": "TypeScriptReact.tmLanguage.json" },
                                        { "element": "jsdoc.injection.tmLanguage.json" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "typescript-language-features",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "README.md" },
                                { "element": "cgmanifest.json" },
                                { "element": "extension.webpack.config.js" },
                                { "element": "icon.png" },
                                { "element": "language-configuration.json" },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "api.js" },
                                        { "element": "api.js.map" },
                                        { "element": "commands" },
                                        { "element": "extension.js" },
                                        { "element": "extension.js.map" },
                                        { "element": "features" },
                                        { "element": "languageProvider.js" },
                                        { "element": "languageProvider.js.map" },
                                        { "element": "protocol.const.js" },
                                        { "element": "protocol.const.js.map" },
                                        { "element": "test" },
                                        { "element": "tsServer" },
                                        { "element": "typeScriptServiceClientHost.js" },
                                        { "element": "typeScriptServiceClientHost.js.map" },
                                        { "element": "typescriptService.js" },
                                        { "element": "typescriptService.js.map" },
                                        { "element": "typescriptServiceClient.js" },
                                        { "element": "typescriptServiceClient.js.map" },
                                        { "element": "typings" },
                                        { "element": "utils" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "schemas",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "package.schema.json" }]
                                },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "api.ts" },
                                        { "element": "commands" },
                                        { "element": "extension.ts" },
                                        { "element": "features" },
                                        { "element": "languageProvider.ts" },
                                        { "element": "protocol.const.ts" },
                                        { "element": "protocol.d.ts" },
                                        { "element": "test" },
                                        { "element": "tsServer" },
                                        { "element": "typeScriptServiceClientHost.ts" },
                                        { "element": "typescriptService.ts" },
                                        { "element": "typescriptServiceClient.ts" },
                                        { "element": "typings" },
                                        { "element": "utils" }
                                    ]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "vb",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "snippets",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "vb.json" }]
                                },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "asp-vb-net.tmlanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "vscode-api-tests",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".gitignore" },
                                {
                                    "element": ".vscode",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "launch.json" },
                                        { "element": "tasks.json" }
                                    ]
                                },
                                { "element": ".vscodeignore" },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "singlefolder-tests" },
                                        { "element": "typings" },
                                        { "element": "utils.js" },
                                        { "element": "utils.js.map" },
                                        { "element": "workspace-tests" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "singlefolder-tests" },
                                        { "element": "typings" },
                                        { "element": "utils.ts" },
                                        { "element": "workspace-tests" }
                                    ]
                                },
                                {
                                    "element": "testWorkspace",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "10linefile.ts" },
                                        { "element": "30linefile.ts" },
                                        { "element": "bower.json" },
                                        { "element": "far.js" },
                                        { "element": "image.png" },
                                        { "element": "simple.txt" },
                                        { "element": "sub" }
                                    ]
                                },
                                {
                                    "element": "testWorkspace2",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "simple.txt" }]
                                },
                                { "element": "testworkspace.code-workspace" },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "vscode-colorize-tests",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".gitignore" },
                                {
                                    "element": ".vscode",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "launch.json" },
                                        { "element": "tasks.json" }
                                    ]
                                },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorizer.test.js" },
                                        { "element": "colorizer.test.js.map" },
                                        { "element": "index.js" },
                                        { "element": "index.js.map" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorizer.test.ts" },
                                        { "element": "index.ts" },
                                        { "element": "typings" }
                                    ]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "vscode-test-resolver",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".gitignore" },
                                {
                                    "element": ".vscode",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "launch.json" }]
                                },
                                { "element": ".vscodeignore" },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "download.js" },
                                        { "element": "download.js.map" },
                                        { "element": "extension.js" },
                                        { "element": "extension.js.map" },
                                        { "element": "typings" },
                                        { "element": "util" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "scripts",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "terminateProcess.sh" }]
                                },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "download.ts" },
                                        { "element": "extension.ts" },
                                        { "element": "typings" },
                                        { "element": "util" }
                                    ]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "xml",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "xml.tmLanguage.json" },
                                        { "element": "xsl.tmLanguage.json" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                },
                                { "element": "xml.language-configuration.json" },
                                { "element": "xsl.language-configuration.json" }
                            ]
                        },
                        {
                            "element": "yaml",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".gitignore" },
                                { "element": ".vscodeignore" },
                                { "element": "cgmanifest.json" },
                                { "element": "language-configuration.json" },
                                { "element": "package.json" },
                                { "element": "package.nls.json" },
                                {
                                    "element": "syntaxes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "yaml.tmLanguage.json" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colorize-fixtures" },
                                        { "element": "colorize-results" }
                                    ]
                                }
                            ]
                        },
                        { "element": "yarn.lock" }
                    ]
                },
                { "element": "gulpfile.js" },
                {
                    "element": "node_modules",
                    "collapsible": true,
                    "collapsed": false,
                    "children": [
                        {
                            "element": ".bin",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "7z" },
                                { "element": "7z.cmd" },
                                { "element": "_mocha" },
                                { "element": "_mocha.cmd" },
                                { "element": "acorn" },
                                { "element": "acorn.cmd" },
                                { "element": "asar" },
                                { "element": "asar.cmd" },
                                { "element": "atob" },
                                { "element": "atob.cmd" },
                                { "element": "browserslist" },
                                { "element": "browserslist.cmd" },
                                { "element": "cake" },
                                { "element": "cake.cmd" },
                                { "element": "chrome-remote-interface" },
                                { "element": "chrome-remote-interface.cmd" },
                                { "element": "coffee" },
                                { "element": "coffee.cmd" },
                                { "element": "color-support" },
                                { "element": "color-support.cmd" },
                                { "element": "coveralls" },
                                { "element": "coveralls.cmd" },
                                { "element": "css-beautify" },
                                { "element": "css-beautify.cmd" },
                                { "element": "csso" },
                                { "element": "csso.cmd" },
                                { "element": "decompress-zip" },
                                { "element": "decompress-zip.cmd" },
                                { "element": "detect-libc" },
                                { "element": "detect-libc.cmd" },
                                { "element": "ecstatic" },
                                { "element": "ecstatic.cmd" },
                                { "element": "editorconfig" },
                                { "element": "editorconfig.cmd" },
                                { "element": "electron-download" },
                                { "element": "electron-download.cmd" },
                                { "element": "errno" },
                                { "element": "errno.cmd" },
                                { "element": "escodegen" },
                                { "element": "escodegen.cmd" },
                                { "element": "esgenerate" },
                                { "element": "esgenerate.cmd" },
                                { "element": "eslint" },
                                { "element": "eslint.cmd" },
                                { "element": "esparse" },
                                { "element": "esparse.cmd" },
                                { "element": "esvalidate" },
                                { "element": "esvalidate.cmd" },
                                { "element": "extract-zip" },
                                { "element": "extract-zip.cmd" },
                                { "element": "getmac-node" },
                                { "element": "getmac-node.cmd" },
                                { "element": "github-releases" },
                                { "element": "github-releases.cmd" },
                                { "element": "gulp" },
                                { "element": "gulp.cmd" },
                                { "element": "handlebars" },
                                { "element": "handlebars.cmd" },
                                { "element": "he" },
                                { "element": "he.cmd" },
                                { "element": "hs" },
                                { "element": "hs.cmd" },
                                { "element": "html-beautify" },
                                { "element": "html-beautify.cmd" },
                                { "element": "http-server" },
                                { "element": "http-server.cmd" },
                                { "element": "import-local-fixture" },
                                { "element": "import-local-fixture.cmd" },
                                { "element": "innosetup-compiler" },
                                { "element": "innosetup-compiler.cmd" },
                                { "element": "istanbul" },
                                { "element": "istanbul.cmd" },
                                { "element": "jade" },
                                { "element": "jade.cmd" },
                                { "element": "js-beautify" },
                                { "element": "js-beautify.cmd" },
                                { "element": "js-yaml" },
                                { "element": "js-yaml.cmd" },
                                { "element": "json5" },
                                { "element": "json5.cmd" },
                                { "element": "markdown-it" },
                                { "element": "markdown-it.cmd" },
                                { "element": "miller-rabin" },
                                { "element": "miller-rabin.cmd" },
                                { "element": "mime" },
                                { "element": "mime.cmd" },
                                { "element": "mkdirp" },
                                { "element": "mkdirp.cmd" },
                                { "element": "mksnapshot" },
                                { "element": "mksnapshot.cmd" },
                                { "element": "mocha" },
                                { "element": "mocha.cmd" },
                                { "element": "nopt" },
                                { "element": "nopt.cmd" },
                                { "element": "nugget" },
                                { "element": "nugget.cmd" },
                                { "element": "opener" },
                                { "element": "opener.cmd" },
                                { "element": "prebuild-install" },
                                { "element": "prebuild-install.cmd" },
                                { "element": "pretty-bytes" },
                                { "element": "pretty-bytes.cmd" },
                                { "element": "prettyjson" },
                                { "element": "prettyjson.cmd" },
                                { "element": "rc" },
                                { "element": "rc.cmd" },
                                { "element": "remap-istanbul" },
                                { "element": "remap-istanbul.cmd" },
                                { "element": "rimraf" },
                                { "element": "rimraf.cmd" },
                                { "element": "semver" },
                                { "element": "semver.cmd" },
                                { "element": "sha.js" },
                                { "element": "sha.js.cmd" },
                                { "element": "sshpk-conv" },
                                { "element": "sshpk-conv.cmd" },
                                { "element": "sshpk-sign" },
                                { "element": "sshpk-sign.cmd" },
                                { "element": "sshpk-verify" },
                                { "element": "sshpk-verify.cmd" },
                                { "element": "strip-indent" },
                                { "element": "strip-indent.cmd" },
                                { "element": "svgo" },
                                { "element": "svgo.cmd" },
                                { "element": "tsc" },
                                { "element": "tsc.cmd" },
                                { "element": "tsfmt" },
                                { "element": "tsfmt.cmd" },
                                { "element": "tslint" },
                                { "element": "tslint.cmd" },
                                { "element": "tsserver" },
                                { "element": "tsserver.cmd" },
                                { "element": "uglifyjs" },
                                { "element": "uglifyjs.cmd" },
                                { "element": "upload-to-azure" },
                                { "element": "upload-to-azure.cmd" },
                                { "element": "uuid" },
                                { "element": "uuid.cmd" },
                                { "element": "vsce" },
                                { "element": "vsce.cmd" },
                                { "element": "vscl" },
                                { "element": "vscl.cmd" },
                                { "element": "webpack" },
                                { "element": "webpack-cli" },
                                { "element": "webpack-cli.cmd" },
                                { "element": "webpack.cmd" },
                                { "element": "which" },
                                { "element": "which.cmd" }
                            ]
                        },
                        {
                            "element": "7zip",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": "7zip-lite",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "7-zip.dll" },
                                        { "element": "7-zip32.dll" },
                                        { "element": "7z.dll" },
                                        { "element": "7z.exe" },
                                        { "element": "7z.sfx" },
                                        { "element": "7zCon.sfx" },
                                        { "element": "History.txt" },
                                        { "element": "Lang" },
                                        { "element": "License.txt" },
                                        { "element": "descript.ion" },
                                        { "element": "readme.txt" }
                                    ]
                                },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "@babel",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": "code-frame",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "LICENSE" },
                                        { "element": "README.md" },
                                        { "element": "lib" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "highlight",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "LICENSE" },
                                        { "element": "README.md" },
                                        { "element": "lib" },
                                        { "element": "node_modules" },
                                        { "element": "package.json" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "@types",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": "commander",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "LICENSE" },
                                        { "element": "README.md" },
                                        { "element": "node_modules" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "fancy-log",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "LICENSE" },
                                        { "element": "README.md" },
                                        { "element": "index.d.ts" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "keytar",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "LICENSE" },
                                        { "element": "README.md" },
                                        { "element": "index.d.ts" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "minimist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "README.md" },
                                        { "element": "index.d.ts" },
                                        { "element": "package.json" },
                                        { "element": "types-metadata.json" }
                                    ]
                                },
                                {
                                    "element": "mocha",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "README.md" },
                                        { "element": "index.d.ts" },
                                        { "element": "package.json" },
                                        { "element": "types-metadata.json" }
                                    ]
                                },
                                {
                                    "element": "node",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "LICENSE" },
                                        { "element": "README.md" },
                                        { "element": "index.d.ts" },
                                        { "element": "inspector.d.ts" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "semver",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "LICENSE" },
                                        { "element": "README.md" },
                                        { "element": "index.d.ts" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "sinon",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "README.md" },
                                        { "element": "index.d.ts" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "tapable",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "LICENSE" },
                                        { "element": "README.md" },
                                        { "element": "index.d.ts" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "uglify-js",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "LICENSE" },
                                        { "element": "README.md" },
                                        { "element": "index.d.ts" },
                                        { "element": "node_modules" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "webpack",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "LICENSE" },
                                        { "element": "README.md" },
                                        { "element": "index.d.ts" },
                                        { "element": "node_modules" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "winreg",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "README.md" },
                                        { "element": "index.d.ts" },
                                        { "element": "package.json" },
                                        { "element": "types-metadata.json" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "@webassemblyjs",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": "ast",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "README.md" },
                                        { "element": "lib" },
                                        { "element": "node_modules" },
                                        { "element": "package.json" },
                                        { "element": "scripts" }
                                    ]
                                },
                                {
                                    "element": "floating-point-hex-parser",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "LICENSE" },
                                        { "element": "README.md" },
                                        { "element": "lib" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "helper-api-error",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "lib" }, { "element": "package.json" }]
                                },
                                {
                                    "element": "helper-buffer",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "lib" },
                                        { "element": "node_modules" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "helper-code-frame",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "lib" }, { "element": "package.json" }]
                                },
                                {
                                    "element": "helper-fsm",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "lib" }, { "element": "package.json" }]
                                },
                                {
                                    "element": "helper-module-context",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "lib" },
                                        { "element": "node_modules" },
                                        { "element": "package.json" },
                                        { "element": "src" },
                                        { "element": "test" }
                                    ]
                                },
                                {
                                    "element": "helper-wasm-bytecode",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "lib" }, { "element": "package.json" }]
                                },
                                {
                                    "element": "helper-wasm-section",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "lib" },
                                        { "element": "node_modules" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "ieee754",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "lib" },
                                        { "element": "package.json" },
                                        { "element": "src" }
                                    ]
                                },
                                {
                                    "element": "leb128",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "LICENSE.txt" },
                                        { "element": "lib" },
                                        { "element": "node_modules" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "utf8",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "lib" },
                                        { "element": "package.json" },
                                        { "element": "src" },
                                        { "element": "test" }
                                    ]
                                },
                                {
                                    "element": "wasm-edit",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "README.md" },
                                        { "element": "lib" },
                                        { "element": "node_modules" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "wasm-gen",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "lib" }, { "element": "package.json" }]
                                },
                                {
                                    "element": "wasm-opt",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "lib" },
                                        { "element": "node_modules" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "wasm-parser",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "README.md" },
                                        { "element": "lib" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "wast-parser",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "README.md" },
                                        { "element": "lib" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "wast-printer",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "README.md" },
                                        { "element": "lib" },
                                        { "element": "package.json" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "abbrev",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "abbrev.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "accepts",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "acorn",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "AUTHORS" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "_acorn.js" },
                                        { "element": "acorn" },
                                        { "element": "run_test262.js" },
                                        { "element": "test262.whitelist" }
                                    ]
                                },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".keep" },
                                        { "element": "acorn.es.js" },
                                        { "element": "acorn.js" },
                                        { "element": "acorn_loose.es.js" },
                                        { "element": "acorn_loose.js" },
                                        { "element": "walk.es.js" },
                                        { "element": "walk.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "acorn-dynamic-import",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.js" },
                                        { "element": "inject.js" },
                                        { "element": "walk.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.js" },
                                        { "element": "inject.js" },
                                        { "element": "walk.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "acorn-jsx",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "inject.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "acorn" }]
                                },
                                { "element": "package.json" },
                                { "element": "xhtml.js" }
                            ]
                        },
                        {
                            "element": "agent-base",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "History.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "patch-core.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ssl-cert-snakeoil.key" },
                                        { "element": "ssl-cert-snakeoil.pem" },
                                        { "element": "test.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "ajv",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".tonic_example.js" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ajv.bundle.js" },
                                        { "element": "ajv.min.js" },
                                        { "element": "ajv.min.js.map" },
                                        { "element": "nodent.min.js" },
                                        { "element": "regenerator.min.js" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "$data.js" },
                                        { "element": "ajv.d.ts" },
                                        { "element": "ajv.js" },
                                        { "element": "cache.js" },
                                        { "element": "compile" },
                                        { "element": "dot" },
                                        { "element": "dotjs" },
                                        { "element": "keyword.js" },
                                        { "element": "patternGroups.js" },
                                        { "element": "refs" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "scripts",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".eslintrc.yml" },
                                        { "element": "bundle.js" },
                                        { "element": "compile-dots.js" },
                                        { "element": "info" },
                                        { "element": "prepare-tests" },
                                        { "element": "travis-gh-pages" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "ajv-keywords",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "keywords",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "_formatLimit.js" },
                                        { "element": "_util.js" },
                                        { "element": "deepProperties.js" },
                                        { "element": "deepRequired.js" },
                                        { "element": "dot" },
                                        { "element": "dotjs" },
                                        { "element": "dynamicDefaults.js" },
                                        { "element": "formatMaximum.js" },
                                        { "element": "formatMinimum.js" },
                                        { "element": "index.js" },
                                        { "element": "instanceof.js" },
                                        { "element": "patternRequired.js" },
                                        { "element": "prohibited.js" },
                                        { "element": "range.js" },
                                        { "element": "regexp.js" },
                                        { "element": "select.js" },
                                        { "element": "switch.js" },
                                        { "element": "transform.js" },
                                        { "element": "typeof.js" },
                                        { "element": "uniqueItemProperties.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ajv" },
                                        { "element": "fast-deep-equal" },
                                        { "element": "json-schema-traverse" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "align-text",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "alphanum-sort",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "compare.js" },
                                        { "element": "index.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "amdefine",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "amdefine.js" },
                                { "element": "intercept.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "ansi-colors",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "symbols.js" },
                                {
                                    "element": "types",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.d.ts" }]
                                }
                            ]
                        },
                        {
                            "element": "ansi-cyan",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "ansi-escapes",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "ansi-gray",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "ansi-red",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "ansi-regex",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "ansi-styles",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "ansi-wrap",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "anymatch",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "append-buffer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "applicationinsights",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "AutoCollection" },
                                        { "element": "Declarations" },
                                        { "element": "Library" },
                                        { "element": "TelemetryProcessors" },
                                        { "element": "applicationinsights.d.ts" },
                                        { "element": "applicationinsights.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "aproba",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "archy",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "beep.js" },
                                        { "element": "multi_line.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "beep.js" },
                                        { "element": "multi_line.js" },
                                        { "element": "non_unicode.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "are-we-there-yet",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGES.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "process-nextick-args" },
                                        { "element": "readable-stream" },
                                        { "element": "string_decoder" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "tracker-base.js" },
                                { "element": "tracker-group.js" },
                                { "element": "tracker-stream.js" },
                                { "element": "tracker.js" }
                            ]
                        },
                        {
                            "element": "argparse",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "action" },
                                        { "element": "action.js" },
                                        { "element": "action_container.js" },
                                        { "element": "argparse.js" },
                                        { "element": "argument" },
                                        { "element": "argument_parser.js" },
                                        { "element": "const.js" },
                                        { "element": "help" },
                                        { "element": "namespace.js" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "arr-diff",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "arr-filter",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "arr-flatten",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "arr-map",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "arr-union",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "array-differ",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "array-each",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "array-find-index",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "array-flatten",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "array-flatten.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "array-initial",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintrc" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "is-number" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "array-last",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "is-number" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "array-slice",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "array-sort",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "kind-of" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "array-union",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "array-uniq",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "array-unique",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "arrify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "asar",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "asar.js" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "asar.js" },
                                        { "element": "crawlfs.js" },
                                        { "element": "disk.js" },
                                        { "element": "filesystem.js" },
                                        { "element": "snapshot.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "glob" },
                                        { "element": "tmp" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "snapcraft.yaml" }
                            ]
                        },
                        {
                            "element": "asn1",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "ber" }, { "element": "index.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "tst",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "ber" }]
                                }
                            ]
                        },
                        {
                            "element": "asn1.js",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "asn1" }, { "element": "asn1.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "assert",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": ".zuul.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "assert.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "assert-plus",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "AUTHORS" },
                                { "element": "CHANGES.md" },
                                { "element": "README.md" },
                                { "element": "assert.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "assign-symbols",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "astral-regex",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "async",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "async.js" },
                                        { "element": "async.min.js" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "async.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "async-done",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "async-each",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "CHANGELOG.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "async-limiter",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                {
                                    "element": "coverage",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "coverage.json" },
                                        { "element": "lcov-report" },
                                        { "element": "lcov.info" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "async-settle",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "asynckit",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "bench.js" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "abort.js" },
                                        { "element": "async.js" },
                                        { "element": "defer.js" },
                                        { "element": "iterate.js" },
                                        { "element": "readable_asynckit.js" },
                                        { "element": "readable_parallel.js" },
                                        { "element": "readable_serial.js" },
                                        { "element": "readable_serial_ordered.js" },
                                        { "element": "state.js" },
                                        { "element": "streamify.js" },
                                        { "element": "terminator.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "parallel.js" },
                                { "element": "serial.js" },
                                { "element": "serialOrdered.js" },
                                { "element": "stream.js" }
                            ]
                        },
                        {
                            "element": "atob",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "LICENSE.DOCS" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "atob.js" }]
                                },
                                { "element": "bower.json" },
                                { "element": "browser-atob.js" },
                                { "element": "node-atob.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "autoprefixer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "AUTHORS" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "data",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "prefixes.js" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "at-rule.js" },
                                        { "element": "autoprefixer.js" },
                                        { "element": "brackets.js" },
                                        { "element": "browsers.js" },
                                        { "element": "declaration.js" },
                                        { "element": "hacks" },
                                        { "element": "info.js" },
                                        { "element": "old-selector.js" },
                                        { "element": "old-value.js" },
                                        { "element": "prefixer.js" },
                                        { "element": "prefixes.js" },
                                        { "element": "processor.js" },
                                        { "element": "resolution.js" },
                                        { "element": "selector.js" },
                                        { "element": "supports.js" },
                                        { "element": "transition.js" },
                                        { "element": "utils.js" },
                                        { "element": "value.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "aws-sign2",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "aws4",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".tern-port" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "aws4.js" },
                                { "element": "lru.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "azure-storage",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintignore" },
                                { "element": ".jshintrc" },
                                { "element": ".travis.yml" },
                                { "element": "BreakingChanges.md" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "CONTRIBUTORS.txt" },
                                { "element": "ChangeLog.md" },
                                { "element": "ISSUE_TEMPLATE.md" },
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                {
                                    "element": "browser",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ChangeLog.md" },
                                        { "element": "README.md" },
                                        { "element": "azure-storage.blob.export.js" },
                                        { "element": "azure-storage.file.export.js" },
                                        { "element": "azure-storage.queue.export.js" },
                                        { "element": "azure-storage.table.export.js" },
                                        { "element": "bundle.js" },
                                        { "element": "samples" },
                                        { "element": "test" }
                                    ]
                                },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "samples" }]
                                },
                                { "element": "gruntfile.js" },
                                {
                                    "element": "jsdoc",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "jsdoc.json" }]
                                },
                                { "element": "karma.conf.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "azure-storage.js" },
                                        { "element": "common" },
                                        { "element": "services" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "aws4" },
                                        { "element": "combined-stream" },
                                        { "element": "extend" },
                                        { "element": "form-data" },
                                        { "element": "har-validator" },
                                        { "element": "mime-db" },
                                        { "element": "mime-types" },
                                        { "element": "oauth-sign" },
                                        { "element": "qs" },
                                        { "element": "readable-stream" },
                                        { "element": "request" },
                                        { "element": "safe-buffer" },
                                        { "element": "sax" },
                                        { "element": "tough-cookie" },
                                        { "element": "xml2js" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "tsconfig.json" },
                                {
                                    "element": "typings",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "azure-storage" },
                                        { "element": "globals" },
                                        { "element": "index.d.ts" }
                                    ]
                                },
                                { "element": "typings.json" }
                            ]
                        },
                        {
                            "element": "babel-code-frame",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package-lock.json" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "bach",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "helpers.js" },
                                        { "element": "parallel.js" },
                                        { "element": "series.js" },
                                        { "element": "settleParallel.js" },
                                        { "element": "settleSeries.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "balanced-match",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "base",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "define-property" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "base64-js",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "base64js.min.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "big-data.js" },
                                        { "element": "convert.js" },
                                        { "element": "corrupt.js" },
                                        { "element": "url-safe.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "bcrypt-pbkdf",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "big-integer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "BigInteger.d.ts" },
                                { "element": "BigInteger.js" },
                                { "element": "BigInteger.min.js" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "bower.json" },
                                { "element": "package.json" },
                                { "element": "tsconfig.json" }
                            ]
                        },
                        {
                            "element": "big.js",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENCE" },
                                { "element": "README.md" },
                                { "element": "big.js" },
                                { "element": "big.min.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "binary",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "README.markdown" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "buf.js" },
                                        { "element": "parse.js" },
                                        { "element": "stream.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "vars.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "perf",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "loop.js" }, { "element": "small.js" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "bu.js" },
                                        { "element": "deferred.js" },
                                        { "element": "dots.js" },
                                        { "element": "eof.js" },
                                        { "element": "flush.js" },
                                        { "element": "from_buffer.js" },
                                        { "element": "get_buffer.js" },
                                        { "element": "immediate.js" },
                                        { "element": "interval.js" },
                                        { "element": "into_buffer.js" },
                                        { "element": "into_stream.js" },
                                        { "element": "loop.js" },
                                        { "element": "loop_scan.js" },
                                        { "element": "lu.js" },
                                        { "element": "negbs.js" },
                                        { "element": "negls.js" },
                                        { "element": "nested.js" },
                                        { "element": "not_enough_buf.js" },
                                        { "element": "not_enough_parse.js" },
                                        { "element": "parse.js" },
                                        { "element": "peek.js" },
                                        { "element": "pipe.js" },
                                        { "element": "posbs.js" },
                                        { "element": "posls.js" },
                                        { "element": "scan.js" },
                                        { "element": "scan_buf.js" },
                                        { "element": "scan_buf_null.js" },
                                        { "element": "skip.js" },
                                        { "element": "split.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "binary-extensions",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "binary-extensions.json" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "binary-search-bounds",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "example.js" }]
                                },
                                { "element": "package.json" },
                                { "element": "search-bounds.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "test.js" }]
                                }
                            ]
                        },
                        {
                            "element": "binaryextensions",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "bindings",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "bindings.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "bl",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintrc" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "bl.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "process-nextick-args" },
                                        { "element": "readable-stream" },
                                        { "element": "string_decoder" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "test.js" }]
                                }
                            ]
                        },
                        {
                            "element": "block-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENCE" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "block-stream.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "bluebird",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "changelog.md" },
                                {
                                    "element": "js",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "browser" }, { "element": "release" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "bn.js",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "bn.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "util",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "genCombMulTo.js" },
                                        { "element": "genCombMulTo10.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "body-parser",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "read.js" }, { "element": "types" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "iconv-lite" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "boolbase",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "boom",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "images",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "boom.png" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "hoek" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "brace-expansion",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "balanced-match" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "braces",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "braces.js" },
                                        { "element": "compilers.js" },
                                        { "element": "parsers.js" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "arr-flatten" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "brorand",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "api-test.js" }]
                                }
                            ]
                        },
                        {
                            "element": "browser-request",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "AUTHORS" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "browserify-aes",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "aes.js" },
                                { "element": "authCipher.js" },
                                { "element": "browser.js" },
                                { "element": "decrypter.js" },
                                { "element": "encrypter.js" },
                                { "element": "ghash.js" },
                                { "element": "incr32.js" },
                                { "element": "index.js" },
                                {
                                    "element": "modes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "cbc.js" },
                                        { "element": "cfb.js" },
                                        { "element": "cfb1.js" },
                                        { "element": "cfb8.js" },
                                        { "element": "ctr.js" },
                                        { "element": "ecb.js" },
                                        { "element": "index.js" },
                                        { "element": "list.json" },
                                        { "element": "ofb.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "streamCipher.js" }
                            ]
                        },
                        {
                            "element": "browserify-cipher",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "browser.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "browserify-des",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "modes.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "safe-buffer" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "browserify-mime",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "browserify-mime.js" },
                                { "element": "mime.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "browserify-rsa",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "browserify-sign",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "algos.js" },
                                {
                                    "element": "browser",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "algorithms.json" },
                                        { "element": "curves.json" },
                                        { "element": "index.js" },
                                        { "element": "sign.js" },
                                        { "element": "verify.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "browserify-zlib",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "karma.conf.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "binding.js" },
                                        { "element": "index.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "binding.js" },
                                        { "element": "index.js" }
                                    ]
                                },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "browserslist",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "cli.js" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "buffer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "AUTHORS.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "download-node-tests.js" },
                                        { "element": "test.js" },
                                        { "element": "update-authors.sh" },
                                        { "element": "zuul-es5.yml" },
                                        { "element": "zuul-es6.yml" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "_polyfill.js" },
                                        { "element": "base64.js" },
                                        { "element": "basic.js" },
                                        { "element": "compare.js" },
                                        { "element": "constructor.js" },
                                        { "element": "from-string.js" },
                                        { "element": "is-buffer.js" },
                                        { "element": "methods.js" },
                                        { "element": "node" },
                                        { "element": "slice.js" },
                                        { "element": "static.js" },
                                        { "element": "to-string.js" },
                                        { "element": "write.js" },
                                        { "element": "write_infinity.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "buffer-alloc",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "buffer-alloc-unsafe",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "buffer-crc32",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "buffer-equal",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.markdown" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "eq.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "eq.js" }]
                                }
                            ]
                        },
                        {
                            "element": "buffer-fill",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "buffer-from",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "buffer-xor",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "inline.js" },
                                { "element": "inplace.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "fixtures.json" },
                                        { "element": "index.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "buffers",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.markdown" },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "slice.js" },
                                        { "element": "splice.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "buffers.js" }]
                                }
                            ]
                        },
                        {
                            "element": "builtin-modules",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "builtin-modules.json" },
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                { "element": "static.js" }
                            ]
                        },
                        {
                            "element": "builtin-status-codes",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "browser.js" },
                                { "element": "build.js" },
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "bytes",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "History.md" },
                                { "element": "LICENSE" },
                                { "element": "Readme.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "cacache",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.es.md" },
                                { "element": "README.md" },
                                { "element": "en.js" },
                                { "element": "es.js" },
                                { "element": "get.js" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "content" },
                                        { "element": "entry-index.js" },
                                        { "element": "memoization.js" },
                                        { "element": "util" },
                                        { "element": "verify.js" }
                                    ]
                                },
                                {
                                    "element": "locales",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "en.js" },
                                        { "element": "en.json" },
                                        { "element": "es.js" },
                                        { "element": "es.json" }
                                    ]
                                },
                                { "element": "ls.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "glob" },
                                        { "element": "rimraf" },
                                        { "element": "y18n" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "put.js" },
                                { "element": "rm.js" },
                                { "element": "verify.js" }
                            ]
                        },
                        {
                            "element": "cache-base",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "caller-path",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "callsites",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "camelcase",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "camelcase-keys",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "camelcase" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "caniuse-api",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }, { "element": "utils.js" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "caniuse-db",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".editorconfig" },
                                { "element": ".npmignore" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "data.json" },
                                {
                                    "element": "features-json",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "aac.json" },
                                        { "element": "ac3-ec3.json" },
                                        { "element": "addeventlistener.json" },
                                        { "element": "alternate-stylesheet.json" },
                                        { "element": "ambient-light.json" },
                                        { "element": "apng.json" },
                                        { "element": "arrow-functions.json" },
                                        { "element": "asmjs.json" },
                                        { "element": "async-functions.json" },
                                        { "element": "atob-btoa.json" },
                                        { "element": "audio-api.json" },
                                        { "element": "audio.json" },
                                        { "element": "audiotracks.json" },
                                        { "element": "autofocus.json" },
                                        { "element": "aux-click.json" },
                                        { "element": "background-attachment.json" },
                                        { "element": "background-img-opts.json" },
                                        { "element": "background-position-x-y.json" },
                                        { "element": "background-repeat-round-space.json" },
                                        { "element": "battery-status.json" },
                                        { "element": "beacon.json" },
                                        { "element": "beforeafterprint.json" },
                                        { "element": "blobbuilder.json" },
                                        { "element": "bloburls.json" },
                                        { "element": "border-image.json" },
                                        { "element": "border-radius.json" },
                                        { "element": "broadcastchannel.json" },
                                        { "element": "brotli.json" },
                                        { "element": "calc.json" },
                                        { "element": "canvas-blending.json" },
                                        { "element": "canvas-text.json" },
                                        { "element": "canvas.json" },
                                        { "element": "ch-unit.json" },
                                        { "element": "chacha20-poly1305.json" },
                                        { "element": "channel-messaging.json" },
                                        { "element": "childnode-remove.json" },
                                        { "element": "classlist.json" },
                                        { "element": "client-hints-dpr-width-viewport.json" },
                                        { "element": "clipboard.json" },
                                        { "element": "comparedocumentposition.json" },
                                        { "element": "console-basic.json" },
                                        { "element": "console-time.json" },
                                        { "element": "const.json" },
                                        { "element": "constraint-validation.json" },
                                        { "element": "contenteditable.json" },
                                        { "element": "contentsecuritypolicy.json" },
                                        { "element": "contentsecuritypolicy2.json" },
                                        { "element": "cors.json" },
                                        { "element": "credential-management.json" },
                                        { "element": "cryptography.json" },
                                        { "element": "css-all.json" },
                                        { "element": "css-animation.json" },
                                        { "element": "css-any-link.json" },
                                        { "element": "css-appearance.json" },
                                        { "element": "css-apply-rule.json" },
                                        { "element": "css-at-counter-style.json" },
                                        { "element": "css-backdrop-filter.json" },
                                        { "element": "css-background-offsets.json" },
                                        { "element": "css-backgroundblendmode.json" },
                                        { "element": "css-boxdecorationbreak.json" },
                                        { "element": "css-boxshadow.json" },
                                        { "element": "css-canvas.json" },
                                        { "element": "css-caret-color.json" },
                                        { "element": "css-case-insensitive.json" },
                                        { "element": "css-clip-path.json" },
                                        { "element": "css-conic-gradients.json" },
                                        { "element": "css-containment.json" },
                                        { "element": "css-counters.json" },
                                        { "element": "css-crisp-edges.json" },
                                        { "element": "css-cross-fade.json" },
                                        { "element": "css-default-pseudo.json" },
                                        { "element": "css-descendant-gtgt.json" },
                                        { "element": "css-deviceadaptation.json" },
                                        { "element": "css-dir-pseudo.json" },
                                        { "element": "css-display-contents.json" },
                                        { "element": "css-element-function.json" },
                                        { "element": "css-exclusions.json" },
                                        { "element": "css-featurequeries.json" },
                                        { "element": "css-filter-function.json" },
                                        { "element": "css-filters.json" },
                                        { "element": "css-first-letter.json" },
                                        { "element": "css-first-line.json" },
                                        { "element": "css-fixed.json" },
                                        { "element": "css-focus-ring.json" },
                                        { "element": "css-focus-within.json" },
                                        { "element": "css-font-rendering-controls.json" },
                                        { "element": "css-font-stretch.json" },
                                        { "element": "css-gencontent.json" },
                                        { "element": "css-gradients.json" },
                                        { "element": "css-grid.json" },
                                        { "element": "css-hanging-punctuation.json" },
                                        { "element": "css-has.json" },
                                        { "element": "css-hyphenate.json" },
                                        { "element": "css-hyphens.json" },
                                        { "element": "css-image-orientation.json" },
                                        { "element": "css-image-set.json" },
                                        { "element": "css-in-out-of-range.json" },
                                        { "element": "css-indeterminate-pseudo.json" },
                                        { "element": "css-initial-letter.json" },
                                        { "element": "css-initial-value.json" },
                                        { "element": "css-letter-spacing.json" },
                                        { "element": "css-line-clamp.json" },
                                        { "element": "css-logical-props.json" },
                                        { "element": "css-marker-pseudo.json" },
                                        { "element": "css-masks.json" },
                                        { "element": "css-matches-pseudo.json" },
                                        { "element": "css-media-interaction.json" },
                                        { "element": "css-media-resolution.json" },
                                        { "element": "css-media-scripting.json" },
                                        { "element": "css-mediaqueries.json" },
                                        { "element": "css-mixblendmode.json" },
                                        { "element": "css-motion-paths.json" },
                                        { "element": "css-namespaces.json" },
                                        { "element": "css-not-sel-list.json" },
                                        { "element": "css-nth-child-of.json" },
                                        { "element": "css-opacity.json" },
                                        { "element": "css-optional-pseudo.json" },
                                        { "element": "css-overflow-anchor.json" },
                                        { "element": "css-page-break.json" },
                                        { "element": "css-paged-media.json" },
                                        { "element": "css-placeholder-shown.json" },
                                        { "element": "css-placeholder.json" },
                                        { "element": "css-read-only-write.json" },
                                        { "element": "css-rebeccapurple.json" },
                                        { "element": "css-reflections.json" },
                                        { "element": "css-regions.json" },
                                        { "element": "css-repeating-gradients.json" },
                                        { "element": "css-resize.json" },
                                        { "element": "css-revert-value.json" },
                                        { "element": "css-rrggbbaa.json" },
                                        { "element": "css-scroll-behavior.json" },
                                        { "element": "css-scrollbar.json" },
                                        { "element": "css-sel2.json" },
                                        { "element": "css-sel3.json" },
                                        { "element": "css-selection.json" },
                                        { "element": "css-shapes.json" },
                                        { "element": "css-snappoints.json" },
                                        { "element": "css-sticky.json" },
                                        { "element": "css-supports-api.json" },
                                        { "element": "css-table.json" },
                                        { "element": "css-text-align-last.json" },
                                        { "element": "css-text-indent.json" },
                                        { "element": "css-text-justify.json" },
                                        { "element": "css-text-orientation.json" },
                                        { "element": "css-text-spacing.json" },
                                        { "element": "css-textshadow.json" },
                                        { "element": "css-touch-action-2.json" },
                                        { "element": "css-touch-action.json" },
                                        { "element": "css-transitions.json" },
                                        { "element": "css-unicode-bidi.json" },
                                        { "element": "css-unset-value.json" },
                                        { "element": "css-variables.json" },
                                        { "element": "css-widows-orphans.json" },
                                        { "element": "css-writing-mode.json" },
                                        { "element": "css-zoom.json" },
                                        { "element": "css3-attr.json" },
                                        { "element": "css3-boxsizing.json" },
                                        { "element": "css3-colors.json" },
                                        { "element": "css3-cursors-grab.json" },
                                        { "element": "css3-cursors-newer.json" },
                                        { "element": "css3-cursors.json" },
                                        { "element": "css3-tabsize.json" },
                                        { "element": "currentcolor.json" },
                                        { "element": "custom-elements.json" },
                                        { "element": "custom-elementsv1.json" },
                                        { "element": "customevent.json" },
                                        { "element": "datalist.json" },
                                        { "element": "dataset.json" },
                                        { "element": "datauri.json" },
                                        { "element": "details.json" },
                                        { "element": "deviceorientation.json" },
                                        { "element": "devicepixelratio.json" },
                                        { "element": "dialog.json" },
                                        { "element": "dispatchevent.json" },
                                        { "element": "document-currentscript.json" },
                                        { "element": "document-evaluate-xpath.json" },
                                        { "element": "document-execcommand.json" },
                                        { "element": "documenthead.json" },
                                        { "element": "dom-manip-convenience.json" },
                                        { "element": "dom-range.json" },
                                        { "element": "domcontentloaded.json" },
                                        { "element": "domfocusin-domfocusout-events.json" },
                                        { "element": "dommatrix.json" },
                                        { "element": "download.json" },
                                        { "element": "dragndrop.json" },
                                        { "element": "element-closest.json" },
                                        { "element": "element-from-point.json" },
                                        { "element": "eme.json" },
                                        { "element": "eot.json" },
                                        { "element": "es5.json" },
                                        { "element": "es6-class.json" },
                                        { "element": "es6-generators.json" },
                                        { "element": "es6-module-dynamic-import.json" },
                                        { "element": "es6-module-nomodule.json" },
                                        { "element": "es6-module.json" },
                                        { "element": "es6-number.json" },
                                        { "element": "eventsource.json" },
                                        { "element": "fetch.json" },
                                        { "element": "fieldset-disabled.json" },
                                        { "element": "fileapi.json" },
                                        { "element": "filereader.json" },
                                        { "element": "filereadersync.json" },
                                        { "element": "filesystem.json" },
                                        { "element": "flac.json" },
                                        { "element": "flexbox.json" },
                                        { "element": "flow-root.json" },
                                        { "element": "focusin-focusout-events.json" },
                                        { "element": "font-feature.json" },
                                        { "element": "font-kerning.json" },
                                        { "element": "font-loading.json" },
                                        { "element": "font-size-adjust.json" },
                                        { "element": "font-smooth.json" },
                                        { "element": "font-unicode-range.json" },
                                        { "element": "font-variant-alternates.json" },
                                        { "element": "fontface.json" },
                                        { "element": "form-attribute.json" },
                                        { "element": "form-submit-attributes.json" },
                                        { "element": "form-validation.json" },
                                        { "element": "forms.json" },
                                        { "element": "fullscreen.json" },
                                        { "element": "gamepad.json" },
                                        { "element": "geolocation.json" },
                                        { "element": "getboundingclientrect.json" },
                                        { "element": "getcomputedstyle.json" },
                                        { "element": "getelementsbyclassname.json" },
                                        { "element": "getrandomvalues.json" },
                                        { "element": "hardwareconcurrency.json" },
                                        { "element": "hashchange.json" },
                                        { "element": "heif.json" },
                                        { "element": "hevc.json" },
                                        { "element": "hidden.json" },
                                        { "element": "high-resolution-time.json" },
                                        { "element": "history.json" },
                                        { "element": "html-media-capture.json" },
                                        { "element": "html5semantic.json" },
                                        { "element": "http-live-streaming.json" },
                                        { "element": "http2.json" },
                                        { "element": "iframe-sandbox.json" },
                                        { "element": "iframe-seamless.json" },
                                        { "element": "iframe-srcdoc.json" },
                                        { "element": "imagecapture.json" },
                                        { "element": "ime.json" },
                                        { "element": "img-naturalwidth-naturalheight.json" },
                                        { "element": "imports.json" },
                                        { "element": "indeterminate-checkbox.json" },
                                        { "element": "indexeddb.json" },
                                        { "element": "indexeddb2.json" },
                                        { "element": "inline-block.json" },
                                        { "element": "innertext.json" },
                                        { "element": "input-autocomplete-onoff.json" },
                                        { "element": "input-color.json" },
                                        { "element": "input-datetime.json" },
                                        { "element": "input-email-tel-url.json" },
                                        { "element": "input-event.json" },
                                        { "element": "input-file-accept.json" },
                                        { "element": "input-file-directory.json" },
                                        { "element": "input-file-multiple.json" },
                                        { "element": "input-inputmode.json" },
                                        { "element": "input-minlength.json" },
                                        { "element": "input-number.json" },
                                        { "element": "input-pattern.json" },
                                        { "element": "input-placeholder.json" },
                                        { "element": "input-range.json" },
                                        { "element": "input-search.json" },
                                        { "element": "input-selection.json" },
                                        { "element": "insert-adjacent.json" },
                                        { "element": "insertadjacenthtml.json" },
                                        { "element": "internationalization.json" },
                                        { "element": "intersectionobserver.json" },
                                        { "element": "intrinsic-width.json" },
                                        { "element": "jpeg2000.json" },
                                        { "element": "jpegxr.json" },
                                        { "element": "json.json" },
                                        { "element": "kerning-pairs-ligatures.json" },
                                        { "element": "keyboardevent-charcode.json" },
                                        { "element": "keyboardevent-code.json" },
                                        { "element": "keyboardevent-getmodifierstate.json" },
                                        { "element": "keyboardevent-key.json" },
                                        { "element": "keyboardevent-location.json" },
                                        { "element": "keyboardevent-which.json" },
                                        { "element": "lazyload.json" },
                                        { "element": "let.json" },
                                        { "element": "link-icon-png.json" },
                                        { "element": "link-icon-svg.json" },
                                        { "element": "link-rel-dns-prefetch.json" },
                                        { "element": "link-rel-preconnect.json" },
                                        { "element": "link-rel-prefetch.json" },
                                        { "element": "link-rel-preload.json" },
                                        { "element": "link-rel-prerender.json" },
                                        { "element": "localecompare.json" },
                                        { "element": "matchesselector.json" },
                                        { "element": "matchmedia.json" },
                                        { "element": "mathml.json" },
                                        { "element": "maxlength.json" },
                                        { "element": "media-attribute.json" },
                                        { "element": "media-fragments.json" },
                                        { "element": "media-session-api.json" },
                                        { "element": "mediacapture-fromelement.json" },
                                        { "element": "mediarecorder.json" },
                                        { "element": "mediasource.json" },
                                        { "element": "menu.json" },
                                        { "element": "meter.json" },
                                        { "element": "midi.json" },
                                        { "element": "minmaxwh.json" },
                                        { "element": "mp3.json" },
                                        { "element": "mpeg-dash.json" },
                                        { "element": "mpeg4.json" },
                                        { "element": "multibackgrounds.json" },
                                        { "element": "multicolumn.json" },
                                        { "element": "mutation-events.json" },
                                        { "element": "mutationobserver.json" },
                                        { "element": "namevalue-storage.json" },
                                        { "element": "nav-timing.json" },
                                        { "element": "netinfo.json" },
                                        { "element": "node-contains.json" },
                                        { "element": "node-parentelement.json" },
                                        { "element": "notifications.json" },
                                        { "element": "object-fit.json" },
                                        { "element": "object-observe.json" },
                                        { "element": "object-values.json" },
                                        { "element": "objectrtc.json" },
                                        { "element": "offline-apps.json" },
                                        { "element": "offscreencanvas.json" },
                                        { "element": "ogg-vorbis.json" },
                                        { "element": "ogv.json" },
                                        { "element": "ol-reversed.json" },
                                        { "element": "once-event-listener.json" },
                                        { "element": "online-status.json" },
                                        { "element": "opus.json" },
                                        { "element": "outline.json" },
                                        { "element": "pad-start-end.json" },
                                        { "element": "page-transition-events.json" },
                                        { "element": "pagevisibility.json" },
                                        { "element": "passive-event-listener.json" },
                                        { "element": "path2d.json" },
                                        { "element": "payment-request.json" },
                                        { "element": "permissions-api.json" },
                                        { "element": "picture.json" },
                                        { "element": "ping.json" },
                                        { "element": "png-alpha.json" },
                                        { "element": "pointer-events.json" },
                                        { "element": "pointer.json" },
                                        { "element": "pointerlock.json" },
                                        { "element": "progress.json" },
                                        { "element": "promises.json" },
                                        { "element": "proximity.json" },
                                        { "element": "proxy.json" },
                                        { "element": "publickeypinning.json" },
                                        { "element": "push-api.json" },
                                        { "element": "queryselector.json" },
                                        { "element": "readonly-attr.json" },
                                        { "element": "referrer-policy.json" },
                                        { "element": "registerprotocolhandler.json" },
                                        { "element": "rel-noopener.json" },
                                        { "element": "rel-noreferrer.json" },
                                        { "element": "rellist.json" },
                                        { "element": "rem.json" },
                                        { "element": "requestanimationframe.json" },
                                        { "element": "requestidlecallback.json" },
                                        { "element": "resizeobserver.json" },
                                        { "element": "resource-timing.json" },
                                        { "element": "rest-parameters.json" },
                                        { "element": "rtcpeerconnection.json" },
                                        { "element": "ruby.json" },
                                        { "element": "run-in.json" },
                                        { "element": "same-site-cookie-attribute.json" },
                                        { "element": "screen-orientation.json" },
                                        { "element": "script-async.json" },
                                        { "element": "script-defer.json" },
                                        { "element": "scrollintoview.json" },
                                        { "element": "scrollintoviewifneeded.json" },
                                        { "element": "sdch.json" },
                                        { "element": "selection-api.json" },
                                        { "element": "serviceworkers.json" },
                                        { "element": "setimmediate.json" },
                                        { "element": "sha-2.json" },
                                        { "element": "shadowdom.json" },
                                        { "element": "shadowdomv1.json" },
                                        { "element": "sharedworkers.json" },
                                        { "element": "sni.json" },
                                        { "element": "spdy.json" },
                                        { "element": "speech-recognition.json" },
                                        { "element": "speech-synthesis.json" },
                                        { "element": "spellcheck-attribute.json" },
                                        { "element": "sql-storage.json" },
                                        { "element": "srcset.json" },
                                        { "element": "stopimmediatepropagation.json" },
                                        { "element": "stream.json" },
                                        { "element": "streams.json" },
                                        { "element": "stricttransportsecurity.json" },
                                        { "element": "style-scoped.json" },
                                        { "element": "subresource-integrity.json" },
                                        { "element": "svg-css.json" },
                                        { "element": "svg-filters.json" },
                                        { "element": "svg-fonts.json" },
                                        { "element": "svg-fragment.json" },
                                        { "element": "svg-html.json" },
                                        { "element": "svg-html5.json" },
                                        { "element": "svg-img.json" },
                                        { "element": "svg-smil.json" },
                                        { "element": "svg.json" },
                                        { "element": "tabindex-attr.json" },
                                        { "element": "template-literals.json" },
                                        { "element": "template.json" },
                                        { "element": "testfeat.json" },
                                        { "element": "text-decoration.json" },
                                        { "element": "text-emphasis.json" },
                                        { "element": "text-overflow.json" },
                                        { "element": "text-size-adjust.json" },
                                        { "element": "text-stroke.json" },
                                        { "element": "textcontent.json" },
                                        { "element": "textencoder.json" },
                                        { "element": "tls1-1.json" },
                                        { "element": "tls1-2.json" },
                                        { "element": "tls1-3.json" },
                                        { "element": "token-binding.json" },
                                        { "element": "touch.json" },
                                        { "element": "transforms2d.json" },
                                        { "element": "transforms3d.json" },
                                        { "element": "ttf.json" },
                                        { "element": "typedarrays.json" },
                                        { "element": "u2f.json" },
                                        { "element": "unhandledrejection.json" },
                                        { "element": "upgradeinsecurerequests.json" },
                                        { "element": "url.json" },
                                        { "element": "urlsearchparams.json" },
                                        { "element": "use-strict.json" },
                                        { "element": "user-select-none.json" },
                                        { "element": "user-timing.json" },
                                        { "element": "variable-fonts.json" },
                                        { "element": "vibration.json" },
                                        { "element": "video.json" },
                                        { "element": "videotracks.json" },
                                        { "element": "viewport-units.json" },
                                        { "element": "wai-aria.json" },
                                        { "element": "wasm.json" },
                                        { "element": "wav.json" },
                                        { "element": "wbr-element.json" },
                                        { "element": "web-animation.json" },
                                        { "element": "web-app-manifest.json" },
                                        { "element": "web-bluetooth.json" },
                                        { "element": "web-share.json" },
                                        { "element": "webgl.json" },
                                        { "element": "webgl2.json" },
                                        { "element": "webm.json" },
                                        { "element": "webp.json" },
                                        { "element": "websockets.json" },
                                        { "element": "webusb.json" },
                                        { "element": "webvr.json" },
                                        { "element": "webvtt.json" },
                                        { "element": "webworkers.json" },
                                        { "element": "will-change.json" },
                                        { "element": "woff.json" },
                                        { "element": "woff2.json" },
                                        { "element": "word-break.json" },
                                        { "element": "wordwrap.json" },
                                        { "element": "x-doc-messaging.json" },
                                        { "element": "x-frame-options.json" },
                                        { "element": "xhr2.json" },
                                        { "element": "xhtml.json" },
                                        { "element": "xhtmlsmil.json" },
                                        { "element": "xml-serializer.json" }
                                    ]
                                },
                                {
                                    "element": "fulldata-json",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "data-1.0.json" },
                                        { "element": "data-2.0.json" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "region-usage-json",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "AD.json" },
                                        { "element": "AE.json" },
                                        { "element": "AF.json" },
                                        { "element": "AG.json" },
                                        { "element": "AI.json" },
                                        { "element": "AL.json" },
                                        { "element": "AM.json" },
                                        { "element": "AO.json" },
                                        { "element": "AR.json" },
                                        { "element": "AS.json" },
                                        { "element": "AT.json" },
                                        { "element": "AU.json" },
                                        { "element": "AW.json" },
                                        { "element": "AX.json" },
                                        { "element": "AZ.json" },
                                        { "element": "BA.json" },
                                        { "element": "BB.json" },
                                        { "element": "BD.json" },
                                        { "element": "BE.json" },
                                        { "element": "BF.json" },
                                        { "element": "BG.json" },
                                        { "element": "BH.json" },
                                        { "element": "BI.json" },
                                        { "element": "BJ.json" },
                                        { "element": "BM.json" },
                                        { "element": "BN.json" },
                                        { "element": "BO.json" },
                                        { "element": "BR.json" },
                                        { "element": "BS.json" },
                                        { "element": "BT.json" },
                                        { "element": "BW.json" },
                                        { "element": "BY.json" },
                                        { "element": "BZ.json" },
                                        { "element": "CA.json" },
                                        { "element": "CD.json" },
                                        { "element": "CF.json" },
                                        { "element": "CG.json" },
                                        { "element": "CH.json" },
                                        { "element": "CI.json" },
                                        { "element": "CK.json" },
                                        { "element": "CL.json" },
                                        { "element": "CM.json" },
                                        { "element": "CN.json" },
                                        { "element": "CO.json" },
                                        { "element": "CR.json" },
                                        { "element": "CU.json" },
                                        { "element": "CV.json" },
                                        { "element": "CX.json" },
                                        { "element": "CY.json" },
                                        { "element": "CZ.json" },
                                        { "element": "DE.json" },
                                        { "element": "DJ.json" },
                                        { "element": "DK.json" },
                                        { "element": "DM.json" },
                                        { "element": "DO.json" },
                                        { "element": "DZ.json" },
                                        { "element": "EC.json" },
                                        { "element": "EE.json" },
                                        { "element": "EG.json" },
                                        { "element": "ER.json" },
                                        { "element": "ES.json" },
                                        { "element": "ET.json" },
                                        { "element": "FI.json" },
                                        { "element": "FJ.json" },
                                        { "element": "FK.json" },
                                        { "element": "FM.json" },
                                        { "element": "FO.json" },
                                        { "element": "FR.json" },
                                        { "element": "GA.json" },
                                        { "element": "GB.json" },
                                        { "element": "GD.json" },
                                        { "element": "GE.json" },
                                        { "element": "GF.json" },
                                        { "element": "GG.json" },
                                        { "element": "GH.json" },
                                        { "element": "GI.json" },
                                        { "element": "GL.json" },
                                        { "element": "GM.json" },
                                        { "element": "GN.json" },
                                        { "element": "GP.json" },
                                        { "element": "GQ.json" },
                                        { "element": "GR.json" },
                                        { "element": "GT.json" },
                                        { "element": "GU.json" },
                                        { "element": "GW.json" },
                                        { "element": "GY.json" },
                                        { "element": "HK.json" },
                                        { "element": "HN.json" },
                                        { "element": "HR.json" },
                                        { "element": "HT.json" },
                                        { "element": "HU.json" },
                                        { "element": "ID.json" },
                                        { "element": "IE.json" },
                                        { "element": "IL.json" },
                                        { "element": "IM.json" },
                                        { "element": "IN.json" },
                                        { "element": "IQ.json" },
                                        { "element": "IR.json" },
                                        { "element": "IS.json" },
                                        { "element": "IT.json" },
                                        { "element": "JE.json" },
                                        { "element": "JM.json" },
                                        { "element": "JO.json" },
                                        { "element": "JP.json" },
                                        { "element": "KE.json" },
                                        { "element": "KG.json" },
                                        { "element": "KH.json" },
                                        { "element": "KI.json" },
                                        { "element": "KM.json" },
                                        { "element": "KN.json" },
                                        { "element": "KP.json" },
                                        { "element": "KR.json" },
                                        { "element": "KW.json" },
                                        { "element": "KY.json" },
                                        { "element": "KZ.json" },
                                        { "element": "LA.json" },
                                        { "element": "LB.json" },
                                        { "element": "LC.json" },
                                        { "element": "LI.json" },
                                        { "element": "LK.json" },
                                        { "element": "LR.json" },
                                        { "element": "LS.json" },
                                        { "element": "LT.json" },
                                        { "element": "LU.json" },
                                        { "element": "LV.json" },
                                        { "element": "LY.json" },
                                        { "element": "MA.json" },
                                        { "element": "MC.json" },
                                        { "element": "MD.json" },
                                        { "element": "ME.json" },
                                        { "element": "MG.json" },
                                        { "element": "MH.json" },
                                        { "element": "MK.json" },
                                        { "element": "ML.json" },
                                        { "element": "MM.json" },
                                        { "element": "MN.json" },
                                        { "element": "MO.json" },
                                        { "element": "MP.json" },
                                        { "element": "MQ.json" },
                                        { "element": "MR.json" },
                                        { "element": "MS.json" },
                                        { "element": "MT.json" },
                                        { "element": "MU.json" },
                                        { "element": "MV.json" },
                                        { "element": "MW.json" },
                                        { "element": "MX.json" },
                                        { "element": "MY.json" },
                                        { "element": "MZ.json" },
                                        { "element": "NA.json" },
                                        { "element": "NC.json" },
                                        { "element": "NE.json" },
                                        { "element": "NF.json" },
                                        { "element": "NG.json" },
                                        { "element": "NI.json" },
                                        { "element": "NL.json" },
                                        { "element": "NO.json" },
                                        { "element": "NP.json" },
                                        { "element": "NR.json" },
                                        { "element": "NU.json" },
                                        { "element": "NZ.json" },
                                        { "element": "OM.json" },
                                        { "element": "PA.json" },
                                        { "element": "PE.json" },
                                        { "element": "PF.json" },
                                        { "element": "PG.json" },
                                        { "element": "PH.json" },
                                        { "element": "PK.json" },
                                        { "element": "PL.json" },
                                        { "element": "PM.json" },
                                        { "element": "PN.json" },
                                        { "element": "PR.json" },
                                        { "element": "PS.json" },
                                        { "element": "PT.json" },
                                        { "element": "PW.json" },
                                        { "element": "PY.json" },
                                        { "element": "QA.json" },
                                        { "element": "RE.json" },
                                        { "element": "RO.json" },
                                        { "element": "RS.json" },
                                        { "element": "RU.json" },
                                        { "element": "RW.json" },
                                        { "element": "SA.json" },
                                        { "element": "SB.json" },
                                        { "element": "SC.json" },
                                        { "element": "SD.json" },
                                        { "element": "SE.json" },
                                        { "element": "SG.json" },
                                        { "element": "SH.json" },
                                        { "element": "SI.json" },
                                        { "element": "SK.json" },
                                        { "element": "SL.json" },
                                        { "element": "SM.json" },
                                        { "element": "SN.json" },
                                        { "element": "SO.json" },
                                        { "element": "SR.json" },
                                        { "element": "ST.json" },
                                        { "element": "SV.json" },
                                        { "element": "SY.json" },
                                        { "element": "SZ.json" },
                                        { "element": "TC.json" },
                                        { "element": "TD.json" },
                                        { "element": "TG.json" },
                                        { "element": "TH.json" },
                                        { "element": "TJ.json" },
                                        { "element": "TK.json" },
                                        { "element": "TL.json" },
                                        { "element": "TM.json" },
                                        { "element": "TN.json" },
                                        { "element": "TO.json" },
                                        { "element": "TR.json" },
                                        { "element": "TT.json" },
                                        { "element": "TV.json" },
                                        { "element": "TW.json" },
                                        { "element": "TZ.json" },
                                        { "element": "UA.json" },
                                        { "element": "UG.json" },
                                        { "element": "US.json" },
                                        { "element": "UY.json" },
                                        { "element": "UZ.json" },
                                        { "element": "VA.json" },
                                        { "element": "VC.json" },
                                        { "element": "VE.json" },
                                        { "element": "VG.json" },
                                        { "element": "VI.json" },
                                        { "element": "VN.json" },
                                        { "element": "VU.json" },
                                        { "element": "WF.json" },
                                        { "element": "WS.json" },
                                        { "element": "YE.json" },
                                        { "element": "YT.json" },
                                        { "element": "ZA.json" },
                                        { "element": "ZM.json" },
                                        { "element": "ZW.json" },
                                        { "element": "alt-af.json" },
                                        { "element": "alt-an.json" },
                                        { "element": "alt-as.json" },
                                        { "element": "alt-eu.json" },
                                        { "element": "alt-na.json" },
                                        { "element": "alt-oc.json" },
                                        { "element": "alt-sa.json" },
                                        { "element": "alt-ww.json" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "caseless",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "center-align",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "utils.js" }
                            ]
                        },
                        {
                            "element": "chainsaw",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "README.markdown" },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "add_do.js" },
                                        { "element": "prompt.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "chainsaw.js" }]
                                }
                            ]
                        },
                        {
                            "element": "chalk",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ansi-styles" },
                                        { "element": "strip-ansi" },
                                        { "element": "supports-color" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "chardet",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "encoding",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "iso2022.js" },
                                        { "element": "mbcs.js" },
                                        { "element": "sbcs.js" },
                                        { "element": "unicode.js" },
                                        { "element": "utf8.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "match.js" },
                                { "element": "package.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "charenc",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.mkd" },
                                { "element": "README.js" },
                                { "element": "charenc.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "cheerio",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "History.md" },
                                { "element": "LICENSE" },
                                { "element": "Readme.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "api" },
                                        { "element": "cheerio.js" },
                                        { "element": "options.js" },
                                        { "element": "parse.js" },
                                        { "element": "static.js" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "@types" },
                                        { "element": "lodash" },
                                        { "element": "parse5" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "chokidar",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "fsevents-handler.js" },
                                        { "element": "nodefs-handler.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "is-extglob" },
                                        { "element": "is-glob" },
                                        { "element": "normalize-path" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "chownr",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "chownr.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "chrome-remote-interface",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "client.js" }]
                                },
                                { "element": "chrome-remote-interface.js" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "api.js" },
                                        { "element": "chrome.js" },
                                        { "element": "defaults.js" },
                                        { "element": "devtools.js" },
                                        { "element": "external-request.js" },
                                        { "element": "protocol.json" },
                                        { "element": "websocket-wrapper.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "webpack.config.js" }
                            ]
                        },
                        {
                            "element": "chrome-trace-event",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "CHANGES.md" },
                                { "element": "LICENSE.txt" },
                                { "element": "Makefile" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "trace-event.d.ts" },
                                        { "element": "trace-event.js" },
                                        { "element": "trace-event.js.map" }
                                    ]
                                },
                                { "element": "events.log" },
                                { "element": "package.json" },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "chromium-pickle-js",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "exports.js" },
                                        { "element": "pickle.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "ci-info",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "cipher-base",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintrc" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "circular-json",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "circular-json.js" },
                                        { "element": "circular-json.max.js" },
                                        { "element": "circular-json.node.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "template",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "license.after" },
                                        { "element": "license.before" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "clap",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "class-utils",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "cli-cursor",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "cli-width",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "cliui",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "clone",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "clone.iml" },
                                { "element": "clone.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "clone-buffer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "clone-stats",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "cloneable-readable",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "example.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "co",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "History.md" },
                                { "element": "LICENSE" },
                                { "element": "Readme.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "coa",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                {
                                    "element": ".nyc_output",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "1f2a0db5a6d6559149db56d397f47cfc.json" },
                                        { "element": "75b82d38f2186df930141082076e11c6.json" }
                                    ]
                                },
                                { "element": ".travis.yml" },
                                { "element": "GNUmakefile" },
                                { "element": "README.md" },
                                { "element": "README.ru.md" },
                                {
                                    "element": "coverage",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "base.css" },
                                        { "element": "coa" },
                                        { "element": "index.html" },
                                        { "element": "prettify.css" },
                                        { "element": "prettify.js" },
                                        { "element": "sort-arrow-sprite.png" },
                                        { "element": "sorter.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "arg.js" },
                                        { "element": "cmd.js" },
                                        { "element": "color.js" },
                                        { "element": "completion.js" },
                                        { "element": "completion.sh" },
                                        { "element": "index.js" },
                                        { "element": "opt.js" },
                                        { "element": "shell.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "qq.js" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "arg.coffee" },
                                        { "element": "cmd.coffee" },
                                        { "element": "color.coffee" },
                                        { "element": "completion.coffee" },
                                        { "element": "index.coffee" },
                                        { "element": "opt.coffee" },
                                        { "element": "shell.coffee" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "coa.js" },
                                        { "element": "mocha.opts" },
                                        { "element": "shell-test.js" }
                                    ]
                                },
                                {
                                    "element": "tests",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "api-h.js" }, { "element": "h.js" }]
                                }
                            ]
                        },
                        {
                            "element": "code-point-at",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "coffee-script",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "cake" }, { "element": "coffee" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "coffee-script" }]
                                },
                                { "element": "package.json" },
                                { "element": "register.js" },
                                { "element": "repl.js" }
                            ]
                        },
                        {
                            "element": "collection-map",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "collection-visit",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "color",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "color-convert",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "conversions.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "route.js" }
                            ]
                        },
                        {
                            "element": "color-name",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintrc.json" },
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "color-string",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "color-string.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "basic.js" }]
                                }
                            ]
                        },
                        {
                            "element": "color-support",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "bin.js" },
                                { "element": "browser.js" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "colormin",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }, { "element": "lib" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "colors",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "MIT-LICENSE.txt" },
                                { "element": "ReadMe.md" },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "normal-usage.js" },
                                        { "element": "safe-string.js" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "colors.js" },
                                        { "element": "custom" },
                                        { "element": "extendStringPrototype.js" },
                                        { "element": "index.js" },
                                        { "element": "maps" },
                                        { "element": "styles.js" },
                                        { "element": "system" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "safe.js" },
                                {
                                    "element": "screenshots",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "colors.png" }]
                                },
                                {
                                    "element": "tests",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "basic-test.js" },
                                        { "element": "safe-test.js" }
                                    ]
                                },
                                {
                                    "element": "themes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "generic-logging.js" }]
                                }
                            ]
                        },
                        {
                            "element": "combined-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "License" },
                                { "element": "Readme.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "combined_stream.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "commander",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "History.md" },
                                { "element": "LICENSE" },
                                { "element": "Readme.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "commandpost",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                {
                                    "element": ".vscode",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "settings.json" }]
                                },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                { "element": "index.d.ts" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "argument.d.ts" },
                                        { "element": "argument.js" },
                                        { "element": "argument.js.map" },
                                        { "element": "command.d.ts" },
                                        { "element": "command.js" },
                                        { "element": "command.js.map" },
                                        { "element": "index.d.ts" },
                                        { "element": "index.js" },
                                        { "element": "index.js.map" },
                                        { "element": "option.d.ts" },
                                        { "element": "option.js" },
                                        { "element": "option.js.map" },
                                        { "element": "utils.d.ts" },
                                        { "element": "utils.js" },
                                        { "element": "utils.js.map" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "tsconfig.json" }
                            ]
                        },
                        {
                            "element": "commondir",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "dir.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "dirs.js" }]
                                }
                            ]
                        },
                        {
                            "element": "component-emitter",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "History.md" },
                                { "element": "LICENSE" },
                                { "element": "Readme.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "concat-map",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.markdown" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "map.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "map.js" }]
                                }
                            ]
                        },
                        {
                            "element": "concat-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "concat-with-sourcemaps",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "source-map" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "config-chain",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENCE" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" }
                            ]
                        },
                        {
                            "element": "console-browserify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".testem.json" },
                                { "element": ".travis.yml" },
                                { "element": "LICENCE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }, { "element": "static" }]
                                }
                            ]
                        },
                        {
                            "element": "console-control-strings",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "README.md~" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "constants-browserify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "build.sh" },
                                { "element": "constants.json" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "content-disposition",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "content-type",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "convert-source-map",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "cookie",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "cookie-signature",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "History.md" },
                                { "element": "Readme.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "copy-concurrently",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "README.md~" },
                                { "element": "copy.js" },
                                { "element": "is-windows.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "glob" },
                                        { "element": "rimraf" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "copy-descriptor",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "copy-props",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "copy-webpack-plugin",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.js" },
                                        { "element": "preProcessPattern.js" },
                                        { "element": "processPattern.js" },
                                        { "element": "utils" },
                                        { "element": "writeFile.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "is-extglob" },
                                        { "element": "is-glob" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "core-util-is",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "float.patch" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "util.js" }]
                                },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "corser",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "corser.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "coveralls",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".snyk" },
                                { "element": ".travis.yml" },
                                { "element": "Makefile" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "coveralls.js" }]
                                },
                                {
                                    "element": "fixtures",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "istanbul.lcov" },
                                        { "element": "istanbul.remap.lcov" },
                                        { "element": "lib" },
                                        { "element": "onefile.lcov" }
                                    ]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "convertLcovToCoveralls.js" },
                                        { "element": "detectLocalGit.js" },
                                        { "element": "fetchGitData.js" },
                                        { "element": "getOptions.js" },
                                        { "element": "handleInput.js" },
                                        { "element": "logger.js" },
                                        { "element": "sendToCoveralls.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "assert-plus" },
                                        { "element": "aws-sign2" },
                                        { "element": "caseless" },
                                        { "element": "cryptiles" },
                                        { "element": "form-data" },
                                        { "element": "har-validator" },
                                        { "element": "hawk" },
                                        { "element": "hoek" },
                                        { "element": "http-signature" },
                                        { "element": "js-yaml" },
                                        { "element": "qs" },
                                        { "element": "request" },
                                        { "element": "sntp" },
                                        { "element": "tunnel-agent" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "convertLcovToCoveralls.js" },
                                        { "element": "detectLocalGit.js" },
                                        { "element": "fetchGitData.js" },
                                        { "element": "getOptions.js" },
                                        { "element": "handleInput.js" },
                                        { "element": "logger.js" },
                                        { "element": "sendToCoveralls.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "create-ecdh",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "browser.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "create-hash",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "browser.js" },
                                { "element": "index.js" },
                                { "element": "md5.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "create-hmac",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "browser.js" },
                                { "element": "index.js" },
                                { "element": "legacy.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "cross-spawn",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "enoent.js" },
                                        { "element": "parse.js" },
                                        { "element": "util" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "lru-cache" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "crypt",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.mkd" },
                                { "element": "README.mkd" },
                                { "element": "crypt.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "cryptiles",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "boom" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "crypto-browserify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": ".zuul.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "bundle.js" },
                                        { "element": "index.html" },
                                        { "element": "test.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "aes.js" },
                                        { "element": "create-hash.js" },
                                        { "element": "create-hmac.js" },
                                        { "element": "dh.js" },
                                        { "element": "ecdh.js" },
                                        { "element": "index.js" },
                                        { "element": "node" },
                                        { "element": "pbkdf2.js" },
                                        { "element": "public-encrypt.js" },
                                        { "element": "random-bytes.js" },
                                        { "element": "random-fill.js" },
                                        { "element": "sign.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "cson-parser",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "cson-parser.js" },
                                        { "element": "parse.js" },
                                        { "element": "stringify.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "css-color-names",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "css-color-names.json" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "css-select",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "attributes.js" },
                                        { "element": "compile.js" },
                                        { "element": "general.js" },
                                        { "element": "procedure.json" },
                                        { "element": "pseudos.js" },
                                        { "element": "sort.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "domutils" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "css-what",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "cssnano",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }, { "element": "lib" }]
                                },
                                { "element": "package.json" },
                                { "element": "quickstart.js" }
                            ]
                        },
                        {
                            "element": "csso",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "csso" }]
                                },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "csso-browser.js" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "cli.js" },
                                        { "element": "compressor" },
                                        { "element": "index.js" },
                                        { "element": "parser" },
                                        { "element": "utils" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "source-map" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "cssom",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.txt" },
                                { "element": "README.mdown" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "CSSDocumentRule.js" },
                                        { "element": "CSSFontFaceRule.js" },
                                        { "element": "CSSHostRule.js" },
                                        { "element": "CSSImportRule.js" },
                                        { "element": "CSSKeyframeRule.js" },
                                        { "element": "CSSKeyframesRule.js" },
                                        { "element": "CSSMediaRule.js" },
                                        { "element": "CSSOM.js" },
                                        { "element": "CSSRule.js" },
                                        { "element": "CSSStyleDeclaration.js" },
                                        { "element": "CSSStyleRule.js" },
                                        { "element": "CSSStyleSheet.js" },
                                        { "element": "CSSValue.js" },
                                        { "element": "CSSValueExpression.js" },
                                        { "element": "MatcherList.js" },
                                        { "element": "MediaList.js" },
                                        { "element": "Parser.js" },
                                        { "element": "StyleSheet.js" },
                                        { "element": "clone.js" },
                                        { "element": "index.js" },
                                        { "element": "parse.js" },
                                        { "element": "snapshot.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "cssstyle",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "MIT-LICENSE.txt" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "CSSStyleDeclaration.js" },
                                        { "element": "parsers.js" },
                                        { "element": "properties" },
                                        { "element": "properties.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "scripts",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "generate_properties.js" },
                                        { "element": "run_tests.sh" }
                                    ]
                                },
                                {
                                    "element": "tests",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "tests.js" }]
                                }
                            ]
                        },
                        {
                            "element": "cuint",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "History.md" },
                                { "element": "README.md" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "uint32.js" },
                                        { "element": "uint32.min.js" },
                                        { "element": "uint64.js" },
                                        { "element": "uint64.min.js" }
                                    ]
                                },
                                { "element": "build.js" },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "adding.js" },
                                        { "element": "dividing.js" },
                                        { "element": "uint32.html" }
                                    ]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "uint32.js" },
                                        { "element": "uint64.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "UINT32-test.js" },
                                        { "element": "UINT32_add-test.js" },
                                        { "element": "UINT32_and-test.js" },
                                        { "element": "UINT32_div-test.js" },
                                        { "element": "UINT32_equals-test.js" },
                                        { "element": "UINT32_greaterThan-test.js" },
                                        { "element": "UINT32_lessThan-test.js" },
                                        { "element": "UINT32_multiply-test.js" },
                                        { "element": "UINT32_negate-test.js" },
                                        { "element": "UINT32_not-test.js" },
                                        { "element": "UINT32_or-test.js" },
                                        { "element": "UINT32_rotateLeft-test.js" },
                                        { "element": "UINT32_rotateRight-test.js" },
                                        { "element": "UINT32_shiftLeft-test.js" },
                                        { "element": "UINT32_shiftRight-test.js" },
                                        { "element": "UINT32_subtract-test.js" },
                                        { "element": "UINT32_toNumber-test.js" },
                                        { "element": "UINT32_toString-test.js" },
                                        { "element": "UINT32_xor-test.js" },
                                        { "element": "UINT64-test.js" },
                                        { "element": "UINT64_add-test.js" },
                                        { "element": "UINT64_and-test.js" },
                                        { "element": "UINT64_div-test.js" },
                                        { "element": "UINT64_equals-test.js" },
                                        { "element": "UINT64_greaterThan-test.js" },
                                        { "element": "UINT64_lessThan-test.js" },
                                        { "element": "UINT64_multiply-test.js" },
                                        { "element": "UINT64_negate-test.js" },
                                        { "element": "UINT64_not-test.js" },
                                        { "element": "UINT64_or-test.js" },
                                        { "element": "UINT64_rotateLeft-test.js" },
                                        { "element": "UINT64_rotateRight-test.js" },
                                        { "element": "UINT64_shiftLeft-test.js" },
                                        { "element": "UINT64_shiftRight-test.js" },
                                        { "element": "UINT64_subtract-test.js" },
                                        { "element": "UINT64_toNumber-test.js" },
                                        { "element": "UINT64_toString-test.js" },
                                        { "element": "UINT64_xor-test.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "currently-unhandled",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "browser.js" },
                                { "element": "core.js" },
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "cyclist",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "d",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".lint" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "CHANGES" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "auto-bind.js" },
                                { "element": "index.js" },
                                { "element": "lazy.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "auto-bind.js" },
                                        { "element": "index.js" },
                                        { "element": "lazy.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "dashdash",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGES.md" },
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                {
                                    "element": "etc",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "dashdash.bash_completion.in" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "dashdash.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "date-now",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".testem.json" },
                                { "element": ".travis.yml" },
                                { "element": "LICENCE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "seed.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }, { "element": "static" }]
                                }
                            ]
                        },
                        {
                            "element": "debounce",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "History.md" },
                                { "element": "Makefile" },
                                { "element": "Readme.md" },
                                { "element": "component.json" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.html" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "debug",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".coveralls.yml" },
                                { "element": ".eslintrc" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "Makefile" },
                                { "element": "README.md" },
                                { "element": "component.json" },
                                { "element": "karma.conf.js" },
                                { "element": "node.js" },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "browser.js" },
                                        { "element": "debug.js" },
                                        { "element": "index.js" },
                                        { "element": "inspector-log.js" },
                                        { "element": "node.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "decamelize",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "decode-uri-component",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "decompress-response",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "decompress-zip",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "decompress-zip" }]
                                },
                                { "element": "changelog.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "decompress-zip.js" },
                                        { "element": "extractors.js" },
                                        { "element": "file-details.js" },
                                        { "element": "signatures.js" },
                                        { "element": "structures.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "isarray" },
                                        { "element": "readable-stream" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "deep-extend",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "deep-extend.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "deep-is",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.markdown" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "cmp.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "NaN.js" },
                                        { "element": "cmp.js" },
                                        { "element": "neg-vs-pos-0.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "deepmerge",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "changelog.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "umd.js" }]
                                },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                { "element": "license.txt" },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                { "element": "rollup.config.js" }
                            ]
                        },
                        {
                            "element": "default-compare",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "kind-of" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "default-resolution",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "node-version.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "define-properties",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".editorconfig" },
                                { "element": ".eslintrc" },
                                { "element": ".jscs.json" },
                                { "element": ".travis.yml" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "define-property",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "is-accessor-descriptor" },
                                        { "element": "is-buffer" },
                                        { "element": "is-data-descriptor" },
                                        { "element": "is-descriptor" },
                                        { "element": "kind-of" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "defined",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "defined.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "def.js" }, { "element": "falsy.js" }]
                                }
                            ]
                        },
                        {
                            "element": "del",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "glob" },
                                        { "element": "globby" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "delayed-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "License" },
                                { "element": "Makefile" },
                                { "element": "Readme.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "delayed_stream.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "delegates",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "History.md" },
                                { "element": "License" },
                                { "element": "Makefile" },
                                { "element": "Readme.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "denodeify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".editorconfig" },
                                { "element": ".jshintrc" },
                                { "element": ".npmignore" },
                                { "element": "CHANGELOG.md" },
                                { "element": "README.md" },
                                { "element": "bower.json" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "es6-promise-test.js" },
                                        { "element": "es6-shim-test.js" },
                                        { "element": "helpers.js" },
                                        { "element": "lie-test.js" },
                                        { "element": "native-promise-only-test.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "depd",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "History.md" },
                                { "element": "LICENSE" },
                                { "element": "Readme.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "browser" }, { "element": "compat" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "des.js",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jscsrc" },
                                { "element": ".jshintrc" },
                                { "element": ".npmignore" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "des" }, { "element": "des.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "cbc-test.js" },
                                        { "element": "des-test.js" },
                                        { "element": "ede-test.js" },
                                        { "element": "fixtures.js" },
                                        { "element": "utils-test.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "destroy",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "detect-file",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "detect-indent",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "detect-libc",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "detect-libc.js" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "detect-libc.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "diagnostic-channel",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "src" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "semver" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "diagnostic-channel-publishers",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "src" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "diff",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "diff.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "diffie-hellman",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "browser.js" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "dh.js" },
                                        { "element": "generatePrime.js" },
                                        { "element": "primes.json" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "dir-glob",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "doctrine",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "LICENSE.closure-compiler" },
                                { "element": "LICENSE.esprima" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "doctrine.js" },
                                        { "element": "typed.js" },
                                        { "element": "utility.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "documentdb",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "Gruntfile.js" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "auth.js" },
                                        { "element": "base.js" },
                                        { "element": "constants.js" },
                                        { "element": "documentclient.js" },
                                        { "element": "documents.js" },
                                        { "element": "endpointDiscoveryRetryPolicy.js" },
                                        { "element": "globalEndpointManager.js" },
                                        { "element": "hash" },
                                        { "element": "helper.js" },
                                        { "element": "index.js" },
                                        { "element": "platform.js" },
                                        { "element": "queryExecutionContext" },
                                        { "element": "queryIterator.js" },
                                        { "element": "range.js" },
                                        { "element": "request.js" },
                                        { "element": "resourceId.js" },
                                        { "element": "resourceThrottleRetryPolicy.js" },
                                        { "element": "retryOptions.js" },
                                        { "element": "retryUtility.js" },
                                        { "element": "routing" },
                                        { "element": "sessionContainer.js" },
                                        { "element": "sessionReadRetryPolicy.js" },
                                        { "element": "statusCodes.js" },
                                        { "element": "uriFactory.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "typings",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "globals" },
                                        { "element": "index.d.ts" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "dom-serializer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "domelementtype" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "domain-browser",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                {
                                    "element": "source",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "domelementtype",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "domhandler",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "element.js" },
                                        { "element": "node.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "cases" }, { "element": "tests.js" }]
                                }
                            ]
                        },
                        {
                            "element": "domutils",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "helpers.js" },
                                        { "element": "legacy.js" },
                                        { "element": "manipulation.js" },
                                        { "element": "querying.js" },
                                        { "element": "stringify.js" },
                                        { "element": "traversal.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "fixture.js" },
                                        { "element": "tests" },
                                        { "element": "utils.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "duplexer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENCE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "duplexify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "example.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "each-props",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "eachr",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                {
                                    "element": "es2015",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "example.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "source",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "ecc-jsbn",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "LICENSE-jsbn" },
                                        { "element": "ec.js" },
                                        { "element": "sec.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "ecstatic",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "CONTRIBUTORS.md" },
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "cli.sh" },
                                        { "element": "core.js" },
                                        { "element": "express.js" },
                                        { "element": "public" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ecstatic" },
                                        { "element": "ecstatic.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "url-join" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "scripts",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "build-icons.js" },
                                        { "element": "get-icons.sh" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "editions",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".flowconfig" },
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                {
                                    "element": "es2015",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "source",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "editorconfig",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "editorconfig" }]
                                },
                                { "element": "cli.d.ts" },
                                { "element": "cli.js" },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "fnmatch.d.ts" },
                                        { "element": "fnmatch.js" },
                                        { "element": "ini.d.ts" },
                                        { "element": "ini.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "commander" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "ee-first",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "electron-download",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "collaborators.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "cli.js" }, { "element": "index.js" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "deep-extend" },
                                        { "element": "fs-extra" },
                                        { "element": "rc" },
                                        { "element": "semver" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "electron-mksnapshot",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": ".circleci",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "config.yml" }]
                                },
                                { "element": "Jenkinsfile" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "LICENSE" },
                                        { "element": "LICENSES.chromium.html" },
                                        { "element": "mksnapshot.exe" }
                                    ]
                                },
                                { "element": "download-mksnapshot.js" },
                                { "element": "mksnapshot.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "electron-to-chromium",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "README.md" },
                                { "element": "chromium-versions.js" },
                                { "element": "full-chromium-versions.js" },
                                { "element": "full-versions.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "versions.js" }
                            ]
                        },
                        {
                            "element": "elliptic",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "elliptic" },
                                        { "element": "elliptic.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "emojis-list",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "encodeurl",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "end-of-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "enhanced-resolve",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "AliasFieldPlugin.js" },
                                        { "element": "AliasPlugin.js" },
                                        { "element": "AppendPlugin.js" },
                                        { "element": "CachedInputFileSystem.js" },
                                        { "element": "CloneBasenamePlugin.js" },
                                        { "element": "ConcordExtensionsPlugin.js" },
                                        { "element": "ConcordMainPlugin.js" },
                                        { "element": "ConcordModulesPlugin.js" },
                                        { "element": "DescriptionFilePlugin.js" },
                                        { "element": "DescriptionFileUtils.js" },
                                        { "element": "DirectoryExistsPlugin.js" },
                                        { "element": "FileExistsPlugin.js" },
                                        { "element": "FileKindPlugin.js" },
                                        { "element": "JoinRequestPlugin.js" },
                                        { "element": "LogInfoPlugin.js" },
                                        { "element": "MainFieldPlugin.js" },
                                        { "element": "ModuleAppendPlugin.js" },
                                        { "element": "ModuleKindPlugin.js" },
                                        { "element": "ModulesInHierachicDirectoriesPlugin.js" },
                                        { "element": "ModulesInRootPlugin.js" },
                                        { "element": "NextPlugin.js" },
                                        { "element": "NodeJsInputFileSystem.js" },
                                        { "element": "ParsePlugin.js" },
                                        { "element": "Resolver.js" },
                                        { "element": "ResolverFactory.js" },
                                        { "element": "ResultPlugin.js" },
                                        { "element": "SymlinkPlugin.js" },
                                        { "element": "SyncAsyncFileSystemDecorator.js" },
                                        { "element": "TryNextPlugin.js" },
                                        { "element": "UnsafeCachePlugin.js" },
                                        { "element": "UseFilePlugin.js" },
                                        { "element": "concord.js" },
                                        { "element": "createInnerCallback.js" },
                                        { "element": "createInnerContext.js" },
                                        { "element": "forEachBail.js" },
                                        { "element": "getInnerRequest.js" },
                                        { "element": "getPaths.js" },
                                        { "element": "globToRegExp.js" },
                                        { "element": "node.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "entities",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "decode.js" },
                                        { "element": "decode_codepoint.js" },
                                        { "element": "encode.js" }
                                    ]
                                },
                                {
                                    "element": "maps",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "decode.json" },
                                        { "element": "entities.json" },
                                        { "element": "legacy.json" },
                                        { "element": "xml.json" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "mocha.opts" },
                                        { "element": "test.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "env-paths",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "errno",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintrc" },
                                { "element": ".travis.yml" },
                                { "element": "README.md" },
                                { "element": "build.js" },
                                { "element": "cli.js" },
                                { "element": "custom.js" },
                                { "element": "errno.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "error-ex",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "es5-ext",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".editorconfig" },
                                { "element": ".lint" },
                                { "element": ".lintignore" },
                                { "element": ".npmignore" },
                                { "element": "CHANGELOG.md" },
                                { "element": "CHANGES" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "appveyor.yml" },
                                {
                                    "element": "array",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "#" },
                                        { "element": "_is-extensible.js" },
                                        { "element": "_sub-array-dummy-safe.js" },
                                        { "element": "_sub-array-dummy.js" },
                                        { "element": "from" },
                                        { "element": "generate.js" },
                                        { "element": "index.js" },
                                        { "element": "is-plain-array.js" },
                                        { "element": "of" },
                                        { "element": "to-array.js" },
                                        { "element": "valid-array.js" }
                                    ]
                                },
                                {
                                    "element": "boolean",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.js" },
                                        { "element": "is-boolean.js" }
                                    ]
                                },
                                { "element": "circle.yml" },
                                {
                                    "element": "date",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "#" },
                                        { "element": "index.js" },
                                        { "element": "is-date.js" },
                                        { "element": "valid-date.js" }
                                    ]
                                },
                                {
                                    "element": "error",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "#" },
                                        { "element": "custom.js" },
                                        { "element": "index.js" },
                                        { "element": "is-error.js" },
                                        { "element": "valid-error.js" }
                                    ]
                                },
                                {
                                    "element": "function",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "#" },
                                        { "element": "_define-length.js" },
                                        { "element": "constant.js" },
                                        { "element": "identity.js" },
                                        { "element": "index.js" },
                                        { "element": "invoke.js" },
                                        { "element": "is-arguments.js" },
                                        { "element": "is-function.js" },
                                        { "element": "noop.js" },
                                        { "element": "pluck.js" },
                                        { "element": "valid-function.js" }
                                    ]
                                },
                                { "element": "global.js" },
                                { "element": "index.js" },
                                {
                                    "element": "iterable",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "for-each.js" },
                                        { "element": "index.js" },
                                        { "element": "is.js" },
                                        { "element": "validate-object.js" },
                                        { "element": "validate.js" }
                                    ]
                                },
                                {
                                    "element": "json",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.js" },
                                        { "element": "safe-stringify.js" }
                                    ]
                                },
                                {
                                    "element": "math",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "_pack-ieee754.js" },
                                        { "element": "_unpack-ieee754.js" },
                                        { "element": "acosh" },
                                        { "element": "asinh" },
                                        { "element": "atanh" },
                                        { "element": "cbrt" },
                                        { "element": "clz32" },
                                        { "element": "cosh" },
                                        { "element": "expm1" },
                                        { "element": "fround" },
                                        { "element": "hypot" },
                                        { "element": "imul" },
                                        { "element": "index.js" },
                                        { "element": "log10" },
                                        { "element": "log1p" },
                                        { "element": "log2" },
                                        { "element": "sign" },
                                        { "element": "sinh" },
                                        { "element": "tanh" },
                                        { "element": "trunc" }
                                    ]
                                },
                                {
                                    "element": "number",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "#" },
                                        { "element": "epsilon" },
                                        { "element": "index.js" },
                                        { "element": "is-finite" },
                                        { "element": "is-integer" },
                                        { "element": "is-nan" },
                                        { "element": "is-natural.js" },
                                        { "element": "is-number.js" },
                                        { "element": "is-safe-integer" },
                                        { "element": "max-safe-integer" },
                                        { "element": "min-safe-integer" },
                                        { "element": "to-integer.js" },
                                        { "element": "to-pos-integer.js" },
                                        { "element": "to-uint32.js" }
                                    ]
                                },
                                {
                                    "element": "object",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "_iterate.js" },
                                        { "element": "assign" },
                                        { "element": "assign-deep.js" },
                                        { "element": "clear.js" },
                                        { "element": "compact.js" },
                                        { "element": "compare.js" },
                                        { "element": "copy-deep.js" },
                                        { "element": "copy.js" },
                                        { "element": "count.js" },
                                        { "element": "create.js" },
                                        { "element": "ensure-array.js" },
                                        { "element": "ensure-finite-number.js" },
                                        { "element": "ensure-natural-number-value.js" },
                                        { "element": "ensure-natural-number.js" },
                                        { "element": "ensure-promise.js" },
                                        { "element": "eq.js" },
                                        { "element": "every.js" },
                                        { "element": "filter.js" },
                                        { "element": "find-key.js" },
                                        { "element": "find.js" },
                                        { "element": "first-key.js" },
                                        { "element": "flatten.js" },
                                        { "element": "for-each.js" },
                                        { "element": "get-property-names.js" },
                                        { "element": "index.js" },
                                        { "element": "is-array-like.js" },
                                        { "element": "is-callable.js" },
                                        { "element": "is-copy-deep.js" },
                                        { "element": "is-copy.js" },
                                        { "element": "is-empty.js" },
                                        { "element": "is-finite-number.js" },
                                        { "element": "is-number-value.js" },
                                        { "element": "is-object.js" },
                                        { "element": "is-plain-function.js" },
                                        { "element": "is-plain-object.js" },
                                        { "element": "is-promise.js" },
                                        { "element": "is-value.js" },
                                        { "element": "is.js" },
                                        { "element": "key-of.js" },
                                        { "element": "keys" },
                                        { "element": "map-keys.js" },
                                        { "element": "map.js" },
                                        { "element": "mixin-prototypes.js" },
                                        { "element": "mixin.js" },
                                        { "element": "normalize-options.js" },
                                        { "element": "primitive-set.js" },
                                        { "element": "safe-traverse.js" },
                                        { "element": "serialize.js" },
                                        { "element": "set-prototype-of" },
                                        { "element": "some.js" },
                                        { "element": "to-array.js" },
                                        { "element": "unserialize.js" },
                                        { "element": "valid-callable.js" },
                                        { "element": "valid-object.js" },
                                        { "element": "valid-value.js" },
                                        { "element": "validate-array-like-object.js" },
                                        { "element": "validate-array-like.js" },
                                        { "element": "validate-stringifiable-value.js" },
                                        { "element": "validate-stringifiable.js" }
                                    ]
                                },
                                { "element": "optional-chaining.js" },
                                { "element": "package.json" },
                                {
                                    "element": "reg-exp",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "#" },
                                        { "element": "escape.js" },
                                        { "element": "index.js" },
                                        { "element": "is-reg-exp.js" },
                                        { "element": "valid-reg-exp.js" }
                                    ]
                                },
                                { "element": "safe-to-string.js" },
                                {
                                    "element": "string",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "#" },
                                        { "element": "format-method.js" },
                                        { "element": "from-code-point" },
                                        { "element": "index.js" },
                                        { "element": "is-string.js" },
                                        { "element": "random-uniq.js" },
                                        { "element": "raw" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".eslintrc.json" },
                                        { "element": "__tad.js" },
                                        { "element": "array" },
                                        { "element": "boolean" },
                                        { "element": "date" },
                                        { "element": "error" },
                                        { "element": "function" },
                                        { "element": "global.js" },
                                        { "element": "iterable" },
                                        { "element": "json" },
                                        { "element": "math" },
                                        { "element": "number" },
                                        { "element": "object" },
                                        { "element": "optional-chaining.js" },
                                        { "element": "reg-exp" },
                                        { "element": "safe-to-string.js" },
                                        { "element": "string" },
                                        { "element": "to-short-string-representation.js" }
                                    ]
                                },
                                { "element": "to-short-string-representation.js" }
                            ]
                        },
                        {
                            "element": "es6-iterator",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": "#",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "chain.js" }]
                                },
                                { "element": ".editorconfig" },
                                { "element": ".npmignore" },
                                { "element": "CHANGELOG.md" },
                                { "element": "CHANGES" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "appveyor.yml" },
                                { "element": "array.js" },
                                { "element": "for-of.js" },
                                { "element": "get.js" },
                                { "element": "index.js" },
                                { "element": "is-iterable.js" },
                                { "element": "package.json" },
                                { "element": "string.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "#" },
                                        { "element": ".eslintrc.json" },
                                        { "element": "array.js" },
                                        { "element": "for-of.js" },
                                        { "element": "get.js" },
                                        { "element": "index.js" },
                                        { "element": "is-iterable.js" },
                                        { "element": "string.js" },
                                        { "element": "valid-iterable.js" }
                                    ]
                                },
                                { "element": "valid-iterable.js" }
                            ]
                        },
                        {
                            "element": "es6-promise",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "auto.js" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "es6-promise.auto.js" },
                                        { "element": "es6-promise.auto.map" },
                                        { "element": "es6-promise.auto.min.js" },
                                        { "element": "es6-promise.auto.min.map" },
                                        { "element": "es6-promise.js" },
                                        { "element": "es6-promise.map" },
                                        { "element": "es6-promise.min.js" },
                                        { "element": "es6-promise.min.map" }
                                    ]
                                },
                                { "element": "es6-promise.d.ts" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "es6-promise" },
                                        { "element": "es6-promise.auto.js" },
                                        { "element": "es6-promise.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "es6-promisify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "promise.js" },
                                        { "element": "promisify.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "es6-symbol",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".lint" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "CHANGES" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "implement.js" },
                                { "element": "index.js" },
                                { "element": "is-implemented.js" },
                                { "element": "is-native-implemented.js" },
                                { "element": "is-symbol.js" },
                                { "element": "package.json" },
                                { "element": "polyfill.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "implement.js" },
                                        { "element": "index.js" },
                                        { "element": "is-implemented.js" },
                                        { "element": "is-native-implemented.js" },
                                        { "element": "is-symbol.js" },
                                        { "element": "polyfill.js" },
                                        { "element": "validate-symbol.js" }
                                    ]
                                },
                                { "element": "validate-symbol.js" }
                            ]
                        },
                        {
                            "element": "es6-weak-map",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".lint" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "CHANGES" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "implement.js" },
                                { "element": "index.js" },
                                { "element": "is-implemented.js" },
                                { "element": "is-native-implemented.js" },
                                { "element": "is-weak-map.js" },
                                { "element": "package.json" },
                                { "element": "polyfill.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "implement.js" },
                                        { "element": "index.js" },
                                        { "element": "is-implemented.js" },
                                        { "element": "is-native-implemented.js" },
                                        { "element": "is-weak-map.js" },
                                        { "element": "polyfill.js" },
                                        { "element": "valid-weak-map.js" }
                                    ]
                                },
                                { "element": "valid-weak-map.js" }
                            ]
                        },
                        {
                            "element": "escape-html",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "Readme.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "escape-string-regexp",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "escodegen",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.BSD" },
                                { "element": "LICENSE.source-map" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "escodegen.js" },
                                        { "element": "esgenerate.js" }
                                    ]
                                },
                                { "element": "escodegen.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "esprima" },
                                        { "element": "estraverse" },
                                        { "element": "fast-levenshtein" },
                                        { "element": "levn" },
                                        { "element": "optionator" },
                                        { "element": "source-map" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "eslint",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "eslint.js" }]
                                },
                                {
                                    "element": "conf",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "blank-script.json" },
                                        { "element": "category-list.json" },
                                        { "element": "config-schema.js" },
                                        { "element": "default-cli-options.js" },
                                        { "element": "environments.js" },
                                        { "element": "eslint-all.js" },
                                        { "element": "eslint-recommended.js" },
                                        { "element": "replacements.json" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "api.js" },
                                        { "element": "ast-utils.js" },
                                        { "element": "cli-engine.js" },
                                        { "element": "cli.js" },
                                        { "element": "code-path-analysis" },
                                        { "element": "config" },
                                        { "element": "config.js" },
                                        { "element": "file-finder.js" },
                                        { "element": "formatters" },
                                        { "element": "ignored-paths.js" },
                                        { "element": "linter.js" },
                                        { "element": "load-rules.js" },
                                        { "element": "logging.js" },
                                        { "element": "options.js" },
                                        { "element": "report-translator.js" },
                                        { "element": "rules" },
                                        { "element": "rules.js" },
                                        { "element": "testers" },
                                        { "element": "timing.js" },
                                        { "element": "token-store" },
                                        { "element": "util" }
                                    ]
                                },
                                {
                                    "element": "messages",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "extend-config-missing.txt" },
                                        { "element": "no-config-found.txt" },
                                        { "element": "plugin-missing.txt" },
                                        { "element": "whitespace-found.txt" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "chalk" },
                                        { "element": "debug" },
                                        { "element": "eslint-scope" },
                                        { "element": "esprima" },
                                        { "element": "glob" },
                                        { "element": "js-yaml" },
                                        { "element": "progress" },
                                        { "element": "semver" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "eslint-scope",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "definition.js" },
                                        { "element": "index.js" },
                                        { "element": "pattern-visitor.js" },
                                        { "element": "reference.js" },
                                        { "element": "referencer.js" },
                                        { "element": "scope-manager.js" },
                                        { "element": "scope.js" },
                                        { "element": "variable.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "eslint-utils",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "index.js.map" },
                                { "element": "index.mjs" },
                                { "element": "index.mjs.map" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "eslint-visitor-keys",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.js" },
                                        { "element": "visitor-keys.json" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "espree",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "espree.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ast-node-types.js" },
                                        { "element": "comment-attachment.js" },
                                        { "element": "features.js" },
                                        { "element": "token-translator.js" },
                                        { "element": "visitor-keys.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "acorn" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "esprima",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "ChangeLog" },
                                { "element": "LICENSE.BSD" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "esparse.js" },
                                        { "element": "esvalidate.js" }
                                    ]
                                },
                                { "element": "esprima.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "esquery",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "esquery.js" },
                                { "element": "license.txt" },
                                { "element": "package.json" },
                                { "element": "parser.js" }
                            ]
                        },
                        {
                            "element": "esrecurse",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".babelrc" },
                                { "element": "README.md" },
                                { "element": "esrecurse.js" },
                                { "element": "gulpfile.babel.js" },
                                { "element": "package-lock.json" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "estraverse",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".babelrc" },
                                { "element": ".jshintrc" },
                                { "element": "LICENSE.BSD" },
                                { "element": "estraverse.js" },
                                { "element": "gulpfile.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "esutils",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.BSD" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ast.js" },
                                        { "element": "code.js" },
                                        { "element": "keyword.js" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "etag",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "event-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENCE" },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "pretty.js" }]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "map-stream" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "connect.asynct.js" },
                                        { "element": "helper" },
                                        { "element": "merge.asynct.js" },
                                        { "element": "parse.asynct.js" },
                                        { "element": "pause.asynct.js" },
                                        { "element": "pipeline.asynct.js" },
                                        { "element": "readArray.asynct.js" },
                                        { "element": "readable.asynct.js" },
                                        { "element": "replace.asynct.js" },
                                        { "element": "simple-map.asynct.js" },
                                        { "element": "spec.asynct.js" },
                                        { "element": "split.asynct.js" },
                                        { "element": "stringify.js" },
                                        { "element": "writeArray.asynct.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "eventemitter3",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "umd",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "eventemitter3.js" },
                                        { "element": "eventemitter3.min.js" },
                                        { "element": "eventemitter3.min.js.map" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "events",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": ".zuul.yml" },
                                { "element": "History.md" },
                                { "element": "LICENSE" },
                                { "element": "Readme.md" },
                                { "element": "events.js" },
                                { "element": "package.json" },
                                {
                                    "element": "tests",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "add-listeners.js" },
                                        { "element": "check-listener-leaks.js" },
                                        { "element": "common.js" },
                                        { "element": "index.js" },
                                        { "element": "legacy-compat.js" },
                                        { "element": "listener-count.js" },
                                        { "element": "listeners-side-effects.js" },
                                        { "element": "listeners.js" },
                                        { "element": "max-listeners.js" },
                                        { "element": "modify-in-emit.js" },
                                        { "element": "num-args.js" },
                                        { "element": "once.js" },
                                        { "element": "remove-all-listeners.js" },
                                        { "element": "remove-listeners.js" },
                                        { "element": "set-max-listeners-side-effects.js" },
                                        { "element": "subclass.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "evp_bytestokey",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "execa",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "errname.js" },
                                        { "element": "stdio.js" }
                                    ]
                                },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "expand-brackets",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "changelog.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "compilers.js" },
                                        { "element": "parsers.js" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "expand-range",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "fill-range" },
                                        { "element": "is-number" },
                                        { "element": "isobject" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "expand-template",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "expand-tilde",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "express",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "History.md" },
                                { "element": "LICENSE" },
                                { "element": "Readme.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "application.js" },
                                        { "element": "express.js" },
                                        { "element": "middleware" },
                                        { "element": "request.js" },
                                        { "element": "response.js" },
                                        { "element": "router" },
                                        { "element": "utils.js" },
                                        { "element": "view.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "extend",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintrc" },
                                { "element": ".jscs.json" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "component.json" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "extend-shallow",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "external-editor",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "example_async.js" },
                                { "element": "example_sync.js" },
                                {
                                    "element": "main",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "errors" }, { "element": "index.js" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "iconv-lite" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "extglob",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "changelog.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".DS_Store" },
                                        { "element": "compilers.js" },
                                        { "element": "extglob.js" },
                                        { "element": "parsers.js" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "define-property" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "extract-opts",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                {
                                    "element": "es2015",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "source",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "extract-zip",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "LICENSE" },
                                { "element": "cli.js" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "concat-stream" },
                                        { "element": "minimist" },
                                        { "element": "mkdirp" },
                                        { "element": "yauzl" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "extsprintf",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".gitmodules" },
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "Makefile" },
                                { "element": "Makefile.targ" },
                                { "element": "README.md" },
                                { "element": "jsl.node.conf" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "extsprintf.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "fancy-log",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "fast-deep-equal",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintrc.yml" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "benchmark",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".eslintrc.yml" },
                                        { "element": "index.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "spec",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".eslintrc.yml" },
                                        { "element": "index.spec.js" },
                                        { "element": "tests.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "fast-json-stable-stringify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintrc.yml" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "benchmark",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.js" },
                                        { "element": "test.json" }
                                    ]
                                },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "key_cmp.js" },
                                        { "element": "nested.js" },
                                        { "element": "str.js" },
                                        { "element": "value_cmp.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "cmp.js" },
                                        { "element": "nested.js" },
                                        { "element": "str.js" },
                                        { "element": "to-json.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "fast-levenshtein",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "levenshtein.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "fast-plist",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                {
                                    "element": "release",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "src" }]
                                }
                            ]
                        },
                        {
                            "element": "fd-slicer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "test.js" }]
                                }
                            ]
                        },
                        {
                            "element": "figures",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "file-entry-cache",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "cache.js" },
                                { "element": "changelog.md" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "file-uri-to-path",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "History.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "test.js" },
                                        { "element": "tests.json" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "filename-regex",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "fileset",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "fileset.js" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "minimatch" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "tests",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "fixtures" },
                                        { "element": "helper.js" },
                                        { "element": "test-sync.js" },
                                        { "element": "test.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "fill-range",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "repeat-string" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "finalhandler",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "find-cache-dir",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "find-parent-dir",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "git-repo-root.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "find-parent-dir.js" }]
                                }
                            ]
                        },
                        {
                            "element": "find-up",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "findup-sync",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "is-extglob" },
                                        { "element": "is-glob" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "fined",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "first-chunk-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "flagged-respawn",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "is-v8flags.js" },
                                        { "element": "remover.js" },
                                        { "element": "reorder.js" },
                                        { "element": "respawn.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "flat-cache",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "cache.js" },
                                { "element": "changelog.md" },
                                { "element": "package.json" },
                                { "element": "utils.js" }
                            ]
                        },
                        {
                            "element": "flatten",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "flush-write-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "example.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "follow-redirects",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "http.js" },
                                { "element": "https.js" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "debug" }, { "element": "ms" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "for-in",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "for-own",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "forever-agent",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "form-data",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "License" },
                                { "element": "README.md" },
                                { "element": "README.md.bak" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "browser.js" },
                                        { "element": "form_data.js" },
                                        { "element": "populate.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "formatio",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "AUTHORS" },
                                { "element": "LICENSE" },
                                { "element": "Readme.md" },
                                { "element": "autolint.js" },
                                { "element": "buster.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "formatio.js" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "samsam" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "formatio-test.js" }]
                                }
                            ]
                        },
                        {
                            "element": "forwarded",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "fragment-cache",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "fresh",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "from",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE.APACHE2" },
                                { "element": "LICENSE.MIT" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "from2",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "fs-constants",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "browser.js" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "fs-extra",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "copy" },
                                        { "element": "copy-sync" },
                                        { "element": "empty" },
                                        { "element": "ensure" },
                                        { "element": "fs" },
                                        { "element": "index.js" },
                                        { "element": "json" },
                                        { "element": "mkdirs" },
                                        { "element": "move" },
                                        { "element": "move-sync" },
                                        { "element": "output" },
                                        { "element": "path-exists" },
                                        { "element": "remove" },
                                        { "element": "util" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "jsonfile" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "fs-mkdirp-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "mkdirp.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "fs-write-stream-atomic",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "process-nextick-args" },
                                        { "element": "readable-stream" },
                                        { "element": "string_decoder" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "basic.js" },
                                        { "element": "chown.js" },
                                        { "element": "rename-eperm.js" },
                                        { "element": "rename-fail.js" },
                                        { "element": "slow-close.js" },
                                        { "element": "toolong.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "fs.realpath",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "old.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "fstream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "filter-pipe.js" },
                                        { "element": "pipe.js" },
                                        { "element": "reader.js" },
                                        { "element": "symlink-write.js" }
                                    ]
                                },
                                { "element": "fstream.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "abstract.js" },
                                        { "element": "collect.js" },
                                        { "element": "dir-reader.js" },
                                        { "element": "dir-writer.js" },
                                        { "element": "file-reader.js" },
                                        { "element": "file-writer.js" },
                                        { "element": "get-type.js" },
                                        { "element": "link-reader.js" },
                                        { "element": "link-writer.js" },
                                        { "element": "proxy-reader.js" },
                                        { "element": "proxy-writer.js" },
                                        { "element": "reader.js" },
                                        { "element": "socket-reader.js" },
                                        { "element": "writer.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "glob" },
                                        { "element": "rimraf" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "function-bind",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".editorconfig" },
                                { "element": ".eslintrc" },
                                { "element": ".jscs.json" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "implementation.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".eslintrc" },
                                        { "element": "index.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "functional-red-black-tree",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bench",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "test.js" }]
                                },
                                { "element": "package.json" },
                                { "element": "rbtree.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "test.js" }]
                                }
                            ]
                        },
                        {
                            "element": "gauge",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "base-theme.js" },
                                { "element": "error.js" },
                                { "element": "has-color.js" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "is-fullwidth-code-point" },
                                        { "element": "string-width" },
                                        { "element": "strip-ansi" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "plumbing.js" },
                                { "element": "process.js" },
                                { "element": "progress-bar.js" },
                                { "element": "render-template.js" },
                                { "element": "set-immediate.js" },
                                { "element": "set-interval.js" },
                                { "element": "spin.js" },
                                { "element": "template-item.js" },
                                { "element": "theme-set.js" },
                                { "element": "themes.js" },
                                { "element": "wide-truncate.js" }
                            ]
                        },
                        {
                            "element": "generate-function",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "README.md" },
                                { "element": "example.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "generate-object-property",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "get-caller-file",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "get-stdin",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "get-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "buffer-stream.js" },
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "get-value",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "getmac",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".babelrc" },
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "bin.js" },
                                {
                                    "element": "es2015",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                {
                                    "element": "esnext",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "source",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.coffee" }]
                                }
                            ]
                        },
                        {
                            "element": "getpass",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "github-from-package",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "package.json" },
                                        { "element": "url.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "a.json" },
                                        { "element": "b.json" },
                                        { "element": "c.json" },
                                        { "element": "d.json" },
                                        { "element": "e.json" },
                                        { "element": "url.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "github-releases-ms",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "Gruntfile.js" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "github-releases" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "cli.js" },
                                        { "element": "filters.js" },
                                        { "element": "github.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "aws4" },
                                        { "element": "combined-stream" },
                                        { "element": "extend" },
                                        { "element": "form-data" },
                                        { "element": "har-validator" },
                                        { "element": "mime-db" },
                                        { "element": "mime-types" },
                                        { "element": "minimist" },
                                        { "element": "oauth-sign" },
                                        { "element": "optimist" },
                                        { "element": "qs" },
                                        { "element": "request" },
                                        { "element": "safe-buffer" },
                                        { "element": "tough-cookie" },
                                        { "element": "uuid" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "tasks",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "download-github-releases-task.js" }]
                                },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "glob",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "common.js" },
                                { "element": "glob.js" },
                                { "element": "package.json" },
                                { "element": "sync.js" }
                            ]
                        },
                        {
                            "element": "glob-base",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "glob-parent" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "glob-parent",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "is-extglob" },
                                        { "element": "is-glob" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "glob-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "glob" }]
                                },
                                { "element": "package.json" },
                                { "element": "readable.js" }
                            ]
                        },
                        {
                            "element": "glob-watcher",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "global-modules",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "global-modules-path",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.js" },
                                        { "element": "process-wrapper.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "global-prefix",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "which" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "globals",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "globals.json" },
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "globby",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "gitignore.js" },
                                { "element": "index.js" },
                                { "element": "license" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "glob" }, { "element": "pify" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "glogg",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "graceful-fs",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "fs.js" },
                                { "element": "graceful-fs.js" },
                                { "element": "legacy-streams.js" },
                                { "element": "package.json" },
                                { "element": "polyfills.js" }
                            ]
                        },
                        {
                            "element": "growl",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "History.md" },
                                { "element": "Readme.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "growl.js" }]
                                },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "gulp",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "gulp.js" }]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "gulp-atom-electron",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "README.md" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "clone" },
                                        { "element": "glob" },
                                        { "element": "rcedit" },
                                        { "element": "rimraf" },
                                        { "element": "semver" },
                                        { "element": "vinyl" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "darwin.js" },
                                        { "element": "download.js" },
                                        { "element": "index.js" },
                                        { "element": "linux.js" },
                                        { "element": "util.js" },
                                        { "element": "win32.js" }
                                    ]
                                },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "gulp-azure-storage",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "upload.js" }]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "download.js" },
                                        { "element": "upload.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "clone" },
                                        { "element": "delayed-stream" },
                                        { "element": "mime" },
                                        { "element": "minimist" },
                                        { "element": "optimist" },
                                        { "element": "queue" },
                                        { "element": "vinyl" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "gulp-bom",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "arr-diff" },
                                        { "element": "arr-union" },
                                        { "element": "array-slice" },
                                        { "element": "extend-shallow" },
                                        { "element": "kind-of" },
                                        { "element": "plugin-error" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "gulp-buffer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "Makefile" },
                                { "element": "Readme.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "isarray" },
                                        { "element": "object-keys" },
                                        { "element": "readable-stream" },
                                        { "element": "through2" },
                                        { "element": "xtend" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "gulp-buffer.js" }]
                                }
                            ]
                        },
                        {
                            "element": "gulp-cli",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "gulp.js" }]
                                },
                                {
                                    "element": "completion",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "README.md" },
                                        { "element": "bash" },
                                        { "element": "fish" },
                                        { "element": "powershell" },
                                        { "element": "zsh" }
                                    ]
                                },
                                { "element": "gulp.1" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "shared" }, { "element": "versioned" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "ansi-colors" },
                                        { "element": "cliui" },
                                        { "element": "fancy-log" },
                                        { "element": "is-fullwidth-code-point" },
                                        { "element": "os-locale" },
                                        { "element": "string-width" },
                                        { "element": "strip-ansi" },
                                        { "element": "which-module" },
                                        { "element": "yargs" },
                                        { "element": "yargs-parser" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "gulp-concat",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "gulp-cssnano",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "gulp-eslint",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "acorn" },
                                        { "element": "acorn-jsx" },
                                        { "element": "ajv" },
                                        { "element": "ansi-escapes" },
                                        { "element": "ansi-regex" },
                                        { "element": "chalk" },
                                        { "element": "chardet" },
                                        { "element": "cross-spawn" },
                                        { "element": "debug" },
                                        { "element": "eslint" },
                                        { "element": "espree" },
                                        { "element": "esprima" },
                                        { "element": "esquery" },
                                        { "element": "external-editor" },
                                        { "element": "fancy-log" },
                                        { "element": "fast-deep-equal" },
                                        { "element": "glob" },
                                        { "element": "globals" },
                                        { "element": "iconv-lite" },
                                        { "element": "ignore" },
                                        { "element": "inquirer" },
                                        { "element": "js-yaml" },
                                        { "element": "json-schema-traverse" },
                                        { "element": "ms" },
                                        { "element": "progress" },
                                        { "element": "regexpp" },
                                        { "element": "rxjs" },
                                        { "element": "semver" },
                                        { "element": "slice-ansi" },
                                        { "element": "table" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "util.js" }
                            ]
                        },
                        {
                            "element": "gulp-filter",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "arr-diff" },
                                        { "element": "arr-union" },
                                        { "element": "array-slice" },
                                        { "element": "extend-shallow" },
                                        { "element": "kind-of" },
                                        { "element": "plugin-error" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "gulp-flatmap",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "arr-diff" },
                                        { "element": "arr-union" },
                                        { "element": "array-slice" },
                                        { "element": "extend-shallow" },
                                        { "element": "kind-of" },
                                        { "element": "plugin-error" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "gulp-gunzip",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "vinyl" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "gulp-json-editor",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintrc" },
                                { "element": ".travis.yml" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "readable-stream" },
                                        { "element": "string_decoder" },
                                        { "element": "through2" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "byFunction.js" },
                                        { "element": "byObject.js" },
                                        { "element": "error.js" },
                                        { "element": "option.js" },
                                        { "element": "test.json" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "gulp-plumber",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "arr-diff" },
                                        { "element": "arr-union" },
                                        { "element": "array-slice" },
                                        { "element": "extend-shallow" },
                                        { "element": "fancy-log" },
                                        { "element": "kind-of" },
                                        { "element": "plugin-error" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "gulp-remote-src",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "CHANGELOG.md" },
                                { "element": "Gulpfile.js" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "aws4" },
                                        { "element": "combined-stream" },
                                        { "element": "extend" },
                                        { "element": "form-data" },
                                        { "element": "har-validator" },
                                        { "element": "mime-db" },
                                        { "element": "mime-types" },
                                        { "element": "oauth-sign" },
                                        { "element": "qs" },
                                        { "element": "request" },
                                        { "element": "safe-buffer" },
                                        { "element": "tough-cookie" },
                                        { "element": "uuid" },
                                        { "element": "vinyl" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "gulp-rename",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "gulp-replace",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "gulp-shell",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintrc" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "gulpfile.js" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ansi-styles" },
                                        { "element": "arr-diff" },
                                        { "element": "arr-union" },
                                        { "element": "array-slice" },
                                        { "element": "async" },
                                        { "element": "chalk" },
                                        { "element": "extend-shallow" },
                                        { "element": "fancy-log" },
                                        { "element": "has-flag" },
                                        { "element": "kind-of" },
                                        { "element": "plugin-error" },
                                        { "element": "supports-color" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "gulp-sourcemaps",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "clone-stats" },
                                        { "element": "convert-source-map" },
                                        { "element": "replace-ext" },
                                        { "element": "vinyl" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "gulp-symdest",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "arr-diff" },
                                        { "element": "array-unique" },
                                        { "element": "braces" },
                                        { "element": "clone-stats" },
                                        { "element": "duplexify" },
                                        { "element": "expand-brackets" },
                                        { "element": "extglob" },
                                        { "element": "glob-stream" },
                                        { "element": "is-valid-glob" },
                                        { "element": "isarray" },
                                        { "element": "micromatch" },
                                        { "element": "normalize-path" },
                                        { "element": "ordered-read-streams" },
                                        { "element": "queue" },
                                        { "element": "replace-ext" },
                                        { "element": "to-absolute-glob" },
                                        { "element": "vinyl" },
                                        { "element": "vinyl-fs" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "gulp-tsb",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE.txt" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "builder.js" },
                                        { "element": "index.js" },
                                        { "element": "tests" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "ansi-colors" },
                                        { "element": "fancy-log" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "gulp-tslint",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": ".github",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "ISSUE_TEMPLATE" }]
                                },
                                { "element": ".npmignore" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "chalk" },
                                        { "element": "fancy-log" },
                                        { "element": "supports-color" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "tsconfig.json" }
                            ]
                        },
                        {
                            "element": "gulp-uglify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "composer.js" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "create-error.js" },
                                        { "element": "gulp-uglify-error.js" },
                                        { "element": "log.js" },
                                        { "element": "minify.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "lodash" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "gulp-untar",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "clone-stats" },
                                        { "element": "event-stream" },
                                        { "element": "replace-ext" },
                                        { "element": "split" },
                                        { "element": "stream-combiner" },
                                        { "element": "vinyl" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "gulp-vinyl-zip",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintrc" },
                                { "element": ".travis.yml" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "dest" },
                                        { "element": "src" },
                                        { "element": "vinyl-zip.js" },
                                        { "element": "zip" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "clone" },
                                        { "element": "queue" },
                                        { "element": "vinyl" },
                                        { "element": "yauzl" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "assets" }, { "element": "tests.js" }]
                                }
                            ]
                        },
                        {
                            "element": "gulplog",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "handlebars",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".gitattributes" },
                                { "element": ".gitmodules" },
                                {
                                    "element": ".idea",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "compiler.xml" },
                                        { "element": "copyright" },
                                        { "element": "dictionaries" },
                                        { "element": "handlebars.js.iml" },
                                        { "element": "inspectionProfiles" },
                                        { "element": "jsLibraryMappings.xml" },
                                        { "element": "misc.xml" },
                                        { "element": "modules.xml" },
                                        { "element": "vcs.xml" },
                                        { "element": "watcherTasks.xml" },
                                        { "element": "workspace.xml" }
                                    ]
                                },
                                { "element": ".istanbul.yml" },
                                { "element": ".npmignore" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "FAQ.md" },
                                { "element": "LICENSE" },
                                { "element": "README.markdown" },
                                { "element": "appveyor.yml" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "handlebars" }]
                                },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "amd" },
                                        { "element": "cjs" },
                                        { "element": "handlebars.amd.js" },
                                        { "element": "handlebars.amd.min.js" },
                                        { "element": "handlebars.js" },
                                        { "element": "handlebars.min.js" },
                                        { "element": "handlebars.runtime.amd.js" },
                                        { "element": "handlebars.runtime.amd.min.js" },
                                        { "element": "handlebars.runtime.js" },
                                        { "element": "handlebars.runtime.min.js" }
                                    ]
                                },
                                {
                                    "element": "docs",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "compiler-api.md" },
                                        { "element": "decorators-api.md" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "handlebars" },
                                        { "element": "handlebars.js" },
                                        { "element": "handlebars.runtime.js" },
                                        { "element": "index.js" },
                                        { "element": "precompiler.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "camelcase" },
                                        { "element": "cliui" },
                                        { "element": "minimist" },
                                        { "element": "optimist" },
                                        { "element": "uglify-js" },
                                        { "element": "yargs" }
                                    ]
                                },
                                { "element": "package-lock.json" },
                                { "element": "package.json" },
                                { "element": "print-script" },
                                { "element": "release-notes.md" },
                                { "element": "runtime.js" }
                            ]
                        },
                        {
                            "element": "har-schema",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "afterRequest.json" },
                                        { "element": "beforeRequest.json" },
                                        { "element": "browser.json" },
                                        { "element": "cache.json" },
                                        { "element": "content.json" },
                                        { "element": "cookie.json" },
                                        { "element": "creator.json" },
                                        { "element": "entry.json" },
                                        { "element": "har.json" },
                                        { "element": "header.json" },
                                        { "element": "index.js" },
                                        { "element": "log.json" },
                                        { "element": "page.json" },
                                        { "element": "pageTimings.json" },
                                        { "element": "postData.json" },
                                        { "element": "query.json" },
                                        { "element": "request.json" },
                                        { "element": "response.json" },
                                        { "element": "timings.json" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "har-validator",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "async.js" },
                                        { "element": "error.js" },
                                        { "element": "promise.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "ajv" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "has",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintrc" },
                                { "element": ".npmignore" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.mkd" },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".jshintrc" },
                                        { "element": "index.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "has-ansi",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "has-flag",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "has-gulplog",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "has-symbols",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintrc" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "shams.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.js" },
                                        { "element": "shams" },
                                        { "element": "tests.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "has-unicode",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "has-value",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "has-values",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "kind-of" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "hash-base",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "hash.js",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintrc.js" },
                                { "element": ".travis.yml" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "hash" },
                                        { "element": "hash.d.ts" },
                                        { "element": "hash.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "hash-test.js" },
                                        { "element": "hmac-test.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "hawk",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "client.js" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "browser.js" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "browser.js" },
                                        { "element": "client.js" },
                                        { "element": "crypto.js" },
                                        { "element": "index.js" },
                                        { "element": "server.js" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "boom" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "he",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE-MIT.txt" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "he" }]
                                },
                                { "element": "he.js" },
                                {
                                    "element": "man",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "he.1" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "hmac-drbg",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "hmac-drbg.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "drbg-test.js" },
                                        { "element": "fixtures" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "hoek",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "escape.js" },
                                        { "element": "index.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "homedir-polyfill",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "hosted-git-info",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "git-host-info.js" },
                                { "element": "git-host.js" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "html-comment-regex",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "htmlparser2",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "CollectingHandler.js" },
                                        { "element": "FeedHandler.js" },
                                        { "element": "Parser.js" },
                                        { "element": "ProxyHandler.js" },
                                        { "element": "Stream.js" },
                                        { "element": "Tokenizer.js" },
                                        { "element": "WritableStream.js" },
                                        { "element": "index.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "http-errors",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "setprototypeof" },
                                        { "element": "statuses" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "http-proxy",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": ".nyc_output",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "964792f65a1be0c07a24aa0ccfb5d038.json" },
                                        { "element": "a290d7f5908ec7d06d33ee34e792483c.json" },
                                        { "element": "bb60b90ed8ee70af09b130b7e0e44671.json" }
                                    ]
                                },
                                { "element": "CODE_OF_CONDUCT.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "codecov.yml" },
                                {
                                    "element": "coverage",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "lcov-report" },
                                        { "element": "lcov.info" }
                                    ]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "http-proxy" },
                                        { "element": "http-proxy.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "http-proxy-agent",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "History.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "debug" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ssl-cert-snakeoil.key" },
                                        { "element": "ssl-cert-snakeoil.pem" },
                                        { "element": "test.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "http-server",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "http-server" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "http-server.js" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "minimist" },
                                        { "element": "optimist" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "http-signature",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".dir-locals.el" },
                                { "element": ".npmignore" },
                                { "element": "CHANGES.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "http_signing.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.js" },
                                        { "element": "parser.js" },
                                        { "element": "signer.js" },
                                        { "element": "utils.js" },
                                        { "element": "verify.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "https-browserify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" }
                            ]
                        },
                        {
                            "element": "https-proxy-agent",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "History.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "debug" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ssl-cert-snakeoil.key" },
                                        { "element": "ssl-cert-snakeoil.pem" },
                                        { "element": "test.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "husky",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "CHANGELOG.md" },
                                { "element": "HOOKS.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "install.js" },
                                        { "element": "uninstall.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "normalize-path" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "hooks.json" },
                                        { "element": "index.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "iconv-lite",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "Changelog.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "encodings",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "dbcs-codec.js" },
                                        { "element": "dbcs-data.js" },
                                        { "element": "index.js" },
                                        { "element": "internal.js" },
                                        { "element": "sbcs-codec.js" },
                                        { "element": "sbcs-data-generated.js" },
                                        { "element": "sbcs-data.js" },
                                        { "element": "tables" },
                                        { "element": "utf16.js" },
                                        { "element": "utf32.js" },
                                        { "element": "utf7.js" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "bom-handling.js" },
                                        { "element": "extend-node.js" },
                                        { "element": "index.d.ts" },
                                        { "element": "index.js" },
                                        { "element": "streams.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "ieee754",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "iferr",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.coffee" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.coffee" },
                                        { "element": "mocha.opts" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "ignore",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "ignore.js" },
                                { "element": "index.d.ts" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "import-fresh",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "resolve-from" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "import-local",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": "fixtures",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "cli.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "imurmurhash",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "imurmurhash.js" },
                                { "element": "imurmurhash.min.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "indent-string",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "indexes-of",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "indexof",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "Makefile" },
                                { "element": "Readme.md" },
                                { "element": "component.json" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "inflight",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "inflight.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "inherits",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "inherits.js" },
                                { "element": "inherits_browser.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "ini",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "ini.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "innosetup",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "Gruntfile.js" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Compil32.exe" },
                                        { "element": "Default.isl" },
                                        { "element": "ISCC.exe" },
                                        { "element": "ISCmplr.dll" },
                                        { "element": "ISPP.chm" },
                                        { "element": "ISPP.dll" },
                                        { "element": "ISPPBuiltins.iss" },
                                        { "element": "ISetup.chm" },
                                        { "element": "Languages" },
                                        { "element": "Setup.e32" },
                                        { "element": "SetupLdr.e32" },
                                        { "element": "WizModernImage-IS.bmp" },
                                        { "element": "WizModernImage.bmp" },
                                        { "element": "WizModernSmallImage-IS.bmp" },
                                        { "element": "WizModernSmallImage.bmp" },
                                        { "element": "isbunzip.dll" },
                                        { "element": "isbzip.dll" },
                                        { "element": "isfaq.htm" },
                                        { "element": "islzma.dll" },
                                        { "element": "islzma32.exe" },
                                        { "element": "islzma64.exe" },
                                        { "element": "isscint.dll" },
                                        { "element": "isunzlib.dll" },
                                        { "element": "iszlib.dll" },
                                        { "element": "license.txt" },
                                        { "element": "whatsnew.htm" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "iscc" }, { "element": "iscc.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "tasks",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "grunt-iscc.js" }]
                                }
                            ]
                        },
                        {
                            "element": "inquirer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "inquirer.js" },
                                        { "element": "objects" },
                                        { "element": "prompts" },
                                        { "element": "ui" },
                                        { "element": "utils" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "chalk" }, { "element": "lodash" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "int64-buffer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": ".zuul.yml" },
                                { "element": "LICENSE" },
                                { "element": "Makefile" },
                                { "element": "README.md" },
                                { "element": "bower.json" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "int64-buffer.min.js" }]
                                },
                                { "element": "int64-buffer.d.ts" },
                                { "element": "int64-buffer.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "test.html" },
                                        { "element": "test.js" },
                                        { "element": "zuul" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "interpret",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "invert-kv",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "ip",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jscsrc" },
                                { "element": ".jshintrc" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "ip.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "api-test.js" }]
                                }
                            ]
                        },
                        {
                            "element": "ipaddr.js",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "Cakefile" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "bower.json" },
                                { "element": "ipaddr.min.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "ipaddr.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "ipaddr.coffee" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "ipaddr.test.coffee" }]
                                }
                            ]
                        },
                        {
                            "element": "is",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE.md" },
                                { "element": "Makefile" },
                                { "element": "README.md" },
                                { "element": "component.json" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "is-absolute",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-absolute-url",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "is-accessor-descriptor",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "kind-of" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-arrayish",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".editorconfig" },
                                { "element": ".istanbul.yml" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-binary-path",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "is-buffer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "basic.js" }]
                                }
                            ]
                        },
                        {
                            "element": "is-builtin-module",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "is-ci",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "is-data-descriptor",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "kind-of" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-descriptor",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "kind-of" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-dotfile",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-equal-shallow",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-extendable",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-extglob",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-finite",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "is-fullwidth-code-point",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "is-glob",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-my-json-valid",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "example.js" },
                                { "element": "formats.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "require.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "fixtures" },
                                        { "element": "json-schema-draft4" },
                                        { "element": "json-schema.js" },
                                        { "element": "misc.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "is-negated-glob",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-number",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-path-cwd",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "is-path-in-cwd",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "is-path-inside",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "is-plain-obj",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "is-plain-object",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-posix-bracket",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-primitive",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-promise",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "is-property",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "is-property.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-relative",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-resolvable",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "is-svg",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "is-typedarray",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "is-unc-path",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-utf8",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "is-utf8.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-valid-glob",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-windows",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "is-wsl",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "isarray",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "Makefile" },
                                { "element": "README.md" },
                                { "element": "component.json" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "isexe",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "mode.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "basic.js" }]
                                },
                                { "element": "windows.js" }
                            ]
                        },
                        {
                            "element": "isobject",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "isstream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintrc" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "isstream.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "istanbul",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "assets" },
                                        { "element": "cli.js" },
                                        { "element": "collector.js" },
                                        { "element": "command" },
                                        { "element": "config.js" },
                                        { "element": "hook.js" },
                                        { "element": "instrumenter.js" },
                                        { "element": "object-utils.js" },
                                        { "element": "register-plugins.js" },
                                        { "element": "report" },
                                        { "element": "reporter.js" },
                                        { "element": "store" },
                                        { "element": "util" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "abbrev" },
                                        { "element": "esprima" },
                                        { "element": "has-flag" },
                                        { "element": "resolve" },
                                        { "element": "supports-color" },
                                        { "element": "wordwrap" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "istextorbinary",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "lib" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "jade",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "jade" }]
                                },
                                { "element": "index.js" },
                                { "element": "jade.js" },
                                { "element": "jade.md" },
                                { "element": "jade.min.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "compiler.js" },
                                        { "element": "doctypes.js" },
                                        { "element": "filters.js" },
                                        { "element": "inline-tags.js" },
                                        { "element": "jade.js" },
                                        { "element": "lexer.js" },
                                        { "element": "nodes" },
                                        { "element": "parser.js" },
                                        { "element": "runtime.js" },
                                        { "element": "self-closing.js" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "commander" }, { "element": "mkdirp" }]
                                },
                                { "element": "package.json" },
                                { "element": "runtime.js" },
                                { "element": "runtime.min.js" },
                                { "element": "test.jade" },
                                {
                                    "element": "testing",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "head.jade" },
                                        { "element": "index.jade" },
                                        { "element": "index.js" },
                                        { "element": "layout.jade" },
                                        { "element": "user.jade" },
                                        { "element": "user.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "js-base64",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "1x1.png" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "base64.html" },
                                { "element": "base64.js" },
                                { "element": "base64.min.js" },
                                { "element": "base64_utf8" },
                                { "element": "bower.json" },
                                {
                                    "element": "old",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "base64-1.7.js" }]
                                },
                                { "element": "package.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "js-beautify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "js",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "bin" },
                                        { "element": "index.js" },
                                        { "element": "lib" },
                                        { "element": "src" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "@types" },
                                        { "element": "commander" },
                                        { "element": "editorconfig" },
                                        { "element": "glob" },
                                        { "element": "lru-cache" },
                                        { "element": "nopt" },
                                        { "element": "osenv" },
                                        { "element": "semver" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "js-tokens",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "js-yaml",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "js-yaml.js" }]
                                },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "js-yaml.js" },
                                        { "element": "js-yaml.min.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "js-yaml" },
                                        { "element": "js-yaml.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "esprima" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "jsbn",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "example.html" },
                                { "element": "example.js" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "jschardet",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "CONTRIBUTORS" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "jschardet.js" },
                                        { "element": "jschardet.min.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "big5freq.js" },
                                        { "element": "big5prober.js" },
                                        { "element": "chardistribution.js" },
                                        { "element": "charsetgroupprober.js" },
                                        { "element": "charsetprober.js" },
                                        { "element": "codingstatemachine.js" },
                                        { "element": "constants.js" },
                                        { "element": "escprober.js" },
                                        { "element": "escsm.js" },
                                        { "element": "eucjpprober.js" },
                                        { "element": "euckrfreq.js" },
                                        { "element": "euckrprober.js" },
                                        { "element": "euctwfreq.js" },
                                        { "element": "euctwprober.js" },
                                        { "element": "gb2312freq.js" },
                                        { "element": "gb2312prober.js" },
                                        { "element": "hebrewprober.js" },
                                        { "element": "index.js" },
                                        { "element": "init.js" },
                                        { "element": "jisfreq.js" },
                                        { "element": "jpcntx.js" },
                                        { "element": "langbulgarianmodel.js" },
                                        { "element": "langcyrillicmodel.js" },
                                        { "element": "langgreekmodel.js" },
                                        { "element": "langhebrewmodel.js" },
                                        { "element": "langhungarianmodel.js" },
                                        { "element": "langthaimodel.js" },
                                        { "element": "latin1prober.js" },
                                        { "element": "mbcharsetprober.js" },
                                        { "element": "mbcsgroupprober.js" },
                                        { "element": "mbcssm.js" },
                                        { "element": "sbcharsetprober.js" },
                                        { "element": "sbcsgroupprober.js" },
                                        { "element": "sjisprober.js" },
                                        { "element": "universaldetector.js" },
                                        { "element": "utf8prober.js" }
                                    ]
                                },
                                {
                                    "element": "tests",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.html" },
                                        { "element": "jschardet.js" },
                                        { "element": "qunit" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "jsdom-no-contextify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "Changelog.md" },
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "README.md" },
                                        { "element": "jsdom" },
                                        { "element": "jsdom.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "json-edm-parser",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                { "element": "parser.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "boundary.js" },
                                        { "element": "edm.js" },
                                        { "element": "invalid.js" },
                                        { "element": "offset.js" },
                                        { "element": "primitives.js" },
                                        { "element": "utf8.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "json-parse-better-errors",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "json-schema",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                {
                                    "element": "draft-00",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "hyper-schema" },
                                        { "element": "json-ref" },
                                        { "element": "links" },
                                        { "element": "schema" }
                                    ]
                                },
                                {
                                    "element": "draft-01",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "hyper-schema" },
                                        { "element": "json-ref" },
                                        { "element": "links" },
                                        { "element": "schema" }
                                    ]
                                },
                                {
                                    "element": "draft-02",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "hyper-schema" },
                                        { "element": "json-ref" },
                                        { "element": "links" },
                                        { "element": "schema" }
                                    ]
                                },
                                {
                                    "element": "draft-03",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "examples" },
                                        { "element": "hyper-schema" },
                                        { "element": "json-ref" },
                                        { "element": "links" },
                                        { "element": "schema" }
                                    ]
                                },
                                {
                                    "element": "draft-04",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "hyper-schema" },
                                        { "element": "links" },
                                        { "element": "schema" }
                                    ]
                                },
                                { "element": "draft-zyp-json-schema-03.xml" },
                                { "element": "draft-zyp-json-schema-04.xml" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "links.js" },
                                        { "element": "validate.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "tests.js" }]
                                }
                            ]
                        },
                        {
                            "element": "json-schema-traverse",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintrc.yml" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "spec",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".eslintrc.yml" },
                                        { "element": "fixtures" },
                                        { "element": "index.spec.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "json-stable-stringify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "key_cmp.js" },
                                        { "element": "nested.js" },
                                        { "element": "str.js" },
                                        { "element": "value_cmp.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "cmp.js" },
                                        { "element": "nested.js" },
                                        { "element": "replacer.js" },
                                        { "element": "space.js" },
                                        { "element": "str.js" },
                                        { "element": "to-json.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "json-stable-stringify-without-jsonify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "key_cmp.js" },
                                        { "element": "nested.js" },
                                        { "element": "str.js" },
                                        { "element": "value_cmp.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "cmp.js" },
                                        { "element": "nested.js" },
                                        { "element": "replacer.js" },
                                        { "element": "space.js" },
                                        { "element": "str.js" },
                                        { "element": "to-json.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "json-stringify-safe",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "Makefile" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                { "element": "stringify.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "mocha.opts" },
                                        { "element": "stringify_test.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "json5",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "cli.js" },
                                        { "element": "json5.js" },
                                        { "element": "require.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "jsonfile",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "appveyor.yml" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "jsonify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.markdown" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "parse.js" },
                                        { "element": "stringify.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "parse.js" },
                                        { "element": "stringify.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "jsonparse",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.markdown" },
                                { "element": "bench.js" },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "twitterfeed.js" }]
                                },
                                { "element": "jsonparse.js" },
                                { "element": "package.json" },
                                {
                                    "element": "samplejson",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "basic.json" },
                                        { "element": "basic2.json" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "boundary.js" },
                                        { "element": "offset.js" },
                                        { "element": "primitives.js" },
                                        { "element": "unvalid.js" },
                                        { "element": "utf8.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "jsonpointer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "jsonpointer.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "jsprim",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGES.md" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "jsprim.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "just-debounce",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintrc" },
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "keytar",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "binding.gyp" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Release" },
                                        { "element": "binding.sln" },
                                        { "element": "config.gypi" },
                                        { "element": "keytar.vcxproj" },
                                        { "element": "keytar.vcxproj.filters" }
                                    ]
                                },
                                { "element": "keytar.d.ts" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "keytar.js" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "nan" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "async.cc" },
                                        { "element": "async.h" },
                                        { "element": "credentials.h" },
                                        { "element": "keytar.h" },
                                        { "element": "keytar_mac.cc" },
                                        { "element": "keytar_posix.cc" },
                                        { "element": "keytar_win.cc" },
                                        { "element": "main.cc" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "kind-of",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "is-buffer" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "klaw",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "assign.js" },
                                        { "element": "index.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "last-run",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "lazy-cache",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "lazy.js",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "CHANGES.md" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                { "element": "README_zh_CN.md" },
                                {
                                    "element": "autodoc",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "handlers.js" }]
                                },
                                { "element": "bower.json" },
                                { "element": "component.json" },
                                {
                                    "element": "experimental",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "lazy.es6.js" },
                                        { "element": "lazy.json.js" }
                                    ]
                                },
                                { "element": "lazy.js" },
                                { "element": "lazy.min.js" },
                                { "element": "lazy.node.js" },
                                { "element": "package.json" },
                                {
                                    "element": "perf",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "perf_race.js" }]
                                }
                            ]
                        },
                        {
                            "element": "lazystream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "lazystream.js" }]
                                },
                                { "element": "package.json" },
                                { "element": "secret" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "data.md" },
                                        { "element": "fs_test.js" },
                                        { "element": "helper.js" },
                                        { "element": "pipe_test.js" },
                                        { "element": "readable_test.js" },
                                        { "element": "writable_test.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "lcid",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "lcid.json" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "lcov-parse",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "coverage",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "coverage.json" },
                                        { "element": "lcov-report" },
                                        { "element": "lcov.info" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "lead",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "levn",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "cast.js" },
                                        { "element": "coerce.js" },
                                        { "element": "index.js" },
                                        { "element": "parse-string.js" },
                                        { "element": "parse.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "liftoff",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "build_config_name.js" },
                                        { "element": "file_search.js" },
                                        { "element": "find_config.js" },
                                        { "element": "find_cwd.js" },
                                        { "element": "get_node_flags.js" },
                                        { "element": "parse_options.js" },
                                        { "element": "register_loader.js" },
                                        { "element": "silent_require.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "linkify-it",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "re.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "load-json-file",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "loader-runner",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "LoaderRunner.js" },
                                        { "element": "loadLoader.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "loader-utils",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "getCurrentRequest.js" },
                                        { "element": "getHashDigest.js" },
                                        { "element": "getOptions.js" },
                                        { "element": "getRemainingRequest.js" },
                                        { "element": "index.js" },
                                        { "element": "interpolateName.js" },
                                        { "element": "isUrlRequest.js" },
                                        { "element": "parseQuery.js" },
                                        { "element": "parseString.js" },
                                        { "element": "stringifyRequest.js" },
                                        { "element": "urlToRequest.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "locate-path",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "lodash",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "_DataView.js" },
                                { "element": "_Hash.js" },
                                { "element": "_LazyWrapper.js" },
                                { "element": "_ListCache.js" },
                                { "element": "_LodashWrapper.js" },
                                { "element": "_Map.js" },
                                { "element": "_MapCache.js" },
                                { "element": "_Promise.js" },
                                { "element": "_Set.js" },
                                { "element": "_SetCache.js" },
                                { "element": "_Stack.js" },
                                { "element": "_Symbol.js" },
                                { "element": "_Uint8Array.js" },
                                { "element": "_WeakMap.js" },
                                { "element": "_apply.js" },
                                { "element": "_arrayAggregator.js" },
                                { "element": "_arrayEach.js" },
                                { "element": "_arrayEachRight.js" },
                                { "element": "_arrayEvery.js" },
                                { "element": "_arrayFilter.js" },
                                { "element": "_arrayIncludes.js" },
                                { "element": "_arrayIncludesWith.js" },
                                { "element": "_arrayLikeKeys.js" },
                                { "element": "_arrayMap.js" },
                                { "element": "_arrayPush.js" },
                                { "element": "_arrayReduce.js" },
                                { "element": "_arrayReduceRight.js" },
                                { "element": "_arraySample.js" },
                                { "element": "_arraySampleSize.js" },
                                { "element": "_arrayShuffle.js" },
                                { "element": "_arraySome.js" },
                                { "element": "_asciiSize.js" },
                                { "element": "_asciiToArray.js" },
                                { "element": "_asciiWords.js" },
                                { "element": "_assignMergeValue.js" },
                                { "element": "_assignValue.js" },
                                { "element": "_assocIndexOf.js" },
                                { "element": "_baseAggregator.js" },
                                { "element": "_baseAssign.js" },
                                { "element": "_baseAssignIn.js" },
                                { "element": "_baseAssignValue.js" },
                                { "element": "_baseAt.js" },
                                { "element": "_baseClamp.js" },
                                { "element": "_baseClone.js" },
                                { "element": "_baseConforms.js" },
                                { "element": "_baseConformsTo.js" },
                                { "element": "_baseCreate.js" },
                                { "element": "_baseDelay.js" },
                                { "element": "_baseDifference.js" },
                                { "element": "_baseEach.js" },
                                { "element": "_baseEachRight.js" },
                                { "element": "_baseEvery.js" },
                                { "element": "_baseExtremum.js" },
                                { "element": "_baseFill.js" },
                                { "element": "_baseFilter.js" },
                                { "element": "_baseFindIndex.js" },
                                { "element": "_baseFindKey.js" },
                                { "element": "_baseFlatten.js" },
                                { "element": "_baseFor.js" },
                                { "element": "_baseForOwn.js" },
                                { "element": "_baseForOwnRight.js" },
                                { "element": "_baseForRight.js" },
                                { "element": "_baseFunctions.js" },
                                { "element": "_baseGet.js" },
                                { "element": "_baseGetAllKeys.js" },
                                { "element": "_baseGetTag.js" },
                                { "element": "_baseGt.js" },
                                { "element": "_baseHas.js" },
                                { "element": "_baseHasIn.js" },
                                { "element": "_baseInRange.js" },
                                { "element": "_baseIndexOf.js" },
                                { "element": "_baseIndexOfWith.js" },
                                { "element": "_baseIntersection.js" },
                                { "element": "_baseInverter.js" },
                                { "element": "_baseInvoke.js" },
                                { "element": "_baseIsArguments.js" },
                                { "element": "_baseIsArrayBuffer.js" },
                                { "element": "_baseIsDate.js" },
                                { "element": "_baseIsEqual.js" },
                                { "element": "_baseIsEqualDeep.js" },
                                { "element": "_baseIsMap.js" },
                                { "element": "_baseIsMatch.js" },
                                { "element": "_baseIsNaN.js" },
                                { "element": "_baseIsNative.js" },
                                { "element": "_baseIsRegExp.js" },
                                { "element": "_baseIsSet.js" },
                                { "element": "_baseIsTypedArray.js" },
                                { "element": "_baseIteratee.js" },
                                { "element": "_baseKeys.js" },
                                { "element": "_baseKeysIn.js" },
                                { "element": "_baseLodash.js" },
                                { "element": "_baseLt.js" },
                                { "element": "_baseMap.js" },
                                { "element": "_baseMatches.js" },
                                { "element": "_baseMatchesProperty.js" },
                                { "element": "_baseMean.js" },
                                { "element": "_baseMerge.js" },
                                { "element": "_baseMergeDeep.js" },
                                { "element": "_baseNth.js" },
                                { "element": "_baseOrderBy.js" },
                                { "element": "_basePick.js" },
                                { "element": "_basePickBy.js" },
                                { "element": "_baseProperty.js" },
                                { "element": "_basePropertyDeep.js" },
                                { "element": "_basePropertyOf.js" },
                                { "element": "_basePullAll.js" },
                                { "element": "_basePullAt.js" },
                                { "element": "_baseRandom.js" },
                                { "element": "_baseRange.js" },
                                { "element": "_baseReduce.js" },
                                { "element": "_baseRepeat.js" },
                                { "element": "_baseRest.js" },
                                { "element": "_baseSample.js" },
                                { "element": "_baseSampleSize.js" },
                                { "element": "_baseSet.js" },
                                { "element": "_baseSetData.js" },
                                { "element": "_baseSetToString.js" },
                                { "element": "_baseShuffle.js" },
                                { "element": "_baseSlice.js" },
                                { "element": "_baseSome.js" },
                                { "element": "_baseSortBy.js" },
                                { "element": "_baseSortedIndex.js" },
                                { "element": "_baseSortedIndexBy.js" },
                                { "element": "_baseSortedUniq.js" },
                                { "element": "_baseSum.js" },
                                { "element": "_baseTimes.js" },
                                { "element": "_baseToNumber.js" },
                                { "element": "_baseToPairs.js" },
                                { "element": "_baseToString.js" },
                                { "element": "_baseUnary.js" },
                                { "element": "_baseUniq.js" },
                                { "element": "_baseUnset.js" },
                                { "element": "_baseUpdate.js" },
                                { "element": "_baseValues.js" },
                                { "element": "_baseWhile.js" },
                                { "element": "_baseWrapperValue.js" },
                                { "element": "_baseXor.js" },
                                { "element": "_baseZipObject.js" },
                                { "element": "_cacheHas.js" },
                                { "element": "_castArrayLikeObject.js" },
                                { "element": "_castFunction.js" },
                                { "element": "_castPath.js" },
                                { "element": "_castRest.js" },
                                { "element": "_castSlice.js" },
                                { "element": "_charsEndIndex.js" },
                                { "element": "_charsStartIndex.js" },
                                { "element": "_cloneArrayBuffer.js" },
                                { "element": "_cloneBuffer.js" },
                                { "element": "_cloneDataView.js" },
                                { "element": "_cloneRegExp.js" },
                                { "element": "_cloneSymbol.js" },
                                { "element": "_cloneTypedArray.js" },
                                { "element": "_compareAscending.js" },
                                { "element": "_compareMultiple.js" },
                                { "element": "_composeArgs.js" },
                                { "element": "_composeArgsRight.js" },
                                { "element": "_copyArray.js" },
                                { "element": "_copyObject.js" },
                                { "element": "_copySymbols.js" },
                                { "element": "_copySymbolsIn.js" },
                                { "element": "_coreJsData.js" },
                                { "element": "_countHolders.js" },
                                { "element": "_createAggregator.js" },
                                { "element": "_createAssigner.js" },
                                { "element": "_createBaseEach.js" },
                                { "element": "_createBaseFor.js" },
                                { "element": "_createBind.js" },
                                { "element": "_createCaseFirst.js" },
                                { "element": "_createCompounder.js" },
                                { "element": "_createCtor.js" },
                                { "element": "_createCurry.js" },
                                { "element": "_createFind.js" },
                                { "element": "_createFlow.js" },
                                { "element": "_createHybrid.js" },
                                { "element": "_createInverter.js" },
                                { "element": "_createMathOperation.js" },
                                { "element": "_createOver.js" },
                                { "element": "_createPadding.js" },
                                { "element": "_createPartial.js" },
                                { "element": "_createRange.js" },
                                { "element": "_createRecurry.js" },
                                { "element": "_createRelationalOperation.js" },
                                { "element": "_createRound.js" },
                                { "element": "_createSet.js" },
                                { "element": "_createToPairs.js" },
                                { "element": "_createWrap.js" },
                                { "element": "_customDefaultsAssignIn.js" },
                                { "element": "_customDefaultsMerge.js" },
                                { "element": "_customOmitClone.js" },
                                { "element": "_deburrLetter.js" },
                                { "element": "_defineProperty.js" },
                                { "element": "_equalArrays.js" },
                                { "element": "_equalByTag.js" },
                                { "element": "_equalObjects.js" },
                                { "element": "_escapeHtmlChar.js" },
                                { "element": "_escapeStringChar.js" },
                                { "element": "_flatRest.js" },
                                { "element": "_freeGlobal.js" },
                                { "element": "_getAllKeys.js" },
                                { "element": "_getAllKeysIn.js" },
                                { "element": "_getData.js" },
                                { "element": "_getFuncName.js" },
                                { "element": "_getHolder.js" },
                                { "element": "_getMapData.js" },
                                { "element": "_getMatchData.js" },
                                { "element": "_getNative.js" },
                                { "element": "_getPrototype.js" },
                                { "element": "_getRawTag.js" },
                                { "element": "_getSymbols.js" },
                                { "element": "_getSymbolsIn.js" },
                                { "element": "_getTag.js" },
                                { "element": "_getValue.js" },
                                { "element": "_getView.js" },
                                { "element": "_getWrapDetails.js" },
                                { "element": "_hasPath.js" },
                                { "element": "_hasUnicode.js" },
                                { "element": "_hasUnicodeWord.js" },
                                { "element": "_hashClear.js" },
                                { "element": "_hashDelete.js" },
                                { "element": "_hashGet.js" },
                                { "element": "_hashHas.js" },
                                { "element": "_hashSet.js" },
                                { "element": "_initCloneArray.js" },
                                { "element": "_initCloneByTag.js" },
                                { "element": "_initCloneObject.js" },
                                { "element": "_insertWrapDetails.js" },
                                { "element": "_isFlattenable.js" },
                                { "element": "_isIndex.js" },
                                { "element": "_isIterateeCall.js" },
                                { "element": "_isKey.js" },
                                { "element": "_isKeyable.js" },
                                { "element": "_isLaziable.js" },
                                { "element": "_isMaskable.js" },
                                { "element": "_isMasked.js" },
                                { "element": "_isPrototype.js" },
                                { "element": "_isStrictComparable.js" },
                                { "element": "_iteratorToArray.js" },
                                { "element": "_lazyClone.js" },
                                { "element": "_lazyReverse.js" },
                                { "element": "_lazyValue.js" },
                                { "element": "_listCacheClear.js" },
                                { "element": "_listCacheDelete.js" },
                                { "element": "_listCacheGet.js" },
                                { "element": "_listCacheHas.js" },
                                { "element": "_listCacheSet.js" },
                                { "element": "_mapCacheClear.js" },
                                { "element": "_mapCacheDelete.js" },
                                { "element": "_mapCacheGet.js" },
                                { "element": "_mapCacheHas.js" },
                                { "element": "_mapCacheSet.js" },
                                { "element": "_mapToArray.js" },
                                { "element": "_matchesStrictComparable.js" },
                                { "element": "_memoizeCapped.js" },
                                { "element": "_mergeData.js" },
                                { "element": "_metaMap.js" },
                                { "element": "_nativeCreate.js" },
                                { "element": "_nativeKeys.js" },
                                { "element": "_nativeKeysIn.js" },
                                { "element": "_nodeUtil.js" },
                                { "element": "_objectToString.js" },
                                { "element": "_overArg.js" },
                                { "element": "_overRest.js" },
                                { "element": "_parent.js" },
                                { "element": "_reEscape.js" },
                                { "element": "_reEvaluate.js" },
                                { "element": "_reInterpolate.js" },
                                { "element": "_realNames.js" },
                                { "element": "_reorder.js" },
                                { "element": "_replaceHolders.js" },
                                { "element": "_root.js" },
                                { "element": "_safeGet.js" },
                                { "element": "_setCacheAdd.js" },
                                { "element": "_setCacheHas.js" },
                                { "element": "_setData.js" },
                                { "element": "_setToArray.js" },
                                { "element": "_setToPairs.js" },
                                { "element": "_setToString.js" },
                                { "element": "_setWrapToString.js" },
                                { "element": "_shortOut.js" },
                                { "element": "_shuffleSelf.js" },
                                { "element": "_stackClear.js" },
                                { "element": "_stackDelete.js" },
                                { "element": "_stackGet.js" },
                                { "element": "_stackHas.js" },
                                { "element": "_stackSet.js" },
                                { "element": "_strictIndexOf.js" },
                                { "element": "_strictLastIndexOf.js" },
                                { "element": "_stringSize.js" },
                                { "element": "_stringToArray.js" },
                                { "element": "_stringToPath.js" },
                                { "element": "_toKey.js" },
                                { "element": "_toSource.js" },
                                { "element": "_unescapeHtmlChar.js" },
                                { "element": "_unicodeSize.js" },
                                { "element": "_unicodeToArray.js" },
                                { "element": "_unicodeWords.js" },
                                { "element": "_updateWrapDetails.js" },
                                { "element": "_wrapperClone.js" },
                                { "element": "add.js" },
                                { "element": "after.js" },
                                { "element": "array.js" },
                                { "element": "ary.js" },
                                { "element": "assign.js" },
                                { "element": "assignIn.js" },
                                { "element": "assignInWith.js" },
                                { "element": "assignWith.js" },
                                { "element": "at.js" },
                                { "element": "attempt.js" },
                                { "element": "before.js" },
                                { "element": "bind.js" },
                                { "element": "bindAll.js" },
                                { "element": "bindKey.js" },
                                { "element": "camelCase.js" },
                                { "element": "capitalize.js" },
                                { "element": "castArray.js" },
                                { "element": "ceil.js" },
                                { "element": "chain.js" },
                                { "element": "chunk.js" },
                                { "element": "clamp.js" },
                                { "element": "clone.js" },
                                { "element": "cloneDeep.js" },
                                { "element": "cloneDeepWith.js" },
                                { "element": "cloneWith.js" },
                                { "element": "collection.js" },
                                { "element": "commit.js" },
                                { "element": "compact.js" },
                                { "element": "concat.js" },
                                { "element": "cond.js" },
                                { "element": "conforms.js" },
                                { "element": "conformsTo.js" },
                                { "element": "constant.js" },
                                { "element": "core.js" },
                                { "element": "core.min.js" },
                                { "element": "countBy.js" },
                                { "element": "create.js" },
                                { "element": "curry.js" },
                                { "element": "curryRight.js" },
                                { "element": "date.js" },
                                { "element": "debounce.js" },
                                { "element": "deburr.js" },
                                { "element": "defaultTo.js" },
                                { "element": "defaults.js" },
                                { "element": "defaultsDeep.js" },
                                { "element": "defer.js" },
                                { "element": "delay.js" },
                                { "element": "difference.js" },
                                { "element": "differenceBy.js" },
                                { "element": "differenceWith.js" },
                                { "element": "divide.js" },
                                { "element": "drop.js" },
                                { "element": "dropRight.js" },
                                { "element": "dropRightWhile.js" },
                                { "element": "dropWhile.js" },
                                { "element": "each.js" },
                                { "element": "eachRight.js" },
                                { "element": "endsWith.js" },
                                { "element": "entries.js" },
                                { "element": "entriesIn.js" },
                                { "element": "eq.js" },
                                { "element": "escape.js" },
                                { "element": "escapeRegExp.js" },
                                { "element": "every.js" },
                                { "element": "extend.js" },
                                { "element": "extendWith.js" },
                                { "element": "fill.js" },
                                { "element": "filter.js" },
                                { "element": "find.js" },
                                { "element": "findIndex.js" },
                                { "element": "findKey.js" },
                                { "element": "findLast.js" },
                                { "element": "findLastIndex.js" },
                                { "element": "findLastKey.js" },
                                { "element": "first.js" },
                                { "element": "flatMap.js" },
                                { "element": "flatMapDeep.js" },
                                { "element": "flatMapDepth.js" },
                                { "element": "flatten.js" },
                                { "element": "flattenDeep.js" },
                                { "element": "flattenDepth.js" },
                                { "element": "flip.js" },
                                { "element": "floor.js" },
                                { "element": "flow.js" },
                                { "element": "flowRight.js" },
                                { "element": "forEach.js" },
                                { "element": "forEachRight.js" },
                                { "element": "forIn.js" },
                                { "element": "forInRight.js" },
                                { "element": "forOwn.js" },
                                { "element": "forOwnRight.js" },
                                {
                                    "element": "fp",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "F.js" },
                                        { "element": "T.js" },
                                        { "element": "__.js" },
                                        { "element": "_baseConvert.js" },
                                        { "element": "_convertBrowser.js" },
                                        { "element": "_falseOptions.js" },
                                        { "element": "_mapping.js" },
                                        { "element": "_util.js" },
                                        { "element": "add.js" },
                                        { "element": "after.js" },
                                        { "element": "all.js" },
                                        { "element": "allPass.js" },
                                        { "element": "always.js" },
                                        { "element": "any.js" },
                                        { "element": "anyPass.js" },
                                        { "element": "apply.js" },
                                        { "element": "array.js" },
                                        { "element": "ary.js" },
                                        { "element": "assign.js" },
                                        { "element": "assignAll.js" },
                                        { "element": "assignAllWith.js" },
                                        { "element": "assignIn.js" },
                                        { "element": "assignInAll.js" },
                                        { "element": "assignInAllWith.js" },
                                        { "element": "assignInWith.js" },
                                        { "element": "assignWith.js" },
                                        { "element": "assoc.js" },
                                        { "element": "assocPath.js" },
                                        { "element": "at.js" },
                                        { "element": "attempt.js" },
                                        { "element": "before.js" },
                                        { "element": "bind.js" },
                                        { "element": "bindAll.js" },
                                        { "element": "bindKey.js" },
                                        { "element": "camelCase.js" },
                                        { "element": "capitalize.js" },
                                        { "element": "castArray.js" },
                                        { "element": "ceil.js" },
                                        { "element": "chain.js" },
                                        { "element": "chunk.js" },
                                        { "element": "clamp.js" },
                                        { "element": "clone.js" },
                                        { "element": "cloneDeep.js" },
                                        { "element": "cloneDeepWith.js" },
                                        { "element": "cloneWith.js" },
                                        { "element": "collection.js" },
                                        { "element": "commit.js" },
                                        { "element": "compact.js" },
                                        { "element": "complement.js" },
                                        { "element": "compose.js" },
                                        { "element": "concat.js" },
                                        { "element": "cond.js" },
                                        { "element": "conforms.js" },
                                        { "element": "conformsTo.js" },
                                        { "element": "constant.js" },
                                        { "element": "contains.js" },
                                        { "element": "convert.js" },
                                        { "element": "countBy.js" },
                                        { "element": "create.js" },
                                        { "element": "curry.js" },
                                        { "element": "curryN.js" },
                                        { "element": "curryRight.js" },
                                        { "element": "curryRightN.js" },
                                        { "element": "date.js" },
                                        { "element": "debounce.js" },
                                        { "element": "deburr.js" },
                                        { "element": "defaultTo.js" },
                                        { "element": "defaults.js" },
                                        { "element": "defaultsAll.js" },
                                        { "element": "defaultsDeep.js" },
                                        { "element": "defaultsDeepAll.js" },
                                        { "element": "defer.js" },
                                        { "element": "delay.js" },
                                        { "element": "difference.js" },
                                        { "element": "differenceBy.js" },
                                        { "element": "differenceWith.js" },
                                        { "element": "dissoc.js" },
                                        { "element": "dissocPath.js" },
                                        { "element": "divide.js" },
                                        { "element": "drop.js" },
                                        { "element": "dropLast.js" },
                                        { "element": "dropLastWhile.js" },
                                        { "element": "dropRight.js" },
                                        { "element": "dropRightWhile.js" },
                                        { "element": "dropWhile.js" },
                                        { "element": "each.js" },
                                        { "element": "eachRight.js" },
                                        { "element": "endsWith.js" },
                                        { "element": "entries.js" },
                                        { "element": "entriesIn.js" },
                                        { "element": "eq.js" },
                                        { "element": "equals.js" },
                                        { "element": "escape.js" },
                                        { "element": "escapeRegExp.js" },
                                        { "element": "every.js" },
                                        { "element": "extend.js" },
                                        { "element": "extendAll.js" },
                                        { "element": "extendAllWith.js" },
                                        { "element": "extendWith.js" },
                                        { "element": "fill.js" },
                                        { "element": "filter.js" },
                                        { "element": "find.js" },
                                        { "element": "findFrom.js" },
                                        { "element": "findIndex.js" },
                                        { "element": "findIndexFrom.js" },
                                        { "element": "findKey.js" },
                                        { "element": "findLast.js" },
                                        { "element": "findLastFrom.js" },
                                        { "element": "findLastIndex.js" },
                                        { "element": "findLastIndexFrom.js" },
                                        { "element": "findLastKey.js" },
                                        { "element": "first.js" },
                                        { "element": "flatMap.js" },
                                        { "element": "flatMapDeep.js" },
                                        { "element": "flatMapDepth.js" },
                                        { "element": "flatten.js" },
                                        { "element": "flattenDeep.js" },
                                        { "element": "flattenDepth.js" },
                                        { "element": "flip.js" },
                                        { "element": "floor.js" },
                                        { "element": "flow.js" },
                                        { "element": "flowRight.js" },
                                        { "element": "forEach.js" },
                                        { "element": "forEachRight.js" },
                                        { "element": "forIn.js" },
                                        { "element": "forInRight.js" },
                                        { "element": "forOwn.js" },
                                        { "element": "forOwnRight.js" },
                                        { "element": "fromPairs.js" },
                                        { "element": "function.js" },
                                        { "element": "functions.js" },
                                        { "element": "functionsIn.js" },
                                        { "element": "get.js" },
                                        { "element": "getOr.js" },
                                        { "element": "groupBy.js" },
                                        { "element": "gt.js" },
                                        { "element": "gte.js" },
                                        { "element": "has.js" },
                                        { "element": "hasIn.js" },
                                        { "element": "head.js" },
                                        { "element": "identical.js" },
                                        { "element": "identity.js" },
                                        { "element": "inRange.js" },
                                        { "element": "includes.js" },
                                        { "element": "includesFrom.js" },
                                        { "element": "indexBy.js" },
                                        { "element": "indexOf.js" },
                                        { "element": "indexOfFrom.js" },
                                        { "element": "init.js" },
                                        { "element": "initial.js" },
                                        { "element": "intersection.js" },
                                        { "element": "intersectionBy.js" },
                                        { "element": "intersectionWith.js" },
                                        { "element": "invert.js" },
                                        { "element": "invertBy.js" },
                                        { "element": "invertObj.js" },
                                        { "element": "invoke.js" },
                                        { "element": "invokeArgs.js" },
                                        { "element": "invokeArgsMap.js" },
                                        { "element": "invokeMap.js" },
                                        { "element": "isArguments.js" },
                                        { "element": "isArray.js" },
                                        { "element": "isArrayBuffer.js" },
                                        { "element": "isArrayLike.js" },
                                        { "element": "isArrayLikeObject.js" },
                                        { "element": "isBoolean.js" },
                                        { "element": "isBuffer.js" },
                                        { "element": "isDate.js" },
                                        { "element": "isElement.js" },
                                        { "element": "isEmpty.js" },
                                        { "element": "isEqual.js" },
                                        { "element": "isEqualWith.js" },
                                        { "element": "isError.js" },
                                        { "element": "isFinite.js" },
                                        { "element": "isFunction.js" },
                                        { "element": "isInteger.js" },
                                        { "element": "isLength.js" },
                                        { "element": "isMap.js" },
                                        { "element": "isMatch.js" },
                                        { "element": "isMatchWith.js" },
                                        { "element": "isNaN.js" },
                                        { "element": "isNative.js" },
                                        { "element": "isNil.js" },
                                        { "element": "isNull.js" },
                                        { "element": "isNumber.js" },
                                        { "element": "isObject.js" },
                                        { "element": "isObjectLike.js" },
                                        { "element": "isPlainObject.js" },
                                        { "element": "isRegExp.js" },
                                        { "element": "isSafeInteger.js" },
                                        { "element": "isSet.js" },
                                        { "element": "isString.js" },
                                        { "element": "isSymbol.js" },
                                        { "element": "isTypedArray.js" },
                                        { "element": "isUndefined.js" },
                                        { "element": "isWeakMap.js" },
                                        { "element": "isWeakSet.js" },
                                        { "element": "iteratee.js" },
                                        { "element": "join.js" },
                                        { "element": "juxt.js" },
                                        { "element": "kebabCase.js" },
                                        { "element": "keyBy.js" },
                                        { "element": "keys.js" },
                                        { "element": "keysIn.js" },
                                        { "element": "lang.js" },
                                        { "element": "last.js" },
                                        { "element": "lastIndexOf.js" },
                                        { "element": "lastIndexOfFrom.js" },
                                        { "element": "lowerCase.js" },
                                        { "element": "lowerFirst.js" },
                                        { "element": "lt.js" },
                                        { "element": "lte.js" },
                                        { "element": "map.js" },
                                        { "element": "mapKeys.js" },
                                        { "element": "mapValues.js" },
                                        { "element": "matches.js" },
                                        { "element": "matchesProperty.js" },
                                        { "element": "math.js" },
                                        { "element": "max.js" },
                                        { "element": "maxBy.js" },
                                        { "element": "mean.js" },
                                        { "element": "meanBy.js" },
                                        { "element": "memoize.js" },
                                        { "element": "merge.js" },
                                        { "element": "mergeAll.js" },
                                        { "element": "mergeAllWith.js" },
                                        { "element": "mergeWith.js" },
                                        { "element": "method.js" },
                                        { "element": "methodOf.js" },
                                        { "element": "min.js" },
                                        { "element": "minBy.js" },
                                        { "element": "mixin.js" },
                                        { "element": "multiply.js" },
                                        { "element": "nAry.js" },
                                        { "element": "negate.js" },
                                        { "element": "next.js" },
                                        { "element": "noop.js" },
                                        { "element": "now.js" },
                                        { "element": "nth.js" },
                                        { "element": "nthArg.js" },
                                        { "element": "number.js" },
                                        { "element": "object.js" },
                                        { "element": "omit.js" },
                                        { "element": "omitAll.js" },
                                        { "element": "omitBy.js" },
                                        { "element": "once.js" },
                                        { "element": "orderBy.js" },
                                        { "element": "over.js" },
                                        { "element": "overArgs.js" },
                                        { "element": "overEvery.js" },
                                        { "element": "overSome.js" },
                                        { "element": "pad.js" },
                                        { "element": "padChars.js" },
                                        { "element": "padCharsEnd.js" },
                                        { "element": "padCharsStart.js" },
                                        { "element": "padEnd.js" },
                                        { "element": "padStart.js" },
                                        { "element": "parseInt.js" },
                                        { "element": "partial.js" },
                                        { "element": "partialRight.js" },
                                        { "element": "partition.js" },
                                        { "element": "path.js" },
                                        { "element": "pathEq.js" },
                                        { "element": "pathOr.js" },
                                        { "element": "paths.js" },
                                        { "element": "pick.js" },
                                        { "element": "pickAll.js" },
                                        { "element": "pickBy.js" },
                                        { "element": "pipe.js" },
                                        { "element": "placeholder.js" },
                                        { "element": "plant.js" },
                                        { "element": "pluck.js" },
                                        { "element": "prop.js" },
                                        { "element": "propEq.js" },
                                        { "element": "propOr.js" },
                                        { "element": "property.js" },
                                        { "element": "propertyOf.js" },
                                        { "element": "props.js" },
                                        { "element": "pull.js" },
                                        { "element": "pullAll.js" },
                                        { "element": "pullAllBy.js" },
                                        { "element": "pullAllWith.js" },
                                        { "element": "pullAt.js" },
                                        { "element": "random.js" },
                                        { "element": "range.js" },
                                        { "element": "rangeRight.js" },
                                        { "element": "rangeStep.js" },
                                        { "element": "rangeStepRight.js" },
                                        { "element": "rearg.js" },
                                        { "element": "reduce.js" },
                                        { "element": "reduceRight.js" },
                                        { "element": "reject.js" },
                                        { "element": "remove.js" },
                                        { "element": "repeat.js" },
                                        { "element": "replace.js" },
                                        { "element": "rest.js" },
                                        { "element": "restFrom.js" },
                                        { "element": "result.js" },
                                        { "element": "reverse.js" },
                                        { "element": "round.js" },
                                        { "element": "sample.js" },
                                        { "element": "sampleSize.js" },
                                        { "element": "seq.js" },
                                        { "element": "set.js" },
                                        { "element": "setWith.js" },
                                        { "element": "shuffle.js" },
                                        { "element": "size.js" },
                                        { "element": "slice.js" },
                                        { "element": "snakeCase.js" },
                                        { "element": "some.js" },
                                        { "element": "sortBy.js" },
                                        { "element": "sortedIndex.js" },
                                        { "element": "sortedIndexBy.js" },
                                        { "element": "sortedIndexOf.js" },
                                        { "element": "sortedLastIndex.js" },
                                        { "element": "sortedLastIndexBy.js" },
                                        { "element": "sortedLastIndexOf.js" },
                                        { "element": "sortedUniq.js" },
                                        { "element": "sortedUniqBy.js" },
                                        { "element": "split.js" },
                                        { "element": "spread.js" },
                                        { "element": "spreadFrom.js" },
                                        { "element": "startCase.js" },
                                        { "element": "startsWith.js" },
                                        { "element": "string.js" },
                                        { "element": "stubArray.js" },
                                        { "element": "stubFalse.js" },
                                        { "element": "stubObject.js" },
                                        { "element": "stubString.js" },
                                        { "element": "stubTrue.js" },
                                        { "element": "subtract.js" },
                                        { "element": "sum.js" },
                                        { "element": "sumBy.js" },
                                        { "element": "symmetricDifference.js" },
                                        { "element": "symmetricDifferenceBy.js" },
                                        { "element": "symmetricDifferenceWith.js" },
                                        { "element": "tail.js" },
                                        { "element": "take.js" },
                                        { "element": "takeLast.js" },
                                        { "element": "takeLastWhile.js" },
                                        { "element": "takeRight.js" },
                                        { "element": "takeRightWhile.js" },
                                        { "element": "takeWhile.js" },
                                        { "element": "tap.js" },
                                        { "element": "template.js" },
                                        { "element": "templateSettings.js" },
                                        { "element": "throttle.js" },
                                        { "element": "thru.js" },
                                        { "element": "times.js" },
                                        { "element": "toArray.js" },
                                        { "element": "toFinite.js" },
                                        { "element": "toInteger.js" },
                                        { "element": "toIterator.js" },
                                        { "element": "toJSON.js" },
                                        { "element": "toLength.js" },
                                        { "element": "toLower.js" },
                                        { "element": "toNumber.js" },
                                        { "element": "toPairs.js" },
                                        { "element": "toPairsIn.js" },
                                        { "element": "toPath.js" },
                                        { "element": "toPlainObject.js" },
                                        { "element": "toSafeInteger.js" },
                                        { "element": "toString.js" },
                                        { "element": "toUpper.js" },
                                        { "element": "transform.js" },
                                        { "element": "trim.js" },
                                        { "element": "trimChars.js" },
                                        { "element": "trimCharsEnd.js" },
                                        { "element": "trimCharsStart.js" },
                                        { "element": "trimEnd.js" },
                                        { "element": "trimStart.js" },
                                        { "element": "truncate.js" },
                                        { "element": "unapply.js" },
                                        { "element": "unary.js" },
                                        { "element": "unescape.js" },
                                        { "element": "union.js" },
                                        { "element": "unionBy.js" },
                                        { "element": "unionWith.js" },
                                        { "element": "uniq.js" },
                                        { "element": "uniqBy.js" },
                                        { "element": "uniqWith.js" },
                                        { "element": "uniqueId.js" },
                                        { "element": "unnest.js" },
                                        { "element": "unset.js" },
                                        { "element": "unzip.js" },
                                        { "element": "unzipWith.js" },
                                        { "element": "update.js" },
                                        { "element": "updateWith.js" },
                                        { "element": "upperCase.js" },
                                        { "element": "upperFirst.js" },
                                        { "element": "useWith.js" },
                                        { "element": "util.js" },
                                        { "element": "value.js" },
                                        { "element": "valueOf.js" },
                                        { "element": "values.js" },
                                        { "element": "valuesIn.js" },
                                        { "element": "where.js" },
                                        { "element": "whereEq.js" },
                                        { "element": "without.js" },
                                        { "element": "words.js" },
                                        { "element": "wrap.js" },
                                        { "element": "wrapperAt.js" },
                                        { "element": "wrapperChain.js" },
                                        { "element": "wrapperLodash.js" },
                                        { "element": "wrapperReverse.js" },
                                        { "element": "wrapperValue.js" },
                                        { "element": "xor.js" },
                                        { "element": "xorBy.js" },
                                        { "element": "xorWith.js" },
                                        { "element": "zip.js" },
                                        { "element": "zipAll.js" },
                                        { "element": "zipObj.js" },
                                        { "element": "zipObject.js" },
                                        { "element": "zipObjectDeep.js" },
                                        { "element": "zipWith.js" }
                                    ]
                                },
                                { "element": "fp.js" },
                                { "element": "fromPairs.js" },
                                { "element": "function.js" },
                                { "element": "functions.js" },
                                { "element": "functionsIn.js" },
                                { "element": "get.js" },
                                { "element": "groupBy.js" },
                                { "element": "gt.js" },
                                { "element": "gte.js" },
                                { "element": "has.js" },
                                { "element": "hasIn.js" },
                                { "element": "head.js" },
                                { "element": "identity.js" },
                                { "element": "inRange.js" },
                                { "element": "includes.js" },
                                { "element": "index.js" },
                                { "element": "indexOf.js" },
                                { "element": "initial.js" },
                                { "element": "intersection.js" },
                                { "element": "intersectionBy.js" },
                                { "element": "intersectionWith.js" },
                                { "element": "invert.js" },
                                { "element": "invertBy.js" },
                                { "element": "invoke.js" },
                                { "element": "invokeMap.js" },
                                { "element": "isArguments.js" },
                                { "element": "isArray.js" },
                                { "element": "isArrayBuffer.js" },
                                { "element": "isArrayLike.js" },
                                { "element": "isArrayLikeObject.js" },
                                { "element": "isBoolean.js" },
                                { "element": "isBuffer.js" },
                                { "element": "isDate.js" },
                                { "element": "isElement.js" },
                                { "element": "isEmpty.js" },
                                { "element": "isEqual.js" },
                                { "element": "isEqualWith.js" },
                                { "element": "isError.js" },
                                { "element": "isFinite.js" },
                                { "element": "isFunction.js" },
                                { "element": "isInteger.js" },
                                { "element": "isLength.js" },
                                { "element": "isMap.js" },
                                { "element": "isMatch.js" },
                                { "element": "isMatchWith.js" },
                                { "element": "isNaN.js" },
                                { "element": "isNative.js" },
                                { "element": "isNil.js" },
                                { "element": "isNull.js" },
                                { "element": "isNumber.js" },
                                { "element": "isObject.js" },
                                { "element": "isObjectLike.js" },
                                { "element": "isPlainObject.js" },
                                { "element": "isRegExp.js" },
                                { "element": "isSafeInteger.js" },
                                { "element": "isSet.js" },
                                { "element": "isString.js" },
                                { "element": "isSymbol.js" },
                                { "element": "isTypedArray.js" },
                                { "element": "isUndefined.js" },
                                { "element": "isWeakMap.js" },
                                { "element": "isWeakSet.js" },
                                { "element": "iteratee.js" },
                                { "element": "join.js" },
                                { "element": "kebabCase.js" },
                                { "element": "keyBy.js" },
                                { "element": "keys.js" },
                                { "element": "keysIn.js" },
                                { "element": "lang.js" },
                                { "element": "last.js" },
                                { "element": "lastIndexOf.js" },
                                { "element": "lodash.js" },
                                { "element": "lodash.min.js" },
                                { "element": "lowerCase.js" },
                                { "element": "lowerFirst.js" },
                                { "element": "lt.js" },
                                { "element": "lte.js" },
                                { "element": "map.js" },
                                { "element": "mapKeys.js" },
                                { "element": "mapValues.js" },
                                { "element": "matches.js" },
                                { "element": "matchesProperty.js" },
                                { "element": "math.js" },
                                { "element": "max.js" },
                                { "element": "maxBy.js" },
                                { "element": "mean.js" },
                                { "element": "meanBy.js" },
                                { "element": "memoize.js" },
                                { "element": "merge.js" },
                                { "element": "mergeWith.js" },
                                { "element": "method.js" },
                                { "element": "methodOf.js" },
                                { "element": "min.js" },
                                { "element": "minBy.js" },
                                { "element": "mixin.js" },
                                { "element": "multiply.js" },
                                { "element": "negate.js" },
                                { "element": "next.js" },
                                { "element": "noop.js" },
                                { "element": "now.js" },
                                { "element": "nth.js" },
                                { "element": "nthArg.js" },
                                { "element": "number.js" },
                                { "element": "object.js" },
                                { "element": "omit.js" },
                                { "element": "omitBy.js" },
                                { "element": "once.js" },
                                { "element": "orderBy.js" },
                                { "element": "over.js" },
                                { "element": "overArgs.js" },
                                { "element": "overEvery.js" },
                                { "element": "overSome.js" },
                                { "element": "package.json" },
                                { "element": "pad.js" },
                                { "element": "padEnd.js" },
                                { "element": "padStart.js" },
                                { "element": "parseInt.js" },
                                { "element": "partial.js" },
                                { "element": "partialRight.js" },
                                { "element": "partition.js" },
                                { "element": "pick.js" },
                                { "element": "pickBy.js" },
                                { "element": "plant.js" },
                                { "element": "property.js" },
                                { "element": "propertyOf.js" },
                                { "element": "pull.js" },
                                { "element": "pullAll.js" },
                                { "element": "pullAllBy.js" },
                                { "element": "pullAllWith.js" },
                                { "element": "pullAt.js" },
                                { "element": "random.js" },
                                { "element": "range.js" },
                                { "element": "rangeRight.js" },
                                { "element": "rearg.js" },
                                { "element": "reduce.js" },
                                { "element": "reduceRight.js" },
                                { "element": "reject.js" },
                                { "element": "remove.js" },
                                { "element": "repeat.js" },
                                { "element": "replace.js" },
                                { "element": "rest.js" },
                                { "element": "result.js" },
                                { "element": "reverse.js" },
                                { "element": "round.js" },
                                { "element": "sample.js" },
                                { "element": "sampleSize.js" },
                                { "element": "seq.js" },
                                { "element": "set.js" },
                                { "element": "setWith.js" },
                                { "element": "shuffle.js" },
                                { "element": "size.js" },
                                { "element": "slice.js" },
                                { "element": "snakeCase.js" },
                                { "element": "some.js" },
                                { "element": "sortBy.js" },
                                { "element": "sortedIndex.js" },
                                { "element": "sortedIndexBy.js" },
                                { "element": "sortedIndexOf.js" },
                                { "element": "sortedLastIndex.js" },
                                { "element": "sortedLastIndexBy.js" },
                                { "element": "sortedLastIndexOf.js" },
                                { "element": "sortedUniq.js" },
                                { "element": "sortedUniqBy.js" },
                                { "element": "split.js" },
                                { "element": "spread.js" },
                                { "element": "startCase.js" },
                                { "element": "startsWith.js" },
                                { "element": "string.js" },
                                { "element": "stubArray.js" },
                                { "element": "stubFalse.js" },
                                { "element": "stubObject.js" },
                                { "element": "stubString.js" },
                                { "element": "stubTrue.js" },
                                { "element": "subtract.js" },
                                { "element": "sum.js" },
                                { "element": "sumBy.js" },
                                { "element": "tail.js" },
                                { "element": "take.js" },
                                { "element": "takeRight.js" },
                                { "element": "takeRightWhile.js" },
                                { "element": "takeWhile.js" },
                                { "element": "tap.js" },
                                { "element": "template.js" },
                                { "element": "templateSettings.js" },
                                { "element": "throttle.js" },
                                { "element": "thru.js" },
                                { "element": "times.js" },
                                { "element": "toArray.js" },
                                { "element": "toFinite.js" },
                                { "element": "toInteger.js" },
                                { "element": "toIterator.js" },
                                { "element": "toJSON.js" },
                                { "element": "toLength.js" },
                                { "element": "toLower.js" },
                                { "element": "toNumber.js" },
                                { "element": "toPairs.js" },
                                { "element": "toPairsIn.js" },
                                { "element": "toPath.js" },
                                { "element": "toPlainObject.js" },
                                { "element": "toSafeInteger.js" },
                                { "element": "toString.js" },
                                { "element": "toUpper.js" },
                                { "element": "transform.js" },
                                { "element": "trim.js" },
                                { "element": "trimEnd.js" },
                                { "element": "trimStart.js" },
                                { "element": "truncate.js" },
                                { "element": "unary.js" },
                                { "element": "unescape.js" },
                                { "element": "union.js" },
                                { "element": "unionBy.js" },
                                { "element": "unionWith.js" },
                                { "element": "uniq.js" },
                                { "element": "uniqBy.js" },
                                { "element": "uniqWith.js" },
                                { "element": "uniqueId.js" },
                                { "element": "unset.js" },
                                { "element": "unzip.js" },
                                { "element": "unzipWith.js" },
                                { "element": "update.js" },
                                { "element": "updateWith.js" },
                                { "element": "upperCase.js" },
                                { "element": "upperFirst.js" },
                                { "element": "util.js" },
                                { "element": "value.js" },
                                { "element": "valueOf.js" },
                                { "element": "values.js" },
                                { "element": "valuesIn.js" },
                                { "element": "without.js" },
                                { "element": "words.js" },
                                { "element": "wrap.js" },
                                { "element": "wrapperAt.js" },
                                { "element": "wrapperChain.js" },
                                { "element": "wrapperLodash.js" },
                                { "element": "wrapperReverse.js" },
                                { "element": "wrapperValue.js" },
                                { "element": "xor.js" },
                                { "element": "xorBy.js" },
                                { "element": "xorWith.js" },
                                { "element": "zip.js" },
                                { "element": "zipObject.js" },
                                { "element": "zipObjectDeep.js" },
                                { "element": "zipWith.js" }
                            ]
                        },
                        {
                            "element": "lodash._reinterpolate",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "lodash.clone",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "lodash.debounce",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "lodash.isequal",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "lodash.isinteger",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "lodash.isundefined",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "lodash.memoize",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "lodash.some",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "lodash.template",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "lodash.templatesettings",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "lodash.uniq",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "log-driver",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "Makefile" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "lolex",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".editorconfig" },
                                { "element": ".jslintrc" },
                                { "element": ".min-wd" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "Readme.md" },
                                { "element": "lolex.js" },
                                { "element": "package.json" },
                                {
                                    "element": "script",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "ci-test.sh" }]
                                },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "lolex.js" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "lolex-test.js" }]
                                }
                            ]
                        },
                        {
                            "element": "long",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "bower.json" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "README.md" },
                                        { "element": "long.js" },
                                        { "element": "long.min.js" },
                                        { "element": "long.min.js.gz" },
                                        { "element": "long.min.map" }
                                    ]
                                },
                                {
                                    "element": "doco",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "INDEX.md" }, { "element": "Long.md" }]
                                },
                                { "element": "donate.png" },
                                {
                                    "element": "externs",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "long.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "jsdoc.json" },
                                { "element": "long.png" },
                                { "element": "package.json" },
                                {
                                    "element": "scripts",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "build.js" }]
                                },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "bower.json" },
                                        { "element": "long.js" },
                                        { "element": "wrap.js" }
                                    ]
                                },
                                {
                                    "element": "tests",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "goog.math.long.js" },
                                        { "element": "suite.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "longest",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "loud-rejection",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "api.js" },
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                { "element": "register.js" }
                            ]
                        },
                        {
                            "element": "lru-cache",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "macaddress",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "README.md" },
                                { "element": "gulpfile.js" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "linux.js" },
                                        { "element": "macosx.js" },
                                        { "element": "unix.js" },
                                        { "element": "windows.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "make-dir",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "pify" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "make-error",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "make-error.js" }]
                                },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "make-error-cause",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.d.ts" },
                                        { "element": "index.js" },
                                        { "element": "index.js.map" },
                                        { "element": "index.spec.d.ts" },
                                        { "element": "index.spec.js" },
                                        { "element": "index.spec.js.map" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "make-iterator",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "kind-of" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "mamacro",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [{ "element": "index.js" }, { "element": "package.json" }]
                        },
                        {
                            "element": "map-cache",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "map-obj",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "map-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENCE" },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "pretty.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "simple-map.asynct.js" }]
                                }
                            ]
                        },
                        {
                            "element": "map-visit",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "markdown-it",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "markdown-it.js" }]
                                },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "markdown-it.js" },
                                        { "element": "markdown-it.min.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "common" },
                                        { "element": "helpers" },
                                        { "element": "index.js" },
                                        { "element": "parser_block.js" },
                                        { "element": "parser_core.js" },
                                        { "element": "parser_inline.js" },
                                        { "element": "presets" },
                                        { "element": "renderer.js" },
                                        { "element": "ruler.js" },
                                        { "element": "rules_block" },
                                        { "element": "rules_core" },
                                        { "element": "rules_inline" },
                                        { "element": "token.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "matchdep",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintrc" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "matchdep.js" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "path-parse" },
                                        { "element": "resolve" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "math-expression-evaluator",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "browser" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "formula_evaluator.js" },
                                        { "element": "lexer.js" },
                                        { "element": "math_function.js" },
                                        { "element": "postfix.js" },
                                        { "element": "postfix_evaluator.js" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "md5",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "md5.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "md5.js",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "mdurl",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "decode.js" },
                                { "element": "encode.js" },
                                { "element": "format.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "parse.js" }
                            ]
                        },
                        {
                            "element": "media-typer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "mem",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "memory-fs",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "MemoryFileSystem.js" },
                                        { "element": "join.js" },
                                        { "element": "normalize.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "meow",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "merge-descriptors",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "merge-options",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "merge-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "methods",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "micromatch",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".DS_Store" },
                                        { "element": "cache.js" },
                                        { "element": "compilers.js" },
                                        { "element": "parsers.js" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "define-property" },
                                        { "element": "extend-shallow" },
                                        { "element": "is-extendable" },
                                        { "element": "kind-of" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "miller-rabin",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "1.js" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "miller-rabin" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "mr.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "api-test.js" }]
                                },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "mime",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "cli.js" },
                                { "element": "mime.js" },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "build.js" }, { "element": "test.js" }]
                                },
                                { "element": "types.json" }
                            ]
                        },
                        {
                            "element": "mime-db",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "db.json" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "mime-types",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "mimic-fn",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "mimic-response",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "minimalistic-assert",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "minimalistic-crypto-utils",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "utils.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "utils-test.js" }]
                                }
                            ]
                        },
                        {
                            "element": "minimatch",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "minimatch.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "minimist",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "parse.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "all_bool.js" },
                                        { "element": "bool.js" },
                                        { "element": "dash.js" },
                                        { "element": "default_bool.js" },
                                        { "element": "dotted.js" },
                                        { "element": "kv_short.js" },
                                        { "element": "long.js" },
                                        { "element": "num.js" },
                                        { "element": "parse.js" },
                                        { "element": "parse_modified.js" },
                                        { "element": "short.js" },
                                        { "element": "stop_early.js" },
                                        { "element": "unknown.js" },
                                        { "element": "whitespace.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "mississippi",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "changelog.md" },
                                { "element": "index.js" },
                                { "element": "license" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "pump" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "mixin-deep",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "is-extendable" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "mkdirp",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "cmd.js" }, { "element": "usage.txt" }]
                                },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "pow.js" }]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "minimist" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "chmod.js" },
                                        { "element": "clobber.js" },
                                        { "element": "mkdirp.js" },
                                        { "element": "opts_fs.js" },
                                        { "element": "opts_fs_sync.js" },
                                        { "element": "perm.js" },
                                        { "element": "perm_sync.js" },
                                        { "element": "race.js" },
                                        { "element": "rel.js" },
                                        { "element": "return.js" },
                                        { "element": "return_sync.js" },
                                        { "element": "root.js" },
                                        { "element": "sync.js" },
                                        { "element": "umask.js" },
                                        { "element": "umask_sync.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "mkpath",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "mkpath.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "chmod.js" },
                                        { "element": "clobber.js" },
                                        { "element": "mkpath.js" },
                                        { "element": "perm.js" },
                                        { "element": "perm_sync.js" },
                                        { "element": "rel.js" },
                                        { "element": "root.js" },
                                        { "element": "sync.js" },
                                        { "element": "umask.js" },
                                        { "element": "umask_sync.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "mksnapshot",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "main.js" },
                                        { "element": "mksnapshot-call.js" },
                                        { "element": "mksnapshot-path.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "fs-extra" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "mocha",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".eslintrc" },
                                        { "element": "_mocha" },
                                        { "element": "mocha" },
                                        { "element": "options.js" }
                                    ]
                                },
                                {
                                    "element": "images",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "error.png" }, { "element": "ok.png" }]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "browser" },
                                        { "element": "context.js" },
                                        { "element": "hook.js" },
                                        { "element": "interfaces" },
                                        { "element": "mocha.js" },
                                        { "element": "ms.js" },
                                        { "element": "pending.js" },
                                        { "element": "reporters" },
                                        { "element": "runnable.js" },
                                        { "element": "runner.js" },
                                        { "element": "suite.js" },
                                        { "element": "template.html" },
                                        { "element": "test.js" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                { "element": "mocha.css" },
                                { "element": "mocha.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "commander" },
                                        { "element": "debug" },
                                        { "element": "escape-string-regexp" },
                                        { "element": "glob" },
                                        { "element": "lru-cache" },
                                        { "element": "minimatch" },
                                        { "element": "ms" },
                                        { "element": "supports-color" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "mocha-junit-reporter",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".editorconfig" },
                                { "element": ".eslintrc.js" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "helpers" },
                                        { "element": "mocha-junit-reporter-spec.js" },
                                        { "element": "mock-results.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "move-concurrently",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "README.md~" },
                                { "element": "move.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "glob" },
                                        { "element": "rimraf" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "ms",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license.md" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "multimatch",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "mute-stdout",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "mute-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": ".nyc_output",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "33508.json" },
                                        { "element": "33510.json" }
                                    ]
                                },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "coverage",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "lcov-report" },
                                        { "element": "lcov.info" }
                                    ]
                                },
                                { "element": "mute.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "basic.js" }]
                                }
                            ]
                        },
                        {
                            "element": "nan",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                {
                                    "element": "doc",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "asyncworker.md" },
                                        { "element": "buffers.md" },
                                        { "element": "callback.md" },
                                        { "element": "converters.md" },
                                        { "element": "errors.md" },
                                        { "element": "json.md" },
                                        { "element": "maybe_types.md" },
                                        { "element": "methods.md" },
                                        { "element": "new.md" },
                                        { "element": "node_misc.md" },
                                        { "element": "object_wrappers.md" },
                                        { "element": "persistent.md" },
                                        { "element": "scopes.md" },
                                        { "element": "script.md" },
                                        { "element": "string_bytes.md" },
                                        { "element": "v8_internals.md" },
                                        { "element": "v8_misc.md" }
                                    ]
                                },
                                { "element": "include_dirs.js" },
                                { "element": "nan.h" },
                                { "element": "nan_callbacks.h" },
                                { "element": "nan_callbacks_12_inl.h" },
                                { "element": "nan_callbacks_pre_12_inl.h" },
                                { "element": "nan_converters.h" },
                                { "element": "nan_converters_43_inl.h" },
                                { "element": "nan_converters_pre_43_inl.h" },
                                { "element": "nan_define_own_property_helper.h" },
                                { "element": "nan_implementation_12_inl.h" },
                                { "element": "nan_implementation_pre_12_inl.h" },
                                { "element": "nan_json.h" },
                                { "element": "nan_maybe_43_inl.h" },
                                { "element": "nan_maybe_pre_43_inl.h" },
                                { "element": "nan_new.h" },
                                { "element": "nan_object_wrap.h" },
                                { "element": "nan_persistent_12_inl.h" },
                                { "element": "nan_persistent_pre_12_inl.h" },
                                { "element": "nan_private.h" },
                                { "element": "nan_string_bytes.h" },
                                { "element": "nan_typedarray_contents.h" },
                                { "element": "nan_weak.h" },
                                { "element": "package.json" },
                                {
                                    "element": "tools",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "1to2.js" },
                                        { "element": "README.md" },
                                        { "element": "package.json" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "nanomatch",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "cache.js" },
                                        { "element": "compilers.js" },
                                        { "element": "parsers.js" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "define-property" },
                                        { "element": "extend-shallow" },
                                        { "element": "is-extendable" },
                                        { "element": "kind-of" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "native-is-elevated",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "binding.gyp" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Release" },
                                        { "element": "binding.sln" },
                                        { "element": "config.gypi" },
                                        { "element": "is-elevated.vcxproj" },
                                        { "element": "is-elevated.vcxproj.filters" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "is-elevated.cc" }]
                                },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "native-keymap",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "License.txt" },
                                { "element": "README.md" },
                                { "element": "ThirdPartyNotices.txt" },
                                { "element": "azure-pipelines.yml" },
                                { "element": "binding.gyp" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Release" },
                                        { "element": "binding.sln" },
                                        { "element": "config.gypi" },
                                        { "element": "keymapping.vcxproj" },
                                        { "element": "keymapping.vcxproj.filters" }
                                    ]
                                },
                                {
                                    "element": "deps",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "chromium" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "keyboard_mac.mm" },
                                        { "element": "keyboard_win.cc" },
                                        { "element": "keyboard_x.cc" },
                                        { "element": "keymapping.cc" },
                                        { "element": "keymapping.h" },
                                        { "element": "string_conversion.cc" },
                                        { "element": "string_conversion.h" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "native-watchdog",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "binding.gyp" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Release" },
                                        { "element": "binding.sln" },
                                        { "element": "config.gypi" },
                                        { "element": "watchdog.vcxproj" },
                                        { "element": "watchdog.vcxproj.filters" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "watchdog.cc" }]
                                }
                            ]
                        },
                        {
                            "element": "natural-compare",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "negotiator",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "charset.js" },
                                        { "element": "encoding.js" },
                                        { "element": "language.js" },
                                        { "element": "mediaType.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "neo-async",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "all.js" },
                                { "element": "allLimit.js" },
                                { "element": "allSeries.js" },
                                { "element": "angelFall.js" },
                                { "element": "any.js" },
                                { "element": "anyLimit.js" },
                                { "element": "anySeries.js" },
                                { "element": "apply.js" },
                                { "element": "applyEach.js" },
                                { "element": "applyEachSeries.js" },
                                { "element": "async.js" },
                                { "element": "async.min.js" },
                                { "element": "asyncify.js" },
                                { "element": "auto.js" },
                                { "element": "autoInject.js" },
                                { "element": "cargo.js" },
                                { "element": "compose.js" },
                                { "element": "concat.js" },
                                { "element": "concatLimit.js" },
                                { "element": "concatSeries.js" },
                                { "element": "constant.js" },
                                { "element": "createLogger.js" },
                                { "element": "detect.js" },
                                { "element": "detectLimit.js" },
                                { "element": "detectSeries.js" },
                                { "element": "dir.js" },
                                { "element": "doDuring.js" },
                                { "element": "doUntil.js" },
                                { "element": "doWhilst.js" },
                                { "element": "during.js" },
                                { "element": "each.js" },
                                { "element": "eachLimit.js" },
                                { "element": "eachOf.js" },
                                { "element": "eachOfLimit.js" },
                                { "element": "eachOfSeries.js" },
                                { "element": "eachSeries.js" },
                                { "element": "ensureAsync.js" },
                                { "element": "every.js" },
                                { "element": "everyLimit.js" },
                                { "element": "everySeries.js" },
                                { "element": "fast.js" },
                                { "element": "filter.js" },
                                { "element": "filterLimit.js" },
                                { "element": "filterSeries.js" },
                                { "element": "find.js" },
                                { "element": "findLimit.js" },
                                { "element": "findSeries.js" },
                                { "element": "foldl.js" },
                                { "element": "foldr.js" },
                                { "element": "forEach.js" },
                                { "element": "forEachLimit.js" },
                                { "element": "forEachOf.js" },
                                { "element": "forEachOfLimit.js" },
                                { "element": "forEachOfSeries.js" },
                                { "element": "forEachSeries.js" },
                                { "element": "forever.js" },
                                { "element": "groupBy.js" },
                                { "element": "groupByLimit.js" },
                                { "element": "groupBySeries.js" },
                                { "element": "inject.js" },
                                { "element": "iterator.js" },
                                { "element": "log.js" },
                                { "element": "map.js" },
                                { "element": "mapLimit.js" },
                                { "element": "mapSeries.js" },
                                { "element": "mapValues.js" },
                                { "element": "mapValuesLimit.js" },
                                { "element": "mapValuesSeries.js" },
                                { "element": "memoize.js" },
                                { "element": "nextTick.js" },
                                { "element": "omit.js" },
                                { "element": "omitLimit.js" },
                                { "element": "omitSeries.js" },
                                { "element": "package.json" },
                                { "element": "parallel.js" },
                                { "element": "parallelLimit.js" },
                                { "element": "pick.js" },
                                { "element": "pickLimit.js" },
                                { "element": "pickSeries.js" },
                                { "element": "priorityQueue.js" },
                                { "element": "queue.js" },
                                { "element": "race.js" },
                                { "element": "reduce.js" },
                                { "element": "reduceRight.js" },
                                { "element": "reflect.js" },
                                { "element": "reflectAll.js" },
                                { "element": "reject.js" },
                                { "element": "rejectLimit.js" },
                                { "element": "rejectSeries.js" },
                                { "element": "retry.js" },
                                { "element": "retryable.js" },
                                { "element": "safe.js" },
                                { "element": "select.js" },
                                { "element": "selectLimit.js" },
                                { "element": "selectSeries.js" },
                                { "element": "seq.js" },
                                { "element": "series.js" },
                                { "element": "setImmediate.js" },
                                { "element": "some.js" },
                                { "element": "someLimit.js" },
                                { "element": "someSeries.js" },
                                { "element": "sortBy.js" },
                                { "element": "sortByLimit.js" },
                                { "element": "sortBySeries.js" },
                                { "element": "timeout.js" },
                                { "element": "times.js" },
                                { "element": "timesLimit.js" },
                                { "element": "timesSeries.js" },
                                { "element": "transform.js" },
                                { "element": "transformLimit.js" },
                                { "element": "transformSeries.js" },
                                { "element": "tryEach.js" },
                                { "element": "unmemoize.js" },
                                { "element": "until.js" },
                                { "element": "waterfall.js" },
                                { "element": "whilst.js" },
                                { "element": "wrapSync.js" }
                            ]
                        },
                        {
                            "element": "nice-try",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "node-abi",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "CODE_OF_CONDUCT.md" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "node-addon-api",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".editorconfig" },
                                { "element": ".travis.yml" },
                                { "element": "CHANGELOG.md" },
                                { "element": "CODE_OF_CONDUCT.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "appveyor.yml" },
                                {
                                    "element": "doc",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Doxyfile" },
                                        { "element": "array_buffer.md" },
                                        { "element": "async_context.md" },
                                        { "element": "async_operations.md" },
                                        { "element": "async_worker.md" },
                                        { "element": "basic_types.md" },
                                        { "element": "bigint.md" },
                                        { "element": "boolean.md" },
                                        { "element": "buffer.md" },
                                        { "element": "callback_scope.md" },
                                        { "element": "callbackinfo.md" },
                                        { "element": "checker-tool.md" },
                                        { "element": "class_property_descriptor.md" },
                                        { "element": "cmake-js.md" },
                                        { "element": "conversion-tool.md" },
                                        { "element": "creating_a_release.md" },
                                        { "element": "dataview.md" },
                                        { "element": "env.md" },
                                        { "element": "error.md" },
                                        { "element": "error_handling.md" },
                                        { "element": "escapable_handle_scope.md" },
                                        { "element": "external.md" },
                                        { "element": "function.md" },
                                        { "element": "function_reference.md" },
                                        { "element": "generator.md" },
                                        { "element": "handle_scope.md" },
                                        { "element": "memory_management.md" },
                                        { "element": "node-gyp.md" },
                                        { "element": "number.md" },
                                        { "element": "object.md" },
                                        { "element": "object_lifetime_management.md" },
                                        { "element": "object_reference.md" },
                                        { "element": "object_wrap.md" },
                                        { "element": "prebuild_tools.md" },
                                        { "element": "promises.md" },
                                        { "element": "property_descriptor.md" },
                                        { "element": "range_error.md" },
                                        { "element": "reference.md" },
                                        { "element": "setup.md" },
                                        { "element": "string.md" },
                                        { "element": "symbol.md" },
                                        { "element": "type_error.md" },
                                        { "element": "typed_array.md" },
                                        { "element": "typed_array_of.md" },
                                        { "element": "value.md" },
                                        { "element": "version_management.md" },
                                        { "element": "working_with_javascript_values.md" }
                                    ]
                                },
                                {
                                    "element": "external-napi",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "node_api.h" }]
                                },
                                { "element": "index.js" },
                                { "element": "napi-inl.deprecated.h" },
                                { "element": "napi-inl.h" },
                                { "element": "napi.h" },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "node_api.cc" },
                                        { "element": "node_api.gyp" },
                                        { "element": "node_api.h" },
                                        { "element": "node_api_types.h" },
                                        { "element": "node_internals.cc" },
                                        { "element": "node_internals.h" },
                                        { "element": "nothing.c" },
                                        { "element": "util-inl.h" },
                                        { "element": "util.h" }
                                    ]
                                },
                                {
                                    "element": "tools",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "README.md" },
                                        { "element": "check-napi.js" },
                                        { "element": "conversion.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "node-libs-browser",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "mock",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "buffer.js" },
                                        { "element": "console.js" },
                                        { "element": "dns.js" },
                                        { "element": "empty.js" },
                                        { "element": "net.js" },
                                        { "element": "process.js" },
                                        { "element": "punycode.js" },
                                        { "element": "tls.js" },
                                        { "element": "tty.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "process-nextick-args" },
                                        { "element": "readable-stream" },
                                        { "element": "string_decoder" },
                                        { "element": "util" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "node-pty",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "binding.gyp" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Release" },
                                        { "element": "binding.sln" },
                                        { "element": "config.gypi" },
                                        { "element": "conpty.vcxproj" },
                                        { "element": "conpty.vcxproj.filters" },
                                        { "element": "conpty_console_list.vcxproj" },
                                        { "element": "conpty_console_list.vcxproj.filters" },
                                        { "element": "deps" },
                                        { "element": "pty.vcxproj" },
                                        { "element": "pty.vcxproj.filters" }
                                    ]
                                },
                                {
                                    "element": "deps",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".editorconfig" },
                                        { "element": "winpty" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "conpty_console_list_agent.js" },
                                        { "element": "conpty_console_list_agent.js.map" },
                                        { "element": "eventEmitter2.js" },
                                        { "element": "eventEmitter2.js.map" },
                                        { "element": "eventEmitter2.test.js" },
                                        { "element": "eventEmitter2.test.js.map" },
                                        { "element": "index.js" },
                                        { "element": "index.js.map" },
                                        { "element": "interfaces.js" },
                                        { "element": "interfaces.js.map" },
                                        { "element": "terminal.js" },
                                        { "element": "terminal.js.map" },
                                        { "element": "terminal.test.js" },
                                        { "element": "terminal.test.js.map" },
                                        { "element": "types.js" },
                                        { "element": "types.js.map" },
                                        { "element": "unixTerminal.js" },
                                        { "element": "unixTerminal.js.map" },
                                        { "element": "unixTerminal.test.js" },
                                        { "element": "unixTerminal.test.js.map" },
                                        { "element": "utils.js" },
                                        { "element": "utils.js.map" },
                                        { "element": "windowsPtyAgent.js" },
                                        { "element": "windowsPtyAgent.js.map" },
                                        { "element": "windowsPtyAgent.test.js" },
                                        { "element": "windowsPtyAgent.test.js.map" },
                                        { "element": "windowsTerminal.js" },
                                        { "element": "windowsTerminal.js.map" },
                                        { "element": "windowsTerminal.test.js" },
                                        { "element": "windowsTerminal.test.js.map" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "scripts",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "install.js" },
                                        { "element": "post-install.js" },
                                        { "element": "publish.js" }
                                    ]
                                },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "conpty_console_list_agent.ts" },
                                        { "element": "eventEmitter2.test.ts" },
                                        { "element": "eventEmitter2.ts" },
                                        { "element": "index.ts" },
                                        { "element": "interfaces.ts" },
                                        { "element": "native.d.ts" },
                                        { "element": "terminal.test.ts" },
                                        { "element": "terminal.ts" },
                                        { "element": "types.ts" },
                                        { "element": "unix" },
                                        { "element": "unixTerminal.test.ts" },
                                        { "element": "unixTerminal.ts" },
                                        { "element": "utils.ts" },
                                        { "element": "win" },
                                        { "element": "windowsPtyAgent.test.ts" },
                                        { "element": "windowsPtyAgent.ts" },
                                        { "element": "windowsTerminal.test.ts" },
                                        { "element": "windowsTerminal.ts" }
                                    ]
                                },
                                {
                                    "element": "typings",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "node-pty.d.ts" }]
                                }
                            ]
                        },
                        {
                            "element": "node.extend",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintrc" },
                                { "element": ".jscs.json" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "History.md" },
                                { "element": "Readme.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "extend.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "noop-logger",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "History.md" },
                                { "element": "Makefile" },
                                { "element": "Readme.md" },
                                { "element": "circle.yml" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "nopt",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "nopt.js" }]
                                },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "my-program.js" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "nopt.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "basic.js" }]
                                }
                            ]
                        },
                        {
                            "element": "normalize-package-data",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "AUTHORS" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "extract_description.js" },
                                        { "element": "fixer.js" },
                                        { "element": "make_warning.js" },
                                        { "element": "normalize.js" },
                                        { "element": "safe_format.js" },
                                        { "element": "typos.json" },
                                        { "element": "warning_messages.json" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "semver" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "normalize-path",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "normalize-range",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "normalize-url",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "now-and-later",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "helpers.js" },
                                        { "element": "map.js" },
                                        { "element": "mapSeries.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "npm-run-path",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "npmlog",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "log.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "nsfw",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "binding.gyp" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Release" },
                                        { "element": "binding.sln" },
                                        { "element": "config.gypi" },
                                        { "element": "nsfw.vcxproj" },
                                        { "element": "nsfw.vcxproj.filters" }
                                    ]
                                },
                                {
                                    "element": "includes",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "NSFW.h" },
                                        { "element": "NativeInterface.h" },
                                        { "element": "Queue.h" },
                                        { "element": "SingleshotSemaphore.h" },
                                        { "element": "linux" },
                                        { "element": "osx" },
                                        { "element": "win32" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "src" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "CMakeLists.txt" },
                                        { "element": "NSFW.cpp" },
                                        { "element": "NativeInterface.cpp" },
                                        { "element": "Queue.cpp" },
                                        { "element": "linux" },
                                        { "element": "osx" },
                                        { "element": "win32" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "nth-check",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "README.md" },
                                { "element": "compile.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "parse.js" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "nugget",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "bin.js" },
                                { "element": "collaborators.md" },
                                { "element": "index.js" },
                                { "element": "multiple.png" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "cli.js" },
                                        { "element": "resume.html" },
                                        { "element": "resume.js" },
                                        { "element": "test.js" }
                                    ]
                                },
                                { "element": "usage.txt" }
                            ]
                        },
                        {
                            "element": "num2fraction",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".editorconfig" },
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "number-is-nan",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "nwmatcher",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "modules" },
                                        { "element": "nwmatcher-base.js" },
                                        { "element": "nwmatcher-noqsa.js" },
                                        { "element": "nwmatcher.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "oauth-sign",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "object-assign",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "object-copy",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "kind-of" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "object-keys",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".editorconfig" },
                                { "element": ".eslintrc" },
                                { "element": ".jscs.json" },
                                { "element": ".travis.yml" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "isArguments.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "object-visit",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "object.assign",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".editorconfig" },
                                { "element": ".eslintrc" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "auto.js" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "browser.js" }]
                                },
                                { "element": "hasSymbols.js" },
                                { "element": "implementation.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "polyfill.js" },
                                { "element": "shim.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".eslintrc" },
                                        { "element": "index.js" },
                                        { "element": "native.js" },
                                        { "element": "shimmed.js" },
                                        { "element": "tests.js" }
                                    ]
                                },
                                { "element": "test.sh" }
                            ]
                        },
                        {
                            "element": "object.defaults",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "immutable.js" },
                                { "element": "index.js" },
                                { "element": "mutable.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "object.map",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "object.omit",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "for-in" }, { "element": "for-own" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "object.pick",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "object.reduce",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "on-finished",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "once",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "once.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "onetime",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "onigasm-umd",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "package.json" },
                                {
                                    "element": "release",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "main.js" },
                                        { "element": "onigasm.wasm" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "oniguruma",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "appveyor.yml" },
                                { "element": "binding.gyp" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Release" },
                                        { "element": "binding.sln" },
                                        { "element": "config.gypi" },
                                        { "element": "onig_scanner.vcxproj" },
                                        { "element": "onig_scanner.vcxproj.filters" },
                                        { "element": "oniguruma.vcxproj" },
                                        { "element": "oniguruma.vcxproj.filters" }
                                    ]
                                },
                                {
                                    "element": "deps",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "onig" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "nan" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "spec",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "onig-reg-exp-spec.js" },
                                        { "element": "onig-scanner-spec.js" },
                                        { "element": "onig-string-spec.js" }
                                    ]
                                },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "onig-reg-exp.cc" },
                                        { "element": "onig-reg-exp.h" },
                                        { "element": "onig-result.cc" },
                                        { "element": "onig-result.h" },
                                        { "element": "onig-scanner-worker.cc" },
                                        { "element": "onig-scanner-worker.h" },
                                        { "element": "onig-scanner.cc" },
                                        { "element": "onig-scanner.h" },
                                        { "element": "onig-searcher.cc" },
                                        { "element": "onig-searcher.h" },
                                        { "element": "onig-string.cc" },
                                        { "element": "onig-string.h" },
                                        { "element": "oniguruma.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "opener",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                { "element": "opener.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "opn",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                { "element": "xdg-open" }
                            ]
                        },
                        {
                            "element": "optimist",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.markdown" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "bool.js" },
                                        { "element": "boolean_double.js" },
                                        { "element": "boolean_single.js" },
                                        { "element": "default_hash.js" },
                                        { "element": "default_singles.js" },
                                        { "element": "divide.js" },
                                        { "element": "line_count.js" },
                                        { "element": "line_count_options.js" },
                                        { "element": "line_count_wrap.js" },
                                        { "element": "nonopt.js" },
                                        { "element": "reflect.js" },
                                        { "element": "short.js" },
                                        { "element": "string.js" },
                                        { "element": "usage-options.js" },
                                        { "element": "xup.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "_" },
                                        { "element": "_.js" },
                                        { "element": "parse.js" },
                                        { "element": "usage.js" }
                                    ]
                                },
                                { "element": "x.js" }
                            ]
                        },
                        {
                            "element": "optionator",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "help.js" },
                                        { "element": "index.js" },
                                        { "element": "util.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "wordwrap" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "ordered-read-streams",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "os-browserify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "browser.js" },
                                { "element": "main.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "os-homedir",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "os-locale",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "os-tmpdir",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "osenv",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "osenv.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "unix.js" },
                                        { "element": "windows.js" }
                                    ]
                                },
                                { "element": "x.tap" }
                            ]
                        },
                        {
                            "element": "p-all",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "p-finally",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "p-limit",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "p-locate",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "p-limit" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "p-map",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "p-try",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "pako",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "pako.js" },
                                        { "element": "pako.min.js" },
                                        { "element": "pako_deflate.js" },
                                        { "element": "pako_deflate.min.js" },
                                        { "element": "pako_inflate.js" },
                                        { "element": "pako_inflate.min.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "deflate.js" },
                                        { "element": "inflate.js" },
                                        { "element": "utils" },
                                        { "element": "zlib" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "parallel-transform",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "parent-module",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "callsites" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "parse-asn1",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "aesid.json" },
                                { "element": "asn1.js" },
                                { "element": "certificate.js" },
                                { "element": "fixProc.js" },
                                { "element": "index.js" },
                                { "element": "package-lock.json.1909017369" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "1024.priv" },
                                        { "element": "1024.pub" },
                                        { "element": "dsa.1024.priv" },
                                        { "element": "dsa.1024.pub" },
                                        { "element": "dsa.2048.priv" },
                                        { "element": "dsa.2048.pub" },
                                        { "element": "ec.pass.priv" },
                                        { "element": "ec.priv" },
                                        { "element": "ec.pub" },
                                        { "element": "index.js" },
                                        { "element": "node.cert" },
                                        { "element": "pass.1024.priv" },
                                        { "element": "pass.1024.pub" },
                                        { "element": "pass.dsa.1024.priv" },
                                        { "element": "pass.dsa.1024.pub" },
                                        { "element": "pass.rsa.1024.priv" },
                                        { "element": "pass.rsa.1024.pub" },
                                        { "element": "pass.rsa.2028.priv" },
                                        { "element": "pass.rsa.2028.pub" },
                                        { "element": "pass2.dsa.1024.priv" },
                                        { "element": "pass2.dsa.1024.pub" },
                                        { "element": "rsa.1024.priv" },
                                        { "element": "rsa.1024.pub" },
                                        { "element": "rsa.2028.priv" },
                                        { "element": "rsa.2028.pub" },
                                        { "element": "vector.js" },
                                        { "element": "vector.priv" },
                                        { "element": "vector2.priv" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "parse-filepath",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "is-absolute" },
                                        { "element": "is-relative" },
                                        { "element": "is-unc-path" },
                                        { "element": "is-windows" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "parse-glob",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "parse-json",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                {
                                    "element": "vendor",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "parse.js" },
                                        { "element": "unicode.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "parse-node-version",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "parse-passwd",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "parse-semver",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".editorconfig" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "CHANGELOG.md" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "semver" }]
                                },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "parse5",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "docs",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "build" }]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "common" },
                                        { "element": "jsdom" },
                                        { "element": "serialization" },
                                        { "element": "simple_api" },
                                        { "element": "tokenization" },
                                        { "element": "tree_adapters" },
                                        { "element": "tree_construction" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "parseurl",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "pascalcase",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "path-browserify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" }
                            ]
                        },
                        {
                            "element": "path-dirname",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "path-exists",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "path-is-absolute",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "path-is-inside",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.txt" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "path-is-inside.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "path-key",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "path-parse",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "index.min.js" },
                                { "element": "package.json" },
                                { "element": "test.js" },
                                { "element": "test.min.js" }
                            ]
                        },
                        {
                            "element": "path-root",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "path-root-regex",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "path-to-regexp",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "History.md" },
                                { "element": "LICENSE" },
                                { "element": "Readme.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "path-type",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "pify" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "pause-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.js" },
                                        { "element": "pause-end.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "pbkdf2",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "browser.js" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "async.js" },
                                        { "element": "default-encoding.js" },
                                        { "element": "precondition.js" },
                                        { "element": "sync-browser.js" },
                                        { "element": "sync.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "pend",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "performance-now",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".tm_properties" },
                                { "element": ".travis.yml" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "performance-now.js" },
                                        { "element": "performance-now.js.map" }
                                    ]
                                },
                                { "element": "license.txt" },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.d.ts" },
                                        { "element": "performance-now.coffee" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "mocha.opts" },
                                        { "element": "performance-now.coffee" },
                                        { "element": "scripts" },
                                        { "element": "scripts.coffee" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "picomatch",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "constants.js" },
                                        { "element": "parse.js" },
                                        { "element": "picomatch.js" },
                                        { "element": "scan.js" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "pify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "pinkie",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "pinkie-promise",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "pkg-dir",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "plist",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintrc" },
                                { "element": ".travis.yml" },
                                { "element": "History.md" },
                                { "element": "LICENSE" },
                                { "element": "Makefile" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "plist-build.js" },
                                        { "element": "plist-parse.js" },
                                        { "element": "plist.js" }
                                    ]
                                },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "browser" }]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "build.js" }, { "element": "parse.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "plugin-error",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ansi-colors" },
                                        { "element": "extend-shallow" },
                                        { "element": "is-extendable" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "pluralize",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "Readme.md" },
                                { "element": "package.json" },
                                { "element": "pluralize.js" }
                            ]
                        },
                        {
                            "element": "portfinder",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "portfinder.d.ts" },
                                        { "element": "portfinder.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "posix-character-classes",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "docs",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "guidelines" },
                                        { "element": "source-maps.md" },
                                        { "element": "syntax.md" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "at-rule.js" },
                                        { "element": "comment.js" },
                                        { "element": "container.js" },
                                        { "element": "css-syntax-error.js" },
                                        { "element": "declaration.js" },
                                        { "element": "input.js" },
                                        { "element": "lazy-result.js" },
                                        { "element": "list.js" },
                                        { "element": "map-generator.js" },
                                        { "element": "node.js" },
                                        { "element": "parse.js" },
                                        { "element": "parser.js" },
                                        { "element": "postcss.d.ts" },
                                        { "element": "postcss.js" },
                                        { "element": "previous-map.js" },
                                        { "element": "processor.js" },
                                        { "element": "result.js" },
                                        { "element": "root.js" },
                                        { "element": "rule.js" },
                                        { "element": "stringifier.js" },
                                        { "element": "stringify.js" },
                                        { "element": "terminal-highlight.js" },
                                        { "element": "tokenize.js" },
                                        { "element": "vendor.js" },
                                        { "element": "warn-once.js" },
                                        { "element": "warning.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "has-flag" },
                                        { "element": "source-map" },
                                        { "element": "supports-color" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-calc",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-colormin",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-convert-values",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }, { "element": "lib" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-discard-comments",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }, { "element": "lib" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-discard-duplicates",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-discard-empty",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-discard-overridden",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".babelrc" },
                                { "element": ".editorconfig" },
                                { "element": ".npmignore" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "input.css" },
                                        { "element": "output.css" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "postcss-discard-unused",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-filter-plugins",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-merge-idents",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-merge-longhand",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }, { "element": "lib" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-merge-rules",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }, { "element": "lib" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-message-helpers",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-minify-font-values",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "keywords.js" },
                                        { "element": "minify-family.js" },
                                        { "element": "minify-font.js" },
                                        { "element": "minify-weight.js" },
                                        { "element": "uniqs.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-minify-gradients",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-minify-params",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-minify-selectors",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }, { "element": "lib" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-normalize-charset",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-normalize-url",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-ordered-values",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.js" },
                                        { "element": "lib" },
                                        { "element": "rules" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-reduce-idents",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }, { "element": "lib" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-reduce-initial",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "data",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "values.json" }]
                                },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-reduce-transforms",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-selector-parser",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "API.md" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.js" },
                                        { "element": "parser.js" },
                                        { "element": "processor.js" },
                                        { "element": "selectors" },
                                        { "element": "sortAscending.js" },
                                        { "element": "tokenize.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-svgo",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }, { "element": "lib" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-unique-selectors",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-value-parser",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.js" },
                                        { "element": "parse.js" },
                                        { "element": "stringify.js" },
                                        { "element": "unit.js" },
                                        { "element": "walk.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "postcss-zindex",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "layerCache.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "prebuild-install",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "appveyor.yml" },
                                { "element": "bin.js" },
                                { "element": "download.js" },
                                { "element": "error.js" },
                                { "element": "help.txt" },
                                { "element": "index.js" },
                                { "element": "log.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "pump" }]
                                },
                                { "element": "package.json" },
                                { "element": "rc.js" },
                                { "element": "util.js" }
                            ]
                        },
                        {
                            "element": "prelude-ls",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Func.js" },
                                        { "element": "List.js" },
                                        { "element": "Num.js" },
                                        { "element": "Obj.js" },
                                        { "element": "Str.js" },
                                        { "element": "index.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "prepend-http",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "preserve",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".gitattributes" },
                                { "element": ".jshintrc" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": ".verb.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "pretty-bytes",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "cli.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "pretty-bytes.js" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "pretty-hrtime",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintignore" },
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "prettyjson",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintrc" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "Authors.md" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "History.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "prettyjson" }]
                                },
                                {
                                    "element": "images",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "example1.png" },
                                        { "element": "example2.png" },
                                        { "element": "example3.png" },
                                        { "element": "example4.png" },
                                        { "element": "example5.png" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "prettyjson.js" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "colors" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "prettyjson_spec.js" }]
                                }
                            ]
                        },
                        {
                            "element": "priorityqueuejs",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "History.md" },
                                { "element": "Makefile" },
                                { "element": "Readme.md" },
                                { "element": "component.json" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "bootstrap.js" },
                                        { "element": "priorityqueue.js" },
                                        { "element": "test.html" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "process",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintrc" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "browser.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "process-nextick-args",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "index.js" },
                                { "element": "license.md" },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "progress",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "History.md" },
                                { "element": "LICENSE" },
                                { "element": "Makefile" },
                                { "element": "Readme.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "node-progress.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "progress-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "isarray" },
                                        { "element": "object-keys" },
                                        { "element": "readable-stream" },
                                        { "element": "through2" },
                                        { "element": "xtend" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "http.js" },
                                        { "element": "request.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "promise-inflight",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "inflight.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "proto-list",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                { "element": "proto-list.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "basic.js" }]
                                }
                            ]
                        },
                        {
                            "element": "proxy-addr",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "prr",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintrc" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                { "element": "prr.js" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "pseudomap",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "map.js" },
                                { "element": "package.json" },
                                { "element": "pseudomap.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "basic.js" }]
                                }
                            ]
                        },
                        {
                            "element": "psl",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintignore" },
                                { "element": ".eslintrc" },
                                { "element": ".travis.yml" },
                                { "element": "README.md" },
                                {
                                    "element": "data",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "rules.json" }]
                                },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "psl.js" }, { "element": "psl.min.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "karma.conf.js" },
                                { "element": "package.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "public-encrypt",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "browser.js" },
                                { "element": "index.js" },
                                { "element": "mgf.js" },
                                { "element": "package.json" },
                                { "element": "privateDecrypt.js" },
                                { "element": "publicEncrypt.js" },
                                { "element": "readme.md" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "1024.priv" },
                                        { "element": "1024.pub" },
                                        { "element": "ec.pass.priv" },
                                        { "element": "ec.priv" },
                                        { "element": "ec.pub" },
                                        { "element": "index.js" },
                                        { "element": "nodeTests.js" },
                                        { "element": "pass.1024.priv" },
                                        { "element": "pass.1024.pub" },
                                        { "element": "rsa.1024.priv" },
                                        { "element": "rsa.1024.pub" },
                                        { "element": "rsa.2028.priv" },
                                        { "element": "rsa.2028.pub" },
                                        { "element": "rsa.pass.priv" },
                                        { "element": "rsa.pass.pub" },
                                        { "element": "test_cert.pem" },
                                        { "element": "test_key.pem" },
                                        { "element": "test_rsa_privkey.pem" },
                                        { "element": "test_rsa_privkey_encrypted.pem" },
                                        { "element": "test_rsa_pubkey.pem" }
                                    ]
                                },
                                { "element": "withPublic.js" },
                                { "element": "xor.js" }
                            ]
                        },
                        {
                            "element": "pump",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test-browser.js" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "pumpify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "pump" }]
                                },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "punycode",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE-MIT.txt" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                { "element": "punycode.js" }
                            ]
                        },
                        {
                            "element": "q",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGES.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                { "element": "q.js" },
                                { "element": "queue.js" }
                            ]
                        },
                        {
                            "element": "qs",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".editorconfig" },
                                { "element": ".eslintignore" },
                                { "element": ".eslintrc" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "qs.js" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "formats.js" },
                                        { "element": "index.js" },
                                        { "element": "parse.js" },
                                        { "element": "stringify.js" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".eslintrc" },
                                        { "element": "index.js" },
                                        { "element": "parse.js" },
                                        { "element": "stringify.js" },
                                        { "element": "utils.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "query-string",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "querystring",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".History.md.un~" },
                                { "element": ".Readme.md.un~" },
                                { "element": ".package.json.un~" },
                                { "element": ".travis.yml" },
                                { "element": "History.md" },
                                { "element": "License.md" },
                                { "element": "Readme.md" },
                                { "element": "decode.js" },
                                { "element": "encode.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".index.js.un~" },
                                        { "element": "common-index.js" },
                                        { "element": "index.js" },
                                        { "element": "tap-index.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "querystring-es3",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "History.md" },
                                { "element": "License.md" },
                                { "element": "Readme.md" },
                                { "element": "decode.js" },
                                { "element": "encode.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "common-index.js" },
                                        { "element": "index.js" },
                                        { "element": "tap-index.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "queue",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "concurrent.js" },
                                        { "element": "end.js" },
                                        { "element": "error-async.js" },
                                        { "element": "error-sync.js" },
                                        { "element": "index.html" },
                                        { "element": "index.js" },
                                        { "element": "length.js" },
                                        { "element": "stop.js" },
                                        { "element": "synchronous.js" },
                                        { "element": "timeout.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "randomatic",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "is-number" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "randombytes",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": ".zuul.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "browser.js" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "safe-buffer" }]
                                },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "randomfill",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": ".zuul.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "browser.js" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "safe-buffer" }]
                                },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "range-parser",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "raw-body",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "iconv-lite" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "rc",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.APACHE2" },
                                { "element": "LICENSE.BSD" },
                                { "element": "LICENSE.MIT" },
                                { "element": "README.md" },
                                { "element": "browser.js" },
                                { "element": "cli.js" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "utils.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ini.js" },
                                        { "element": "nested-env-vars.js" },
                                        { "element": "test.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "rcedit",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "rcedit.exe" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "rcedit.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "read",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "read.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "read-pkg",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "path-type" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "read-pkg-up",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "find-up" },
                                        { "element": "path-exists" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "readable-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "GOVERNANCE.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "doc",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "wg-meetings" }]
                                },
                                { "element": "duplex-browser.js" },
                                { "element": "duplex.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "_stream_duplex.js" },
                                        { "element": "_stream_passthrough.js" },
                                        { "element": "_stream_readable.js" },
                                        { "element": "_stream_transform.js" },
                                        { "element": "_stream_writable.js" },
                                        { "element": "internal" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "string_decoder" }]
                                },
                                { "element": "package.json" },
                                { "element": "passthrough.js" },
                                { "element": "readable-browser.js" },
                                { "element": "readable.js" },
                                { "element": "transform.js" },
                                { "element": "writable-browser.js" },
                                { "element": "writable.js" }
                            ]
                        },
                        {
                            "element": "readdirp",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                { "element": "readdirp.js" },
                                { "element": "stream-api.js" }
                            ]
                        },
                        {
                            "element": "rechoir",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "CHANGELOG" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "extension.js" },
                                        { "element": "normalize.js" },
                                        { "element": "register.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "redent",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "reduce-css-calc",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "reduce-function-call",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "regex-cache",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "regex-not",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "extend-shallow" },
                                        { "element": "is-extendable" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "regexpp",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                { "element": "index.js.map" },
                                { "element": "index.mjs" },
                                { "element": "index.mjs.map" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "remap-istanbul",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".editorconfig" },
                                { "element": ".eslintignore" },
                                { "element": ".eslintrc" },
                                { "element": ".gitattributes" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "remap-istanbul.js" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "CoverageTransformer.js" },
                                        { "element": "SparseCoverageCollector.js" },
                                        { "element": "checkThreshold.js" },
                                        { "element": "getMapping.js" },
                                        { "element": "gruntRemapIstanbul.js" },
                                        { "element": "gulpRemapIstanbul.js" },
                                        { "element": "intern-reporters" },
                                        { "element": "loadCoverage.js" },
                                        { "element": "main.js" },
                                        { "element": "remap.js" },
                                        { "element": "remapBranch.js" },
                                        { "element": "remapFunction.js" },
                                        { "element": "writeReport.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "abbrev" },
                                        { "element": "escodegen" },
                                        { "element": "estraverse" },
                                        { "element": "has-flag" },
                                        { "element": "istanbul" },
                                        { "element": "readable-stream" },
                                        { "element": "resolve" },
                                        { "element": "source-map" },
                                        { "element": "string_decoder" },
                                        { "element": "supports-color" },
                                        { "element": "through2" },
                                        { "element": "wordwrap" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "tasks",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "remapIstanbul.js" }]
                                }
                            ]
                        },
                        {
                            "element": "remove-bom-buffer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "remove-bom-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "safe-buffer" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "remove-trailing-separator",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "history.md" },
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "repeat-element",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "repeat-string",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "repeating",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "replace-ext",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "replace-homedir",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "replacestream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "request",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "auth.js" },
                                        { "element": "cookies.js" },
                                        { "element": "getProxyFromURI.js" },
                                        { "element": "har.js" },
                                        { "element": "helpers.js" },
                                        { "element": "multipart.js" },
                                        { "element": "oauth.js" },
                                        { "element": "querystring.js" },
                                        { "element": "redirect.js" },
                                        { "element": "tunnel.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" },
                                { "element": "request.js" }
                            ]
                        },
                        {
                            "element": "require-directory",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintrc" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.markdown" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "require-main-filename",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "require-uncached",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "requires-port",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "resolve",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".editorconfig" },
                                { "element": ".eslintignore" },
                                { "element": ".eslintrc" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "appveyor.yml" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "async.js" }, { "element": "sync.js" }]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "async.js" },
                                        { "element": "caller.js" },
                                        { "element": "core.js" },
                                        { "element": "core.json" },
                                        { "element": "node-modules-paths.js" },
                                        { "element": "sync.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "core.js" },
                                        { "element": "dotdot" },
                                        { "element": "dotdot.js" },
                                        { "element": "faulty_basedir.js" },
                                        { "element": "filter.js" },
                                        { "element": "filter_sync.js" },
                                        { "element": "mock.js" },
                                        { "element": "mock_sync.js" },
                                        { "element": "module_dir" },
                                        { "element": "module_dir.js" },
                                        { "element": "node-modules-paths.js" },
                                        { "element": "node_path" },
                                        { "element": "node_path.js" },
                                        { "element": "nonstring.js" },
                                        { "element": "pathfilter" },
                                        { "element": "pathfilter.js" },
                                        { "element": "precedence" },
                                        { "element": "precedence.js" },
                                        { "element": "resolver" },
                                        { "element": "resolver.js" },
                                        { "element": "resolver_sync.js" },
                                        { "element": "subdirs.js" },
                                        { "element": "symlinks.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "resolve-cwd",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "resolve-from" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "resolve-dir",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "resolve-from",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "resolve-options",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "resolve-url",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintrc" },
                                { "element": "LICENSE" },
                                { "element": "bower.json" },
                                { "element": "changelog.md" },
                                { "element": "component.json" },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                { "element": "resolve-url.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "resolve-url.js" }]
                                }
                            ]
                        },
                        {
                            "element": "restore-cursor",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "ret",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.js" },
                                        { "element": "positions.js" },
                                        { "element": "sets.js" },
                                        { "element": "types.js" },
                                        { "element": "util.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "right-align",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "rimraf",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "bin.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "glob" }]
                                },
                                { "element": "package.json" },
                                { "element": "rimraf.js" }
                            ]
                        },
                        {
                            "element": "ripemd160",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "run-async",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "run-queue",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "package.json" },
                                { "element": "queue.js" }
                            ]
                        },
                        {
                            "element": "rx-lite",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                { "element": "rx.lite.js" },
                                { "element": "rx.lite.map" },
                                { "element": "rx.lite.min.js" }
                            ]
                        },
                        {
                            "element": "rx-lite-aggregates",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                { "element": "rx.lite.aggregates.js" },
                                { "element": "rx.lite.aggregates.map" },
                                { "element": "rx.lite.aggregates.min.js" }
                            ]
                        },
                        {
                            "element": "rxjs",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "AsyncSubject.d.ts" },
                                { "element": "AsyncSubject.js" },
                                { "element": "AsyncSubject.js.map" },
                                { "element": "BehaviorSubject.d.ts" },
                                { "element": "BehaviorSubject.js" },
                                { "element": "BehaviorSubject.js.map" },
                                { "element": "InnerSubscriber.d.ts" },
                                { "element": "InnerSubscriber.js" },
                                { "element": "InnerSubscriber.js.map" },
                                { "element": "LICENSE.txt" },
                                { "element": "Notification.d.ts" },
                                { "element": "Notification.js" },
                                { "element": "Notification.js.map" },
                                { "element": "Observable.d.ts" },
                                { "element": "Observable.js" },
                                { "element": "Observable.js.map" },
                                { "element": "Observer.d.ts" },
                                { "element": "Observer.js" },
                                { "element": "Observer.js.map" },
                                { "element": "Operator.d.ts" },
                                { "element": "Operator.js" },
                                { "element": "Operator.js.map" },
                                { "element": "OuterSubscriber.d.ts" },
                                { "element": "OuterSubscriber.js" },
                                { "element": "OuterSubscriber.js.map" },
                                { "element": "README.md" },
                                { "element": "ReplaySubject.d.ts" },
                                { "element": "ReplaySubject.js" },
                                { "element": "ReplaySubject.js.map" },
                                { "element": "Rx.d.ts" },
                                { "element": "Rx.js" },
                                { "element": "Rx.js.map" },
                                { "element": "Scheduler.d.ts" },
                                { "element": "Scheduler.js" },
                                { "element": "Scheduler.js.map" },
                                { "element": "Subject.d.ts" },
                                { "element": "Subject.js" },
                                { "element": "Subject.js.map" },
                                { "element": "SubjectSubscription.d.ts" },
                                { "element": "SubjectSubscription.js" },
                                { "element": "SubjectSubscription.js.map" },
                                { "element": "Subscriber.d.ts" },
                                { "element": "Subscriber.js" },
                                { "element": "Subscriber.js.map" },
                                { "element": "Subscription.d.ts" },
                                { "element": "Subscription.js" },
                                { "element": "Subscription.js.map" },
                                {
                                    "element": "_esm2015",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "LICENSE.txt" },
                                        { "element": "README.md" },
                                        { "element": "ajax" },
                                        { "element": "index.js" },
                                        { "element": "index.js.map" },
                                        { "element": "internal" },
                                        { "element": "internal-compatibility" },
                                        { "element": "operators" },
                                        { "element": "path-mapping.js" },
                                        { "element": "testing" },
                                        { "element": "webSocket" }
                                    ]
                                },
                                {
                                    "element": "_esm5",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "LICENSE.txt" },
                                        { "element": "README.md" },
                                        { "element": "ajax" },
                                        { "element": "index.js" },
                                        { "element": "index.js.map" },
                                        { "element": "internal" },
                                        { "element": "internal-compatibility" },
                                        { "element": "operators" },
                                        { "element": "path-mapping.js" },
                                        { "element": "testing" },
                                        { "element": "webSocket" }
                                    ]
                                },
                                {
                                    "element": "add",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "observable" },
                                        { "element": "operator" }
                                    ]
                                },
                                {
                                    "element": "ajax",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.d.ts" },
                                        { "element": "index.js" },
                                        { "element": "index.js.map" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "bundles",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "rxjs.umd.js" },
                                        { "element": "rxjs.umd.js.map" },
                                        { "element": "rxjs.umd.min.js" },
                                        { "element": "rxjs.umd.min.js.map" }
                                    ]
                                },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                { "element": "index.js.map" },
                                { "element": "interfaces.d.ts" },
                                { "element": "interfaces.js" },
                                { "element": "interfaces.js.map" },
                                {
                                    "element": "internal",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "AsyncSubject.d.ts" },
                                        { "element": "AsyncSubject.js" },
                                        { "element": "AsyncSubject.js.map" },
                                        { "element": "BehaviorSubject.d.ts" },
                                        { "element": "BehaviorSubject.js" },
                                        { "element": "BehaviorSubject.js.map" },
                                        { "element": "InnerSubscriber.d.ts" },
                                        { "element": "InnerSubscriber.js" },
                                        { "element": "InnerSubscriber.js.map" },
                                        { "element": "Notification.d.ts" },
                                        { "element": "Notification.js" },
                                        { "element": "Notification.js.map" },
                                        { "element": "Observable.d.ts" },
                                        { "element": "Observable.js" },
                                        { "element": "Observable.js.map" },
                                        { "element": "Observer.d.ts" },
                                        { "element": "Observer.js" },
                                        { "element": "Observer.js.map" },
                                        { "element": "Operator.d.ts" },
                                        { "element": "Operator.js" },
                                        { "element": "Operator.js.map" },
                                        { "element": "OuterSubscriber.d.ts" },
                                        { "element": "OuterSubscriber.js" },
                                        { "element": "OuterSubscriber.js.map" },
                                        { "element": "ReplaySubject.d.ts" },
                                        { "element": "ReplaySubject.js" },
                                        { "element": "ReplaySubject.js.map" },
                                        { "element": "Rx.d.ts" },
                                        { "element": "Rx.js" },
                                        { "element": "Rx.js.map" },
                                        { "element": "Scheduler.d.ts" },
                                        { "element": "Scheduler.js" },
                                        { "element": "Scheduler.js.map" },
                                        { "element": "Subject.d.ts" },
                                        { "element": "Subject.js" },
                                        { "element": "Subject.js.map" },
                                        { "element": "SubjectSubscription.d.ts" },
                                        { "element": "SubjectSubscription.js" },
                                        { "element": "SubjectSubscription.js.map" },
                                        { "element": "Subscriber.d.ts" },
                                        { "element": "Subscriber.js" },
                                        { "element": "Subscriber.js.map" },
                                        { "element": "Subscription.d.ts" },
                                        { "element": "Subscription.js" },
                                        { "element": "Subscription.js.map" },
                                        { "element": "config.d.ts" },
                                        { "element": "config.js" },
                                        { "element": "config.js.map" },
                                        { "element": "observable" },
                                        { "element": "operators" },
                                        { "element": "scheduler" },
                                        { "element": "symbol" },
                                        { "element": "testing" },
                                        { "element": "types.d.ts" },
                                        { "element": "types.js" },
                                        { "element": "types.js.map" },
                                        { "element": "util" }
                                    ]
                                },
                                {
                                    "element": "internal-compatibility",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.d.ts" },
                                        { "element": "index.js" },
                                        { "element": "index.js.map" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "migrations",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "collection.json" },
                                        { "element": "update-6_0_0" }
                                    ]
                                },
                                {
                                    "element": "observable",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ArrayLikeObservable.d.ts" },
                                        { "element": "ArrayLikeObservable.js" },
                                        { "element": "ArrayLikeObservable.js.map" },
                                        { "element": "ArrayObservable.d.ts" },
                                        { "element": "ArrayObservable.js" },
                                        { "element": "ArrayObservable.js.map" },
                                        { "element": "BoundCallbackObservable.d.ts" },
                                        { "element": "BoundCallbackObservable.js" },
                                        { "element": "BoundCallbackObservable.js.map" },
                                        { "element": "BoundNodeCallbackObservable.d.ts" },
                                        { "element": "BoundNodeCallbackObservable.js" },
                                        { "element": "BoundNodeCallbackObservable.js.map" },
                                        { "element": "ConnectableObservable.d.ts" },
                                        { "element": "ConnectableObservable.js" },
                                        { "element": "ConnectableObservable.js.map" },
                                        { "element": "DeferObservable.d.ts" },
                                        { "element": "DeferObservable.js" },
                                        { "element": "DeferObservable.js.map" },
                                        { "element": "EmptyObservable.d.ts" },
                                        { "element": "EmptyObservable.js" },
                                        { "element": "EmptyObservable.js.map" },
                                        { "element": "ErrorObservable.d.ts" },
                                        { "element": "ErrorObservable.js" },
                                        { "element": "ErrorObservable.js.map" },
                                        { "element": "ForkJoinObservable.d.ts" },
                                        { "element": "ForkJoinObservable.js" },
                                        { "element": "ForkJoinObservable.js.map" },
                                        { "element": "FromEventObservable.d.ts" },
                                        { "element": "FromEventObservable.js" },
                                        { "element": "FromEventObservable.js.map" },
                                        { "element": "FromEventPatternObservable.d.ts" },
                                        { "element": "FromEventPatternObservable.js" },
                                        { "element": "FromEventPatternObservable.js.map" },
                                        { "element": "FromObservable.d.ts" },
                                        { "element": "FromObservable.js" },
                                        { "element": "FromObservable.js.map" },
                                        { "element": "GenerateObservable.d.ts" },
                                        { "element": "GenerateObservable.js" },
                                        { "element": "GenerateObservable.js.map" },
                                        { "element": "IfObservable.d.ts" },
                                        { "element": "IfObservable.js" },
                                        { "element": "IfObservable.js.map" },
                                        { "element": "IntervalObservable.d.ts" },
                                        { "element": "IntervalObservable.js" },
                                        { "element": "IntervalObservable.js.map" },
                                        { "element": "IteratorObservable.d.ts" },
                                        { "element": "IteratorObservable.js" },
                                        { "element": "IteratorObservable.js.map" },
                                        { "element": "NeverObservable.d.ts" },
                                        { "element": "NeverObservable.js" },
                                        { "element": "NeverObservable.js.map" },
                                        { "element": "PairsObservable.d.ts" },
                                        { "element": "PairsObservable.js" },
                                        { "element": "PairsObservable.js.map" },
                                        { "element": "PromiseObservable.d.ts" },
                                        { "element": "PromiseObservable.js" },
                                        { "element": "PromiseObservable.js.map" },
                                        { "element": "RangeObservable.d.ts" },
                                        { "element": "RangeObservable.js" },
                                        { "element": "RangeObservable.js.map" },
                                        { "element": "ScalarObservable.d.ts" },
                                        { "element": "ScalarObservable.js" },
                                        { "element": "ScalarObservable.js.map" },
                                        { "element": "SubscribeOnObservable.d.ts" },
                                        { "element": "SubscribeOnObservable.js" },
                                        { "element": "SubscribeOnObservable.js.map" },
                                        { "element": "TimerObservable.d.ts" },
                                        { "element": "TimerObservable.js" },
                                        { "element": "TimerObservable.js.map" },
                                        { "element": "UsingObservable.d.ts" },
                                        { "element": "UsingObservable.js" },
                                        { "element": "UsingObservable.js.map" },
                                        { "element": "bindCallback.d.ts" },
                                        { "element": "bindCallback.js" },
                                        { "element": "bindCallback.js.map" },
                                        { "element": "bindNodeCallback.d.ts" },
                                        { "element": "bindNodeCallback.js" },
                                        { "element": "bindNodeCallback.js.map" },
                                        { "element": "combineLatest.d.ts" },
                                        { "element": "combineLatest.js" },
                                        { "element": "combineLatest.js.map" },
                                        { "element": "concat.d.ts" },
                                        { "element": "concat.js" },
                                        { "element": "concat.js.map" },
                                        { "element": "defer.d.ts" },
                                        { "element": "defer.js" },
                                        { "element": "defer.js.map" },
                                        { "element": "dom" },
                                        { "element": "empty.d.ts" },
                                        { "element": "empty.js" },
                                        { "element": "empty.js.map" },
                                        { "element": "forkJoin.d.ts" },
                                        { "element": "forkJoin.js" },
                                        { "element": "forkJoin.js.map" },
                                        { "element": "from.d.ts" },
                                        { "element": "from.js" },
                                        { "element": "from.js.map" },
                                        { "element": "fromArray.d.ts" },
                                        { "element": "fromArray.js" },
                                        { "element": "fromArray.js.map" },
                                        { "element": "fromEvent.d.ts" },
                                        { "element": "fromEvent.js" },
                                        { "element": "fromEvent.js.map" },
                                        { "element": "fromEventPattern.d.ts" },
                                        { "element": "fromEventPattern.js" },
                                        { "element": "fromEventPattern.js.map" },
                                        { "element": "fromIterable.d.ts" },
                                        { "element": "fromIterable.js" },
                                        { "element": "fromIterable.js.map" },
                                        { "element": "fromPromise.d.ts" },
                                        { "element": "fromPromise.js" },
                                        { "element": "fromPromise.js.map" },
                                        { "element": "generate.d.ts" },
                                        { "element": "generate.js" },
                                        { "element": "generate.js.map" },
                                        { "element": "if.d.ts" },
                                        { "element": "if.js" },
                                        { "element": "if.js.map" },
                                        { "element": "interval.d.ts" },
                                        { "element": "interval.js" },
                                        { "element": "interval.js.map" },
                                        { "element": "merge.d.ts" },
                                        { "element": "merge.js" },
                                        { "element": "merge.js.map" },
                                        { "element": "never.d.ts" },
                                        { "element": "never.js" },
                                        { "element": "never.js.map" },
                                        { "element": "of.d.ts" },
                                        { "element": "of.js" },
                                        { "element": "of.js.map" },
                                        { "element": "onErrorResumeNext.d.ts" },
                                        { "element": "onErrorResumeNext.js" },
                                        { "element": "onErrorResumeNext.js.map" },
                                        { "element": "pairs.d.ts" },
                                        { "element": "pairs.js" },
                                        { "element": "pairs.js.map" },
                                        { "element": "race.d.ts" },
                                        { "element": "race.js" },
                                        { "element": "race.js.map" },
                                        { "element": "range.d.ts" },
                                        { "element": "range.js" },
                                        { "element": "range.js.map" },
                                        { "element": "throw.d.ts" },
                                        { "element": "throw.js" },
                                        { "element": "throw.js.map" },
                                        { "element": "timer.d.ts" },
                                        { "element": "timer.js" },
                                        { "element": "timer.js.map" },
                                        { "element": "using.d.ts" },
                                        { "element": "using.js" },
                                        { "element": "using.js.map" },
                                        { "element": "zip.d.ts" },
                                        { "element": "zip.js" },
                                        { "element": "zip.js.map" }
                                    ]
                                },
                                {
                                    "element": "operator",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "audit.d.ts" },
                                        { "element": "audit.js" },
                                        { "element": "audit.js.map" },
                                        { "element": "auditTime.d.ts" },
                                        { "element": "auditTime.js" },
                                        { "element": "auditTime.js.map" },
                                        { "element": "buffer.d.ts" },
                                        { "element": "buffer.js" },
                                        { "element": "buffer.js.map" },
                                        { "element": "bufferCount.d.ts" },
                                        { "element": "bufferCount.js" },
                                        { "element": "bufferCount.js.map" },
                                        { "element": "bufferTime.d.ts" },
                                        { "element": "bufferTime.js" },
                                        { "element": "bufferTime.js.map" },
                                        { "element": "bufferToggle.d.ts" },
                                        { "element": "bufferToggle.js" },
                                        { "element": "bufferToggle.js.map" },
                                        { "element": "bufferWhen.d.ts" },
                                        { "element": "bufferWhen.js" },
                                        { "element": "bufferWhen.js.map" },
                                        { "element": "catch.d.ts" },
                                        { "element": "catch.js" },
                                        { "element": "catch.js.map" },
                                        { "element": "combineAll.d.ts" },
                                        { "element": "combineAll.js" },
                                        { "element": "combineAll.js.map" },
                                        { "element": "combineLatest.d.ts" },
                                        { "element": "combineLatest.js" },
                                        { "element": "combineLatest.js.map" },
                                        { "element": "concat.d.ts" },
                                        { "element": "concat.js" },
                                        { "element": "concat.js.map" },
                                        { "element": "concatAll.d.ts" },
                                        { "element": "concatAll.js" },
                                        { "element": "concatAll.js.map" },
                                        { "element": "concatMap.d.ts" },
                                        { "element": "concatMap.js" },
                                        { "element": "concatMap.js.map" },
                                        { "element": "concatMapTo.d.ts" },
                                        { "element": "concatMapTo.js" },
                                        { "element": "concatMapTo.js.map" },
                                        { "element": "count.d.ts" },
                                        { "element": "count.js" },
                                        { "element": "count.js.map" },
                                        { "element": "debounce.d.ts" },
                                        { "element": "debounce.js" },
                                        { "element": "debounce.js.map" },
                                        { "element": "debounceTime.d.ts" },
                                        { "element": "debounceTime.js" },
                                        { "element": "debounceTime.js.map" },
                                        { "element": "defaultIfEmpty.d.ts" },
                                        { "element": "defaultIfEmpty.js" },
                                        { "element": "defaultIfEmpty.js.map" },
                                        { "element": "delay.d.ts" },
                                        { "element": "delay.js" },
                                        { "element": "delay.js.map" },
                                        { "element": "delayWhen.d.ts" },
                                        { "element": "delayWhen.js" },
                                        { "element": "delayWhen.js.map" },
                                        { "element": "dematerialize.d.ts" },
                                        { "element": "dematerialize.js" },
                                        { "element": "dematerialize.js.map" },
                                        { "element": "distinct.d.ts" },
                                        { "element": "distinct.js" },
                                        { "element": "distinct.js.map" },
                                        { "element": "distinctUntilChanged.d.ts" },
                                        { "element": "distinctUntilChanged.js" },
                                        { "element": "distinctUntilChanged.js.map" },
                                        { "element": "distinctUntilKeyChanged.d.ts" },
                                        { "element": "distinctUntilKeyChanged.js" },
                                        { "element": "distinctUntilKeyChanged.js.map" },
                                        { "element": "do.d.ts" },
                                        { "element": "do.js" },
                                        { "element": "do.js.map" },
                                        { "element": "elementAt.d.ts" },
                                        { "element": "elementAt.js" },
                                        { "element": "elementAt.js.map" },
                                        { "element": "every.d.ts" },
                                        { "element": "every.js" },
                                        { "element": "every.js.map" },
                                        { "element": "exhaust.d.ts" },
                                        { "element": "exhaust.js" },
                                        { "element": "exhaust.js.map" },
                                        { "element": "exhaustMap.d.ts" },
                                        { "element": "exhaustMap.js" },
                                        { "element": "exhaustMap.js.map" },
                                        { "element": "expand.d.ts" },
                                        { "element": "expand.js" },
                                        { "element": "expand.js.map" },
                                        { "element": "filter.d.ts" },
                                        { "element": "filter.js" },
                                        { "element": "filter.js.map" },
                                        { "element": "finally.d.ts" },
                                        { "element": "finally.js" },
                                        { "element": "finally.js.map" },
                                        { "element": "find.d.ts" },
                                        { "element": "find.js" },
                                        { "element": "find.js.map" },
                                        { "element": "findIndex.d.ts" },
                                        { "element": "findIndex.js" },
                                        { "element": "findIndex.js.map" },
                                        { "element": "first.d.ts" },
                                        { "element": "first.js" },
                                        { "element": "first.js.map" },
                                        { "element": "groupBy.d.ts" },
                                        { "element": "groupBy.js" },
                                        { "element": "groupBy.js.map" },
                                        { "element": "ignoreElements.d.ts" },
                                        { "element": "ignoreElements.js" },
                                        { "element": "ignoreElements.js.map" },
                                        { "element": "isEmpty.d.ts" },
                                        { "element": "isEmpty.js" },
                                        { "element": "isEmpty.js.map" },
                                        { "element": "last.d.ts" },
                                        { "element": "last.js" },
                                        { "element": "last.js.map" },
                                        { "element": "let.d.ts" },
                                        { "element": "let.js" },
                                        { "element": "let.js.map" },
                                        { "element": "map.d.ts" },
                                        { "element": "map.js" },
                                        { "element": "map.js.map" },
                                        { "element": "mapTo.d.ts" },
                                        { "element": "mapTo.js" },
                                        { "element": "mapTo.js.map" },
                                        { "element": "materialize.d.ts" },
                                        { "element": "materialize.js" },
                                        { "element": "materialize.js.map" },
                                        { "element": "max.d.ts" },
                                        { "element": "max.js" },
                                        { "element": "max.js.map" },
                                        { "element": "merge.d.ts" },
                                        { "element": "merge.js" },
                                        { "element": "merge.js.map" },
                                        { "element": "mergeAll.d.ts" },
                                        { "element": "mergeAll.js" },
                                        { "element": "mergeAll.js.map" },
                                        { "element": "mergeMap.d.ts" },
                                        { "element": "mergeMap.js" },
                                        { "element": "mergeMap.js.map" },
                                        { "element": "mergeMapTo.d.ts" },
                                        { "element": "mergeMapTo.js" },
                                        { "element": "mergeMapTo.js.map" },
                                        { "element": "mergeScan.d.ts" },
                                        { "element": "mergeScan.js" },
                                        { "element": "mergeScan.js.map" },
                                        { "element": "min.d.ts" },
                                        { "element": "min.js" },
                                        { "element": "min.js.map" },
                                        { "element": "multicast.d.ts" },
                                        { "element": "multicast.js" },
                                        { "element": "multicast.js.map" },
                                        { "element": "observeOn.d.ts" },
                                        { "element": "observeOn.js" },
                                        { "element": "observeOn.js.map" },
                                        { "element": "onErrorResumeNext.d.ts" },
                                        { "element": "onErrorResumeNext.js" },
                                        { "element": "onErrorResumeNext.js.map" },
                                        { "element": "pairwise.d.ts" },
                                        { "element": "pairwise.js" },
                                        { "element": "pairwise.js.map" },
                                        { "element": "partition.d.ts" },
                                        { "element": "partition.js" },
                                        { "element": "partition.js.map" },
                                        { "element": "pluck.d.ts" },
                                        { "element": "pluck.js" },
                                        { "element": "pluck.js.map" },
                                        { "element": "publish.d.ts" },
                                        { "element": "publish.js" },
                                        { "element": "publish.js.map" },
                                        { "element": "publishBehavior.d.ts" },
                                        { "element": "publishBehavior.js" },
                                        { "element": "publishBehavior.js.map" },
                                        { "element": "publishLast.d.ts" },
                                        { "element": "publishLast.js" },
                                        { "element": "publishLast.js.map" },
                                        { "element": "publishReplay.d.ts" },
                                        { "element": "publishReplay.js" },
                                        { "element": "publishReplay.js.map" },
                                        { "element": "race.d.ts" },
                                        { "element": "race.js" },
                                        { "element": "race.js.map" },
                                        { "element": "reduce.d.ts" },
                                        { "element": "reduce.js" },
                                        { "element": "reduce.js.map" },
                                        { "element": "repeat.d.ts" },
                                        { "element": "repeat.js" },
                                        { "element": "repeat.js.map" },
                                        { "element": "repeatWhen.d.ts" },
                                        { "element": "repeatWhen.js" },
                                        { "element": "repeatWhen.js.map" },
                                        { "element": "retry.d.ts" },
                                        { "element": "retry.js" },
                                        { "element": "retry.js.map" },
                                        { "element": "retryWhen.d.ts" },
                                        { "element": "retryWhen.js" },
                                        { "element": "retryWhen.js.map" },
                                        { "element": "sample.d.ts" },
                                        { "element": "sample.js" },
                                        { "element": "sample.js.map" },
                                        { "element": "sampleTime.d.ts" },
                                        { "element": "sampleTime.js" },
                                        { "element": "sampleTime.js.map" },
                                        { "element": "scan.d.ts" },
                                        { "element": "scan.js" },
                                        { "element": "scan.js.map" },
                                        { "element": "sequenceEqual.d.ts" },
                                        { "element": "sequenceEqual.js" },
                                        { "element": "sequenceEqual.js.map" },
                                        { "element": "share.d.ts" },
                                        { "element": "share.js" },
                                        { "element": "share.js.map" },
                                        { "element": "shareReplay.d.ts" },
                                        { "element": "shareReplay.js" },
                                        { "element": "shareReplay.js.map" },
                                        { "element": "single.d.ts" },
                                        { "element": "single.js" },
                                        { "element": "single.js.map" },
                                        { "element": "skip.d.ts" },
                                        { "element": "skip.js" },
                                        { "element": "skip.js.map" },
                                        { "element": "skipLast.d.ts" },
                                        { "element": "skipLast.js" },
                                        { "element": "skipLast.js.map" },
                                        { "element": "skipUntil.d.ts" },
                                        { "element": "skipUntil.js" },
                                        { "element": "skipUntil.js.map" },
                                        { "element": "skipWhile.d.ts" },
                                        { "element": "skipWhile.js" },
                                        { "element": "skipWhile.js.map" },
                                        { "element": "startWith.d.ts" },
                                        { "element": "startWith.js" },
                                        { "element": "startWith.js.map" },
                                        { "element": "subscribeOn.d.ts" },
                                        { "element": "subscribeOn.js" },
                                        { "element": "subscribeOn.js.map" },
                                        { "element": "switch.d.ts" },
                                        { "element": "switch.js" },
                                        { "element": "switch.js.map" },
                                        { "element": "switchMap.d.ts" },
                                        { "element": "switchMap.js" },
                                        { "element": "switchMap.js.map" },
                                        { "element": "switchMapTo.d.ts" },
                                        { "element": "switchMapTo.js" },
                                        { "element": "switchMapTo.js.map" },
                                        { "element": "take.d.ts" },
                                        { "element": "take.js" },
                                        { "element": "take.js.map" },
                                        { "element": "takeLast.d.ts" },
                                        { "element": "takeLast.js" },
                                        { "element": "takeLast.js.map" },
                                        { "element": "takeUntil.d.ts" },
                                        { "element": "takeUntil.js" },
                                        { "element": "takeUntil.js.map" },
                                        { "element": "takeWhile.d.ts" },
                                        { "element": "takeWhile.js" },
                                        { "element": "takeWhile.js.map" },
                                        { "element": "throttle.d.ts" },
                                        { "element": "throttle.js" },
                                        { "element": "throttle.js.map" },
                                        { "element": "throttleTime.d.ts" },
                                        { "element": "throttleTime.js" },
                                        { "element": "throttleTime.js.map" },
                                        { "element": "timeInterval.d.ts" },
                                        { "element": "timeInterval.js" },
                                        { "element": "timeInterval.js.map" },
                                        { "element": "timeout.d.ts" },
                                        { "element": "timeout.js" },
                                        { "element": "timeout.js.map" },
                                        { "element": "timeoutWith.d.ts" },
                                        { "element": "timeoutWith.js" },
                                        { "element": "timeoutWith.js.map" },
                                        { "element": "timestamp.d.ts" },
                                        { "element": "timestamp.js" },
                                        { "element": "timestamp.js.map" },
                                        { "element": "toArray.d.ts" },
                                        { "element": "toArray.js" },
                                        { "element": "toArray.js.map" },
                                        { "element": "toPromise.d.ts" },
                                        { "element": "toPromise.js" },
                                        { "element": "toPromise.js.map" },
                                        { "element": "window.d.ts" },
                                        { "element": "window.js" },
                                        { "element": "window.js.map" },
                                        { "element": "windowCount.d.ts" },
                                        { "element": "windowCount.js" },
                                        { "element": "windowCount.js.map" },
                                        { "element": "windowTime.d.ts" },
                                        { "element": "windowTime.js" },
                                        { "element": "windowTime.js.map" },
                                        { "element": "windowToggle.d.ts" },
                                        { "element": "windowToggle.js" },
                                        { "element": "windowToggle.js.map" },
                                        { "element": "windowWhen.d.ts" },
                                        { "element": "windowWhen.js" },
                                        { "element": "windowWhen.js.map" },
                                        { "element": "withLatestFrom.d.ts" },
                                        { "element": "withLatestFrom.js" },
                                        { "element": "withLatestFrom.js.map" },
                                        { "element": "zip.d.ts" },
                                        { "element": "zip.js" },
                                        { "element": "zip.js.map" },
                                        { "element": "zipAll.d.ts" },
                                        { "element": "zipAll.js" },
                                        { "element": "zipAll.js.map" }
                                    ]
                                },
                                {
                                    "element": "operators",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "audit.d.ts" },
                                        { "element": "audit.js" },
                                        { "element": "audit.js.map" },
                                        { "element": "auditTime.d.ts" },
                                        { "element": "auditTime.js" },
                                        { "element": "auditTime.js.map" },
                                        { "element": "buffer.d.ts" },
                                        { "element": "buffer.js" },
                                        { "element": "buffer.js.map" },
                                        { "element": "bufferCount.d.ts" },
                                        { "element": "bufferCount.js" },
                                        { "element": "bufferCount.js.map" },
                                        { "element": "bufferTime.d.ts" },
                                        { "element": "bufferTime.js" },
                                        { "element": "bufferTime.js.map" },
                                        { "element": "bufferToggle.d.ts" },
                                        { "element": "bufferToggle.js" },
                                        { "element": "bufferToggle.js.map" },
                                        { "element": "bufferWhen.d.ts" },
                                        { "element": "bufferWhen.js" },
                                        { "element": "bufferWhen.js.map" },
                                        { "element": "catchError.d.ts" },
                                        { "element": "catchError.js" },
                                        { "element": "catchError.js.map" },
                                        { "element": "combineAll.d.ts" },
                                        { "element": "combineAll.js" },
                                        { "element": "combineAll.js.map" },
                                        { "element": "combineLatest.d.ts" },
                                        { "element": "combineLatest.js" },
                                        { "element": "combineLatest.js.map" },
                                        { "element": "concat.d.ts" },
                                        { "element": "concat.js" },
                                        { "element": "concat.js.map" },
                                        { "element": "concatAll.d.ts" },
                                        { "element": "concatAll.js" },
                                        { "element": "concatAll.js.map" },
                                        { "element": "concatMap.d.ts" },
                                        { "element": "concatMap.js" },
                                        { "element": "concatMap.js.map" },
                                        { "element": "concatMapTo.d.ts" },
                                        { "element": "concatMapTo.js" },
                                        { "element": "concatMapTo.js.map" },
                                        { "element": "count.d.ts" },
                                        { "element": "count.js" },
                                        { "element": "count.js.map" },
                                        { "element": "debounce.d.ts" },
                                        { "element": "debounce.js" },
                                        { "element": "debounce.js.map" },
                                        { "element": "debounceTime.d.ts" },
                                        { "element": "debounceTime.js" },
                                        { "element": "debounceTime.js.map" },
                                        { "element": "defaultIfEmpty.d.ts" },
                                        { "element": "defaultIfEmpty.js" },
                                        { "element": "defaultIfEmpty.js.map" },
                                        { "element": "delay.d.ts" },
                                        { "element": "delay.js" },
                                        { "element": "delay.js.map" },
                                        { "element": "delayWhen.d.ts" },
                                        { "element": "delayWhen.js" },
                                        { "element": "delayWhen.js.map" },
                                        { "element": "dematerialize.d.ts" },
                                        { "element": "dematerialize.js" },
                                        { "element": "dematerialize.js.map" },
                                        { "element": "distinct.d.ts" },
                                        { "element": "distinct.js" },
                                        { "element": "distinct.js.map" },
                                        { "element": "distinctUntilChanged.d.ts" },
                                        { "element": "distinctUntilChanged.js" },
                                        { "element": "distinctUntilChanged.js.map" },
                                        { "element": "distinctUntilKeyChanged.d.ts" },
                                        { "element": "distinctUntilKeyChanged.js" },
                                        { "element": "distinctUntilKeyChanged.js.map" },
                                        { "element": "elementAt.d.ts" },
                                        { "element": "elementAt.js" },
                                        { "element": "elementAt.js.map" },
                                        { "element": "every.d.ts" },
                                        { "element": "every.js" },
                                        { "element": "every.js.map" },
                                        { "element": "exhaust.d.ts" },
                                        { "element": "exhaust.js" },
                                        { "element": "exhaust.js.map" },
                                        { "element": "exhaustMap.d.ts" },
                                        { "element": "exhaustMap.js" },
                                        { "element": "exhaustMap.js.map" },
                                        { "element": "expand.d.ts" },
                                        { "element": "expand.js" },
                                        { "element": "expand.js.map" },
                                        { "element": "filter.d.ts" },
                                        { "element": "filter.js" },
                                        { "element": "filter.js.map" },
                                        { "element": "finalize.d.ts" },
                                        { "element": "finalize.js" },
                                        { "element": "finalize.js.map" },
                                        { "element": "find.d.ts" },
                                        { "element": "find.js" },
                                        { "element": "find.js.map" },
                                        { "element": "findIndex.d.ts" },
                                        { "element": "findIndex.js" },
                                        { "element": "findIndex.js.map" },
                                        { "element": "first.d.ts" },
                                        { "element": "first.js" },
                                        { "element": "first.js.map" },
                                        { "element": "groupBy.d.ts" },
                                        { "element": "groupBy.js" },
                                        { "element": "groupBy.js.map" },
                                        { "element": "ignoreElements.d.ts" },
                                        { "element": "ignoreElements.js" },
                                        { "element": "ignoreElements.js.map" },
                                        { "element": "index.d.ts" },
                                        { "element": "index.js" },
                                        { "element": "index.js.map" },
                                        { "element": "isEmpty.d.ts" },
                                        { "element": "isEmpty.js" },
                                        { "element": "isEmpty.js.map" },
                                        { "element": "last.d.ts" },
                                        { "element": "last.js" },
                                        { "element": "last.js.map" },
                                        { "element": "map.d.ts" },
                                        { "element": "map.js" },
                                        { "element": "map.js.map" },
                                        { "element": "mapTo.d.ts" },
                                        { "element": "mapTo.js" },
                                        { "element": "mapTo.js.map" },
                                        { "element": "materialize.d.ts" },
                                        { "element": "materialize.js" },
                                        { "element": "materialize.js.map" },
                                        { "element": "max.d.ts" },
                                        { "element": "max.js" },
                                        { "element": "max.js.map" },
                                        { "element": "merge.d.ts" },
                                        { "element": "merge.js" },
                                        { "element": "merge.js.map" },
                                        { "element": "mergeAll.d.ts" },
                                        { "element": "mergeAll.js" },
                                        { "element": "mergeAll.js.map" },
                                        { "element": "mergeMap.d.ts" },
                                        { "element": "mergeMap.js" },
                                        { "element": "mergeMap.js.map" },
                                        { "element": "mergeMapTo.d.ts" },
                                        { "element": "mergeMapTo.js" },
                                        { "element": "mergeMapTo.js.map" },
                                        { "element": "mergeScan.d.ts" },
                                        { "element": "mergeScan.js" },
                                        { "element": "mergeScan.js.map" },
                                        { "element": "min.d.ts" },
                                        { "element": "min.js" },
                                        { "element": "min.js.map" },
                                        { "element": "multicast.d.ts" },
                                        { "element": "multicast.js" },
                                        { "element": "multicast.js.map" },
                                        { "element": "observeOn.d.ts" },
                                        { "element": "observeOn.js" },
                                        { "element": "observeOn.js.map" },
                                        { "element": "onErrorResumeNext.d.ts" },
                                        { "element": "onErrorResumeNext.js" },
                                        { "element": "onErrorResumeNext.js.map" },
                                        { "element": "package.json" },
                                        { "element": "pairwise.d.ts" },
                                        { "element": "pairwise.js" },
                                        { "element": "pairwise.js.map" },
                                        { "element": "partition.d.ts" },
                                        { "element": "partition.js" },
                                        { "element": "partition.js.map" },
                                        { "element": "pluck.d.ts" },
                                        { "element": "pluck.js" },
                                        { "element": "pluck.js.map" },
                                        { "element": "publish.d.ts" },
                                        { "element": "publish.js" },
                                        { "element": "publish.js.map" },
                                        { "element": "publishBehavior.d.ts" },
                                        { "element": "publishBehavior.js" },
                                        { "element": "publishBehavior.js.map" },
                                        { "element": "publishLast.d.ts" },
                                        { "element": "publishLast.js" },
                                        { "element": "publishLast.js.map" },
                                        { "element": "publishReplay.d.ts" },
                                        { "element": "publishReplay.js" },
                                        { "element": "publishReplay.js.map" },
                                        { "element": "race.d.ts" },
                                        { "element": "race.js" },
                                        { "element": "race.js.map" },
                                        { "element": "reduce.d.ts" },
                                        { "element": "reduce.js" },
                                        { "element": "reduce.js.map" },
                                        { "element": "refCount.d.ts" },
                                        { "element": "refCount.js" },
                                        { "element": "refCount.js.map" },
                                        { "element": "repeat.d.ts" },
                                        { "element": "repeat.js" },
                                        { "element": "repeat.js.map" },
                                        { "element": "repeatWhen.d.ts" },
                                        { "element": "repeatWhen.js" },
                                        { "element": "repeatWhen.js.map" },
                                        { "element": "retry.d.ts" },
                                        { "element": "retry.js" },
                                        { "element": "retry.js.map" },
                                        { "element": "retryWhen.d.ts" },
                                        { "element": "retryWhen.js" },
                                        { "element": "retryWhen.js.map" },
                                        { "element": "sample.d.ts" },
                                        { "element": "sample.js" },
                                        { "element": "sample.js.map" },
                                        { "element": "sampleTime.d.ts" },
                                        { "element": "sampleTime.js" },
                                        { "element": "sampleTime.js.map" },
                                        { "element": "scan.d.ts" },
                                        { "element": "scan.js" },
                                        { "element": "scan.js.map" },
                                        { "element": "sequenceEqual.d.ts" },
                                        { "element": "sequenceEqual.js" },
                                        { "element": "sequenceEqual.js.map" },
                                        { "element": "share.d.ts" },
                                        { "element": "share.js" },
                                        { "element": "share.js.map" },
                                        { "element": "shareReplay.d.ts" },
                                        { "element": "shareReplay.js" },
                                        { "element": "shareReplay.js.map" },
                                        { "element": "single.d.ts" },
                                        { "element": "single.js" },
                                        { "element": "single.js.map" },
                                        { "element": "skip.d.ts" },
                                        { "element": "skip.js" },
                                        { "element": "skip.js.map" },
                                        { "element": "skipLast.d.ts" },
                                        { "element": "skipLast.js" },
                                        { "element": "skipLast.js.map" },
                                        { "element": "skipUntil.d.ts" },
                                        { "element": "skipUntil.js" },
                                        { "element": "skipUntil.js.map" },
                                        { "element": "skipWhile.d.ts" },
                                        { "element": "skipWhile.js" },
                                        { "element": "skipWhile.js.map" },
                                        { "element": "startWith.d.ts" },
                                        { "element": "startWith.js" },
                                        { "element": "startWith.js.map" },
                                        { "element": "subscribeOn.d.ts" },
                                        { "element": "subscribeOn.js" },
                                        { "element": "subscribeOn.js.map" },
                                        { "element": "switchAll.d.ts" },
                                        { "element": "switchAll.js" },
                                        { "element": "switchAll.js.map" },
                                        { "element": "switchMap.d.ts" },
                                        { "element": "switchMap.js" },
                                        { "element": "switchMap.js.map" },
                                        { "element": "switchMapTo.d.ts" },
                                        { "element": "switchMapTo.js" },
                                        { "element": "switchMapTo.js.map" },
                                        { "element": "take.d.ts" },
                                        { "element": "take.js" },
                                        { "element": "take.js.map" },
                                        { "element": "takeLast.d.ts" },
                                        { "element": "takeLast.js" },
                                        { "element": "takeLast.js.map" },
                                        { "element": "takeUntil.d.ts" },
                                        { "element": "takeUntil.js" },
                                        { "element": "takeUntil.js.map" },
                                        { "element": "takeWhile.d.ts" },
                                        { "element": "takeWhile.js" },
                                        { "element": "takeWhile.js.map" },
                                        { "element": "tap.d.ts" },
                                        { "element": "tap.js" },
                                        { "element": "tap.js.map" },
                                        { "element": "throttle.d.ts" },
                                        { "element": "throttle.js" },
                                        { "element": "throttle.js.map" },
                                        { "element": "throttleTime.d.ts" },
                                        { "element": "throttleTime.js" },
                                        { "element": "throttleTime.js.map" },
                                        { "element": "throwIfEmpty.d.ts" },
                                        { "element": "throwIfEmpty.js" },
                                        { "element": "throwIfEmpty.js.map" },
                                        { "element": "timeInterval.d.ts" },
                                        { "element": "timeInterval.js" },
                                        { "element": "timeInterval.js.map" },
                                        { "element": "timeout.d.ts" },
                                        { "element": "timeout.js" },
                                        { "element": "timeout.js.map" },
                                        { "element": "timeoutWith.d.ts" },
                                        { "element": "timeoutWith.js" },
                                        { "element": "timeoutWith.js.map" },
                                        { "element": "timestamp.d.ts" },
                                        { "element": "timestamp.js" },
                                        { "element": "timestamp.js.map" },
                                        { "element": "toArray.d.ts" },
                                        { "element": "toArray.js" },
                                        { "element": "toArray.js.map" },
                                        { "element": "window.d.ts" },
                                        { "element": "window.js" },
                                        { "element": "window.js.map" },
                                        { "element": "windowCount.d.ts" },
                                        { "element": "windowCount.js" },
                                        { "element": "windowCount.js.map" },
                                        { "element": "windowTime.d.ts" },
                                        { "element": "windowTime.js" },
                                        { "element": "windowTime.js.map" },
                                        { "element": "windowToggle.d.ts" },
                                        { "element": "windowToggle.js" },
                                        { "element": "windowToggle.js.map" },
                                        { "element": "windowWhen.d.ts" },
                                        { "element": "windowWhen.js" },
                                        { "element": "windowWhen.js.map" },
                                        { "element": "withLatestFrom.d.ts" },
                                        { "element": "withLatestFrom.js" },
                                        { "element": "withLatestFrom.js.map" },
                                        { "element": "zip.d.ts" },
                                        { "element": "zip.js" },
                                        { "element": "zip.js.map" },
                                        { "element": "zipAll.d.ts" },
                                        { "element": "zipAll.js" },
                                        { "element": "zipAll.js.map" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "scheduler",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "animationFrame.d.ts" },
                                        { "element": "animationFrame.js" },
                                        { "element": "animationFrame.js.map" },
                                        { "element": "asap.d.ts" },
                                        { "element": "asap.js" },
                                        { "element": "asap.js.map" },
                                        { "element": "async.d.ts" },
                                        { "element": "async.js" },
                                        { "element": "async.js.map" },
                                        { "element": "queue.d.ts" },
                                        { "element": "queue.js" },
                                        { "element": "queue.js.map" }
                                    ]
                                },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "AsyncSubject.ts" },
                                        { "element": "BUILD.bazel" },
                                        { "element": "BehaviorSubject.ts" },
                                        { "element": "InnerSubscriber.ts" },
                                        { "element": "LICENSE.txt" },
                                        { "element": "MiscJSDoc.ts" },
                                        { "element": "Notification.ts" },
                                        { "element": "Observable.ts" },
                                        { "element": "Observer.ts" },
                                        { "element": "Operator.ts" },
                                        { "element": "OuterSubscriber.ts" },
                                        { "element": "README.md" },
                                        { "element": "ReplaySubject.ts" },
                                        { "element": "Rx.global.js" },
                                        { "element": "Rx.ts" },
                                        { "element": "Scheduler.ts" },
                                        { "element": "Subject.ts" },
                                        { "element": "SubjectSubscription.ts" },
                                        { "element": "Subscriber.ts" },
                                        { "element": "Subscription.ts" },
                                        { "element": "WORKSPACE" },
                                        { "element": "add" },
                                        { "element": "ajax" },
                                        { "element": "index.ts" },
                                        { "element": "interfaces.ts" },
                                        { "element": "internal" },
                                        { "element": "internal-compatibility" },
                                        { "element": "observable" },
                                        { "element": "operator" },
                                        { "element": "operators" },
                                        { "element": "scheduler" },
                                        { "element": "symbol" },
                                        { "element": "testing" },
                                        { "element": "tsconfig.json" },
                                        { "element": "util" },
                                        { "element": "webSocket" }
                                    ]
                                },
                                {
                                    "element": "symbol",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "iterator.d.ts" },
                                        { "element": "iterator.js" },
                                        { "element": "iterator.js.map" },
                                        { "element": "observable.d.ts" },
                                        { "element": "observable.js" },
                                        { "element": "observable.js.map" },
                                        { "element": "rxSubscriber.d.ts" },
                                        { "element": "rxSubscriber.js" },
                                        { "element": "rxSubscriber.js.map" }
                                    ]
                                },
                                {
                                    "element": "testing",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.d.ts" },
                                        { "element": "index.js" },
                                        { "element": "index.js.map" },
                                        { "element": "package.json" }
                                    ]
                                },
                                {
                                    "element": "util",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ArgumentOutOfRangeError.d.ts" },
                                        { "element": "ArgumentOutOfRangeError.js" },
                                        { "element": "ArgumentOutOfRangeError.js.map" },
                                        { "element": "EmptyError.d.ts" },
                                        { "element": "EmptyError.js" },
                                        { "element": "EmptyError.js.map" },
                                        { "element": "Immediate.d.ts" },
                                        { "element": "Immediate.js" },
                                        { "element": "Immediate.js.map" },
                                        { "element": "ObjectUnsubscribedError.d.ts" },
                                        { "element": "ObjectUnsubscribedError.js" },
                                        { "element": "ObjectUnsubscribedError.js.map" },
                                        { "element": "TimeoutError.d.ts" },
                                        { "element": "TimeoutError.js" },
                                        { "element": "TimeoutError.js.map" },
                                        { "element": "UnsubscriptionError.d.ts" },
                                        { "element": "UnsubscriptionError.js" },
                                        { "element": "UnsubscriptionError.js.map" },
                                        { "element": "applyMixins.d.ts" },
                                        { "element": "applyMixins.js" },
                                        { "element": "applyMixins.js.map" },
                                        { "element": "errorObject.d.ts" },
                                        { "element": "errorObject.js" },
                                        { "element": "errorObject.js.map" },
                                        { "element": "hostReportError.d.ts" },
                                        { "element": "hostReportError.js" },
                                        { "element": "hostReportError.js.map" },
                                        { "element": "identity.d.ts" },
                                        { "element": "identity.js" },
                                        { "element": "identity.js.map" },
                                        { "element": "isArray.d.ts" },
                                        { "element": "isArray.js" },
                                        { "element": "isArray.js.map" },
                                        { "element": "isArrayLike.d.ts" },
                                        { "element": "isArrayLike.js" },
                                        { "element": "isArrayLike.js.map" },
                                        { "element": "isDate.d.ts" },
                                        { "element": "isDate.js" },
                                        { "element": "isDate.js.map" },
                                        { "element": "isFunction.d.ts" },
                                        { "element": "isFunction.js" },
                                        { "element": "isFunction.js.map" },
                                        { "element": "isIterable.d.ts" },
                                        { "element": "isIterable.js" },
                                        { "element": "isIterable.js.map" },
                                        { "element": "isNumeric.d.ts" },
                                        { "element": "isNumeric.js" },
                                        { "element": "isNumeric.js.map" },
                                        { "element": "isObject.d.ts" },
                                        { "element": "isObject.js" },
                                        { "element": "isObject.js.map" },
                                        { "element": "isObservable.d.ts" },
                                        { "element": "isObservable.js" },
                                        { "element": "isObservable.js.map" },
                                        { "element": "isPromise.d.ts" },
                                        { "element": "isPromise.js" },
                                        { "element": "isPromise.js.map" },
                                        { "element": "isScheduler.d.ts" },
                                        { "element": "isScheduler.js" },
                                        { "element": "isScheduler.js.map" },
                                        { "element": "noop.d.ts" },
                                        { "element": "noop.js" },
                                        { "element": "noop.js.map" },
                                        { "element": "not.d.ts" },
                                        { "element": "not.js" },
                                        { "element": "not.js.map" },
                                        { "element": "pipe.d.ts" },
                                        { "element": "pipe.js" },
                                        { "element": "pipe.js.map" },
                                        { "element": "root.d.ts" },
                                        { "element": "root.js" },
                                        { "element": "root.js.map" },
                                        { "element": "subscribeTo.d.ts" },
                                        { "element": "subscribeTo.js" },
                                        { "element": "subscribeTo.js.map" },
                                        { "element": "subscribeToArray.d.ts" },
                                        { "element": "subscribeToArray.js" },
                                        { "element": "subscribeToArray.js.map" },
                                        { "element": "subscribeToIterable.d.ts" },
                                        { "element": "subscribeToIterable.js" },
                                        { "element": "subscribeToIterable.js.map" },
                                        { "element": "subscribeToObservable.d.ts" },
                                        { "element": "subscribeToObservable.js" },
                                        { "element": "subscribeToObservable.js.map" },
                                        { "element": "subscribeToPromise.d.ts" },
                                        { "element": "subscribeToPromise.js" },
                                        { "element": "subscribeToPromise.js.map" },
                                        { "element": "subscribeToResult.d.ts" },
                                        { "element": "subscribeToResult.js" },
                                        { "element": "subscribeToResult.js.map" },
                                        { "element": "toSubscriber.d.ts" },
                                        { "element": "toSubscriber.js" },
                                        { "element": "toSubscriber.js.map" },
                                        { "element": "tryCatch.d.ts" },
                                        { "element": "tryCatch.js" },
                                        { "element": "tryCatch.js.map" }
                                    ]
                                },
                                {
                                    "element": "webSocket",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.d.ts" },
                                        { "element": "index.js" },
                                        { "element": "index.js.map" },
                                        { "element": "package.json" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "safe-buffer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "safe-regex",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "safe.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "regex.js" }]
                                }
                            ]
                        },
                        {
                            "element": "safer-buffer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "Porting-Buffer.md" },
                                { "element": "Readme.md" },
                                { "element": "dangerous.js" },
                                { "element": "package.json" },
                                { "element": "safer.js" },
                                { "element": "tests.js" }
                            ]
                        },
                        {
                            "element": "samsam",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "AUTHORS" },
                                { "element": "LICENSE" },
                                { "element": "Readme.md" },
                                { "element": "autolint.js" },
                                { "element": "jsTestDriver.conf" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "samsam.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "samsam-test.js" }]
                                }
                            ]
                        },
                        {
                            "element": "sax",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "sax.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "schema-utils",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ajv" },
                                        { "element": "fast-deep-equal" },
                                        { "element": "json-schema-traverse" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ValidationError.js" },
                                        { "element": "index.js" },
                                        { "element": "validateOptions.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "semaphore",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "README.md" },
                                { "element": "bower.json" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "semaphore.js" }]
                                },
                                { "element": "npm-shrinkwrap.json" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "semaphore.js" }]
                                }
                            ]
                        },
                        {
                            "element": "semver",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "semver" }]
                                },
                                { "element": "package.json" },
                                { "element": "range.bnf" },
                                { "element": "semver.js" }
                            ]
                        },
                        {
                            "element": "semver-greatest-satisfied-range",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "send",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "mime" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "serialize-javascript",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "serve-static",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "set-blocking",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "set-immediate-shim",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "set-value",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "setimmediate",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.txt" },
                                { "element": "package.json" },
                                { "element": "setImmediate.js" }
                            ]
                        },
                        {
                            "element": "setprototypeof",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "sha.js",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "bin.js" },
                                { "element": "hash.js" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "sha.js" },
                                { "element": "sha1.js" },
                                { "element": "sha224.js" },
                                { "element": "sha256.js" },
                                { "element": "sha384.js" },
                                { "element": "sha512.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "hash.js" },
                                        { "element": "test.js" },
                                        { "element": "vectors.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "shebang-command",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "shebang-regex",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "sigmund",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "bench.js" },
                                { "element": "package.json" },
                                { "element": "sigmund.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "basic.js" }]
                                }
                            ]
                        },
                        {
                            "element": "signal-exit",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "signals.js" }
                            ]
                        },
                        {
                            "element": "simple-concat",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "basic.js" }]
                                }
                            ]
                        },
                        {
                            "element": "simple-get",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "single-line-log",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "is-fullwidth-code-point" },
                                        { "element": "string-width" },
                                        { "element": "strip-ansi" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "sinon",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "AUTHORS" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "Changelog.txt" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "sinon" }, { "element": "sinon.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "pkg",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "sinon-1.17.7.js" },
                                        { "element": "sinon-ie-1.17.7.js" },
                                        { "element": "sinon-ie.js" },
                                        { "element": "sinon-server-1.17.7.js" },
                                        { "element": "sinon-server.js" },
                                        { "element": "sinon.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "slash",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "slice-ansi",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "smart-buffer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "smartbuffer.js" },
                                        { "element": "smartbuffer.js.map" },
                                        { "element": "utils.js" },
                                        { "element": "utils.js.map" }
                                    ]
                                },
                                {
                                    "element": "docs",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "CHANGELOG.md" },
                                        { "element": "README_v3.md" },
                                        { "element": "ROADMAP.md" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "typings",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "smartbuffer.d.ts" },
                                        { "element": "utils.d.ts" }
                                    ]
                                },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "snapdragon",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "compiler.js" },
                                        { "element": "parser.js" },
                                        { "element": "position.js" },
                                        { "element": "source-maps.js" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "source-map" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "snapdragon-node",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "define-property" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "snapdragon-util",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "kind-of" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "sntp",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "socks",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".prettierrc.yaml" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "client" },
                                        { "element": "common" },
                                        { "element": "index.js" },
                                        { "element": "index.js.map" }
                                    ]
                                },
                                {
                                    "element": "docs",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "examples" },
                                        { "element": "index.md" },
                                        { "element": "migratingFromV1.md" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "typings",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "client" },
                                        { "element": "common" },
                                        { "element": "index.d.ts" }
                                    ]
                                },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "socks-proxy-agent",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "History.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "agent-base" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ssl-cert-snakeoil.key" },
                                        { "element": "ssl-cert-snakeoil.pem" },
                                        { "element": "test.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "sort-keys",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "source-list-map",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "CodeNode.js" },
                                        { "element": "MappingsContext.js" },
                                        { "element": "SingleLineNode.js" },
                                        { "element": "SourceListMap.js" },
                                        { "element": "SourceNode.js" },
                                        { "element": "base64-vlq.js" },
                                        { "element": "fromStringWithSourceMap.js" },
                                        { "element": "helpers.js" },
                                        { "element": "index.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "source-map",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "assert-shim.js" },
                                        { "element": "mini-require.js" },
                                        { "element": "prefix-source-map.jsm" },
                                        { "element": "prefix-utils.jsm" },
                                        { "element": "suffix-browser.js" },
                                        { "element": "suffix-source-map.jsm" },
                                        { "element": "suffix-utils.jsm" },
                                        { "element": "test-prefix.js" },
                                        { "element": "test-suffix.js" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "source-map" },
                                        { "element": "source-map.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "source-map-resolve",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintrc" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "bower.json" },
                                { "element": "changelog.md" },
                                { "element": "component.json" },
                                { "element": "generate-source-map-resolve.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "decode-uri-component.js" },
                                        { "element": "resolve-url.js" },
                                        { "element": "source-map-resolve-node.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                { "element": "source-map-resolve.js" },
                                { "element": "source-map-resolve.js.template" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "common.js" },
                                        { "element": "read.js" },
                                        { "element": "source-map-resolve.js" },
                                        { "element": "windows.js" }
                                    ]
                                },
                                { "element": "x-package.json5" }
                            ]
                        },
                        {
                            "element": "source-map-url",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintrc" },
                                { "element": "LICENSE" },
                                { "element": "bower.json" },
                                { "element": "changelog.md" },
                                { "element": "component.json" },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                { "element": "source-map-url.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "source-map-url.js" }]
                                },
                                { "element": "x-package.json5" }
                            ]
                        },
                        {
                            "element": "sparkles",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "spdlog",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".clang-format" },
                                { "element": ".gitmodules" },
                                { "element": ".travis.yml" },
                                {
                                    "element": ".vscode",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "c_cpp_properties.json" },
                                        { "element": "settings.json" }
                                    ]
                                },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "appveyor.yml" },
                                { "element": "binding.gyp" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Release" },
                                        { "element": "binding.sln" },
                                        { "element": "config.gypi" },
                                        { "element": "spdlog.vcxproj" },
                                        { "element": "spdlog.vcxproj.filters" }
                                    ]
                                },
                                {
                                    "element": "deps",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "spdlog" }]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "bindings" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "logger.cc" },
                                        { "element": "logger.h" },
                                        { "element": "main.cc" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "api.test.js" },
                                        { "element": "mocha.opts" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "spdx-correct",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "spdx-expression-parse",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "AUTHORS" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "parser.js" }
                            ]
                        },
                        {
                            "element": "spdx-license-ids",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                { "element": "spdx-license-ids.json" }
                            ]
                        },
                        {
                            "element": "speedometer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "split",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENCE" },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "pretty.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "options.asynct.js" },
                                        { "element": "partitioned_unicode.js" },
                                        { "element": "split.asynct.js" },
                                        { "element": "try_catch.asynct.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "split-string",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "extend-shallow" },
                                        { "element": "is-extendable" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "sprintf-js",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "bower.json" },
                                {
                                    "element": "demo",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "angular.html" }]
                                },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "angular-sprintf.min.js" },
                                        { "element": "angular-sprintf.min.js.map" },
                                        { "element": "angular-sprintf.min.map" },
                                        { "element": "sprintf.min.js" },
                                        { "element": "sprintf.min.js.map" },
                                        { "element": "sprintf.min.map" }
                                    ]
                                },
                                { "element": "gruntfile.js" },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "angular-sprintf.js" },
                                        { "element": "sprintf.js" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "test.js" }]
                                }
                            ]
                        },
                        {
                            "element": "sshpk",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "sshpk-conv" },
                                        { "element": "sshpk-sign" },
                                        { "element": "sshpk-verify" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "algs.js" },
                                        { "element": "certificate.js" },
                                        { "element": "dhe.js" },
                                        { "element": "ed-compat.js" },
                                        { "element": "errors.js" },
                                        { "element": "fingerprint.js" },
                                        { "element": "formats" },
                                        { "element": "identity.js" },
                                        { "element": "index.js" },
                                        { "element": "key.js" },
                                        { "element": "private-key.js" },
                                        { "element": "signature.js" },
                                        { "element": "ssh-buffer.js" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                {
                                    "element": "man",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "man1" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "ssri",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "stack-trace",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "License" },
                                { "element": "Makefile" },
                                { "element": "Readme.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "stack-trace.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "static-extend",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "statuses",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "codes.json" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "stream-browserify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "buf.js" }]
                                }
                            ]
                        },
                        {
                            "element": "stream-combiner",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "stream-each",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "collaborators.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "stream-exhaust",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "stream-http",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".airtap.yml" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "ie8-polyfill.js" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "capability.js" },
                                        { "element": "request.js" },
                                        { "element": "response.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "process-nextick-args" },
                                        { "element": "readable-stream" },
                                        { "element": "string_decoder" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "browser" },
                                        { "element": "node" },
                                        { "element": "server" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "stream-shift",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "streamfilter",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintrc" },
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                {
                                    "element": "tests",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.mocha.js" }]
                                }
                            ]
                        },
                        {
                            "element": "streamifier",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGES" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "strict-uri-encode",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "string-width",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "string_decoder",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "stringstream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                { "element": "example.js" },
                                { "element": "package.json" },
                                { "element": "stringstream.js" }
                            ]
                        },
                        {
                            "element": "strip-ansi",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "ansi-regex" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "strip-bom",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "strip-bom-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "strip-eof",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "strip-indent",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "cli.js" },
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "strip-json-comments",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "sudo-prompt",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test-concurrent.js" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "sumchecker",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "NEWS.md" },
                                { "element": "README.md" },
                                { "element": "build.js" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "supports-color",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "browser.js" },
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "sver-compat",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "convert-range.js" },
                                { "element": "package.json" },
                                { "element": "sver.js" }
                            ]
                        },
                        {
                            "element": "svgo",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".svgo.yml" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "Makefile" },
                                { "element": "README.md" },
                                { "element": "README.ru.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "svgo" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "svgo" }, { "element": "svgo.js" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "colors" },
                                        { "element": "js-yaml" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "plugins",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "_collections.js" },
                                        { "element": "_path.js" },
                                        { "element": "_transforms.js" },
                                        { "element": "addAttributesToSVGElement.js" },
                                        { "element": "addClassesToSVGElement.js" },
                                        { "element": "cleanupAttrs.js" },
                                        { "element": "cleanupEnableBackground.js" },
                                        { "element": "cleanupIDs.js" },
                                        { "element": "cleanupListOfValues.js" },
                                        { "element": "cleanupNumericValues.js" },
                                        { "element": "collapseGroups.js" },
                                        { "element": "convertColors.js" },
                                        { "element": "convertPathData.js" },
                                        { "element": "convertShapeToPath.js" },
                                        { "element": "convertStyleToAttrs.js" },
                                        { "element": "convertTransform.js" },
                                        { "element": "mergePaths.js" },
                                        { "element": "minifyStyles.js" },
                                        { "element": "moveElemsAttrsToGroup.js" },
                                        { "element": "moveGroupAttrsToElems.js" },
                                        { "element": "removeAttrs.js" },
                                        { "element": "removeComments.js" },
                                        { "element": "removeDesc.js" },
                                        { "element": "removeDimensions.js" },
                                        { "element": "removeDoctype.js" },
                                        { "element": "removeEditorsNSData.js" },
                                        { "element": "removeElementsByAttr.js" },
                                        { "element": "removeEmptyAttrs.js" },
                                        { "element": "removeEmptyContainers.js" },
                                        { "element": "removeEmptyText.js" },
                                        { "element": "removeHiddenElems.js" },
                                        { "element": "removeMetadata.js" },
                                        { "element": "removeNonInheritableGroupAttrs.js" },
                                        { "element": "removeRasterImages.js" },
                                        { "element": "removeStyleElement.js" },
                                        { "element": "removeTitle.js" },
                                        { "element": "removeUnknownsAndDefaults.js" },
                                        { "element": "removeUnusedNS.js" },
                                        { "element": "removeUselessDefs.js" },
                                        { "element": "removeUselessStrokeAndFill.js" },
                                        { "element": "removeViewBox.js" },
                                        { "element": "removeXMLNS.js" },
                                        { "element": "removeXMLProcInst.js" },
                                        { "element": "sortAttrs.js" },
                                        { "element": "transformsWithOnePath.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "table",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "alignString.js" },
                                        { "element": "alignTableData.js" },
                                        { "element": "calculateCellHeight.js" },
                                        { "element": "calculateCellWidthIndex.js" },
                                        { "element": "calculateMaximumColumnWidthIndex.js" },
                                        { "element": "calculateRowHeightIndex.js" },
                                        { "element": "createStream.js" },
                                        { "element": "drawBorder.js" },
                                        { "element": "drawRow.js" },
                                        { "element": "drawTable.js" },
                                        { "element": "getBorderCharacters.js" },
                                        { "element": "index.js" },
                                        { "element": "makeConfig.js" },
                                        { "element": "makeStreamConfig.js" },
                                        { "element": "mapDataUsingRowHeightIndex.js" },
                                        { "element": "padTableData.js" },
                                        { "element": "schemas" },
                                        { "element": "stringifyTableData.js" },
                                        { "element": "table.js" },
                                        { "element": "truncateTableData.js" },
                                        { "element": "validateConfig.js" },
                                        { "element": "validateStreamConfig.js" },
                                        { "element": "validateTableData.js" },
                                        { "element": "wrapString.js" },
                                        { "element": "wrapWord.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ajv-keywords" },
                                        { "element": "chalk" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "tapable",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "AsyncParallelBailHook.js" },
                                        { "element": "AsyncParallelHook.js" },
                                        { "element": "AsyncSeriesBailHook.js" },
                                        { "element": "AsyncSeriesHook.js" },
                                        { "element": "AsyncSeriesLoopHook.js" },
                                        { "element": "AsyncSeriesWaterfallHook.js" },
                                        { "element": "Hook.js" },
                                        { "element": "HookCodeFactory.js" },
                                        { "element": "HookMap.js" },
                                        { "element": "MultiHook.js" },
                                        { "element": "SyncBailHook.js" },
                                        { "element": "SyncHook.js" },
                                        { "element": "SyncLoopHook.js" },
                                        { "element": "SyncWaterfallHook.js" },
                                        { "element": "Tapable.js" },
                                        { "element": "__tests__" },
                                        { "element": "index.js" },
                                        { "element": "simpleAsyncCases.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "tar",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "extracter.js" },
                                        { "element": "packer.js" },
                                        { "element": "reader.js" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "buffer-entry.js" },
                                        { "element": "entry-writer.js" },
                                        { "element": "entry.js" },
                                        { "element": "extended-header-writer.js" },
                                        { "element": "extended-header.js" },
                                        { "element": "extract.js" },
                                        { "element": "global-header-writer.js" },
                                        { "element": "header.js" },
                                        { "element": "pack.js" },
                                        { "element": "parse.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "tar.js" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "00-setup-fixtures.js" },
                                        { "element": "cb-never-called-1.0.1.tgz" },
                                        { "element": "dir-normalization.js" },
                                        { "element": "dir-normalization.tar" },
                                        { "element": "error-on-broken.js" },
                                        { "element": "extract-move.js" },
                                        { "element": "extract.js" },
                                        { "element": "fixtures.tgz" },
                                        { "element": "header.js" },
                                        { "element": "pack-no-proprietary.js" },
                                        { "element": "pack.js" },
                                        { "element": "parse-discard.js" },
                                        { "element": "parse.js" },
                                        { "element": "zz-cleanup.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "tar-fs",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "pump" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "fixtures" }, { "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "tar-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "extract.js" },
                                { "element": "headers.js" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "process-nextick-args" },
                                        { "element": "readable-stream" },
                                        { "element": "string_decoder" }
                                    ]
                                },
                                { "element": "pack.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "temp",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "grepcount.js" },
                                        { "element": "pdfcreator.js" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "temp.js" }]
                                },
                                { "element": "no_cleanup.js" },
                                { "element": "no_cleanup_on_exit.js" },
                                { "element": "no_cleanup_on_exit.spec.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "rimraf" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "temp-test.js" }]
                                }
                            ]
                        },
                        {
                            "element": "text-table",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "align.js" },
                                        { "element": "center.js" },
                                        { "element": "dotalign.js" },
                                        { "element": "doubledot.js" },
                                        { "element": "table.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "align.js" },
                                        { "element": "ansi-colors.js" },
                                        { "element": "center.js" },
                                        { "element": "dotalign.js" },
                                        { "element": "doubledot.js" },
                                        { "element": "table.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "textextensions",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "throttleit",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "History.md" },
                                { "element": "Makefile" },
                                { "element": "Readme.md" },
                                { "element": "component.json" },
                                { "element": "example.js" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "through",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE.APACHE2" },
                                { "element": "LICENSE.MIT" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "async.js" },
                                        { "element": "auto-destroy.js" },
                                        { "element": "buffering.js" },
                                        { "element": "end.js" },
                                        { "element": "index.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "through2",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE.html" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                { "element": "through2.js" }
                            ]
                        },
                        {
                            "element": "through2-filter",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "time-stamp",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "timers-browserify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "main.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "tmp",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "tmp.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "to-absolute-glob",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "to-arraybuffer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": ".zuul.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "to-buffer",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "to-iso-string",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "History.md" },
                                { "element": "Makefile" },
                                { "element": "Readme.md" },
                                { "element": "component.json" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "to-object-path",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "to-regex",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "define-property" },
                                        { "element": "extend-shallow" },
                                        { "element": "is-extendable" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "to-regex-range",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "repeat-string" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "to-through",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "touch",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "touch.js" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "nopt" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "sanity.js" }]
                                },
                                { "element": "touch.js" }
                            ]
                        },
                        {
                            "element": "tough-cookie",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "cookie.js" },
                                        { "element": "memstore.js" },
                                        { "element": "pathMatch.js" },
                                        { "element": "permuteDomain.js" },
                                        { "element": "pubsuffix.js" },
                                        { "element": "store.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "traverse",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.markdown" },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "json.js" },
                                        { "element": "leaves.js" },
                                        { "element": "negative.js" },
                                        { "element": "stringify.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "circular.js" },
                                        { "element": "date.js" },
                                        { "element": "equal.js" },
                                        { "element": "instance.js" },
                                        { "element": "interface.js" },
                                        { "element": "json.js" },
                                        { "element": "leaves.js" },
                                        { "element": "mutability.js" },
                                        { "element": "negative.js" },
                                        { "element": "obj.js" },
                                        { "element": "stop.js" },
                                        { "element": "stringify.js" },
                                        { "element": "super_deep.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "trim-newlines",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "tryit",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "package.json" },
                                { "element": "tryit.js" }
                            ]
                        },
                        {
                            "element": "ts-loader",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".gitattributes" },
                                {
                                    "element": ".github",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "issue_template.md" }]
                                },
                                { "element": ".travis.yml" },
                                { "element": "CHANGELOG.md" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "RELEASING.md" },
                                { "element": "appveyor.yml" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "after-compile.js" },
                                        { "element": "compilerSetup.js" },
                                        { "element": "config.js" },
                                        { "element": "constants.js" },
                                        { "element": "index.js" },
                                        { "element": "instances.js" },
                                        { "element": "interfaces.js" },
                                        { "element": "logger.js" },
                                        { "element": "resolver.js" },
                                        { "element": "servicesHost.js" },
                                        { "element": "types" },
                                        { "element": "utils.js" },
                                        { "element": "watch-run.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "ansi-styles" },
                                        { "element": "chalk" },
                                        { "element": "has-flag" },
                                        { "element": "supports-color" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "tslib",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".gitattributes" },
                                { "element": "CopyrightNotice.txt" },
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                { "element": "bower.json" },
                                {
                                    "element": "docs",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "generator.md" }]
                                },
                                { "element": "package.json" },
                                { "element": "tslib.d.ts" },
                                { "element": "tslib.es6.html" },
                                { "element": "tslib.es6.js" },
                                { "element": "tslib.html" },
                                { "element": "tslib.js" }
                            ]
                        },
                        {
                            "element": "tslint",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".prettierrc" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "tslint" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "configs" },
                                        { "element": "configuration.d.ts" },
                                        { "element": "configuration.js" },
                                        { "element": "enableDisableRules.d.ts" },
                                        { "element": "enableDisableRules.js" },
                                        { "element": "error.d.ts" },
                                        { "element": "error.js" },
                                        { "element": "formatterLoader.d.ts" },
                                        { "element": "formatterLoader.js" },
                                        { "element": "formatters" },
                                        { "element": "formatters.d.ts" },
                                        { "element": "formatters.js" },
                                        { "element": "index.d.ts" },
                                        { "element": "index.js" },
                                        { "element": "language" },
                                        { "element": "linter.d.ts" },
                                        { "element": "linter.js" },
                                        { "element": "ruleLoader.d.ts" },
                                        { "element": "ruleLoader.js" },
                                        { "element": "rules" },
                                        { "element": "rules.d.ts" },
                                        { "element": "rules.js" },
                                        { "element": "runner.d.ts" },
                                        { "element": "runner.js" },
                                        { "element": "test.d.ts" },
                                        { "element": "test.js" },
                                        { "element": "tslintCli.d.ts" },
                                        { "element": "tslintCli.js" },
                                        { "element": "utils.d.ts" },
                                        { "element": "utils.js" },
                                        { "element": "verify" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "ansi-styles" },
                                        { "element": "chalk" },
                                        { "element": "commander" },
                                        { "element": "diff" },
                                        { "element": "esprima" },
                                        { "element": "glob" },
                                        { "element": "has-flag" },
                                        { "element": "js-yaml" },
                                        { "element": "semver" },
                                        { "element": "supports-color" },
                                        { "element": "tslib" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "tslint-vscode.json" }
                            ]
                        },
                        {
                            "element": "tsutils",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".editorconfig" },
                                { "element": ".fimbullinter.yaml" },
                                { "element": ".wotanrc.yaml" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "typeguard",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "2.8" },
                                        { "element": "2.9" },
                                        { "element": "3.0" },
                                        { "element": "index.d.ts" },
                                        { "element": "index.js" },
                                        { "element": "next" },
                                        { "element": "node.d.ts" },
                                        { "element": "node.js" },
                                        { "element": "type.d.ts" },
                                        { "element": "type.js" }
                                    ]
                                },
                                {
                                    "element": "util",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "control-flow.d.ts" },
                                        { "element": "control-flow.js" },
                                        { "element": "convert-ast.d.ts" },
                                        { "element": "convert-ast.js" },
                                        { "element": "index.d.ts" },
                                        { "element": "index.js" },
                                        { "element": "type.d.ts" },
                                        { "element": "type.js" },
                                        { "element": "usage.d.ts" },
                                        { "element": "usage.js" },
                                        { "element": "util.d.ts" },
                                        { "element": "util.js" }
                                    ]
                                },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "tty-browserify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" }
                            ]
                        },
                        {
                            "element": "tunnel",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "tunnel.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "http-over-http.js" },
                                        { "element": "http-over-https.js" },
                                        { "element": "https-over-http.js" },
                                        { "element": "https-over-https-error.js" },
                                        { "element": "https-over-https.js" },
                                        { "element": "keys" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "tunnel-agent",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "tweetnacl",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "AUTHORS.md" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "PULL_REQUEST_TEMPLATE.md" },
                                { "element": "README.md" },
                                { "element": "nacl-fast.js" },
                                { "element": "nacl-fast.min.js" },
                                { "element": "nacl.d.ts" },
                                { "element": "nacl.js" },
                                { "element": "nacl.min.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "type-check",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "check.js" },
                                        { "element": "index.js" },
                                        { "element": "parse-type.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "type-is",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "typechecker",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".flowconfig" },
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                {
                                    "element": "es2015",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "fixtures" }, { "element": "index.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "source",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "fixtures" }, { "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "typed-rest-client",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HttpClient.d.ts" },
                                { "element": "HttpClient.js" },
                                { "element": "Index.d.ts" },
                                { "element": "Index.js" },
                                { "element": "Interfaces.d.ts" },
                                { "element": "Interfaces.js" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "RestClient.d.ts" },
                                { "element": "RestClient.js" },
                                { "element": "Util.d.ts" },
                                { "element": "Util.js" },
                                {
                                    "element": "opensource",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "node-http-ntlm" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "typedarray",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "tarray.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "server" }, { "element": "tarray.js" }]
                                }
                            ]
                        },
                        {
                            "element": "typescript",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "AUTHORS.md" },
                                { "element": "CODE_OF_CONDUCT.md" },
                                { "element": "CopyrightNotice.txt" },
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                { "element": "ThirdPartyNoticeText.txt" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "tsc" }, { "element": "tsserver" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "README.md" },
                                        { "element": "cancellationToken.js" },
                                        { "element": "cs" },
                                        { "element": "de" },
                                        { "element": "diagnosticMessages.generated.json" },
                                        { "element": "es" },
                                        { "element": "fr" },
                                        { "element": "it" },
                                        { "element": "ja" },
                                        { "element": "ko" },
                                        { "element": "lib.d.ts" },
                                        { "element": "lib.dom.d.ts" },
                                        { "element": "lib.dom.iterable.d.ts" },
                                        { "element": "lib.es2015.collection.d.ts" },
                                        { "element": "lib.es2015.core.d.ts" },
                                        { "element": "lib.es2015.d.ts" },
                                        { "element": "lib.es2015.generator.d.ts" },
                                        { "element": "lib.es2015.iterable.d.ts" },
                                        { "element": "lib.es2015.promise.d.ts" },
                                        { "element": "lib.es2015.proxy.d.ts" },
                                        { "element": "lib.es2015.reflect.d.ts" },
                                        { "element": "lib.es2015.symbol.d.ts" },
                                        { "element": "lib.es2015.symbol.wellknown.d.ts" },
                                        { "element": "lib.es2016.array.include.d.ts" },
                                        { "element": "lib.es2016.d.ts" },
                                        { "element": "lib.es2016.full.d.ts" },
                                        { "element": "lib.es2017.d.ts" },
                                        { "element": "lib.es2017.full.d.ts" },
                                        { "element": "lib.es2017.intl.d.ts" },
                                        { "element": "lib.es2017.object.d.ts" },
                                        { "element": "lib.es2017.sharedmemory.d.ts" },
                                        { "element": "lib.es2017.string.d.ts" },
                                        { "element": "lib.es2017.typedarrays.d.ts" },
                                        { "element": "lib.es2018.asynciterable.d.ts" },
                                        { "element": "lib.es2018.d.ts" },
                                        { "element": "lib.es2018.full.d.ts" },
                                        { "element": "lib.es2018.intl.d.ts" },
                                        { "element": "lib.es2018.promise.d.ts" },
                                        { "element": "lib.es2018.regexp.d.ts" },
                                        { "element": "lib.es2019.array.d.ts" },
                                        { "element": "lib.es2019.d.ts" },
                                        { "element": "lib.es2019.full.d.ts" },
                                        { "element": "lib.es2019.object.d.ts" },
                                        { "element": "lib.es2019.string.d.ts" },
                                        { "element": "lib.es2019.symbol.d.ts" },
                                        { "element": "lib.es2020.d.ts" },
                                        { "element": "lib.es2020.full.d.ts" },
                                        { "element": "lib.es2020.string.d.ts" },
                                        { "element": "lib.es2020.symbol.wellknown.d.ts" },
                                        { "element": "lib.es5.d.ts" },
                                        { "element": "lib.es6.d.ts" },
                                        { "element": "lib.esnext.array.d.ts" },
                                        { "element": "lib.esnext.asynciterable.d.ts" },
                                        { "element": "lib.esnext.bigint.d.ts" },
                                        { "element": "lib.esnext.d.ts" },
                                        { "element": "lib.esnext.full.d.ts" },
                                        { "element": "lib.esnext.intl.d.ts" },
                                        { "element": "lib.esnext.symbol.d.ts" },
                                        { "element": "lib.scripthost.d.ts" },
                                        { "element": "lib.webworker.d.ts" },
                                        { "element": "lib.webworker.importscripts.d.ts" },
                                        { "element": "pl" },
                                        { "element": "protocol.d.ts" },
                                        { "element": "pt-br" },
                                        { "element": "ru" },
                                        { "element": "tr" },
                                        { "element": "tsc.js" },
                                        { "element": "tsserver.js" },
                                        { "element": "tsserverlibrary.d.ts" },
                                        { "element": "tsserverlibrary.js" },
                                        { "element": "typesMap.json" },
                                        { "element": "typescript.d.ts" },
                                        { "element": "typescript.js" },
                                        { "element": "typescriptServices.d.ts" },
                                        { "element": "typescriptServices.js" },
                                        { "element": "typingsInstaller.js" },
                                        { "element": "watchGuard.js" },
                                        { "element": "zh-cn" },
                                        { "element": "zh-tw" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "typescript-formatter",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "tsfmt" }]
                                },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.ts" },
                                        { "element": "package.json" },
                                        { "element": "tsconfig.json" }
                                    ]
                                },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "cli.d.ts" },
                                        { "element": "cli.js" },
                                        { "element": "cli.js.map" },
                                        { "element": "formatter.d.ts" },
                                        { "element": "formatter.js" },
                                        { "element": "formatter.js.map" },
                                        { "element": "index.d.ts" },
                                        { "element": "index.js" },
                                        { "element": "index.js.map" },
                                        { "element": "provider" },
                                        { "element": "typings" },
                                        { "element": "utils.d.ts" },
                                        { "element": "utils.js" },
                                        { "element": "utils.js.map" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" },
                                { "element": "tsconfig.json" }
                            ]
                        },
                        {
                            "element": "uc.micro",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "README.md" },
                                {
                                    "element": "categories",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Cc" },
                                        { "element": "Cf" },
                                        { "element": "P" },
                                        { "element": "Z" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "properties",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "Any" }]
                                }
                            ]
                        },
                        {
                            "element": "uglify-es",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "uglifyjs" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ast.js" },
                                        { "element": "compress.js" },
                                        { "element": "minify.js" },
                                        { "element": "mozilla-ast.js" },
                                        { "element": "output.js" },
                                        { "element": "parse.js" },
                                        { "element": "propmangle.js" },
                                        { "element": "scope.js" },
                                        { "element": "sourcemap.js" },
                                        { "element": "transform.js" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "source-map" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "tools",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "domprops.json" },
                                        { "element": "exports.js" },
                                        { "element": "node.js" },
                                        { "element": "props.html" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "uglify-js",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "uglifyjs" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "ast.js" },
                                        { "element": "compress.js" },
                                        { "element": "minify.js" },
                                        { "element": "mozilla-ast.js" },
                                        { "element": "output.js" },
                                        { "element": "parse.js" },
                                        { "element": "propmangle.js" },
                                        { "element": "scope.js" },
                                        { "element": "sourcemap.js" },
                                        { "element": "transform.js" },
                                        { "element": "utils.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "source-map" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "tools",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "domprops.json" },
                                        { "element": "exports.js" },
                                        { "element": "node.js" },
                                        { "element": "props.html" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "uglify-to-browserify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "uglifyjs-webpack-plugin",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "cjs.js" },
                                        { "element": "index.js" },
                                        { "element": "options.json" },
                                        { "element": "uglify" },
                                        { "element": "utils" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "commander" },
                                        { "element": "source-map" },
                                        { "element": "uglify-es" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "ultron",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "unc-path-regex",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "underscore",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                { "element": "underscore-min.js" },
                                { "element": "underscore-min.map" },
                                { "element": "underscore.js" }
                            ]
                        },
                        {
                            "element": "undertaker",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "get-task.js" },
                                        { "element": "helpers" },
                                        { "element": "last-run.js" },
                                        { "element": "parallel.js" },
                                        { "element": "registry.js" },
                                        { "element": "series.js" },
                                        { "element": "set-task.js" },
                                        { "element": "task.js" },
                                        { "element": "tree.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "undertaker-registry",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "union",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "after" },
                                        { "element": "simple" },
                                        { "element": "socketio" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "buffered-stream.js" },
                                        { "element": "core.js" },
                                        { "element": "http-stream.js" },
                                        { "element": "index.js" },
                                        { "element": "request-stream.js" },
                                        { "element": "response-stream.js" },
                                        { "element": "routing-stream.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "qs" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "after-test.js" },
                                        { "element": "body-parser-test.js" },
                                        { "element": "double-write-test.js" },
                                        { "element": "ecstatic-test.js" },
                                        { "element": "fixtures" },
                                        { "element": "header-test.js" },
                                        { "element": "helpers" },
                                        { "element": "prop-test.js" },
                                        { "element": "simple-test.js" },
                                        { "element": "status-code-test.js" },
                                        { "element": "streaming-test.js" }
                                    ]
                                },
                                { "element": "union.png" }
                            ]
                        },
                        {
                            "element": "union-value",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "set-value" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "uniq",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "test.js" }]
                                },
                                { "element": "uniq.js" }
                            ]
                        },
                        {
                            "element": "uniqid",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "Readme.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "uniqs",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".travis.yml" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "unique-filename",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                {
                                    "element": ".nyc_output",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "54942.json" },
                                        { "element": "54944.json" }
                                    ]
                                },
                                { "element": "README.md" },
                                { "element": "README.md~" },
                                {
                                    "element": "coverage",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "__root__" },
                                        { "element": "base.css" },
                                        { "element": "index.html" },
                                        { "element": "prettify.css" },
                                        { "element": "prettify.js" },
                                        { "element": "sort-arrow-sprite.png" },
                                        { "element": "sorter.js" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "unique-slug",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "unique-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "universalify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "unpipe",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "unset-value",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "has-value" },
                                        { "element": "has-values" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "upath",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "code" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                { "element": "upath.d.ts" }
                            ]
                        },
                        {
                            "element": "uri-js",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                { "element": "bower.json" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "es5" }, { "element": "esnext" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "punycode" }]
                                },
                                { "element": "package.json" },
                                { "element": "rollup.config.js" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.ts" },
                                        { "element": "punycode.d.ts" },
                                        { "element": "regexps-iri.ts" },
                                        { "element": "regexps-uri.ts" },
                                        { "element": "schemes" },
                                        { "element": "uri.ts" },
                                        { "element": "util.ts" }
                                    ]
                                },
                                {
                                    "element": "tests",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "qunit.css" },
                                        { "element": "qunit.js" },
                                        { "element": "test-es5-min.html" },
                                        { "element": "test-es5.html" },
                                        { "element": "tests.js" }
                                    ]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "urix",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintrc" },
                                { "element": "LICENSE" },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                }
                            ]
                        },
                        {
                            "element": "url",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": ".zuul.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "punycode" }]
                                },
                                { "element": "package.json" },
                                { "element": "test.js" },
                                { "element": "url.js" },
                                { "element": "util.js" }
                            ]
                        },
                        {
                            "element": "url-join",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "README.md" },
                                { "element": "bower.json" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "url-join.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "tests.js" }]
                                }
                            ]
                        },
                        {
                            "element": "use",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "util",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": ".zuul.yml" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "inherits" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "support",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "isBuffer.js" },
                                        { "element": "isBufferBrowser.js" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "browser" }, { "element": "node" }]
                                },
                                { "element": "util.js" }
                            ]
                        },
                        {
                            "element": "util-deprecate",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "History.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "browser.js" },
                                { "element": "node.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "utils-merge",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "uuid",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintrc.json" },
                                { "element": "AUTHORS" },
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "uuid" }]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "bytesToUuid.js" },
                                        { "element": "rng-browser.js" },
                                        { "element": "rng.js" },
                                        { "element": "sha1-browser.js" },
                                        { "element": "sha1.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "v1.js" },
                                { "element": "v4.js" },
                                { "element": "v5.js" }
                            ]
                        },
                        {
                            "element": "v8-compile-cache",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                { "element": "v8-compile-cache.js" }
                            ]
                        },
                        {
                            "element": "v8-inspect-profiler",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "v8flags",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "config-path.js" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "vali-date",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "validate-npm-package-license",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "validator",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "alpha.js" },
                                        { "element": "blacklist.js" },
                                        { "element": "contains.js" },
                                        { "element": "equals.js" },
                                        { "element": "escape.js" },
                                        { "element": "isAfter.js" },
                                        { "element": "isAlpha.js" },
                                        { "element": "isAlphanumeric.js" },
                                        { "element": "isAscii.js" },
                                        { "element": "isBase64.js" },
                                        { "element": "isBefore.js" },
                                        { "element": "isBoolean.js" },
                                        { "element": "isByteLength.js" },
                                        { "element": "isCreditCard.js" },
                                        { "element": "isCurrency.js" },
                                        { "element": "isDataURI.js" },
                                        { "element": "isDecimal.js" },
                                        { "element": "isDivisibleBy.js" },
                                        { "element": "isEmail.js" },
                                        { "element": "isEmpty.js" },
                                        { "element": "isFQDN.js" },
                                        { "element": "isFloat.js" },
                                        { "element": "isFullWidth.js" },
                                        { "element": "isHalfWidth.js" },
                                        { "element": "isHash.js" },
                                        { "element": "isHexColor.js" },
                                        { "element": "isHexadecimal.js" },
                                        { "element": "isIP.js" },
                                        { "element": "isISBN.js" },
                                        { "element": "isISIN.js" },
                                        { "element": "isISO31661Alpha2.js" },
                                        { "element": "isISO8601.js" },
                                        { "element": "isISRC.js" },
                                        { "element": "isISSN.js" },
                                        { "element": "isIn.js" },
                                        { "element": "isInt.js" },
                                        { "element": "isJSON.js" },
                                        { "element": "isLatLong.js" },
                                        { "element": "isLength.js" },
                                        { "element": "isLowercase.js" },
                                        { "element": "isMACAddress.js" },
                                        { "element": "isMD5.js" },
                                        { "element": "isMimeType.js" },
                                        { "element": "isMobilePhone.js" },
                                        { "element": "isMongoId.js" },
                                        { "element": "isMultibyte.js" },
                                        { "element": "isNumeric.js" },
                                        { "element": "isPort.js" },
                                        { "element": "isPostalCode.js" },
                                        { "element": "isSurrogatePair.js" },
                                        { "element": "isURL.js" },
                                        { "element": "isUUID.js" },
                                        { "element": "isUppercase.js" },
                                        { "element": "isVariableWidth.js" },
                                        { "element": "isWhitelisted.js" },
                                        { "element": "ltrim.js" },
                                        { "element": "matches.js" },
                                        { "element": "normalizeEmail.js" },
                                        { "element": "rtrim.js" },
                                        { "element": "stripLow.js" },
                                        { "element": "toBoolean.js" },
                                        { "element": "toDate.js" },
                                        { "element": "toFloat.js" },
                                        { "element": "toInt.js" },
                                        { "element": "trim.js" },
                                        { "element": "unescape.js" },
                                        { "element": "util" },
                                        { "element": "whitelist.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "validator.js" },
                                { "element": "validator.min.js" }
                            ]
                        },
                        {
                            "element": "value-or-function",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "vary",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "HISTORY.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "vendors",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "index.json" },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "verror",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "CHANGES.md" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "verror.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "vinyl",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "inspect-stream.js" },
                                        { "element": "is-stream.js" },
                                        { "element": "normalize.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "clone" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "vinyl-fs",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "constants.js" },
                                        { "element": "dest" },
                                        { "element": "file-operations.js" },
                                        { "element": "src" },
                                        { "element": "symlink" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "process-nextick-args" },
                                        { "element": "readable-stream" },
                                        { "element": "string_decoder" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "vinyl-sourcemap",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "helpers.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "vinyl-sourcemaps-apply",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintrc" },
                                { "element": ".npmignore" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "source-map" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "vm-browserify",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "run" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                { "element": "readme.markdown" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "vm.js" }]
                                }
                            ]
                        },
                        {
                            "element": "vsce",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".eslintrc" },
                                { "element": ".travis.yml" },
                                {
                                    "element": ".vscode",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "launch.json" },
                                        { "element": "settings.json" },
                                        { "element": "tasks.json" }
                                    ]
                                },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "ThirdPartyNotices.txt" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "glob" },
                                        { "element": "lodash" },
                                        { "element": "mime" },
                                        { "element": "semver" },
                                        { "element": "tmp" },
                                        { "element": "yauzl" }
                                    ]
                                },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "api.d.ts" },
                                        { "element": "api.js" },
                                        { "element": "main.js" },
                                        { "element": "manifest.js" },
                                        { "element": "nls.js" },
                                        { "element": "npm.js" },
                                        { "element": "package.js" },
                                        { "element": "publicgalleryapi.js" },
                                        { "element": "publish.js" },
                                        { "element": "search.js" },
                                        { "element": "show.js" },
                                        { "element": "store.js" },
                                        { "element": "util.js" },
                                        { "element": "validation.js" },
                                        { "element": "viewutils.js" },
                                        { "element": "vsce" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "resources",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "[Content_Types].xml" },
                                        { "element": "extension.vsixmanifest" }
                                    ]
                                },
                                { "element": "tslint.json" },
                                { "element": "typings.json" }
                            ]
                        },
                        {
                            "element": "vscode-anymatch",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "normalize-path" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "vscode-chokidar",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "fsevents-handler.js" },
                                        { "element": "nodefs-handler.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "is-extglob" },
                                        { "element": "is-glob" },
                                        { "element": "normalize-path" },
                                        { "element": "upath" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "types",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.d.ts" }]
                                }
                            ]
                        },
                        {
                            "element": "vscode-debugprotocol",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "debugProtocol.d.ts" },
                                        { "element": "debugProtocol.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "vscode-nls-dev",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "License.txt" },
                                { "element": "README.md" },
                                { "element": "ThirdPartyNotices.txt" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "lib.d.ts" },
                                        { "element": "lib.js" },
                                        { "element": "main.d.ts" },
                                        { "element": "main.js" },
                                        { "element": "vscl.d.ts" },
                                        { "element": "vscl.js" },
                                        { "element": "webpack-loader.d.ts" },
                                        { "element": "webpack-loader.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "clone" },
                                        { "element": "glob" },
                                        { "element": "iconv-lite" },
                                        { "element": "source-map" },
                                        { "element": "typescript" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "vscode-proxy-agent",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "index.d.ts" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "debug" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "vscode-ripgrep",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                {
                                    "element": ".vscode",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "launch.json" }]
                                },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "rg.exe" }]
                                },
                                { "element": "jsconfig.json" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "checkNpmVersion.js" },
                                        { "element": "common.js" },
                                        { "element": "download.js" },
                                        { "element": "index.d.ts" },
                                        { "element": "index.js" },
                                        { "element": "postinstall.js" }
                                    ]
                                },
                                { "element": "package-lock.json" },
                                { "element": "package.json" },
                                { "element": "run_ripgrep_build.sh" }
                            ]
                        },
                        {
                            "element": "vscode-sqlite3",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".dockerignore" },
                                { "element": "CHANGELOG.md" },
                                { "element": "CONTRIBUTING.md" },
                                { "element": "Dockerfile" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "binding.gyp" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "binding.sln" },
                                        { "element": "config.gypi" },
                                        { "element": "deps" },
                                        { "element": "sqlite.vcxproj" },
                                        { "element": "sqlite.vcxproj.filters" }
                                    ]
                                },
                                {
                                    "element": "deps",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "common-sqlite.gypi" },
                                        { "element": "extract.py" },
                                        { "element": "sqlite-autoconf-3280000.tar.gz" },
                                        { "element": "sqlite3.gyp" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.js" },
                                        { "element": "sqlite3.js" },
                                        { "element": "trace.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "sqlite3.js" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "async.h" },
                                        { "element": "backup.cc" },
                                        { "element": "backup.h" },
                                        { "element": "database.cc" },
                                        { "element": "database.h" },
                                        { "element": "gcc-preinclude.h" },
                                        { "element": "macros.h" },
                                        { "element": "node_sqlite3.cc" },
                                        { "element": "statement.cc" },
                                        { "element": "statement.h" },
                                        { "element": "threading.h" }
                                    ]
                                },
                                {
                                    "element": "tools",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "docker" }]
                                }
                            ]
                        },
                        {
                            "element": "vscode-textmate",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                {
                                    "element": "release",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "main.d.ts" },
                                        { "element": "main.js" },
                                        { "element": "types.d.ts" }
                                    ]
                                },
                                {
                                    "element": "typings",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.d.ts" }]
                                }
                            ]
                        },
                        {
                            "element": "vscode-windows-ca-certs",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "binding.gyp" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Release" },
                                        { "element": "binding.sln" },
                                        { "element": "config.gypi" },
                                        { "element": "crypt32.vcxproj" },
                                        { "element": "crypt32.vcxproj.filters" }
                                    ]
                                },
                                { "element": "crypt32.cc" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "vscode-windows-registry",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "License.txt" },
                                { "element": "README.md" },
                                { "element": "binding.gyp" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Release" },
                                        { "element": "binding.sln" },
                                        { "element": "config.gypi" },
                                        { "element": "winregistry.vcxproj" },
                                        { "element": "winregistry.vcxproj.filters" }
                                    ]
                                },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.d.ts" },
                                        { "element": "index.js" },
                                        { "element": "index.js.map" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "nan" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "winregistry.cc" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "windowsregistry.test.ts" }]
                                }
                            ]
                        },
                        {
                            "element": "vso-node-api",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "BuildApi.d.ts" },
                                { "element": "BuildApi.js" },
                                { "element": "ChatApi.d.ts" },
                                { "element": "ChatApi.js" },
                                { "element": "ClientApiBases.d.ts" },
                                { "element": "ClientApiBases.js" },
                                { "element": "ContributionsApi.d.ts" },
                                { "element": "ContributionsApi.js" },
                                { "element": "CoreApi.d.ts" },
                                { "element": "CoreApi.js" },
                                { "element": "DashboardApi.d.ts" },
                                { "element": "DashboardApi.js" },
                                { "element": "DelegatedAuthorizationApi.d.ts" },
                                { "element": "DelegatedAuthorizationApi.js" },
                                { "element": "ExtensionManagementApi.d.ts" },
                                { "element": "ExtensionManagementApi.js" },
                                { "element": "FeatureManagementApi.d.ts" },
                                { "element": "FeatureManagementApi.js" },
                                { "element": "FileContainerApi.d.ts" },
                                { "element": "FileContainerApi.js" },
                                { "element": "FileContainerApiBase.d.ts" },
                                { "element": "FileContainerApiBase.js" },
                                { "element": "GalleryApi.d.ts" },
                                { "element": "GalleryApi.js" },
                                { "element": "GalleryCompatHttpClientBase.d.ts" },
                                { "element": "GalleryCompatHttpClientBase.js" },
                                { "element": "GitApi.d.ts" },
                                { "element": "GitApi.js" },
                                { "element": "HttpClient.d.ts" },
                                { "element": "HttpClient.js" },
                                { "element": "IdentitiesApi.d.ts" },
                                { "element": "IdentitiesApi.js" },
                                { "element": "LICENSE" },
                                { "element": "LocationsApi.d.ts" },
                                { "element": "LocationsApi.js" },
                                { "element": "NotificationApi.d.ts" },
                                { "element": "NotificationApi.js" },
                                { "element": "OrganizationApi.d.ts" },
                                { "element": "OrganizationApi.js" },
                                { "element": "PolicyApi.d.ts" },
                                { "element": "PolicyApi.js" },
                                { "element": "ProfileApi.d.ts" },
                                { "element": "ProfileApi.js" },
                                { "element": "README.md" },
                                { "element": "ReleaseApi.d.ts" },
                                { "element": "ReleaseApi.js" },
                                { "element": "RestClient.d.ts" },
                                { "element": "RestClient.js" },
                                { "element": "SecurityRolesApi.d.ts" },
                                { "element": "SecurityRolesApi.js" },
                                { "element": "Serialization.d.ts" },
                                { "element": "Serialization.js" },
                                { "element": "ServiceHooksApi.d.ts" },
                                { "element": "ServiceHooksApi.js" },
                                { "element": "TaskAgentApi.d.ts" },
                                { "element": "TaskAgentApi.js" },
                                { "element": "TaskAgentApiBase.d.ts" },
                                { "element": "TaskAgentApiBase.js" },
                                { "element": "TaskApi.d.ts" },
                                { "element": "TaskApi.js" },
                                { "element": "TestApi.d.ts" },
                                { "element": "TestApi.js" },
                                { "element": "TfvcApi.d.ts" },
                                { "element": "TfvcApi.js" },
                                { "element": "TokenApi.d.ts" },
                                { "element": "TokenApi.js" },
                                { "element": "VsoClient.d.ts" },
                                { "element": "VsoClient.js" },
                                { "element": "WebApi.d.ts" },
                                { "element": "WebApi.js" },
                                { "element": "WorkApi.d.ts" },
                                { "element": "WorkApi.js" },
                                { "element": "WorkItemTrackingApi.d.ts" },
                                { "element": "WorkItemTrackingApi.js" },
                                {
                                    "element": "handlers",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "basiccreds.d.ts" },
                                        { "element": "basiccreds.js" },
                                        { "element": "bearertoken.d.ts" },
                                        { "element": "bearertoken.js" },
                                        { "element": "ntlm.d.ts" },
                                        { "element": "ntlm.js" },
                                        { "element": "personalaccesstoken.d.ts" },
                                        { "element": "personalaccesstoken.js" }
                                    ]
                                },
                                {
                                    "element": "interfaces",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "BuildInterfaces.d.ts" },
                                        { "element": "BuildInterfaces.js" },
                                        { "element": "ChatInterfaces.d.ts" },
                                        { "element": "ChatInterfaces.js" },
                                        { "element": "ContributionsInterfaces.d.ts" },
                                        { "element": "ContributionsInterfaces.js" },
                                        { "element": "CoreInterfaces.d.ts" },
                                        { "element": "CoreInterfaces.js" },
                                        { "element": "DashboardInterfaces.d.ts" },
                                        { "element": "DashboardInterfaces.js" },
                                        { "element": "DelegatedAuthorizationInterfaces.d.ts" },
                                        { "element": "DelegatedAuthorizationInterfaces.js" },
                                        { "element": "DistributedTaskCommonInterfaces.d.ts" },
                                        { "element": "DistributedTaskCommonInterfaces.js" },
                                        { "element": "ExtensionManagementInterfaces.d.ts" },
                                        { "element": "ExtensionManagementInterfaces.js" },
                                        { "element": "FeatureManagementInterfaces.d.ts" },
                                        { "element": "FeatureManagementInterfaces.js" },
                                        { "element": "FileContainerInterfaces.d.ts" },
                                        { "element": "FileContainerInterfaces.js" },
                                        { "element": "GalleryInterfaces.d.ts" },
                                        { "element": "GalleryInterfaces.js" },
                                        { "element": "GitInterfaces.d.ts" },
                                        { "element": "GitInterfaces.js" },
                                        { "element": "IdentitiesInterfaces.d.ts" },
                                        { "element": "IdentitiesInterfaces.js" },
                                        { "element": "LocationsInterfaces.d.ts" },
                                        { "element": "LocationsInterfaces.js" },
                                        { "element": "NotificationInterfaces.d.ts" },
                                        { "element": "NotificationInterfaces.js" },
                                        { "element": "OrganizationInterfaces.d.ts" },
                                        { "element": "OrganizationInterfaces.js" },
                                        { "element": "PolicyInterfaces.d.ts" },
                                        { "element": "PolicyInterfaces.js" },
                                        { "element": "ProfileInterfaces.d.ts" },
                                        { "element": "ProfileInterfaces.js" },
                                        { "element": "ReleaseInterfaces.d.ts" },
                                        { "element": "ReleaseInterfaces.js" },
                                        { "element": "SecurityRolesInterfaces.d.ts" },
                                        { "element": "SecurityRolesInterfaces.js" },
                                        { "element": "ServiceHooksInterfaces.d.ts" },
                                        { "element": "ServiceHooksInterfaces.js" },
                                        { "element": "TaskAgentInterfaces.d.ts" },
                                        { "element": "TaskAgentInterfaces.js" },
                                        { "element": "TestInterfaces.d.ts" },
                                        { "element": "TestInterfaces.js" },
                                        { "element": "TfvcInterfaces.d.ts" },
                                        { "element": "TfvcInterfaces.js" },
                                        { "element": "TokenInterfaces.d.ts" },
                                        { "element": "TokenInterfaces.js" },
                                        { "element": "WorkInterfaces.d.ts" },
                                        { "element": "WorkInterfaces.js" },
                                        { "element": "WorkItemTrackingInterfaces.d.ts" },
                                        { "element": "WorkItemTrackingInterfaces.js" },
                                        { "element": "common" }
                                    ]
                                },
                                {
                                    "element": "opensource",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "node-http-ntlm" }]
                                },
                                { "element": "package.json" },
                                { "element": "typings.json" }
                            ]
                        },
                        {
                            "element": "watchpack",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "DirectoryWatcher.js" },
                                        { "element": "watcherManager.js" },
                                        { "element": "watchpack.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "chokidar" },
                                        { "element": "is-extglob" },
                                        { "element": "is-glob" },
                                        { "element": "readdirp" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "webpack",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "SECURITY.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "webpack.js" }]
                                },
                                {
                                    "element": "buildin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "amd-define.js" },
                                        { "element": "amd-options.js" },
                                        { "element": "global.js" },
                                        { "element": "harmony-module.js" },
                                        { "element": "module.js" },
                                        { "element": "system.js" }
                                    ]
                                },
                                {
                                    "element": "hot",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "dev-server.js" },
                                        { "element": "emitter.js" },
                                        { "element": "log-apply-result.js" },
                                        { "element": "log.js" },
                                        { "element": "only-dev-server.js" },
                                        { "element": "poll.js" },
                                        { "element": "signal.js" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "APIPlugin.js" },
                                        { "element": "AmdMainTemplatePlugin.js" },
                                        { "element": "AsyncDependenciesBlock.js" },
                                        { "element": "AsyncDependencyToInitialChunkError.js" },
                                        { "element": "AutomaticPrefetchPlugin.js" },
                                        { "element": "BannerPlugin.js" },
                                        { "element": "BasicEvaluatedExpression.js" },
                                        { "element": "CachePlugin.js" },
                                        { "element": "CaseSensitiveModulesWarning.js" },
                                        { "element": "Chunk.js" },
                                        { "element": "ChunkGroup.js" },
                                        { "element": "ChunkRenderError.js" },
                                        { "element": "ChunkTemplate.js" },
                                        { "element": "CommentCompilationWarning.js" },
                                        { "element": "CompatibilityPlugin.js" },
                                        { "element": "Compilation.js" },
                                        { "element": "Compiler.js" },
                                        { "element": "ConcurrentCompilationError.js" },
                                        { "element": "ConstPlugin.js" },
                                        { "element": "ContextExclusionPlugin.js" },
                                        { "element": "ContextModule.js" },
                                        { "element": "ContextModuleFactory.js" },
                                        { "element": "ContextReplacementPlugin.js" },
                                        { "element": "DefinePlugin.js" },
                                        { "element": "DelegatedModule.js" },
                                        { "element": "DelegatedModuleFactoryPlugin.js" },
                                        { "element": "DelegatedPlugin.js" },
                                        { "element": "DependenciesBlock.js" },
                                        { "element": "DependenciesBlockVariable.js" },
                                        { "element": "Dependency.js" },
                                        { "element": "DllEntryPlugin.js" },
                                        { "element": "DllModule.js" },
                                        { "element": "DllModuleFactory.js" },
                                        { "element": "DllPlugin.js" },
                                        { "element": "DllReferencePlugin.js" },
                                        { "element": "DynamicEntryPlugin.js" },
                                        { "element": "EntryModuleNotFoundError.js" },
                                        { "element": "EntryOptionPlugin.js" },
                                        { "element": "Entrypoint.js" },
                                        { "element": "EnvironmentPlugin.js" },
                                        { "element": "ErrorHelpers.js" },
                                        { "element": "EvalDevToolModulePlugin.js" },
                                        { "element": "EvalDevToolModuleTemplatePlugin.js" },
                                        { "element": "EvalSourceMapDevToolModuleTemplatePlugin.js" },
                                        { "element": "EvalSourceMapDevToolPlugin.js" },
                                        { "element": "ExportPropertyMainTemplatePlugin.js" },
                                        { "element": "ExtendedAPIPlugin.js" },
                                        { "element": "ExternalModule.js" },
                                        { "element": "ExternalModuleFactoryPlugin.js" },
                                        { "element": "ExternalsPlugin.js" },
                                        { "element": "FlagDependencyExportsPlugin.js" },
                                        { "element": "FlagDependencyUsagePlugin.js" },
                                        { "element": "FlagInitialModulesAsUsedPlugin.js" },
                                        { "element": "FunctionModulePlugin.js" },
                                        { "element": "FunctionModuleTemplatePlugin.js" },
                                        { "element": "Generator.js" },
                                        { "element": "GraphHelpers.js" },
                                        { "element": "HarmonyLinkingError.js" },
                                        { "element": "HashedModuleIdsPlugin.js" },
                                        { "element": "HotModuleReplacement.runtime.js" },
                                        { "element": "HotModuleReplacementPlugin.js" },
                                        { "element": "HotUpdateChunk.js" },
                                        { "element": "HotUpdateChunkTemplate.js" },
                                        { "element": "IgnorePlugin.js" },
                                        { "element": "JavascriptGenerator.js" },
                                        { "element": "JavascriptModulesPlugin.js" },
                                        { "element": "JsonGenerator.js" },
                                        { "element": "JsonModulesPlugin.js" },
                                        { "element": "JsonParser.js" },
                                        { "element": "LibManifestPlugin.js" },
                                        { "element": "LibraryTemplatePlugin.js" },
                                        { "element": "LoaderOptionsPlugin.js" },
                                        { "element": "LoaderTargetPlugin.js" },
                                        { "element": "MainTemplate.js" },
                                        { "element": "MemoryOutputFileSystem.js" },
                                        { "element": "Module.js" },
                                        { "element": "ModuleBuildError.js" },
                                        { "element": "ModuleDependencyError.js" },
                                        { "element": "ModuleDependencyWarning.js" },
                                        { "element": "ModuleError.js" },
                                        { "element": "ModuleFilenameHelpers.js" },
                                        { "element": "ModuleNotFoundError.js" },
                                        { "element": "ModuleParseError.js" },
                                        { "element": "ModuleReason.js" },
                                        { "element": "ModuleTemplate.js" },
                                        { "element": "ModuleWarning.js" },
                                        { "element": "MultiCompiler.js" },
                                        { "element": "MultiEntryPlugin.js" },
                                        { "element": "MultiModule.js" },
                                        { "element": "MultiModuleFactory.js" },
                                        { "element": "MultiStats.js" },
                                        { "element": "MultiWatching.js" },
                                        { "element": "NamedChunksPlugin.js" },
                                        { "element": "NamedModulesPlugin.js" },
                                        { "element": "NoEmitOnErrorsPlugin.js" },
                                        { "element": "NoModeWarning.js" },
                                        { "element": "NodeStuffPlugin.js" },
                                        { "element": "NormalModule.js" },
                                        { "element": "NormalModuleFactory.js" },
                                        { "element": "NormalModuleReplacementPlugin.js" },
                                        { "element": "NullFactory.js" },
                                        { "element": "OptionsApply.js" },
                                        { "element": "OptionsDefaulter.js" },
                                        { "element": "Parser.js" },
                                        { "element": "ParserHelpers.js" },
                                        { "element": "PrefetchPlugin.js" },
                                        { "element": "ProgressPlugin.js" },
                                        { "element": "ProvidePlugin.js" },
                                        { "element": "RawModule.js" },
                                        { "element": "RecordIdsPlugin.js" },
                                        { "element": "RemovedPluginError.js" },
                                        { "element": "RequestShortener.js" },
                                        { "element": "RequireJsStuffPlugin.js" },
                                        { "element": "ResolverFactory.js" },
                                        { "element": "RuleSet.js" },
                                        { "element": "RuntimeTemplate.js" },
                                        { "element": "SetVarMainTemplatePlugin.js" },
                                        { "element": "SingleEntryPlugin.js" },
                                        { "element": "SizeFormatHelpers.js" },
                                        { "element": "SourceMapDevToolModuleOptionsPlugin.js" },
                                        { "element": "SourceMapDevToolPlugin.js" },
                                        { "element": "Stats.js" },
                                        { "element": "Template.js" },
                                        { "element": "TemplatedPathPlugin.js" },
                                        { "element": "UmdMainTemplatePlugin.js" },
                                        { "element": "UnsupportedFeatureWarning.js" },
                                        { "element": "UseStrictPlugin.js" },
                                        { "element": "WarnCaseSensitiveModulesPlugin.js" },
                                        { "element": "WarnNoModeSetPlugin.js" },
                                        { "element": "WatchIgnorePlugin.js" },
                                        { "element": "Watching.js" },
                                        { "element": "WebpackError.js" },
                                        { "element": "WebpackOptionsApply.js" },
                                        { "element": "WebpackOptionsDefaulter.js" },
                                        { "element": "WebpackOptionsValidationError.js" },
                                        { "element": "compareLocations.js" },
                                        { "element": "debug" },
                                        { "element": "dependencies" },
                                        { "element": "formatLocation.js" },
                                        { "element": "node" },
                                        { "element": "optimize" },
                                        { "element": "performance" },
                                        { "element": "util" },
                                        { "element": "validateSchema.js" },
                                        { "element": "wasm" },
                                        { "element": "web" },
                                        { "element": "webpack.js" },
                                        { "element": "webpack.web.js" },
                                        { "element": "webworker" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "ajv" },
                                        { "element": "fast-deep-equal" },
                                        { "element": "json-schema-traverse" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "schemas",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "WebpackOptions.json" },
                                        { "element": "ajv.absolutePath.js" },
                                        { "element": "plugins" }
                                    ]
                                },
                                {
                                    "element": "web_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "node-libs-browser.js" }]
                                }
                            ]
                        },
                        {
                            "element": "webpack-cli",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "cli.js" },
                                        { "element": "config-yargs.js" },
                                        { "element": "convert-argv.js" },
                                        { "element": "errorHelpers.js" },
                                        { "element": "optionsSchema.json" },
                                        { "element": "prepareOptions.js" },
                                        { "element": "prompt-command.js" },
                                        { "element": "webpackConfigurationSchema.json" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".bin" },
                                        { "element": "chalk" },
                                        { "element": "chardet" },
                                        { "element": "cross-spawn" },
                                        { "element": "decamelize" },
                                        { "element": "external-editor" },
                                        { "element": "find-up" },
                                        { "element": "iconv-lite" },
                                        { "element": "inquirer" },
                                        { "element": "locate-path" },
                                        { "element": "lodash" },
                                        { "element": "p-limit" },
                                        { "element": "p-locate" },
                                        { "element": "p-try" },
                                        { "element": "y18n" },
                                        { "element": "yargs" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "webpack-sources",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "CachedSource.js" },
                                        { "element": "ConcatSource.js" },
                                        { "element": "LineToLineMappedSource.js" },
                                        { "element": "OriginalSource.js" },
                                        { "element": "PrefixSource.js" },
                                        { "element": "RawSource.js" },
                                        { "element": "ReplaceSource.js" },
                                        { "element": "Source.js" },
                                        { "element": "SourceAndMapMixin.js" },
                                        { "element": "SourceMapSource.js" },
                                        { "element": "index.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "source-map" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "webpack-stream",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }, { "element": "fancy-log" }]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "whet.extend",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "Cakefile" },
                                { "element": "History.md" },
                                { "element": "LICENSE" },
                                { "element": "Readme.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "whet.extend.js" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "whet.extend.coffee" }]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "extend_test.coffee" },
                                        { "element": "mocha.opts" },
                                        { "element": "test_helper.coffee" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "which",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "which" }]
                                },
                                { "element": "package.json" },
                                { "element": "which.js" }
                            ]
                        },
                        {
                            "element": "which-module",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "which-pm-runs",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "wide-align",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "align.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "window-size",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE-MIT" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "windows-foreground-love",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "binding.gyp" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Release" },
                                        { "element": "binding.sln" },
                                        { "element": "config.gypi" },
                                        { "element": "foreground-love.vcxproj" },
                                        { "element": "foreground-love.vcxproj.filters" }
                                    ]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "foreground-love.cc" }]
                                }
                            ]
                        },
                        {
                            "element": "windows-mutex",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "binding.gyp" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "CreateMutex.vcxproj" },
                                        { "element": "CreateMutex.vcxproj.filters" },
                                        { "element": "Release" },
                                        { "element": "binding.sln" },
                                        { "element": "config.gypi" }
                                    ]
                                },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "nan" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "main.cc" },
                                        { "element": "mutex.cc" },
                                        { "element": "mutex.h" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "windows-process-tree",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "binding.gyp" },
                                {
                                    "element": "build",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Release" },
                                        { "element": "binding.sln" },
                                        { "element": "config.gypi" },
                                        { "element": "windows_process_tree.vcxproj" },
                                        { "element": "windows_process_tree.vcxproj.filters" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "index.js" },
                                        { "element": "index.js.map" },
                                        { "element": "index.ts" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "nan" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "addon.cc" },
                                        { "element": "cpu_worker.cc" },
                                        { "element": "cpu_worker.h" },
                                        { "element": "process.cc" },
                                        { "element": "process.h" },
                                        { "element": "process_commandline.cc" },
                                        { "element": "process_commandline.h" },
                                        { "element": "process_worker.cc" },
                                        { "element": "process_worker.h" }
                                    ]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "tslint.json" },
                                {
                                    "element": "typings",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "windows-process-tree.d.ts" }]
                                }
                            ]
                        },
                        {
                            "element": "wordwrap",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.markdown" },
                                {
                                    "element": "example",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "center.js" }, { "element": "meat.js" }]
                                },
                                { "element": "index.js" },
                                { "element": "package.json" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "break.js" },
                                        { "element": "idleness.txt" },
                                        { "element": "wrap.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "worker-farm",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".editorconfig" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE.md" },
                                { "element": "README.md" },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "basic" }, { "element": "pi" }]
                                },
                                { "element": "index.d.ts" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "child" },
                                        { "element": "farm.js" },
                                        { "element": "fork.js" },
                                        { "element": "index.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "tests",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "child.js" },
                                        { "element": "debug.js" },
                                        { "element": "index.js" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "wrap-ansi",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "license" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "is-fullwidth-code-point" },
                                        { "element": "string-width" },
                                        { "element": "strip-ansi" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" }
                            ]
                        },
                        {
                            "element": "wrappy",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                { "element": "wrappy.js" }
                            ]
                        },
                        {
                            "element": "write",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": ".bin" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "ws",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": ".DS_Store" },
                                        { "element": "BufferUtil.js" },
                                        { "element": "Constants.js" },
                                        { "element": "ErrorCodes.js" },
                                        { "element": "EventTarget.js" },
                                        { "element": "Extensions.js" },
                                        { "element": "PerMessageDeflate.js" },
                                        { "element": "Receiver.js" },
                                        { "element": "Sender.js" },
                                        { "element": "Validation.js" },
                                        { "element": "WebSocket.js" },
                                        { "element": "WebSocketServer.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "xml",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                {
                                    "element": "examples",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "examples.js" },
                                        { "element": "server.js" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "escapeForXML.js" },
                                        { "element": "xml.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "xml.test.js" }]
                                }
                            ]
                        },
                        {
                            "element": "xml-name-validator",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "generated-parser.js" },
                                        { "element": "grammar.pegjs" },
                                        { "element": "xml-name-validator.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "xml2js",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "bom.js" },
                                        { "element": "builder.js" },
                                        { "element": "defaults.js" },
                                        { "element": "parser.js" },
                                        { "element": "processors.js" },
                                        { "element": "xml2js.js" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "xmlbuilder" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "xmlbuilder",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "Utility.js" },
                                        { "element": "XMLAttribute.js" },
                                        { "element": "XMLCData.js" },
                                        { "element": "XMLComment.js" },
                                        { "element": "XMLDTDAttList.js" },
                                        { "element": "XMLDTDElement.js" },
                                        { "element": "XMLDTDEntity.js" },
                                        { "element": "XMLDTDNotation.js" },
                                        { "element": "XMLDeclaration.js" },
                                        { "element": "XMLDocType.js" },
                                        { "element": "XMLDocument.js" },
                                        { "element": "XMLDocumentCB.js" },
                                        { "element": "XMLElement.js" },
                                        { "element": "XMLNode.js" },
                                        { "element": "XMLProcessingInstruction.js" },
                                        { "element": "XMLRaw.js" },
                                        { "element": "XMLStreamWriter.js" },
                                        { "element": "XMLStringWriter.js" },
                                        { "element": "XMLStringifier.js" },
                                        { "element": "XMLText.js" },
                                        { "element": "XMLWriterBase.js" },
                                        { "element": "index.js" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "xmldom",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".npmignore" },
                                { "element": ".travis.yml" },
                                { "element": "LICENSE" },
                                { "element": "__package__.js" },
                                { "element": "changelog" },
                                { "element": "component.json" },
                                { "element": "dom-parser.js" },
                                { "element": "dom.js" },
                                { "element": "package.json" },
                                { "element": "readme.md" },
                                { "element": "sax.js" }
                            ]
                        },
                        {
                            "element": "xmlhttprequest",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintrc" },
                                { "element": ".npmignore" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "XMLHttpRequest.js" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "xregexp",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "addons" },
                                        { "element": "index.js" },
                                        { "element": "xregexp.js" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "addons" },
                                        { "element": "index.js" },
                                        { "element": "xregexp.js" }
                                    ]
                                },
                                { "element": "xregexp-all.js" }
                            ]
                        },
                        {
                            "element": "xtend",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".jshintrc" },
                                { "element": ".npmignore" },
                                { "element": "LICENCE" },
                                { "element": "Makefile" },
                                { "element": "README.md" },
                                { "element": "immutable.js" },
                                { "element": "mutable.js" },
                                { "element": "package.json" },
                                { "element": "test.js" }
                            ]
                        },
                        {
                            "element": "xterm",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "css",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "xterm.css" }]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "xterm.js" },
                                        { "element": "xterm.js.map" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "AccessibilityManager.ts" },
                                        { "element": "Clipboard.ts" },
                                        { "element": "CompositionHelper.ts" },
                                        { "element": "InputHandler.ts" },
                                        { "element": "Linkifier.ts" },
                                        { "element": "MouseZoneManager.ts" },
                                        { "element": "SoundManager.ts" },
                                        { "element": "Terminal.ts" },
                                        { "element": "Types.d.ts" },
                                        { "element": "Viewport.ts" },
                                        { "element": "WindowsMode.ts" },
                                        { "element": "browser" },
                                        { "element": "common" },
                                        { "element": "public" },
                                        { "element": "renderer" },
                                        { "element": "tsconfig-base.json" },
                                        { "element": "tsconfig-library-base.json" },
                                        { "element": "tsconfig.json" }
                                    ]
                                },
                                { "element": "tsconfig.all.json" },
                                {
                                    "element": "typings",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "xterm.d.ts" }]
                                }
                            ]
                        },
                        {
                            "element": "xterm-addon-search",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "xterm-addon-search.js" },
                                        { "element": "xterm-addon-search.js.map" }
                                    ]
                                },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "SearchAddon.js" },
                                        { "element": "SearchAddon.js.map" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "SearchAddon.ts" }]
                                },
                                {
                                    "element": "typings",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "xterm-addon-search.d.ts" }]
                                }
                            ]
                        },
                        {
                            "element": "xterm-addon-web-links",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "xterm-addon-web-links.js" },
                                        { "element": "xterm-addon-web-links.js.map" }
                                    ]
                                },
                                {
                                    "element": "out",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "WebLinksAddon.api.js.map" },
                                        { "element": "WebLinksAddon.js" },
                                        { "element": "WebLinksAddon.js.map" }
                                    ]
                                },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "WebLinksAddon.ts" }]
                                },
                                {
                                    "element": "typings",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "xterm-addon-web-links.d.ts" }]
                                },
                                { "element": "webpack.config.js" }
                            ]
                        },
                        {
                            "element": "y18n",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "yallist",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "iterator.js" },
                                { "element": "package.json" },
                                { "element": "yallist.js" }
                            ]
                        },
                        {
                            "element": "yargs",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "completion.sh.hbs" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "apply-extends.js" },
                                        { "element": "argsert.js" },
                                        { "element": "command.js" },
                                        { "element": "completion.js" },
                                        { "element": "levenshtein.js" },
                                        { "element": "obj-filter.js" },
                                        { "element": "usage.js" },
                                        { "element": "validation.js" },
                                        { "element": "yerror.js" }
                                    ]
                                },
                                {
                                    "element": "locales",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "be.json" },
                                        { "element": "de.json" },
                                        { "element": "en.json" },
                                        { "element": "es.json" },
                                        { "element": "fr.json" },
                                        { "element": "hi.json" },
                                        { "element": "hu.json" },
                                        { "element": "id.json" },
                                        { "element": "it.json" },
                                        { "element": "ja.json" },
                                        { "element": "ko.json" },
                                        { "element": "nb.json" },
                                        { "element": "nl.json" },
                                        { "element": "nn.json" },
                                        { "element": "pirate.json" },
                                        { "element": "pl.json" },
                                        { "element": "pt.json" },
                                        { "element": "pt_BR.json" },
                                        { "element": "ru.json" },
                                        { "element": "th.json" },
                                        { "element": "tr.json" },
                                        { "element": "zh_CN.json" },
                                        { "element": "zh_TW.json" }
                                    ]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "camelcase" },
                                        { "element": "yargs-parser" }
                                    ]
                                },
                                { "element": "package.json" },
                                { "element": "yargs.js" }
                            ]
                        },
                        {
                            "element": "yargs-parser",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE.txt" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "tokenize-arg-string.js" }]
                                },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "camelcase" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "yauzl",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "fd-slicer" }]
                                },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "yazl",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "LICENSE" },
                                { "element": "README.md" },
                                { "element": "index.js" },
                                { "element": "package.json" }
                            ]
                        },
                        {
                            "element": "zone.js",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "CHANGELOG.md" },
                                { "element": "LICENSE" },
                                { "element": "LICENSE.wrapped" },
                                { "element": "README.md" },
                                {
                                    "element": "dist",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "async-test.js" },
                                        { "element": "fake-async-test.js" },
                                        { "element": "jasmine-patch.js" },
                                        { "element": "jasmine-patch.min.js" },
                                        { "element": "long-stack-trace-zone.js" },
                                        { "element": "long-stack-trace-zone.min.js" },
                                        { "element": "mocha-patch.js" },
                                        { "element": "mocha-patch.min.js" },
                                        { "element": "proxy.js" },
                                        { "element": "proxy.min.js" },
                                        { "element": "sync-test.js" },
                                        { "element": "task-tracking.js" },
                                        { "element": "task-tracking.min.js" },
                                        { "element": "web-api.js" },
                                        { "element": "webapis-media-query.js" },
                                        { "element": "webapis-notification.js" },
                                        { "element": "wtf.js" },
                                        { "element": "wtf.min.js" },
                                        { "element": "zone-node.js" },
                                        { "element": "zone.js" },
                                        { "element": "zone.js.d.ts" },
                                        { "element": "zone.min.js" }
                                    ]
                                },
                                {
                                    "element": "lib",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "browser" },
                                        { "element": "common" },
                                        { "element": "jasmine" },
                                        { "element": "mocha" },
                                        { "element": "node" },
                                        { "element": "zone-spec" },
                                        { "element": "zone.ts" }
                                    ]
                                },
                                { "element": "package.json" }
                            ]
                        }
                    ]
                },
                {
                    "element": "out",
                    "collapsible": true,
                    "collapsed": false,
                    "children": [
                        { "element": "bootstrap-amd.js" },
                        { "element": "bootstrap-fork.js" },
                        { "element": "bootstrap-window.js" },
                        { "element": "bootstrap.js" },
                        { "element": "buildfile.js" },
                        { "element": "cli.js" },
                        { "element": "main.js" },
                        { "element": "paths.js" },
                        { "element": "tsconfig.base.json" },
                        { "element": "tsconfig.json" },
                        { "element": "tsconfig.monaco.json" },
                        {
                            "element": "typings",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [{ "element": "cgmanifest.json" }]
                        },
                        {
                            "element": "vs",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": "base",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "browser" },
                                        { "element": "common" },
                                        { "element": "node" },
                                        { "element": "parts" },
                                        { "element": "test" },
                                        { "element": "worker" }
                                    ]
                                },
                                { "element": "buildunit.json" },
                                {
                                    "element": "code",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "browser" },
                                        { "element": "buildfile.js" },
                                        { "element": "electron-browser" },
                                        { "element": "electron-main" },
                                        { "element": "node" },
                                        { "element": "test" }
                                    ]
                                },
                                { "element": "css.build.js" },
                                { "element": "css.js" },
                                {
                                    "element": "editor",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "browser" },
                                        { "element": "common" },
                                        { "element": "contrib" },
                                        { "element": "editor.all.js" },
                                        { "element": "editor.all.js.map" },
                                        { "element": "editor.api.js" },
                                        { "element": "editor.api.js.map" },
                                        { "element": "editor.main.js" },
                                        { "element": "editor.main.js.map" },
                                        { "element": "editor.worker.js" },
                                        { "element": "editor.worker.js.map" },
                                        { "element": "standalone" },
                                        { "element": "test" }
                                    ]
                                },
                                { "element": "loader.js" },
                                { "element": "nls.build.js" },
                                { "element": "nls.js" },
                                { "element": "nls.mock.js" },
                                { "element": "nls.mock.js.map" },
                                {
                                    "element": "platform",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "accessibility" },
                                        { "element": "actions" },
                                        { "element": "backup" },
                                        { "element": "browser" },
                                        { "element": "clipboard" },
                                        { "element": "commands" },
                                        { "element": "configuration" },
                                        { "element": "contextkey" },
                                        { "element": "contextview" },
                                        { "element": "credentials" },
                                        { "element": "diagnostics" },
                                        { "element": "dialogs" },
                                        { "element": "download" },
                                        { "element": "driver" },
                                        { "element": "editor" },
                                        { "element": "environment" },
                                        { "element": "extensionManagement" },
                                        { "element": "extensions" },
                                        { "element": "files" },
                                        { "element": "history" },
                                        { "element": "instantiation" },
                                        { "element": "ipc" },
                                        { "element": "issue" },
                                        { "element": "jsonschemas" },
                                        { "element": "keybinding" },
                                        { "element": "label" },
                                        { "element": "launch" },
                                        { "element": "layout" },
                                        { "element": "lifecycle" },
                                        { "element": "list" },
                                        { "element": "localizations" },
                                        { "element": "log" },
                                        { "element": "markers" },
                                        { "element": "menubar" },
                                        { "element": "notification" },
                                        { "element": "opener" },
                                        { "element": "product" },
                                        { "element": "progress" },
                                        { "element": "quickOpen" },
                                        { "element": "quickinput" },
                                        { "element": "registry" },
                                        { "element": "remote" },
                                        { "element": "request" },
                                        { "element": "severityIcon" },
                                        { "element": "sign" },
                                        { "element": "state" },
                                        { "element": "statusbar" },
                                        { "element": "storage" },
                                        { "element": "telemetry" },
                                        { "element": "theme" },
                                        { "element": "update" },
                                        { "element": "url" },
                                        { "element": "windows" },
                                        { "element": "workspace" },
                                        { "element": "workspaces" }
                                    ]
                                },
                                {
                                    "element": "workbench",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "api" },
                                        { "element": "browser" },
                                        { "element": "buildfile.js" },
                                        { "element": "common" },
                                        { "element": "contrib" },
                                        { "element": "electron-browser" },
                                        { "element": "services" },
                                        { "element": "test" },
                                        { "element": "workbench.main.css" },
                                        { "element": "workbench.main.js" },
                                        { "element": "workbench.main.js.map" },
                                        { "element": "workbench.main.nls.js" },
                                        { "element": "workbench.web.api.js" },
                                        { "element": "workbench.web.api.js.map" },
                                        { "element": "workbench.web.main.css" },
                                        { "element": "workbench.web.main.js" },
                                        { "element": "workbench.web.main.js.map" },
                                        { "element": "workbench.web.main.nls.js" }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                { "element": "package.json" },
                { "element": "product.json" },
                {
                    "element": "remote",
                    "collapsible": true,
                    "collapsed": false,
                    "children": [
                        { "element": ".yarnrc" },
                        { "element": "package.json" },
                        { "element": "yarn.lock" }
                    ]
                },
                {
                    "element": "resources",
                    "collapsible": true,
                    "collapsed": false,
                    "children": [
                        {
                            "element": "completions",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": "bash",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "code" }]
                                },
                                {
                                    "element": "zsh",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "_code" }]
                                }
                            ]
                        },
                        {
                            "element": "darwin",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "bat.icns" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "code.sh" }]
                                },
                                { "element": "bower.icns" },
                                { "element": "c.icns" },
                                { "element": "code.icns" },
                                { "element": "config.icns" },
                                { "element": "cpp.icns" },
                                { "element": "csharp.icns" },
                                { "element": "css.icns" },
                                { "element": "default.icns" },
                                { "element": "go.icns" },
                                { "element": "html.icns" },
                                { "element": "jade.icns" },
                                { "element": "java.icns" },
                                { "element": "javascript.icns" },
                                { "element": "json.icns" },
                                { "element": "less.icns" },
                                { "element": "markdown.icns" },
                                { "element": "php.icns" },
                                { "element": "powershell.icns" },
                                { "element": "python.icns" },
                                { "element": "react.icns" },
                                { "element": "ruby.icns" },
                                { "element": "sass.icns" },
                                { "element": "shell.icns" },
                                { "element": "sql.icns" },
                                { "element": "typescript.icns" },
                                { "element": "vue.icns" },
                                { "element": "xml.icns" },
                                { "element": "yaml.icns" }
                            ]
                        },
                        {
                            "element": "linux",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "code.sh" }]
                                },
                                { "element": "code-url-handler.desktop" },
                                { "element": "code.appdata.xml" },
                                { "element": "code.desktop" },
                                { "element": "code.png" },
                                {
                                    "element": "debian",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "control.template" },
                                        { "element": "postinst.template" },
                                        { "element": "postrm.template" },
                                        { "element": "prerm.template" }
                                    ]
                                },
                                {
                                    "element": "rpm",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "code.spec.template" },
                                        { "element": "code.xpm" },
                                        { "element": "dependencies.json" }
                                    ]
                                },
                                {
                                    "element": "snap",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "electron-launch" },
                                        { "element": "snapcraft.yaml" }
                                    ]
                                }
                            ]
                        },
                        {
                            "element": "win32",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "VisualElementsManifest.xml" },
                                {
                                    "element": "bin",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "code.cmd" }, { "element": "code.sh" }]
                                },
                                { "element": "bower.ico" },
                                { "element": "c.ico" },
                                { "element": "code.ico" },
                                { "element": "code_150x150.png" },
                                { "element": "code_70x70.png" },
                                { "element": "config.ico" },
                                { "element": "cpp.ico" },
                                { "element": "csharp.ico" },
                                { "element": "css.ico" },
                                { "element": "default.ico" },
                                { "element": "go.ico" },
                                { "element": "html.ico" },
                                { "element": "inno-big.bmp" },
                                { "element": "inno-small.bmp" },
                                { "element": "jade.ico" },
                                { "element": "java.ico" },
                                { "element": "javascript.ico" },
                                { "element": "json.ico" },
                                { "element": "less.ico" },
                                { "element": "markdown.ico" },
                                { "element": "php.ico" },
                                { "element": "powershell.ico" },
                                { "element": "python.ico" },
                                { "element": "react.ico" },
                                { "element": "ruby.ico" },
                                { "element": "sass.ico" },
                                { "element": "shell.ico" },
                                { "element": "sql.ico" },
                                { "element": "typescript.ico" },
                                { "element": "vue.ico" },
                                { "element": "xml.ico" },
                                { "element": "yaml.ico" }
                            ]
                        }
                    ]
                },
                {
                    "element": "scripts",
                    "collapsible": true,
                    "collapsed": false,
                    "children": [
                        { "element": "code-cli.bat" },
                        { "element": "code-cli.sh" },
                        { "element": "code.bat" },
                        { "element": "code.sh" },
                        { "element": "generate-definitelytyped.sh" },
                        { "element": "node-electron.bat" },
                        { "element": "node-electron.sh" },
                        { "element": "npm.bat" },
                        { "element": "npm.sh" },
                        { "element": "test-integration.bat" },
                        { "element": "test-integration.sh" },
                        { "element": "test-release.bat" },
                        { "element": "test-release.sh" },
                        { "element": "test.bat" },
                        { "element": "test.sh" }
                    ]
                },
                {
                    "element": "src",
                    "collapsible": true,
                    "collapsed": false,
                    "children": [
                        { "element": ".eslintrc" },
                        { "element": "bootstrap-amd.js" },
                        { "element": "bootstrap-fork.js" },
                        { "element": "bootstrap-window.js" },
                        { "element": "bootstrap.js" },
                        { "element": "buildfile.js" },
                        { "element": "cli.js" },
                        { "element": "main.js" },
                        { "element": "paths.js" },
                        { "element": "tsconfig.base.json" },
                        { "element": "tsconfig.json" },
                        { "element": "tsconfig.monaco.json" },
                        {
                            "element": "typings",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "applicationInsights.d.ts" },
                                { "element": "cgmanifest.json" },
                                { "element": "chokidar.d.ts" },
                                { "element": "electron.d.ts" },
                                { "element": "es2015-proxy.d.ts" },
                                { "element": "es6-promise.d.ts" },
                                { "element": "getmac.d.ts" },
                                { "element": "graceful-fs.d.ts" },
                                { "element": "http-proxy-agent.d.ts" },
                                { "element": "https-proxy-agent.d.ts" },
                                { "element": "iconv-lite.d.ts" },
                                { "element": "jschardet.d.ts" },
                                { "element": "lib.array-ext.d.ts" },
                                { "element": "lib.es2018.promise.d.ts" },
                                { "element": "lib.ie11_safe_es6.d.ts" },
                                { "element": "lib.webworker.importscripts.d.ts" },
                                { "element": "native-is-elevated.d.ts" },
                                { "element": "native-keymap.d.ts" },
                                { "element": "native-watchdog.d.ts" },
                                { "element": "node-pty.d.ts" },
                                { "element": "node.processEnv-ext.d.ts" },
                                { "element": "nsfw.d.ts" },
                                { "element": "onigasm-umd.d.ts" },
                                { "element": "require-monaco.d.ts" },
                                { "element": "require.d.ts" },
                                { "element": "spdlog.d.ts" },
                                { "element": "sudo-prompt.d.ts" },
                                { "element": "thenable.d.ts" },
                                { "element": "v8-inspect-profiler.d.ts" },
                                { "element": "vscode-proxy-agent.d.ts" },
                                { "element": "vscode-ripgrep.d.ts" },
                                { "element": "vscode-sqlite3.d.ts" },
                                { "element": "vscode-textmate.d.ts" },
                                { "element": "vscode-windows-ca-certs.d.ts" },
                                { "element": "vscode-windows-registry.d.ts" },
                                { "element": "vsda.d.ts" },
                                { "element": "windows-foreground-love.d.ts" },
                                { "element": "windows-mutex.d.ts" },
                                { "element": "windows-process-tree.d.ts" },
                                { "element": "xterm-addon-search.d.ts" },
                                { "element": "xterm-addon-web-links.d.ts" },
                                { "element": "xterm.d.ts" },
                                { "element": "yauzl.d.ts" },
                                { "element": "yazl.d.ts" }
                            ]
                        },
                        {
                            "element": "vs",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": "base",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "browser" },
                                        { "element": "common" },
                                        { "element": "node" },
                                        { "element": "parts" },
                                        { "element": "test" },
                                        { "element": "worker" }
                                    ]
                                },
                                { "element": "buildunit.json" },
                                {
                                    "element": "code",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "browser" },
                                        { "element": "buildfile.js" },
                                        { "element": "electron-browser" },
                                        { "element": "electron-main" },
                                        { "element": "node" },
                                        { "element": "test" }
                                    ]
                                },
                                { "element": "css.build.js" },
                                { "element": "css.d.ts" },
                                { "element": "css.js" },
                                {
                                    "element": "editor",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "browser" },
                                        { "element": "common" },
                                        { "element": "contrib" },
                                        { "element": "editor.all.ts" },
                                        { "element": "editor.api.ts" },
                                        { "element": "editor.main.ts" },
                                        { "element": "editor.worker.ts" },
                                        { "element": "standalone" },
                                        { "element": "test" }
                                    ]
                                },
                                { "element": "loader.js" },
                                { "element": "monaco.d.ts" },
                                { "element": "nls.build.js" },
                                { "element": "nls.d.ts" },
                                { "element": "nls.js" },
                                { "element": "nls.mock.ts" },
                                {
                                    "element": "platform",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "accessibility" },
                                        { "element": "actions" },
                                        { "element": "backup" },
                                        { "element": "browser" },
                                        { "element": "clipboard" },
                                        { "element": "commands" },
                                        { "element": "configuration" },
                                        { "element": "contextkey" },
                                        { "element": "contextview" },
                                        { "element": "credentials" },
                                        { "element": "diagnostics" },
                                        { "element": "dialogs" },
                                        { "element": "download" },
                                        { "element": "driver" },
                                        { "element": "editor" },
                                        { "element": "environment" },
                                        { "element": "extensionManagement" },
                                        { "element": "extensions" },
                                        { "element": "files" },
                                        { "element": "history" },
                                        { "element": "instantiation" },
                                        { "element": "ipc" },
                                        { "element": "issue" },
                                        { "element": "jsonschemas" },
                                        { "element": "keybinding" },
                                        { "element": "label" },
                                        { "element": "launch" },
                                        { "element": "layout" },
                                        { "element": "lifecycle" },
                                        { "element": "list" },
                                        { "element": "localizations" },
                                        { "element": "log" },
                                        { "element": "markers" },
                                        { "element": "menubar" },
                                        { "element": "notification" },
                                        { "element": "opener" },
                                        { "element": "product" },
                                        { "element": "progress" },
                                        { "element": "quickOpen" },
                                        { "element": "quickinput" },
                                        { "element": "registry" },
                                        { "element": "remote" },
                                        { "element": "request" },
                                        { "element": "severityIcon" },
                                        { "element": "sign" },
                                        { "element": "state" },
                                        { "element": "statusbar" },
                                        { "element": "storage" },
                                        { "element": "telemetry" },
                                        { "element": "theme" },
                                        { "element": "update" },
                                        { "element": "url" },
                                        { "element": "windows" },
                                        { "element": "workspace" },
                                        { "element": "workspaces" }
                                    ]
                                },
                                { "element": "vscode.d.ts" },
                                { "element": "vscode.proposed.d.ts" },
                                {
                                    "element": "workbench",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "api" },
                                        { "element": "browser" },
                                        { "element": "buildfile.js" },
                                        { "element": "common" },
                                        { "element": "contrib" },
                                        { "element": "electron-browser" },
                                        { "element": "services" },
                                        { "element": "test" },
                                        { "element": "workbench.main.css" },
                                        { "element": "workbench.main.nls.js" },
                                        { "element": "workbench.main.ts" },
                                        { "element": "workbench.web.api.ts" },
                                        { "element": "workbench.web.main.css" },
                                        { "element": "workbench.web.main.nls.js" },
                                        { "element": "workbench.web.main.ts" }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "element": "test",
                    "collapsible": true,
                    "collapsed": false,
                    "children": [
                        { "element": "README.md" },
                        { "element": "all.js" },
                        { "element": "assert.js" },
                        { "element": "browser.js" },
                        { "element": "cgmanifest.json" },
                        { "element": "css.mock.js" },
                        {
                            "element": "electron",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": "index.js" },
                                { "element": "renderer.html" },
                                { "element": "renderer.js" }
                            ]
                        },
                        { "element": "index.html" },
                        { "element": "mocha.opts" },
                        {
                            "element": "smoke",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                { "element": ".gitignore" },
                                { "element": "Audit.md" },
                                { "element": "README.md" },
                                { "element": "package.json" },
                                {
                                    "element": "src",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "application.ts" },
                                        { "element": "areas" },
                                        { "element": "logger.ts" },
                                        { "element": "main.ts" },
                                        { "element": "utils.ts" },
                                        { "element": "vscode" }
                                    ]
                                },
                                {
                                    "element": "test",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.js" }]
                                },
                                {
                                    "element": "tools",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "copy-driver-definition.js" }]
                                },
                                { "element": "tsconfig.json" },
                                { "element": "yarn.lock" }
                            ]
                        },
                        {
                            "element": "tree",
                            "collapsible": true,
                            "collapsed": false,
                            "children": [
                                {
                                    "element": "node_modules",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [
                                        { "element": "accepts" },
                                        { "element": "any-promise" },
                                        { "element": "cache-content-type" },
                                        { "element": "co" },
                                        { "element": "content-disposition" },
                                        { "element": "content-type" },
                                        { "element": "cookies" },
                                        { "element": "debug" },
                                        { "element": "deep-equal" },
                                        { "element": "delegates" },
                                        { "element": "depd" },
                                        { "element": "destroy" },
                                        { "element": "ee-first" },
                                        { "element": "error-inject" },
                                        { "element": "escape-html" },
                                        { "element": "fresh" },
                                        { "element": "http-assert" },
                                        { "element": "http-errors" },
                                        { "element": "inherits" },
                                        { "element": "is-generator-function" },
                                        { "element": "isarray" },
                                        { "element": "keygrip" },
                                        { "element": "koa" },
                                        { "element": "koa-compose" },
                                        { "element": "koa-convert" },
                                        { "element": "koa-is-json" },
                                        { "element": "koa-mount" },
                                        { "element": "koa-route" },
                                        { "element": "koa-send" },
                                        { "element": "koa-static" },
                                        { "element": "media-typer" },
                                        { "element": "methods" },
                                        { "element": "mime-db" },
                                        { "element": "mime-types" },
                                        { "element": "ms" },
                                        { "element": "mz" },
                                        { "element": "negotiator" },
                                        { "element": "object-assign" },
                                        { "element": "on-finished" },
                                        { "element": "only" },
                                        { "element": "parseurl" },
                                        { "element": "path-is-absolute" },
                                        { "element": "path-to-regexp" },
                                        { "element": "resolve-path" },
                                        { "element": "safe-buffer" },
                                        { "element": "setprototypeof" },
                                        { "element": "statuses" },
                                        { "element": "thenify" },
                                        { "element": "thenify-all" },
                                        { "element": "toidentifier" },
                                        { "element": "type-is" },
                                        { "element": "vary" },
                                        { "element": "ylru" }
                                    ]
                                },
                                { "element": "package-lock.json" },
                                { "element": "package.json" },
                                {
                                    "element": "public",
                                    "collapsible": true,
                                    "collapsed": false,
                                    "children": [{ "element": "index.html" }]
                                },
                                { "element": "server.js" },
                                { "element": "yarn.lock" }
                            ]
                        }
                    ]
                },
                { "element": "tsfmt.json" },
                { "element": "tslint.json" },
                { "element": "yarn.lock" }
            ]
        };
    };
    DataService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [])
    ], DataService);
    return DataService;
}());



/***/ }),

/***/ "./src/app/vsc-tree.ts":
/*!*****************************!*\
  !*** ./src/app/vsc-tree.ts ***!
  \*****************************/
/*! exports provided: VscTree */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VscTree", function() { return VscTree; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _data_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data.service */ "./src/app/data.service.ts");
/* harmony import */ var _vs_base_browser_ui_tree_indexTree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vs/base/browser/ui/tree/indexTree */ "./src/vs/base/browser/ui/tree/indexTree.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var VscTree = /** @class */ (function () {
    function VscTree(dataService) {
        this.dataService = dataService;
        this.delegate = {
            getHeight: function (elm) {
                // console.log(elm);
                return 22;
            },
            getTemplateId: function () {
                return "template";
            },
            hasDynamicHeight: function () {
                return true;
            }
        };
        this.renderer = {
            templateId: "template",
            renderTemplate: function (container) {
                return container;
            },
            renderElement: function (element, index, container) {
                container.innerHTML = element.element;
            },
            disposeElement: function () { },
            disposeTemplate: function () { }
        };
    }
    VscTree.prototype.ngAfterViewInit = function () {
        // console.log(this.dataService.getData());
        console.log({ IndexTree: _vs_base_browser_ui_tree_indexTree__WEBPACK_IMPORTED_MODULE_2__["IndexTree"] });
        console.log({ container: this.container });
        var tree = new _vs_base_browser_ui_tree_indexTree__WEBPACK_IMPORTED_MODULE_2__["IndexTree"](this.container.nativeElement, this.delegate, [this.renderer], null, {
            setRowLineHeight: false
        });
        tree.splice([0], 0, [this.dataService.getData()]);
    };
    VscTree.ctorParameters = function () { return [
        { type: _data_service__WEBPACK_IMPORTED_MODULE_1__["DataService"] }
    ]; };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])("container", { static: true }),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
    ], VscTree.prototype, "container", void 0);
    VscTree = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: "vsc-tree",
            template: "\n    <div class=\"container\" #container></div>\n  ",
            styles: ["\n      .container {\n        width: 400px;\n        height: 600px;\n        border: 1px solid black;\n      }\n\n      .monaco-scrollable-element > .scrollbar > .slider {\n        background: rgba(100, 100, 100, 0.4);\n      }\n\n      .tl-contents {\n        flex: 1;\n      }\n\n      .monaco-list-row:hover:not(.selected):not(.focused) {\n        background: gainsboro !important;\n      }\n    ", __webpack_require__(/*! ../vs/base/browser/ui/list/list.css */ "./src/vs/base/browser/ui/list/list.css"), __webpack_require__(/*! ../vs/base/browser/ui/scrollbar/media/scrollbars.css */ "./src/vs/base/browser/ui/scrollbar/media/scrollbars.css"), __webpack_require__(/*! ../vs/base/browser/ui/tree/media/tree.css */ "./src/vs/base/browser/ui/tree/media/tree.css"), __webpack_require__(/*! ../vs/base/browser/ui/tree/media/panelviewlet.css */ "./src/vs/base/browser/ui/tree/media/panelviewlet.css")]
        }),
        __metadata("design:paramtypes", [_data_service__WEBPACK_IMPORTED_MODULE_1__["DataService"]])
    ], VscTree);
    return VscTree;
}());



/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! exports provided: AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var _polyfills__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polyfills */ "./src/polyfills.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/core */ "./node_modules/@angular/material/esm5/core.es5.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "./node_modules/@angular/platform-browser-dynamic/fesm5/platform-browser-dynamic.js");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/fesm5/animations.js");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./material-module */ "./src/material-module.ts");
/* harmony import */ var _app_cdk_virtual_scroll__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./app/cdk-virtual-scroll */ "./src/app/cdk-virtual-scroll.ts");
/* harmony import */ var _app_vsc_tree__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./app/vsc-tree */ "./src/app/vsc-tree.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};











var AppModule = /** @class */ (function () {
    function AppModule() {
    }
    AppModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
            imports: [
                _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__["BrowserModule"],
                _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_7__["BrowserAnimationsModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
                _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClientModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_8__["DemoMaterialModule"],
                _angular_material_core__WEBPACK_IMPORTED_MODULE_4__["MatNativeDateModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ReactiveFormsModule"]
            ],
            // entryComponents: [CdkVirtualScrollOverviewExample, VscTree],
            declarations: [_app_cdk_virtual_scroll__WEBPACK_IMPORTED_MODULE_9__["CdkVirtualScrollOverviewExample"], _app_vsc_tree__WEBPACK_IMPORTED_MODULE_10__["VscTree"]],
            bootstrap: [_app_cdk_virtual_scroll__WEBPACK_IMPORTED_MODULE_9__["CdkVirtualScrollOverviewExample"], _app_vsc_tree__WEBPACK_IMPORTED_MODULE_10__["VscTree"]],
            providers: []
        })
    ], AppModule);
    return AppModule;
}());

Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_6__["platformBrowserDynamic"])().bootstrapModule(AppModule);


/***/ }),

/***/ "./src/material-module.ts":
/*!********************************!*\
  !*** ./src/material-module.ts ***!
  \********************************/
/*! exports provided: DemoMaterialModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DemoMaterialModule", function() { return DemoMaterialModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/cdk/a11y */ "./node_modules/@angular/cdk/esm5/a11y.es5.js");
/* harmony import */ var _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/cdk/drag-drop */ "./node_modules/@angular/cdk/esm5/drag-drop.es5.js");
/* harmony import */ var _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/cdk/portal */ "./node_modules/@angular/cdk/esm5/portal.es5.js");
/* harmony import */ var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/cdk/scrolling */ "./node_modules/@angular/cdk/esm5/scrolling.es5.js");
/* harmony import */ var _angular_cdk_stepper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/cdk/stepper */ "./node_modules/@angular/cdk/esm5/stepper.es5.js");
/* harmony import */ var _angular_cdk_table__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/table */ "./node_modules/@angular/cdk/esm5/table.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_material_autocomplete__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/autocomplete */ "./node_modules/@angular/material/esm5/autocomplete.es5.js");
/* harmony import */ var _angular_material_badge__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/badge */ "./node_modules/@angular/material/esm5/badge.es5.js");
/* harmony import */ var _angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/bottom-sheet */ "./node_modules/@angular/material/esm5/bottom-sheet.es5.js");
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/material/button */ "./node_modules/@angular/material/esm5/button.es5.js");
/* harmony import */ var _angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/material/button-toggle */ "./node_modules/@angular/material/esm5/button-toggle.es5.js");
/* harmony import */ var _angular_material_card__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/material/card */ "./node_modules/@angular/material/esm5/card.es5.js");
/* harmony import */ var _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/material/checkbox */ "./node_modules/@angular/material/esm5/checkbox.es5.js");
/* harmony import */ var _angular_material_chips__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/material/chips */ "./node_modules/@angular/material/esm5/chips.es5.js");
/* harmony import */ var _angular_material_stepper__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/material/stepper */ "./node_modules/@angular/material/esm5/stepper.es5.js");
/* harmony import */ var _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/material/datepicker */ "./node_modules/@angular/material/esm5/datepicker.es5.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _angular_material_divider__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/material/divider */ "./node_modules/@angular/material/esm5/divider.es5.js");
/* harmony import */ var _angular_material_expansion__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/material/expansion */ "./node_modules/@angular/material/esm5/expansion.es5.js");
/* harmony import */ var _angular_material_grid_list__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/material/grid-list */ "./node_modules/@angular/material/esm5/grid-list.es5.js");
/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/material/icon */ "./node_modules/@angular/material/esm5/icon.es5.js");
/* harmony import */ var _angular_material_input__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/material/input */ "./node_modules/@angular/material/esm5/input.es5.js");
/* harmony import */ var _angular_material_list__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @angular/material/list */ "./node_modules/@angular/material/esm5/list.es5.js");
/* harmony import */ var _angular_material_menu__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @angular/material/menu */ "./node_modules/@angular/material/esm5/menu.es5.js");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @angular/material/core */ "./node_modules/@angular/material/esm5/core.es5.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/esm5/paginator.es5.js");
/* harmony import */ var _angular_material_progress_bar__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @angular/material/progress-bar */ "./node_modules/@angular/material/esm5/progress-bar.es5.js");
/* harmony import */ var _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @angular/material/progress-spinner */ "./node_modules/@angular/material/esm5/progress-spinner.es5.js");
/* harmony import */ var _angular_material_radio__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @angular/material/radio */ "./node_modules/@angular/material/esm5/radio.es5.js");
/* harmony import */ var _angular_material_select__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @angular/material/select */ "./node_modules/@angular/material/esm5/select.es5.js");
/* harmony import */ var _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @angular/material/sidenav */ "./node_modules/@angular/material/esm5/sidenav.es5.js");
/* harmony import */ var _angular_material_slider__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @angular/material/slider */ "./node_modules/@angular/material/esm5/slider.es5.js");
/* harmony import */ var _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @angular/material/slide-toggle */ "./node_modules/@angular/material/esm5/slide-toggle.es5.js");
/* harmony import */ var _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @angular/material/snack-bar */ "./node_modules/@angular/material/esm5/snack-bar.es5.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/esm5/sort.es5.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/esm5/table.es5.js");
/* harmony import */ var _angular_material_tabs__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! @angular/material/tabs */ "./node_modules/@angular/material/esm5/tabs.es5.js");
/* harmony import */ var _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! @angular/material/toolbar */ "./node_modules/@angular/material/esm5/toolbar.es5.js");
/* harmony import */ var _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! @angular/material/tooltip */ "./node_modules/@angular/material/esm5/tooltip.es5.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};










































var DemoMaterialModule = /** @class */ (function () {
    function DemoMaterialModule() {
    }
    DemoMaterialModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            exports: [
                _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_1__["A11yModule"],
                _angular_cdk_stepper__WEBPACK_IMPORTED_MODULE_5__["CdkStepperModule"],
                _angular_cdk_table__WEBPACK_IMPORTED_MODULE_6__["CdkTableModule"],
                _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__["CdkTreeModule"],
                _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_2__["DragDropModule"],
                _angular_material_autocomplete__WEBPACK_IMPORTED_MODULE_8__["MatAutocompleteModule"],
                _angular_material_badge__WEBPACK_IMPORTED_MODULE_9__["MatBadgeModule"],
                _angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_10__["MatBottomSheetModule"],
                _angular_material_button__WEBPACK_IMPORTED_MODULE_11__["MatButtonModule"],
                _angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_12__["MatButtonToggleModule"],
                _angular_material_card__WEBPACK_IMPORTED_MODULE_13__["MatCardModule"],
                _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_14__["MatCheckboxModule"],
                _angular_material_chips__WEBPACK_IMPORTED_MODULE_15__["MatChipsModule"],
                _angular_material_stepper__WEBPACK_IMPORTED_MODULE_16__["MatStepperModule"],
                _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_17__["MatDatepickerModule"],
                _angular_material_dialog__WEBPACK_IMPORTED_MODULE_18__["MatDialogModule"],
                _angular_material_divider__WEBPACK_IMPORTED_MODULE_19__["MatDividerModule"],
                _angular_material_expansion__WEBPACK_IMPORTED_MODULE_20__["MatExpansionModule"],
                _angular_material_grid_list__WEBPACK_IMPORTED_MODULE_21__["MatGridListModule"],
                _angular_material_icon__WEBPACK_IMPORTED_MODULE_22__["MatIconModule"],
                _angular_material_input__WEBPACK_IMPORTED_MODULE_23__["MatInputModule"],
                _angular_material_list__WEBPACK_IMPORTED_MODULE_24__["MatListModule"],
                _angular_material_menu__WEBPACK_IMPORTED_MODULE_25__["MatMenuModule"],
                _angular_material_core__WEBPACK_IMPORTED_MODULE_26__["MatNativeDateModule"],
                _angular_material_paginator__WEBPACK_IMPORTED_MODULE_27__["MatPaginatorModule"],
                _angular_material_progress_bar__WEBPACK_IMPORTED_MODULE_28__["MatProgressBarModule"],
                _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_29__["MatProgressSpinnerModule"],
                _angular_material_radio__WEBPACK_IMPORTED_MODULE_30__["MatRadioModule"],
                _angular_material_core__WEBPACK_IMPORTED_MODULE_26__["MatRippleModule"],
                _angular_material_select__WEBPACK_IMPORTED_MODULE_31__["MatSelectModule"],
                _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_32__["MatSidenavModule"],
                _angular_material_slider__WEBPACK_IMPORTED_MODULE_33__["MatSliderModule"],
                _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_34__["MatSlideToggleModule"],
                _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_35__["MatSnackBarModule"],
                _angular_material_sort__WEBPACK_IMPORTED_MODULE_36__["MatSortModule"],
                _angular_material_table__WEBPACK_IMPORTED_MODULE_37__["MatTableModule"],
                _angular_material_tabs__WEBPACK_IMPORTED_MODULE_38__["MatTabsModule"],
                _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_39__["MatToolbarModule"],
                _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_40__["MatTooltipModule"],
                _angular_material_tree__WEBPACK_IMPORTED_MODULE_41__["MatTreeModule"],
                _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_3__["PortalModule"],
                _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_4__["ScrollingModule"]
            ]
        })
    ], DemoMaterialModule);
    return DemoMaterialModule;
}());



/***/ }),

/***/ "./src/polyfills.ts":
/*!**************************!*\
  !*** ./src/polyfills.ts ***!
  \**************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var zone_js_dist_zone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zone.js/dist/zone */ "./node_modules/zone.js/dist/zone.js");
/* harmony import */ var zone_js_dist_zone__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(zone_js_dist_zone__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hammerjs */ "./node_modules/hammerjs/hammer.js");
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(hammerjs__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var web_animations_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web-animations-js */ "./node_modules/web-animations-js/web-animations.min.js");
/* harmony import */ var web_animations_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(web_animations_js__WEBPACK_IMPORTED_MODULE_2__);





/***/ }),

/***/ "./src/vs/base/browser/browser.ts":
/*!****************************************!*\
  !*** ./src/vs/base/browser/browser.ts ***!
  \****************************************/
/*! exports provided: setZoomLevel, getZoomLevel, getTimeSinceLastZoomLevelChanged, onDidChangeZoomLevel, getZoomFactor, setZoomFactor, getPixelRatio, setFullscreen, isFullscreen, onDidChangeFullscreen, isIE, isEdge, isEdgeOrIE, isOpera, isFirefox, isWebKit, isChrome, isSafari, isWebkitWebView, isIPad, isEdgeWebView, isStandalone, hasClipboardSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setZoomLevel", function() { return setZoomLevel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getZoomLevel", function() { return getZoomLevel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTimeSinceLastZoomLevelChanged", function() { return getTimeSinceLastZoomLevelChanged; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onDidChangeZoomLevel", function() { return onDidChangeZoomLevel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getZoomFactor", function() { return getZoomFactor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setZoomFactor", function() { return setZoomFactor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPixelRatio", function() { return getPixelRatio; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setFullscreen", function() { return setFullscreen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFullscreen", function() { return isFullscreen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onDidChangeFullscreen", function() { return onDidChangeFullscreen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIE", function() { return isIE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEdge", function() { return isEdge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEdgeOrIE", function() { return isEdgeOrIE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isOpera", function() { return isOpera; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFirefox", function() { return isFirefox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isWebKit", function() { return isWebKit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isChrome", function() { return isChrome; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSafari", function() { return isSafari; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isWebkitWebView", function() { return isWebkitWebView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIPad", function() { return isIPad; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEdgeWebView", function() { return isEdgeWebView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isStandalone", function() { return isStandalone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasClipboardSupport", function() { return hasClipboardSupport; });
/* harmony import */ var vs_base_common_event__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/event */ "./src/vs/base/common/event.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

var WindowManager = /** @class */ (function () {
    function WindowManager() {
        // --- Zoom Level
        this._zoomLevel = 0;
        this._lastZoomLevelChangeTime = 0;
        this._onDidChangeZoomLevel = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_0__["Emitter"]();
        this.onDidChangeZoomLevel = this._onDidChangeZoomLevel.event;
        // --- Zoom Factor
        this._zoomFactor = 1;
        this._onDidChangeFullscreen = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_0__["Emitter"]();
        this.onDidChangeFullscreen = this._onDidChangeFullscreen.event;
    }
    WindowManager.prototype.getZoomLevel = function () {
        return this._zoomLevel;
    };
    WindowManager.prototype.getTimeSinceLastZoomLevelChanged = function () {
        return Date.now() - this._lastZoomLevelChangeTime;
    };
    WindowManager.prototype.setZoomLevel = function (zoomLevel, isTrusted) {
        if (this._zoomLevel === zoomLevel) {
            return;
        }
        this._zoomLevel = zoomLevel;
        // See https://github.com/Microsoft/vscode/issues/26151
        this._lastZoomLevelChangeTime = isTrusted ? 0 : Date.now();
        this._onDidChangeZoomLevel.fire(this._zoomLevel);
    };
    WindowManager.prototype.getZoomFactor = function () {
        return this._zoomFactor;
    };
    WindowManager.prototype.setZoomFactor = function (zoomFactor) {
        this._zoomFactor = zoomFactor;
    };
    // --- Pixel Ratio
    WindowManager.prototype.getPixelRatio = function () {
        var ctx = document.createElement('canvas').getContext('2d');
        var dpr = window.devicePixelRatio || 1;
        var bsr = ctx.webkitBackingStorePixelRatio ||
            ctx.mozBackingStorePixelRatio ||
            ctx.msBackingStorePixelRatio ||
            ctx.oBackingStorePixelRatio ||
            ctx.backingStorePixelRatio || 1;
        return dpr / bsr;
    };
    WindowManager.prototype.setFullscreen = function (fullscreen) {
        if (this._fullscreen === fullscreen) {
            return;
        }
        this._fullscreen = fullscreen;
        this._onDidChangeFullscreen.fire();
    };
    WindowManager.prototype.isFullscreen = function () {
        return this._fullscreen;
    };
    WindowManager.INSTANCE = new WindowManager();
    return WindowManager;
}());
/** A zoom index, e.g. 1, 2, 3 */
function setZoomLevel(zoomLevel, isTrusted) {
    WindowManager.INSTANCE.setZoomLevel(zoomLevel, isTrusted);
}
function getZoomLevel() {
    return WindowManager.INSTANCE.getZoomLevel();
}
/** Returns the time (in ms) since the zoom level was changed */
function getTimeSinceLastZoomLevelChanged() {
    return WindowManager.INSTANCE.getTimeSinceLastZoomLevelChanged();
}
function onDidChangeZoomLevel(callback) {
    return WindowManager.INSTANCE.onDidChangeZoomLevel(callback);
}
/** The zoom scale for an index, e.g. 1, 1.2, 1.4 */
function getZoomFactor() {
    return WindowManager.INSTANCE.getZoomFactor();
}
function setZoomFactor(zoomFactor) {
    WindowManager.INSTANCE.setZoomFactor(zoomFactor);
}
function getPixelRatio() {
    return WindowManager.INSTANCE.getPixelRatio();
}
function setFullscreen(fullscreen) {
    WindowManager.INSTANCE.setFullscreen(fullscreen);
}
function isFullscreen() {
    return WindowManager.INSTANCE.isFullscreen();
}
var onDidChangeFullscreen = WindowManager.INSTANCE.onDidChangeFullscreen;
var userAgent = navigator.userAgent;
var isIE = (userAgent.indexOf('Trident') >= 0);
var isEdge = (userAgent.indexOf('Edge/') >= 0);
var isEdgeOrIE = isIE || isEdge;
var isOpera = (userAgent.indexOf('Opera') >= 0);
var isFirefox = (userAgent.indexOf('Firefox') >= 0);
var isWebKit = (userAgent.indexOf('AppleWebKit') >= 0);
var isChrome = (userAgent.indexOf('Chrome') >= 0);
var isSafari = (!isChrome && (userAgent.indexOf('Safari') >= 0));
var isWebkitWebView = (!isChrome && !isSafari && isWebKit);
var isIPad = (userAgent.indexOf('iPad') >= 0);
var isEdgeWebView = isEdge && (userAgent.indexOf('WebView/') >= 0);
var isStandalone = (window.matchMedia('(display-mode: standalone)').matches);
function hasClipboardSupport() {
    if (isIE) {
        return false;
    }
    if (isEdge) {
        var index = userAgent.indexOf('Edge/');
        var version = parseInt(userAgent.substring(index + 5, userAgent.indexOf('.', index)), 10);
        if (!version || (version >= 12 && version <= 16)) {
            return false;
        }
    }
    return true;
}


/***/ }),

/***/ "./src/vs/base/browser/dnd.ts":
/*!************************************!*\
  !*** ./src/vs/base/browser/dnd.ts ***!
  \************************************/
/*! exports provided: DelayedDragHandler, DataTransfers, applyDragImage, DragAndDropData, StaticDND */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DelayedDragHandler", function() { return DelayedDragHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataTransfers", function() { return DataTransfers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyDragImage", function() { return applyDragImage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DragAndDropData", function() { return DragAndDropData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StaticDND", function() { return StaticDND; });
/* harmony import */ var vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/lifecycle */ "./src/vs/base/common/lifecycle.ts");
/* harmony import */ var vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/browser/dom */ "./src/vs/base/browser/dom.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * A helper that will execute a provided function when the provided HTMLElement receives
 *  dragover event for 800ms. If the drag is aborted before, the callback will not be triggered.
 */
var DelayedDragHandler = /** @class */ (function (_super) {
    __extends(DelayedDragHandler, _super);
    function DelayedDragHandler(container, callback) {
        var _this = _super.call(this) || this;
        _this._register(Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_1__["addDisposableListener"])(container, 'dragover', function (e) {
            e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)
            if (!_this.timeout) {
                _this.timeout = setTimeout(function () {
                    callback();
                    _this.timeout = null;
                }, 800);
            }
        }));
        ['dragleave', 'drop', 'dragend'].forEach(function (type) {
            _this._register(Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_1__["addDisposableListener"])(container, type, function () {
                _this.clearDragTimeout();
            }));
        });
        return _this;
    }
    DelayedDragHandler.prototype.clearDragTimeout = function () {
        if (this.timeout) {
            clearTimeout(this.timeout);
            this.timeout = null;
        }
    };
    DelayedDragHandler.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.clearDragTimeout();
    };
    DelayedDragHandler.ctorParameters = function () { return [
        { type: HTMLElement },
        { type: Function }
    ]; };
    return DelayedDragHandler;
}(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["Disposable"]));

// Common data transfers
var DataTransfers = {
    /**
     * Application specific resource transfer type
     */
    RESOURCES: 'ResourceURLs',
    /**
     * Browser specific transfer type to download
     */
    DOWNLOAD_URL: 'DownloadURL',
    /**
     * Browser specific transfer type for files
     */
    FILES: 'Files',
    /**
     * Typically transfer type for copy/paste transfers.
     */
    TEXT: 'text/plain'
};
function applyDragImage(event, label, clazz) {
    var dragImage = document.createElement('div');
    dragImage.className = clazz;
    dragImage.textContent = label;
    if (event.dataTransfer) {
        document.body.appendChild(dragImage);
        event.dataTransfer.setDragImage(dragImage, -10, -10);
        // Removes the element when the DND operation is done
        setTimeout(function () { return document.body.removeChild(dragImage); }, 0);
    }
}
var DragAndDropData = /** @class */ (function () {
    function DragAndDropData(data) {
        this.data = data;
    }
    DragAndDropData.prototype.update = function () {
        // noop
    };
    DragAndDropData.prototype.getData = function () {
        return this.data;
    };
    DragAndDropData.ctorParameters = function () { return [
        { type: undefined }
    ]; };
    return DragAndDropData;
}());

var StaticDND = {
    CurrentDragAndDropData: undefined
};


/***/ }),

/***/ "./src/vs/base/browser/dom.ts":
/*!************************************!*\
  !*** ./src/vs/base/browser/dom.ts ***!
  \************************************/
/*! exports provided: clearNode, removeNode, isInDOM, hasClass, addClass, addClasses, removeClass, removeClasses, toggleClass, addDisposableListener, addStandardDisposableListener, addDisposableNonBubblingMouseOutListener, runAtThisOrScheduleAtNextAnimationFrame, scheduleAtNextAnimationFrame, measure, modify, addDisposableThrottledListener, getComputedStyle, getClientArea, Dimension, getTopLeftOffset, size, position, getDomNodePagePosition, StandardWindow, getTotalWidth, getContentWidth, getTotalScrollWidth, getContentHeight, getTotalHeight, getLargestChildWidth, isAncestor, findParentWithClass, hasParentWithClass, createStyleSheet, createCSSRule, removeCSSRulesContainingSelector, isHTMLElement, EventType, EventHelper, saveParentsScrollTop, restoreParentsScrollTop, trackFocus, append, prepend, Namespace, $, join, show, hide, removeTabIndexAndUpdateFocus, getElementsByTagName, finalHandler, domContentLoaded, computeScreenAwareSize, windowOpenNoOpener, animate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearNode", function() { return clearNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeNode", function() { return removeNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isInDOM", function() { return isInDOM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasClass", function() { return hasClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addClass", function() { return addClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addClasses", function() { return addClasses; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeClass", function() { return removeClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeClasses", function() { return removeClasses; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toggleClass", function() { return toggleClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addDisposableListener", function() { return addDisposableListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addStandardDisposableListener", function() { return addStandardDisposableListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addDisposableNonBubblingMouseOutListener", function() { return addDisposableNonBubblingMouseOutListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "runAtThisOrScheduleAtNextAnimationFrame", function() { return runAtThisOrScheduleAtNextAnimationFrame; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheduleAtNextAnimationFrame", function() { return scheduleAtNextAnimationFrame; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "measure", function() { return measure; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modify", function() { return modify; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addDisposableThrottledListener", function() { return addDisposableThrottledListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getComputedStyle", function() { return getComputedStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getClientArea", function() { return getClientArea; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Dimension", function() { return Dimension; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTopLeftOffset", function() { return getTopLeftOffset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "size", function() { return size; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "position", function() { return position; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDomNodePagePosition", function() { return getDomNodePagePosition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StandardWindow", function() { return StandardWindow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTotalWidth", function() { return getTotalWidth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getContentWidth", function() { return getContentWidth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTotalScrollWidth", function() { return getTotalScrollWidth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getContentHeight", function() { return getContentHeight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTotalHeight", function() { return getTotalHeight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLargestChildWidth", function() { return getLargestChildWidth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAncestor", function() { return isAncestor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findParentWithClass", function() { return findParentWithClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasParentWithClass", function() { return hasParentWithClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createStyleSheet", function() { return createStyleSheet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCSSRule", function() { return createCSSRule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeCSSRulesContainingSelector", function() { return removeCSSRulesContainingSelector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isHTMLElement", function() { return isHTMLElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventType", function() { return EventType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventHelper", function() { return EventHelper; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "saveParentsScrollTop", function() { return saveParentsScrollTop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "restoreParentsScrollTop", function() { return restoreParentsScrollTop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trackFocus", function() { return trackFocus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "append", function() { return append; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prepend", function() { return prepend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Namespace", function() { return Namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$", function() { return $; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "join", function() { return join; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "show", function() { return show; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hide", function() { return hide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeTabIndexAndUpdateFocus", function() { return removeTabIndexAndUpdateFocus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getElementsByTagName", function() { return getElementsByTagName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "finalHandler", function() { return finalHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domContentLoaded", function() { return domContentLoaded; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "computeScreenAwareSize", function() { return computeScreenAwareSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowOpenNoOpener", function() { return windowOpenNoOpener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animate", function() { return animate; });
/* harmony import */ var vs_base_browser_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/browser/browser */ "./src/vs/base/browser/browser.ts");
/* harmony import */ var vs_base_browser_event__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/browser/event */ "./src/vs/base/browser/event.ts");
/* harmony import */ var vs_base_browser_keyboardEvent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vs/base/browser/keyboardEvent */ "./src/vs/base/browser/keyboardEvent.ts");
/* harmony import */ var vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vs/base/browser/mouseEvent */ "./src/vs/base/browser/mouseEvent.ts");
/* harmony import */ var vs_base_common_async__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vs/base/common/async */ "./src/vs/base/common/async.ts");
/* harmony import */ var vs_base_common_errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vs/base/common/errors */ "./src/vs/base/common/errors.ts");
/* harmony import */ var vs_base_common_event__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vs/base/common/event */ "./src/vs/base/common/event.ts");
/* harmony import */ var vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! vs/base/common/lifecycle */ "./src/vs/base/common/lifecycle.ts");
/* harmony import */ var vs_base_common_platform__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! vs/base/common/platform */ "./src/vs/base/common/platform.ts");
/* harmony import */ var vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vs/base/common/arrays */ "./src/vs/base/common/arrays.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};










function clearNode(node) {
    while (node.firstChild) {
        node.removeChild(node.firstChild);
    }
}
function removeNode(node) {
    if (node.parentNode) {
        node.parentNode.removeChild(node);
    }
}
function isInDOM(node) {
    while (node) {
        if (node === document.body) {
            return true;
        }
        node = node.parentNode;
    }
    return false;
}
var _manualClassList = new /** @class */ (function () {
    function class_1() {
    }
    class_1.prototype._findClassName = function (node, className) {
        var classes = node.className;
        if (!classes) {
            this._lastStart = -1;
            return;
        }
        className = className.trim();
        var classesLen = classes.length, classLen = className.length;
        if (classLen === 0) {
            this._lastStart = -1;
            return;
        }
        if (classesLen < classLen) {
            this._lastStart = -1;
            return;
        }
        if (classes === className) {
            this._lastStart = 0;
            this._lastEnd = classesLen;
            return;
        }
        var idx = -1, idxEnd;
        while ((idx = classes.indexOf(className, idx + 1)) >= 0) {
            idxEnd = idx + classLen;
            // a class that is followed by another class
            if ((idx === 0 || classes.charCodeAt(idx - 1) === 32 /* Space */) && classes.charCodeAt(idxEnd) === 32 /* Space */) {
                this._lastStart = idx;
                this._lastEnd = idxEnd + 1;
                return;
            }
            // last class
            if (idx > 0 && classes.charCodeAt(idx - 1) === 32 /* Space */ && idxEnd === classesLen) {
                this._lastStart = idx - 1;
                this._lastEnd = idxEnd;
                return;
            }
            // equal - duplicate of cmp above
            if (idx === 0 && idxEnd === classesLen) {
                this._lastStart = 0;
                this._lastEnd = idxEnd;
                return;
            }
        }
        this._lastStart = -1;
    };
    class_1.prototype.hasClass = function (node, className) {
        this._findClassName(node, className);
        return this._lastStart !== -1;
    };
    class_1.prototype.addClasses = function (node) {
        var _this = this;
        var classNames = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            classNames[_i - 1] = arguments[_i];
        }
        classNames.forEach(function (nameValue) { return nameValue.split(' ').forEach(function (name) { return _this.addClass(node, name); }); });
    };
    class_1.prototype.addClass = function (node, className) {
        if (!node.className) { // doesn't have it for sure
            node.className = className;
        }
        else {
            this._findClassName(node, className); // see if it's already there
            if (this._lastStart === -1) {
                node.className = node.className + ' ' + className;
            }
        }
    };
    class_1.prototype.removeClass = function (node, className) {
        this._findClassName(node, className);
        if (this._lastStart === -1) {
            return; // Prevent styles invalidation if not necessary
        }
        else {
            node.className = node.className.substring(0, this._lastStart) + node.className.substring(this._lastEnd);
        }
    };
    class_1.prototype.removeClasses = function (node) {
        var _this = this;
        var classNames = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            classNames[_i - 1] = arguments[_i];
        }
        classNames.forEach(function (nameValue) { return nameValue.split(' ').forEach(function (name) { return _this.removeClass(node, name); }); });
    };
    class_1.prototype.toggleClass = function (node, className, shouldHaveIt) {
        this._findClassName(node, className);
        if (this._lastStart !== -1 && (shouldHaveIt === undefined || !shouldHaveIt)) {
            this.removeClass(node, className);
        }
        if (this._lastStart === -1 && (shouldHaveIt === undefined || shouldHaveIt)) {
            this.addClass(node, className);
        }
    };
    return class_1;
}());
var _nativeClassList = new /** @class */ (function () {
    function class_2() {
    }
    class_2.prototype.hasClass = function (node, className) {
        return Boolean(className) && node.classList && node.classList.contains(className);
    };
    class_2.prototype.addClasses = function (node) {
        var _this = this;
        var classNames = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            classNames[_i - 1] = arguments[_i];
        }
        classNames.forEach(function (nameValue) { return nameValue.split(' ').forEach(function (name) { return _this.addClass(node, name); }); });
    };
    class_2.prototype.addClass = function (node, className) {
        if (className && node.classList) {
            node.classList.add(className);
        }
    };
    class_2.prototype.removeClass = function (node, className) {
        if (className && node.classList) {
            node.classList.remove(className);
        }
    };
    class_2.prototype.removeClasses = function (node) {
        var _this = this;
        var classNames = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            classNames[_i - 1] = arguments[_i];
        }
        classNames.forEach(function (nameValue) { return nameValue.split(' ').forEach(function (name) { return _this.removeClass(node, name); }); });
    };
    class_2.prototype.toggleClass = function (node, className, shouldHaveIt) {
        if (node.classList) {
            node.classList.toggle(className, shouldHaveIt);
        }
    };
    return class_2;
}());
// In IE11 there is only partial support for `classList` which makes us keep our
// custom implementation. Otherwise use the native implementation, see: http://caniuse.com/#search=classlist
var _classList = vs_base_browser_browser__WEBPACK_IMPORTED_MODULE_0__["isIE"] ? _manualClassList : _nativeClassList;
var hasClass = _classList.hasClass.bind(_classList);
var addClass = _classList.addClass.bind(_classList);
var addClasses = _classList.addClasses.bind(_classList);
var removeClass = _classList.removeClass.bind(_classList);
var removeClasses = _classList.removeClasses.bind(_classList);
var toggleClass = _classList.toggleClass.bind(_classList);
var DomListener = /** @class */ (function () {
    function DomListener(node, type, handler, useCapture) {
        this._node = node;
        this._type = type;
        this._handler = handler;
        this._useCapture = (useCapture || false);
        this._node.addEventListener(this._type, this._handler, this._useCapture);
    }
    DomListener.prototype.dispose = function () {
        if (!this._handler) {
            // Already disposed
            return;
        }
        this._node.removeEventListener(this._type, this._handler, this._useCapture);
        // Prevent leakers from holding on to the dom or handler func
        this._node = null;
        this._handler = null;
    };
    DomListener.ctorParameters = function () { return [
        { type: undefined },
        { type: String },
        { type: Function },
        { type: Boolean }
    ]; };
    return DomListener;
}());
function addDisposableListener(node, type, handler, useCapture) {
    return new DomListener(node, type, handler, useCapture);
}
function _wrapAsStandardMouseEvent(handler) {
    return function (e) {
        return handler(new vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_3__["StandardMouseEvent"](e));
    };
}
function _wrapAsStandardKeyboardEvent(handler) {
    return function (e) {
        return handler(new vs_base_browser_keyboardEvent__WEBPACK_IMPORTED_MODULE_2__["StandardKeyboardEvent"](e));
    };
}
var addStandardDisposableListener = function addStandardDisposableListener(node, type, handler, useCapture) {
    var wrapHandler = handler;
    if (type === 'click' || type === 'mousedown') {
        wrapHandler = _wrapAsStandardMouseEvent(handler);
    }
    else if (type === 'keydown' || type === 'keypress' || type === 'keyup') {
        wrapHandler = _wrapAsStandardKeyboardEvent(handler);
    }
    return addDisposableListener(node, type, wrapHandler, useCapture);
};
function addDisposableNonBubblingMouseOutListener(node, handler) {
    return addDisposableListener(node, 'mouseout', function (e) {
        // Mouse out bubbles, so this is an attempt to ignore faux mouse outs coming from children elements
        var toElement = (e.relatedTarget || e.target);
        while (toElement && toElement !== node) {
            toElement = toElement.parentNode;
        }
        if (toElement === node) {
            return;
        }
        handler(e);
    });
}
var _animationFrame = null;
function doRequestAnimationFrame(callback) {
    if (!_animationFrame) {
        var emulatedRequestAnimationFrame = function (callback) {
            return setTimeout(function () { return callback(new Date().getTime()); }, 0);
        };
        _animationFrame = (self.requestAnimationFrame
            || self.msRequestAnimationFrame
            || self.webkitRequestAnimationFrame
            || self.mozRequestAnimationFrame
            || self.oRequestAnimationFrame
            || emulatedRequestAnimationFrame);
    }
    return _animationFrame.call(self, callback);
}
/**
 * Schedule a callback to be run at the next animation frame.
 * This allows multiple parties to register callbacks that should run at the next animation frame.
 * If currently in an animation frame, `runner` will be executed immediately.
 * @return token that can be used to cancel the scheduled runner (only if `runner` was not executed immediately).
 */
var runAtThisOrScheduleAtNextAnimationFrame;
/**
 * Schedule a callback to be run at the next animation frame.
 * This allows multiple parties to register callbacks that should run at the next animation frame.
 * If currently in an animation frame, `runner` will be executed at the next animation frame.
 * @return token that can be used to cancel the scheduled runner.
 */
var scheduleAtNextAnimationFrame;
var AnimationFrameQueueItem = /** @class */ (function () {
    function AnimationFrameQueueItem(runner, priority) {
        if (priority === void 0) { priority = 0; }
        this._runner = runner;
        this.priority = priority;
        this._canceled = false;
    }
    AnimationFrameQueueItem.prototype.dispose = function () {
        this._canceled = true;
    };
    AnimationFrameQueueItem.prototype.execute = function () {
        if (this._canceled) {
            return;
        }
        try {
            this._runner();
        }
        catch (e) {
            Object(vs_base_common_errors__WEBPACK_IMPORTED_MODULE_5__["onUnexpectedError"])(e);
        }
    };
    // Sort by priority (largest to lowest)
    AnimationFrameQueueItem.sort = function (a, b) {
        return b.priority - a.priority;
    };
    AnimationFrameQueueItem.ctorParameters = function () { return [
        { type: Function },
        { type: Number }
    ]; };
    return AnimationFrameQueueItem;
}());
(function () {
    /**
     * The runners scheduled at the next animation frame
     */
    var NEXT_QUEUE = [];
    /**
     * The runners scheduled at the current animation frame
     */
    var CURRENT_QUEUE = null;
    /**
     * A flag to keep track if the native requestAnimationFrame was already called
     */
    var animFrameRequested = false;
    /**
     * A flag to indicate if currently handling a native requestAnimationFrame callback
     */
    var inAnimationFrameRunner = false;
    var animationFrameRunner = function () {
        animFrameRequested = false;
        CURRENT_QUEUE = NEXT_QUEUE;
        NEXT_QUEUE = [];
        inAnimationFrameRunner = true;
        while (CURRENT_QUEUE.length > 0) {
            CURRENT_QUEUE.sort(AnimationFrameQueueItem.sort);
            var top_1 = CURRENT_QUEUE.shift();
            top_1.execute();
        }
        inAnimationFrameRunner = false;
    };
    scheduleAtNextAnimationFrame = function (runner, priority) {
        if (priority === void 0) { priority = 0; }
        var item = new AnimationFrameQueueItem(runner, priority);
        NEXT_QUEUE.push(item);
        if (!animFrameRequested) {
            animFrameRequested = true;
            doRequestAnimationFrame(animationFrameRunner);
        }
        return item;
    };
    runAtThisOrScheduleAtNextAnimationFrame = function (runner, priority) {
        if (inAnimationFrameRunner) {
            var item = new AnimationFrameQueueItem(runner, priority);
            CURRENT_QUEUE.push(item);
            return item;
        }
        else {
            return scheduleAtNextAnimationFrame(runner, priority);
        }
    };
})();
function measure(callback) {
    return scheduleAtNextAnimationFrame(callback, 10000 /* must be early */);
}
function modify(callback) {
    return scheduleAtNextAnimationFrame(callback, -10000 /* must be late */);
}
var MINIMUM_TIME_MS = 16;
var DEFAULT_EVENT_MERGER = function (lastEvent, currentEvent) {
    return currentEvent;
};
var TimeoutThrottledDomListener = /** @class */ (function (_super) {
    __extends(TimeoutThrottledDomListener, _super);
    function TimeoutThrottledDomListener(node, type, handler, eventMerger, minimumTimeMs) {
        if (eventMerger === void 0) { eventMerger = DEFAULT_EVENT_MERGER; }
        if (minimumTimeMs === void 0) { minimumTimeMs = MINIMUM_TIME_MS; }
        var _this = _super.call(this) || this;
        var lastEvent = null;
        var lastHandlerTime = 0;
        var timeout = _this._register(new vs_base_common_async__WEBPACK_IMPORTED_MODULE_4__["TimeoutTimer"]());
        var invokeHandler = function () {
            lastHandlerTime = (new Date()).getTime();
            handler(lastEvent);
            lastEvent = null;
        };
        _this._register(addDisposableListener(node, type, function (e) {
            lastEvent = eventMerger(lastEvent, e);
            var elapsedTime = (new Date()).getTime() - lastHandlerTime;
            if (elapsedTime >= minimumTimeMs) {
                timeout.cancel();
                invokeHandler();
            }
            else {
                timeout.setIfNotSet(invokeHandler, minimumTimeMs - elapsedTime);
            }
        }));
        return _this;
    }
    TimeoutThrottledDomListener.ctorParameters = function () { return [
        { type: undefined },
        { type: String },
        { type: Function },
        { type: undefined },
        { type: Number }
    ]; };
    return TimeoutThrottledDomListener;
}(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_7__["Disposable"]));
function addDisposableThrottledListener(node, type, handler, eventMerger, minimumTimeMs) {
    return new TimeoutThrottledDomListener(node, type, handler, eventMerger, minimumTimeMs);
}
function getComputedStyle(el) {
    return document.defaultView.getComputedStyle(el, null);
}
function getClientArea(element) {
    // Try with DOM clientWidth / clientHeight
    if (element !== document.body) {
        return new Dimension(element.clientWidth, element.clientHeight);
    }
    // Try innerWidth / innerHeight
    if (window.innerWidth && window.innerHeight) {
        return new Dimension(window.innerWidth, window.innerHeight);
    }
    // Try with document.body.clientWidth / document.body.clientHeight
    if (document.body && document.body.clientWidth && document.body.clientHeight) {
        return new Dimension(document.body.clientWidth, document.body.clientHeight);
    }
    // Try with document.documentElement.clientWidth / document.documentElement.clientHeight
    if (document.documentElement && document.documentElement.clientWidth && document.documentElement.clientHeight) {
        return new Dimension(document.documentElement.clientWidth, document.documentElement.clientHeight);
    }
    throw new Error('Unable to figure out browser width and height');
}
var SizeUtils = /** @class */ (function () {
    function SizeUtils() {
    }
    // Adapted from WinJS
    // Converts a CSS positioning string for the specified element to pixels.
    SizeUtils.convertToPixels = function (element, value) {
        return parseFloat(value) || 0;
    };
    SizeUtils.getDimension = function (element, cssPropertyName, jsPropertyName) {
        var computedStyle = getComputedStyle(element);
        var value = '0';
        if (computedStyle) {
            if (computedStyle.getPropertyValue) {
                value = computedStyle.getPropertyValue(cssPropertyName);
            }
            else {
                // IE8
                value = computedStyle.getAttribute(jsPropertyName);
            }
        }
        return SizeUtils.convertToPixels(element, value);
    };
    SizeUtils.getBorderLeftWidth = function (element) {
        return SizeUtils.getDimension(element, 'border-left-width', 'borderLeftWidth');
    };
    SizeUtils.getBorderRightWidth = function (element) {
        return SizeUtils.getDimension(element, 'border-right-width', 'borderRightWidth');
    };
    SizeUtils.getBorderTopWidth = function (element) {
        return SizeUtils.getDimension(element, 'border-top-width', 'borderTopWidth');
    };
    SizeUtils.getBorderBottomWidth = function (element) {
        return SizeUtils.getDimension(element, 'border-bottom-width', 'borderBottomWidth');
    };
    SizeUtils.getPaddingLeft = function (element) {
        return SizeUtils.getDimension(element, 'padding-left', 'paddingLeft');
    };
    SizeUtils.getPaddingRight = function (element) {
        return SizeUtils.getDimension(element, 'padding-right', 'paddingRight');
    };
    SizeUtils.getPaddingTop = function (element) {
        return SizeUtils.getDimension(element, 'padding-top', 'paddingTop');
    };
    SizeUtils.getPaddingBottom = function (element) {
        return SizeUtils.getDimension(element, 'padding-bottom', 'paddingBottom');
    };
    SizeUtils.getMarginLeft = function (element) {
        return SizeUtils.getDimension(element, 'margin-left', 'marginLeft');
    };
    SizeUtils.getMarginTop = function (element) {
        return SizeUtils.getDimension(element, 'margin-top', 'marginTop');
    };
    SizeUtils.getMarginRight = function (element) {
        return SizeUtils.getDimension(element, 'margin-right', 'marginRight');
    };
    SizeUtils.getMarginBottom = function (element) {
        return SizeUtils.getDimension(element, 'margin-bottom', 'marginBottom');
    };
    return SizeUtils;
}());
// ----------------------------------------------------------------------------------------
// Position & Dimension
var Dimension = /** @class */ (function () {
    function Dimension(width, height) {
        this.width = width;
        this.height = height;
    }
    Dimension.equals = function (a, b) {
        if (a === b) {
            return true;
        }
        if (!a || !b) {
            return false;
        }
        return a.width === b.width && a.height === b.height;
    };
    Dimension.ctorParameters = function () { return [
        { type: Number },
        { type: Number }
    ]; };
    return Dimension;
}());

function getTopLeftOffset(element) {
    // Adapted from WinJS.Utilities.getPosition
    // and added borders to the mix
    var offsetParent = element.offsetParent, top = element.offsetTop, left = element.offsetLeft;
    while ((element = element.parentNode) !== null && element !== document.body && element !== document.documentElement) {
        top -= element.scrollTop;
        var c = getComputedStyle(element);
        if (c) {
            left -= c.direction !== 'rtl' ? element.scrollLeft : -element.scrollLeft;
        }
        if (element === offsetParent) {
            left += SizeUtils.getBorderLeftWidth(element);
            top += SizeUtils.getBorderTopWidth(element);
            top += element.offsetTop;
            left += element.offsetLeft;
            offsetParent = element.offsetParent;
        }
    }
    return {
        left: left,
        top: top
    };
}
function size(element, width, height) {
    if (typeof width === 'number') {
        element.style.width = width + "px";
    }
    if (typeof height === 'number') {
        element.style.height = height + "px";
    }
}
function position(element, top, right, bottom, left, position) {
    if (position === void 0) { position = 'absolute'; }
    if (typeof top === 'number') {
        element.style.top = top + "px";
    }
    if (typeof right === 'number') {
        element.style.right = right + "px";
    }
    if (typeof bottom === 'number') {
        element.style.bottom = bottom + "px";
    }
    if (typeof left === 'number') {
        element.style.left = left + "px";
    }
    element.style.position = position;
}
/**
 * Returns the position of a dom node relative to the entire page.
 */
function getDomNodePagePosition(domNode) {
    var bb = domNode.getBoundingClientRect();
    return {
        left: bb.left + StandardWindow.scrollX,
        top: bb.top + StandardWindow.scrollY,
        width: bb.width,
        height: bb.height
    };
}
var StandardWindow = new /** @class */ (function () {
    function class_3() {
    }
    Object.defineProperty(class_3.prototype, "scrollX", {
        get: function () {
            if (typeof window.scrollX === 'number') {
                // modern browsers
                return window.scrollX;
            }
            else {
                return document.body.scrollLeft + document.documentElement.scrollLeft;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(class_3.prototype, "scrollY", {
        get: function () {
            if (typeof window.scrollY === 'number') {
                // modern browsers
                return window.scrollY;
            }
            else {
                return document.body.scrollTop + document.documentElement.scrollTop;
            }
        },
        enumerable: true,
        configurable: true
    });
    return class_3;
}());
// Adapted from WinJS
// Gets the width of the element, including margins.
function getTotalWidth(element) {
    var margin = SizeUtils.getMarginLeft(element) + SizeUtils.getMarginRight(element);
    return element.offsetWidth + margin;
}
function getContentWidth(element) {
    var border = SizeUtils.getBorderLeftWidth(element) + SizeUtils.getBorderRightWidth(element);
    var padding = SizeUtils.getPaddingLeft(element) + SizeUtils.getPaddingRight(element);
    return element.offsetWidth - border - padding;
}
function getTotalScrollWidth(element) {
    var margin = SizeUtils.getMarginLeft(element) + SizeUtils.getMarginRight(element);
    return element.scrollWidth + margin;
}
// Adapted from WinJS
// Gets the height of the content of the specified element. The content height does not include borders or padding.
function getContentHeight(element) {
    var border = SizeUtils.getBorderTopWidth(element) + SizeUtils.getBorderBottomWidth(element);
    var padding = SizeUtils.getPaddingTop(element) + SizeUtils.getPaddingBottom(element);
    return element.offsetHeight - border - padding;
}
// Adapted from WinJS
// Gets the height of the element, including its margins.
function getTotalHeight(element) {
    var margin = SizeUtils.getMarginTop(element) + SizeUtils.getMarginBottom(element);
    return element.offsetHeight + margin;
}
// Gets the left coordinate of the specified element relative to the specified parent.
function getRelativeLeft(element, parent) {
    if (element === null) {
        return 0;
    }
    var elementPosition = getTopLeftOffset(element);
    var parentPosition = getTopLeftOffset(parent);
    return elementPosition.left - parentPosition.left;
}
function getLargestChildWidth(parent, children) {
    var childWidths = children.map(function (child) {
        return Math.max(getTotalScrollWidth(child), getTotalWidth(child)) + getRelativeLeft(child, parent) || 0;
    });
    var maxWidth = Math.max.apply(Math, childWidths);
    return maxWidth;
}
// ----------------------------------------------------------------------------------------
function isAncestor(testChild, testAncestor) {
    while (testChild) {
        if (testChild === testAncestor) {
            return true;
        }
        testChild = testChild.parentNode;
    }
    return false;
}
function findParentWithClass(node, clazz, stopAtClazzOrNode) {
    while (node) {
        if (hasClass(node, clazz)) {
            return node;
        }
        if (stopAtClazzOrNode) {
            if (typeof stopAtClazzOrNode === 'string') {
                if (hasClass(node, stopAtClazzOrNode)) {
                    return null;
                }
            }
            else {
                if (node === stopAtClazzOrNode) {
                    return null;
                }
            }
        }
        node = node.parentNode;
    }
    return null;
}
function hasParentWithClass(node, clazz, stopAtClazzOrNode) {
    return !!findParentWithClass(node, clazz, stopAtClazzOrNode);
}
function createStyleSheet(container) {
    if (container === void 0) { container = document.getElementsByTagName('head')[0]; }
    var style = document.createElement('style');
    style.type = 'text/css';
    style.media = 'screen';
    container.appendChild(style);
    return style;
}
var _sharedStyleSheet = null;
function getSharedStyleSheet() {
    if (!_sharedStyleSheet) {
        _sharedStyleSheet = createStyleSheet();
    }
    return _sharedStyleSheet;
}
function getDynamicStyleSheetRules(style) {
    if (style && style.sheet && style.sheet.rules) {
        // Chrome, IE
        return style.sheet.rules;
    }
    if (style && style.sheet && style.sheet.cssRules) {
        // FF
        return style.sheet.cssRules;
    }
    return [];
}
function createCSSRule(selector, cssText, style) {
    if (style === void 0) { style = getSharedStyleSheet(); }
    if (!style || !cssText) {
        return;
    }
    style.textContent = selector + "{" + cssText + "}\n" + style.textContent;
}
function removeCSSRulesContainingSelector(ruleName, style) {
    if (style === void 0) { style = getSharedStyleSheet(); }
    if (!style) {
        return;
    }
    var rules = getDynamicStyleSheetRules(style);
    var toDelete = [];
    for (var i = 0; i < rules.length; i++) {
        var rule = rules[i];
        if (rule.selectorText.indexOf(ruleName) !== -1) {
            toDelete.push(i);
        }
    }
    for (var i = toDelete.length - 1; i >= 0; i--) {
        style.sheet.deleteRule(toDelete[i]);
    }
}
function isHTMLElement(o) {
    if (typeof HTMLElement === 'object') {
        return o instanceof HTMLElement;
    }
    return o && typeof o === 'object' && o.nodeType === 1 && typeof o.nodeName === 'string';
}
var EventType = {
    // Mouse
    CLICK: 'click',
    DBLCLICK: 'dblclick',
    MOUSE_UP: 'mouseup',
    MOUSE_DOWN: 'mousedown',
    MOUSE_OVER: 'mouseover',
    MOUSE_MOVE: 'mousemove',
    MOUSE_OUT: 'mouseout',
    MOUSE_ENTER: 'mouseenter',
    MOUSE_LEAVE: 'mouseleave',
    CONTEXT_MENU: 'contextmenu',
    WHEEL: 'wheel',
    // Keyboard
    KEY_DOWN: 'keydown',
    KEY_PRESS: 'keypress',
    KEY_UP: 'keyup',
    // HTML Document
    LOAD: 'load',
    UNLOAD: 'unload',
    ABORT: 'abort',
    ERROR: 'error',
    RESIZE: 'resize',
    SCROLL: 'scroll',
    FULLSCREEN_CHANGE: 'fullscreenchange',
    WK_FULLSCREEN_CHANGE: 'webkitfullscreenchange',
    // Form
    SELECT: 'select',
    CHANGE: 'change',
    SUBMIT: 'submit',
    RESET: 'reset',
    FOCUS: 'focus',
    FOCUS_IN: 'focusin',
    FOCUS_OUT: 'focusout',
    BLUR: 'blur',
    INPUT: 'input',
    // Local Storage
    STORAGE: 'storage',
    // Drag
    DRAG_START: 'dragstart',
    DRAG: 'drag',
    DRAG_ENTER: 'dragenter',
    DRAG_LEAVE: 'dragleave',
    DRAG_OVER: 'dragover',
    DROP: 'drop',
    DRAG_END: 'dragend',
    // Animation
    ANIMATION_START: vs_base_browser_browser__WEBPACK_IMPORTED_MODULE_0__["isWebKit"] ? 'webkitAnimationStart' : 'animationstart',
    ANIMATION_END: vs_base_browser_browser__WEBPACK_IMPORTED_MODULE_0__["isWebKit"] ? 'webkitAnimationEnd' : 'animationend',
    ANIMATION_ITERATION: vs_base_browser_browser__WEBPACK_IMPORTED_MODULE_0__["isWebKit"] ? 'webkitAnimationIteration' : 'animationiteration'
};
var EventHelper = {
    stop: function (e, cancelBubble) {
        if (e.preventDefault) {
            e.preventDefault();
        }
        else {
            // IE8
            e.returnValue = false;
        }
        if (cancelBubble) {
            if (e.stopPropagation) {
                e.stopPropagation();
            }
            else {
                // IE8
                e.cancelBubble = true;
            }
        }
    }
};
function saveParentsScrollTop(node) {
    var r = [];
    for (var i = 0; node && node.nodeType === node.ELEMENT_NODE; i++) {
        r[i] = node.scrollTop;
        node = node.parentNode;
    }
    return r;
}
function restoreParentsScrollTop(node, state) {
    for (var i = 0; node && node.nodeType === node.ELEMENT_NODE; i++) {
        if (node.scrollTop !== state[i]) {
            node.scrollTop = state[i];
        }
        node = node.parentNode;
    }
}
var FocusTracker = /** @class */ (function (_super) {
    __extends(FocusTracker, _super);
    function FocusTracker(element) {
        var _this = _super.call(this) || this;
        _this._onDidFocus = _this._register(new vs_base_common_event__WEBPACK_IMPORTED_MODULE_6__["Emitter"]());
        _this.onDidFocus = _this._onDidFocus.event;
        _this._onDidBlur = _this._register(new vs_base_common_event__WEBPACK_IMPORTED_MODULE_6__["Emitter"]());
        _this.onDidBlur = _this._onDidBlur.event;
        var hasFocus = isAncestor(document.activeElement, element);
        var loosingFocus = false;
        var onFocus = function () {
            loosingFocus = false;
            if (!hasFocus) {
                hasFocus = true;
                _this._onDidFocus.fire();
            }
        };
        var onBlur = function () {
            if (hasFocus) {
                loosingFocus = true;
                window.setTimeout(function () {
                    if (loosingFocus) {
                        loosingFocus = false;
                        hasFocus = false;
                        _this._onDidBlur.fire();
                    }
                }, 0);
            }
        };
        _this._register(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_1__["domEvent"])(element, EventType.FOCUS, true)(onFocus));
        _this._register(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_1__["domEvent"])(element, EventType.BLUR, true)(onBlur));
        return _this;
    }
    FocusTracker.ctorParameters = function () { return [
        { type: undefined }
    ]; };
    return FocusTracker;
}(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_7__["Disposable"]));
function trackFocus(element) {
    return new FocusTracker(element);
}
function append(parent) {
    var children = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        children[_i - 1] = arguments[_i];
    }
    children.forEach(function (child) { return parent.appendChild(child); });
    return children[children.length - 1];
}
function prepend(parent, child) {
    parent.insertBefore(child, parent.firstChild);
    return child;
}
var SELECTOR_REGEX = /([\w\-]+)?(#([\w\-]+))?((.([\w\-]+))*)/;
var Namespace;
(function (Namespace) {
    Namespace["HTML"] = "http://www.w3.org/1999/xhtml";
    Namespace["SVG"] = "http://www.w3.org/2000/svg";
})(Namespace || (Namespace = {}));
function _$(namespace, description, attrs) {
    var children = [];
    for (var _i = 3; _i < arguments.length; _i++) {
        children[_i - 3] = arguments[_i];
    }
    var match = SELECTOR_REGEX.exec(description);
    if (!match) {
        throw new Error('Bad use of emmet');
    }
    attrs = __assign({}, (attrs || {}));
    var tagName = match[1] || 'div';
    var result;
    if (namespace !== Namespace.HTML) {
        result = document.createElementNS(namespace, tagName);
    }
    else {
        result = document.createElement(tagName);
    }
    if (match[3]) {
        result.id = match[3];
    }
    if (match[4]) {
        result.className = match[4].replace(/\./g, ' ').trim();
    }
    Object.keys(attrs).forEach(function (name) {
        var value = attrs[name];
        if (/^on\w+$/.test(name)) {
            result[name] = value;
        }
        else if (name === 'selected') {
            if (value) {
                result.setAttribute(name, 'true');
            }
        }
        else {
            result.setAttribute(name, value);
        }
    });
    Object(vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_9__["coalesce"])(children)
        .forEach(function (child) {
        if (child instanceof Node) {
            result.appendChild(child);
        }
        else {
            result.appendChild(document.createTextNode(child));
        }
    });
    return result;
}
function $(description, attrs) {
    var children = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        children[_i - 2] = arguments[_i];
    }
    return _$.apply(void 0, [Namespace.HTML, description, attrs].concat(children));
}
$.SVG = function (description, attrs) {
    var children = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        children[_i - 2] = arguments[_i];
    }
    return _$.apply(void 0, [Namespace.SVG, description, attrs].concat(children));
};
function join(nodes, separator) {
    var result = [];
    nodes.forEach(function (node, index) {
        if (index > 0) {
            if (separator instanceof Node) {
                result.push(separator.cloneNode());
            }
            else {
                result.push(document.createTextNode(separator));
            }
        }
        result.push(node);
    });
    return result;
}
function show() {
    var elements = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        elements[_i] = arguments[_i];
    }
    for (var _a = 0, elements_1 = elements; _a < elements_1.length; _a++) {
        var element = elements_1[_a];
        element.style.display = '';
        element.removeAttribute('aria-hidden');
    }
}
function hide() {
    var elements = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        elements[_i] = arguments[_i];
    }
    for (var _a = 0, elements_2 = elements; _a < elements_2.length; _a++) {
        var element = elements_2[_a];
        element.style.display = 'none';
        element.setAttribute('aria-hidden', 'true');
    }
}
function findParentWithAttribute(node, attribute) {
    while (node) {
        if (node instanceof HTMLElement && node.hasAttribute(attribute)) {
            return node;
        }
        node = node.parentNode;
    }
    return null;
}
function removeTabIndexAndUpdateFocus(node) {
    if (!node || !node.hasAttribute('tabIndex')) {
        return;
    }
    // If we are the currently focused element and tabIndex is removed,
    // standard DOM behavior is to move focus to the <body> element. We
    // typically never want that, rather put focus to the closest element
    // in the hierarchy of the parent DOM nodes.
    if (document.activeElement === node) {
        var parentFocusable = findParentWithAttribute(node.parentElement, 'tabIndex');
        if (parentFocusable) {
            parentFocusable.focus();
        }
    }
    node.removeAttribute('tabindex');
}
function getElementsByTagName(tag) {
    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);
}
function finalHandler(fn) {
    return function (e) {
        e.preventDefault();
        e.stopPropagation();
        fn(e);
    };
}
function domContentLoaded() {
    return new Promise(function (resolve) {
        var readyState = document.readyState;
        if (readyState === 'complete' || (document && document.body !== null)) {
            vs_base_common_platform__WEBPACK_IMPORTED_MODULE_8__["setImmediate"](resolve);
        }
        else {
            window.addEventListener('DOMContentLoaded', resolve, false);
        }
    });
}
/**
 * Find a value usable for a dom node size such that the likelihood that it would be
 * displayed with constant screen pixels size is as high as possible.
 *
 * e.g. We would desire for the cursors to be 2px (CSS px) wide. Under a devicePixelRatio
 * of 1.25, the cursor will be 2.5 screen pixels wide. Depending on how the dom node aligns/"snaps"
 * with the screen pixels, it will sometimes be rendered with 2 screen pixels, and sometimes with 3 screen pixels.
 */
function computeScreenAwareSize(cssPx) {
    var screenPx = window.devicePixelRatio * cssPx;
    return Math.max(1, Math.floor(screenPx)) / window.devicePixelRatio;
}
/**
 * See https://github.com/Microsoft/monaco-editor/issues/601
 * To protect against malicious code in the linked site, particularly phishing attempts,
 * the window.opener should be set to null to prevent the linked site from having access
 * to change the location of the current page.
 * See https://mathiasbynens.github.io/rel-noopener/
 */
function windowOpenNoOpener(url) {
    if (vs_base_common_platform__WEBPACK_IMPORTED_MODULE_8__["isNative"] || vs_base_browser_browser__WEBPACK_IMPORTED_MODULE_0__["isEdgeWebView"]) {
        // In VSCode, window.open() always returns null...
        // The same is true for a WebView (see https://github.com/Microsoft/monaco-editor/issues/628)
        window.open(url);
    }
    else {
        var newTab = window.open();
        if (newTab) {
            newTab.opener = null;
            newTab.location.href = url;
        }
    }
}
function animate(fn) {
    var step = function () {
        fn();
        stepDisposable = scheduleAtNextAnimationFrame(step);
    };
    var stepDisposable = scheduleAtNextAnimationFrame(step);
    return Object(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_7__["toDisposable"])(function () { return stepDisposable.dispose(); });
}


/***/ }),

/***/ "./src/vs/base/browser/event.ts":
/*!**************************************!*\
  !*** ./src/vs/base/browser/event.ts ***!
  \**************************************/
/*! exports provided: domEvent, stop */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domEvent", function() { return domEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stop", function() { return stop; });
/* harmony import */ var vs_base_common_event__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/event */ "./src/vs/base/common/event.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

var domEvent = function (element, type, useCapture) {
    var fn = function (e) { return emitter.fire(e); };
    var emitter = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_0__["Emitter"]({
        onFirstListenerAdd: function () {
            element.addEventListener(type, fn, useCapture);
        },
        onLastListenerRemove: function () {
            element.removeEventListener(type, fn, useCapture);
        }
    });
    return emitter.event;
};
function stop(event) {
    return vs_base_common_event__WEBPACK_IMPORTED_MODULE_0__["Event"].map(event, function (e) {
        e.preventDefault();
        e.stopPropagation();
        return e;
    });
}


/***/ }),

/***/ "./src/vs/base/browser/fastDomNode.ts":
/*!********************************************!*\
  !*** ./src/vs/base/browser/fastDomNode.ts ***!
  \********************************************/
/*! exports provided: FastDomNode, createFastDomNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FastDomNode", function() { return FastDomNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFastDomNode", function() { return createFastDomNode; });
/* harmony import */ var vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/browser/dom */ "./src/vs/base/browser/dom.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

var FastDomNode = /** @class */ (function () {
    function FastDomNode(domNode) {
        this.domNode = domNode;
        this._maxWidth = -1;
        this._width = -1;
        this._height = -1;
        this._top = -1;
        this._left = -1;
        this._bottom = -1;
        this._right = -1;
        this._fontFamily = '';
        this._fontWeight = '';
        this._fontSize = -1;
        this._lineHeight = -1;
        this._letterSpacing = -100;
        this._className = '';
        this._display = '';
        this._position = '';
        this._visibility = '';
        this._layerHint = false;
    }
    FastDomNode.prototype.setMaxWidth = function (maxWidth) {
        if (this._maxWidth === maxWidth) {
            return;
        }
        this._maxWidth = maxWidth;
        this.domNode.style.maxWidth = this._maxWidth + 'px';
    };
    FastDomNode.prototype.setWidth = function (width) {
        if (this._width === width) {
            return;
        }
        this._width = width;
        this.domNode.style.width = this._width + 'px';
    };
    FastDomNode.prototype.setHeight = function (height) {
        if (this._height === height) {
            return;
        }
        this._height = height;
        this.domNode.style.height = this._height + 'px';
    };
    FastDomNode.prototype.setTop = function (top) {
        if (this._top === top) {
            return;
        }
        this._top = top;
        this.domNode.style.top = this._top + 'px';
    };
    FastDomNode.prototype.unsetTop = function () {
        if (this._top === -1) {
            return;
        }
        this._top = -1;
        this.domNode.style.top = '';
    };
    FastDomNode.prototype.setLeft = function (left) {
        if (this._left === left) {
            return;
        }
        this._left = left;
        this.domNode.style.left = this._left + 'px';
    };
    FastDomNode.prototype.setBottom = function (bottom) {
        if (this._bottom === bottom) {
            return;
        }
        this._bottom = bottom;
        this.domNode.style.bottom = this._bottom + 'px';
    };
    FastDomNode.prototype.setRight = function (right) {
        if (this._right === right) {
            return;
        }
        this._right = right;
        this.domNode.style.right = this._right + 'px';
    };
    FastDomNode.prototype.setFontFamily = function (fontFamily) {
        if (this._fontFamily === fontFamily) {
            return;
        }
        this._fontFamily = fontFamily;
        this.domNode.style.fontFamily = this._fontFamily;
    };
    FastDomNode.prototype.setFontWeight = function (fontWeight) {
        if (this._fontWeight === fontWeight) {
            return;
        }
        this._fontWeight = fontWeight;
        this.domNode.style.fontWeight = this._fontWeight;
    };
    FastDomNode.prototype.setFontSize = function (fontSize) {
        if (this._fontSize === fontSize) {
            return;
        }
        this._fontSize = fontSize;
        this.domNode.style.fontSize = this._fontSize + 'px';
    };
    FastDomNode.prototype.setLineHeight = function (lineHeight) {
        if (this._lineHeight === lineHeight) {
            return;
        }
        this._lineHeight = lineHeight;
        this.domNode.style.lineHeight = this._lineHeight + 'px';
    };
    FastDomNode.prototype.setLetterSpacing = function (letterSpacing) {
        if (this._letterSpacing === letterSpacing) {
            return;
        }
        this._letterSpacing = letterSpacing;
        this.domNode.style.letterSpacing = this._letterSpacing + 'px';
    };
    FastDomNode.prototype.setClassName = function (className) {
        if (this._className === className) {
            return;
        }
        this._className = className;
        this.domNode.className = this._className;
    };
    FastDomNode.prototype.toggleClassName = function (className, shouldHaveIt) {
        vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["toggleClass"](this.domNode, className, shouldHaveIt);
        this._className = this.domNode.className;
    };
    FastDomNode.prototype.setDisplay = function (display) {
        if (this._display === display) {
            return;
        }
        this._display = display;
        this.domNode.style.display = this._display;
    };
    FastDomNode.prototype.setPosition = function (position) {
        if (this._position === position) {
            return;
        }
        this._position = position;
        this.domNode.style.position = this._position;
    };
    FastDomNode.prototype.setVisibility = function (visibility) {
        if (this._visibility === visibility) {
            return;
        }
        this._visibility = visibility;
        this.domNode.style.visibility = this._visibility;
    };
    FastDomNode.prototype.setLayerHinting = function (layerHint) {
        if (this._layerHint === layerHint) {
            return;
        }
        this._layerHint = layerHint;
        this.domNode.style.willChange = this._layerHint ? 'transform' : 'auto';
    };
    FastDomNode.prototype.setAttribute = function (name, value) {
        this.domNode.setAttribute(name, value);
    };
    FastDomNode.prototype.removeAttribute = function (name) {
        this.domNode.removeAttribute(name);
    };
    FastDomNode.prototype.appendChild = function (child) {
        this.domNode.appendChild(child.domNode);
    };
    FastDomNode.prototype.removeChild = function (child) {
        this.domNode.removeChild(child.domNode);
    };
    FastDomNode.ctorParameters = function () { return [
        { type: undefined }
    ]; };
    return FastDomNode;
}());

function createFastDomNode(domNode) {
    return new FastDomNode(domNode);
}


/***/ }),

/***/ "./src/vs/base/browser/globalMouseMoveMonitor.ts":
/*!*******************************************************!*\
  !*** ./src/vs/base/browser/globalMouseMoveMonitor.ts ***!
  \*******************************************************/
/*! exports provided: standardMouseMoveMerger, GlobalMouseMoveMonitor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "standardMouseMoveMerger", function() { return standardMouseMoveMerger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GlobalMouseMoveMonitor", function() { return GlobalMouseMoveMonitor; });
/* harmony import */ var vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/browser/dom */ "./src/vs/base/browser/dom.ts");
/* harmony import */ var vs_base_browser_iframe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/browser/iframe */ "./src/vs/base/browser/iframe.ts");
/* harmony import */ var vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vs/base/browser/mouseEvent */ "./src/vs/base/browser/mouseEvent.ts");
/* harmony import */ var vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vs/base/common/lifecycle */ "./src/vs/base/common/lifecycle.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/




function standardMouseMoveMerger(lastEvent, currentEvent) {
    var ev = new vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_2__["StandardMouseEvent"](currentEvent);
    ev.preventDefault();
    return {
        leftButton: ev.leftButton,
        posx: ev.posx,
        posy: ev.posy
    };
}
var GlobalMouseMoveMonitor = /** @class */ (function () {
    function GlobalMouseMoveMonitor() {
        this.hooks = new vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_3__["DisposableStore"]();
        this.mouseMoveEventMerger = null;
        this.mouseMoveCallback = null;
        this.onStopCallback = null;
    }
    GlobalMouseMoveMonitor.prototype.dispose = function () {
        this.stopMonitoring(false);
        this.hooks.dispose();
    };
    GlobalMouseMoveMonitor.prototype.stopMonitoring = function (invokeStopCallback) {
        if (!this.isMonitoring()) {
            // Not monitoring
            return;
        }
        // Unhook
        this.hooks.clear();
        this.mouseMoveEventMerger = null;
        this.mouseMoveCallback = null;
        var onStopCallback = this.onStopCallback;
        this.onStopCallback = null;
        if (invokeStopCallback && onStopCallback) {
            onStopCallback();
        }
    };
    GlobalMouseMoveMonitor.prototype.isMonitoring = function () {
        return !!this.mouseMoveEventMerger;
    };
    GlobalMouseMoveMonitor.prototype.startMonitoring = function (mouseMoveEventMerger, mouseMoveCallback, onStopCallback) {
        var _this = this;
        if (this.isMonitoring()) {
            // I am already hooked
            return;
        }
        this.mouseMoveEventMerger = mouseMoveEventMerger;
        this.mouseMoveCallback = mouseMoveCallback;
        this.onStopCallback = onStopCallback;
        var windowChain = vs_base_browser_iframe__WEBPACK_IMPORTED_MODULE_1__["IframeUtils"].getSameOriginWindowChain();
        for (var _i = 0, windowChain_1 = windowChain; _i < windowChain_1.length; _i++) {
            var element = windowChain_1[_i];
            this.hooks.add(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["addDisposableThrottledListener"](element.window.document, 'mousemove', function (data) { return _this.mouseMoveCallback(data); }, function (lastEvent, currentEvent) { return _this.mouseMoveEventMerger(lastEvent, currentEvent); }));
            this.hooks.add(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["addDisposableListener"](element.window.document, 'mouseup', function (e) { return _this.stopMonitoring(true); }));
        }
        if (vs_base_browser_iframe__WEBPACK_IMPORTED_MODULE_1__["IframeUtils"].hasDifferentOriginAncestor()) {
            var lastSameOriginAncestor = windowChain[windowChain.length - 1];
            // We might miss a mouse up if it happens outside the iframe
            // This one is for Chrome
            this.hooks.add(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["addDisposableListener"](lastSameOriginAncestor.window.document, 'mouseout', function (browserEvent) {
                var e = new vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_2__["StandardMouseEvent"](browserEvent);
                if (e.target.tagName.toLowerCase() === 'html') {
                    _this.stopMonitoring(true);
                }
            }));
            // This one is for FF
            this.hooks.add(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["addDisposableListener"](lastSameOriginAncestor.window.document, 'mouseover', function (browserEvent) {
                var e = new vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_2__["StandardMouseEvent"](browserEvent);
                if (e.target.tagName.toLowerCase() === 'html') {
                    _this.stopMonitoring(true);
                }
            }));
            // This one is for IE
            this.hooks.add(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["addDisposableListener"](lastSameOriginAncestor.window.document.body, 'mouseleave', function (browserEvent) {
                _this.stopMonitoring(true);
            }));
        }
    };
    return GlobalMouseMoveMonitor;
}());



/***/ }),

/***/ "./src/vs/base/browser/iframe.ts":
/*!***************************************!*\
  !*** ./src/vs/base/browser/iframe.ts ***!
  \***************************************/
/*! exports provided: IframeUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IframeUtils", function() { return IframeUtils; });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var hasDifferentOriginAncestorFlag = false;
var sameOriginWindowChainCache = null;
function getParentWindowIfSameOrigin(w) {
    if (!w.parent || w.parent === w) {
        return null;
    }
    // Cannot really tell if we have access to the parent window unless we try to access something in it
    try {
        var location_1 = w.location;
        var parentLocation = w.parent.location;
        if (location_1.protocol !== parentLocation.protocol || location_1.hostname !== parentLocation.hostname || location_1.port !== parentLocation.port) {
            hasDifferentOriginAncestorFlag = true;
            return null;
        }
    }
    catch (e) {
        hasDifferentOriginAncestorFlag = true;
        return null;
    }
    return w.parent;
}
function findIframeElementInParentWindow(parentWindow, childWindow) {
    var parentWindowIframes = parentWindow.document.getElementsByTagName('iframe');
    var iframe;
    for (var i = 0, len = parentWindowIframes.length; i < len; i++) {
        iframe = parentWindowIframes[i];
        if (iframe.contentWindow === childWindow) {
            return iframe;
        }
    }
    return null;
}
var IframeUtils = /** @class */ (function () {
    function IframeUtils() {
    }
    /**
     * Returns a chain of embedded windows with the same origin (which can be accessed programmatically).
     * Having a chain of length 1 might mean that the current execution environment is running outside of an iframe or inside an iframe embedded in a window with a different origin.
     * To distinguish if at one point the current execution environment is running inside a window with a different origin, see hasDifferentOriginAncestor()
     */
    IframeUtils.getSameOriginWindowChain = function () {
        if (!sameOriginWindowChainCache) {
            sameOriginWindowChainCache = [];
            var w = window;
            var parent_1;
            do {
                parent_1 = getParentWindowIfSameOrigin(w);
                if (parent_1) {
                    sameOriginWindowChainCache.push({
                        window: w,
                        iframeElement: findIframeElementInParentWindow(parent_1, w)
                    });
                }
                else {
                    sameOriginWindowChainCache.push({
                        window: w,
                        iframeElement: null
                    });
                }
                w = parent_1;
            } while (w);
        }
        return sameOriginWindowChainCache.slice(0);
    };
    /**
     * Returns true if the current execution environment is chained in a list of iframes which at one point ends in a window with a different origin.
     * Returns false if the current execution environment is not running inside an iframe or if the entire chain of iframes have the same origin.
     */
    IframeUtils.hasDifferentOriginAncestor = function () {
        if (!sameOriginWindowChainCache) {
            this.getSameOriginWindowChain();
        }
        return hasDifferentOriginAncestorFlag;
    };
    /**
     * Returns the position of `childWindow` relative to `ancestorWindow`
     */
    IframeUtils.getPositionOfChildWindowRelativeToAncestorWindow = function (childWindow, ancestorWindow) {
        if (!ancestorWindow || childWindow === ancestorWindow) {
            return {
                top: 0,
                left: 0
            };
        }
        var top = 0, left = 0;
        var windowChain = this.getSameOriginWindowChain();
        for (var _i = 0, windowChain_1 = windowChain; _i < windowChain_1.length; _i++) {
            var windowChainEl = windowChain_1[_i];
            if (windowChainEl.window === ancestorWindow) {
                break;
            }
            if (!windowChainEl.iframeElement) {
                break;
            }
            var boundingRect = windowChainEl.iframeElement.getBoundingClientRect();
            top += boundingRect.top;
            left += boundingRect.left;
        }
        return {
            top: top,
            left: left
        };
    };
    return IframeUtils;
}());



/***/ }),

/***/ "./src/vs/base/browser/keyboardEvent.ts":
/*!**********************************************!*\
  !*** ./src/vs/base/browser/keyboardEvent.ts ***!
  \**********************************************/
/*! exports provided: getCodeForKeyCode, StandardKeyboardEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCodeForKeyCode", function() { return getCodeForKeyCode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StandardKeyboardEvent", function() { return StandardKeyboardEvent; });
/* harmony import */ var vs_base_browser_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/browser/browser */ "./src/vs/base/browser/browser.ts");
/* harmony import */ var vs_base_common_keyCodes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/common/keyCodes */ "./src/vs/base/common/keyCodes.ts");
/* harmony import */ var vs_base_common_platform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vs/base/common/platform */ "./src/vs/base/common/platform.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/



var KEY_CODE_MAP = new Array(230);
var INVERSE_KEY_CODE_MAP = new Array(112 /* MAX_VALUE */);
(function () {
    for (var i = 0; i < INVERSE_KEY_CODE_MAP.length; i++) {
        INVERSE_KEY_CODE_MAP[i] = -1;
    }
    function define(code, keyCode) {
        KEY_CODE_MAP[code] = keyCode;
        INVERSE_KEY_CODE_MAP[keyCode] = code;
    }
    define(3, 7 /* PauseBreak */); // VK_CANCEL 0x03 Control-break processing
    define(8, 1 /* Backspace */);
    define(9, 2 /* Tab */);
    define(13, 3 /* Enter */);
    define(16, 4 /* Shift */);
    define(17, 5 /* Ctrl */);
    define(18, 6 /* Alt */);
    define(19, 7 /* PauseBreak */);
    define(20, 8 /* CapsLock */);
    define(27, 9 /* Escape */);
    define(32, 10 /* Space */);
    define(33, 11 /* PageUp */);
    define(34, 12 /* PageDown */);
    define(35, 13 /* End */);
    define(36, 14 /* Home */);
    define(37, 15 /* LeftArrow */);
    define(38, 16 /* UpArrow */);
    define(39, 17 /* RightArrow */);
    define(40, 18 /* DownArrow */);
    define(45, 19 /* Insert */);
    define(46, 20 /* Delete */);
    define(48, 21 /* KEY_0 */);
    define(49, 22 /* KEY_1 */);
    define(50, 23 /* KEY_2 */);
    define(51, 24 /* KEY_3 */);
    define(52, 25 /* KEY_4 */);
    define(53, 26 /* KEY_5 */);
    define(54, 27 /* KEY_6 */);
    define(55, 28 /* KEY_7 */);
    define(56, 29 /* KEY_8 */);
    define(57, 30 /* KEY_9 */);
    define(65, 31 /* KEY_A */);
    define(66, 32 /* KEY_B */);
    define(67, 33 /* KEY_C */);
    define(68, 34 /* KEY_D */);
    define(69, 35 /* KEY_E */);
    define(70, 36 /* KEY_F */);
    define(71, 37 /* KEY_G */);
    define(72, 38 /* KEY_H */);
    define(73, 39 /* KEY_I */);
    define(74, 40 /* KEY_J */);
    define(75, 41 /* KEY_K */);
    define(76, 42 /* KEY_L */);
    define(77, 43 /* KEY_M */);
    define(78, 44 /* KEY_N */);
    define(79, 45 /* KEY_O */);
    define(80, 46 /* KEY_P */);
    define(81, 47 /* KEY_Q */);
    define(82, 48 /* KEY_R */);
    define(83, 49 /* KEY_S */);
    define(84, 50 /* KEY_T */);
    define(85, 51 /* KEY_U */);
    define(86, 52 /* KEY_V */);
    define(87, 53 /* KEY_W */);
    define(88, 54 /* KEY_X */);
    define(89, 55 /* KEY_Y */);
    define(90, 56 /* KEY_Z */);
    define(93, 58 /* ContextMenu */);
    define(96, 93 /* NUMPAD_0 */);
    define(97, 94 /* NUMPAD_1 */);
    define(98, 95 /* NUMPAD_2 */);
    define(99, 96 /* NUMPAD_3 */);
    define(100, 97 /* NUMPAD_4 */);
    define(101, 98 /* NUMPAD_5 */);
    define(102, 99 /* NUMPAD_6 */);
    define(103, 100 /* NUMPAD_7 */);
    define(104, 101 /* NUMPAD_8 */);
    define(105, 102 /* NUMPAD_9 */);
    define(106, 103 /* NUMPAD_MULTIPLY */);
    define(107, 104 /* NUMPAD_ADD */);
    define(108, 105 /* NUMPAD_SEPARATOR */);
    define(109, 106 /* NUMPAD_SUBTRACT */);
    define(110, 107 /* NUMPAD_DECIMAL */);
    define(111, 108 /* NUMPAD_DIVIDE */);
    define(112, 59 /* F1 */);
    define(113, 60 /* F2 */);
    define(114, 61 /* F3 */);
    define(115, 62 /* F4 */);
    define(116, 63 /* F5 */);
    define(117, 64 /* F6 */);
    define(118, 65 /* F7 */);
    define(119, 66 /* F8 */);
    define(120, 67 /* F9 */);
    define(121, 68 /* F10 */);
    define(122, 69 /* F11 */);
    define(123, 70 /* F12 */);
    define(124, 71 /* F13 */);
    define(125, 72 /* F14 */);
    define(126, 73 /* F15 */);
    define(127, 74 /* F16 */);
    define(128, 75 /* F17 */);
    define(129, 76 /* F18 */);
    define(130, 77 /* F19 */);
    define(144, 78 /* NumLock */);
    define(145, 79 /* ScrollLock */);
    define(186, 80 /* US_SEMICOLON */);
    define(187, 81 /* US_EQUAL */);
    define(188, 82 /* US_COMMA */);
    define(189, 83 /* US_MINUS */);
    define(190, 84 /* US_DOT */);
    define(191, 85 /* US_SLASH */);
    define(192, 86 /* US_BACKTICK */);
    define(193, 110 /* ABNT_C1 */);
    define(194, 111 /* ABNT_C2 */);
    define(219, 87 /* US_OPEN_SQUARE_BRACKET */);
    define(220, 88 /* US_BACKSLASH */);
    define(221, 89 /* US_CLOSE_SQUARE_BRACKET */);
    define(222, 90 /* US_QUOTE */);
    define(223, 91 /* OEM_8 */);
    define(226, 92 /* OEM_102 */);
    /**
     * https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html
     * If an Input Method Editor is processing key input and the event is keydown, return 229.
     */
    define(229, 109 /* KEY_IN_COMPOSITION */);
    if (vs_base_browser_browser__WEBPACK_IMPORTED_MODULE_0__["isIE"]) {
        define(91, 57 /* Meta */);
    }
    else if (vs_base_browser_browser__WEBPACK_IMPORTED_MODULE_0__["isFirefox"]) {
        define(59, 80 /* US_SEMICOLON */);
        define(107, 81 /* US_EQUAL */);
        define(109, 83 /* US_MINUS */);
        if (vs_base_common_platform__WEBPACK_IMPORTED_MODULE_2__["isMacintosh"]) {
            define(224, 57 /* Meta */);
        }
    }
    else if (vs_base_browser_browser__WEBPACK_IMPORTED_MODULE_0__["isWebKit"]) {
        define(91, 57 /* Meta */);
        if (vs_base_common_platform__WEBPACK_IMPORTED_MODULE_2__["isMacintosh"]) {
            // the two meta keys in the Mac have different key codes (91 and 93)
            define(93, 57 /* Meta */);
        }
        else {
            define(92, 57 /* Meta */);
        }
    }
})();
function extractKeyCode(e) {
    if (e.charCode) {
        // "keypress" events mostly
        var char = String.fromCharCode(e.charCode).toUpperCase();
        return vs_base_common_keyCodes__WEBPACK_IMPORTED_MODULE_1__["KeyCodeUtils"].fromString(char);
    }
    return KEY_CODE_MAP[e.keyCode] || 0 /* Unknown */;
}
function getCodeForKeyCode(keyCode) {
    return INVERSE_KEY_CODE_MAP[keyCode];
}
var ctrlKeyMod = (vs_base_common_platform__WEBPACK_IMPORTED_MODULE_2__["isMacintosh"] ? 256 /* WinCtrl */ : 2048 /* CtrlCmd */);
var altKeyMod = 512 /* Alt */;
var shiftKeyMod = 1024 /* Shift */;
var metaKeyMod = (vs_base_common_platform__WEBPACK_IMPORTED_MODULE_2__["isMacintosh"] ? 2048 /* CtrlCmd */ : 256 /* WinCtrl */);
var StandardKeyboardEvent = /** @class */ (function () {
    function StandardKeyboardEvent(source) {
        this._standardKeyboardEventBrand = true;
        var e = source;
        this.browserEvent = e;
        this.target = e.target;
        this.ctrlKey = e.ctrlKey;
        this.shiftKey = e.shiftKey;
        this.altKey = e.altKey;
        this.metaKey = e.metaKey;
        this.keyCode = extractKeyCode(e);
        this.code = e.code;
        // console.info(e.type + ": keyCode: " + e.keyCode + ", which: " + e.which + ", charCode: " + e.charCode + ", detail: " + e.detail + " ====> " + this.keyCode + ' -- ' + KeyCode[this.keyCode]);
        this.ctrlKey = this.ctrlKey || this.keyCode === 5 /* Ctrl */;
        this.altKey = this.altKey || this.keyCode === 6 /* Alt */;
        this.shiftKey = this.shiftKey || this.keyCode === 4 /* Shift */;
        this.metaKey = this.metaKey || this.keyCode === 57 /* Meta */;
        this._asKeybinding = this._computeKeybinding();
        this._asRuntimeKeybinding = this._computeRuntimeKeybinding();
        // console.log(`code: ${e.code}, keyCode: ${e.keyCode}, key: ${e.key}`);
    }
    StandardKeyboardEvent.prototype.preventDefault = function () {
        if (this.browserEvent && this.browserEvent.preventDefault) {
            this.browserEvent.preventDefault();
        }
    };
    StandardKeyboardEvent.prototype.stopPropagation = function () {
        if (this.browserEvent && this.browserEvent.stopPropagation) {
            this.browserEvent.stopPropagation();
        }
    };
    StandardKeyboardEvent.prototype.toKeybinding = function () {
        return this._asRuntimeKeybinding;
    };
    StandardKeyboardEvent.prototype.equals = function (other) {
        return this._asKeybinding === other;
    };
    StandardKeyboardEvent.prototype._computeKeybinding = function () {
        var key = 0 /* Unknown */;
        if (this.keyCode !== 5 /* Ctrl */ && this.keyCode !== 4 /* Shift */ && this.keyCode !== 6 /* Alt */ && this.keyCode !== 57 /* Meta */) {
            key = this.keyCode;
        }
        var result = 0;
        if (this.ctrlKey) {
            result |= ctrlKeyMod;
        }
        if (this.altKey) {
            result |= altKeyMod;
        }
        if (this.shiftKey) {
            result |= shiftKeyMod;
        }
        if (this.metaKey) {
            result |= metaKeyMod;
        }
        result |= key;
        return result;
    };
    StandardKeyboardEvent.prototype._computeRuntimeKeybinding = function () {
        var key = 0 /* Unknown */;
        if (this.keyCode !== 5 /* Ctrl */ && this.keyCode !== 4 /* Shift */ && this.keyCode !== 6 /* Alt */ && this.keyCode !== 57 /* Meta */) {
            key = this.keyCode;
        }
        return new vs_base_common_keyCodes__WEBPACK_IMPORTED_MODULE_1__["SimpleKeybinding"](this.ctrlKey, this.shiftKey, this.altKey, this.metaKey, key);
    };
    StandardKeyboardEvent.ctorParameters = function () { return [
        { type: KeyboardEvent }
    ]; };
    return StandardKeyboardEvent;
}());



/***/ }),

/***/ "./src/vs/base/browser/mouseEvent.ts":
/*!*******************************************!*\
  !*** ./src/vs/base/browser/mouseEvent.ts ***!
  \*******************************************/
/*! exports provided: StandardMouseEvent, DragMouseEvent, StandardWheelEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StandardMouseEvent", function() { return StandardMouseEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DragMouseEvent", function() { return DragMouseEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StandardWheelEvent", function() { return StandardWheelEvent; });
/* harmony import */ var vs_base_browser_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/browser/browser */ "./src/vs/base/browser/browser.ts");
/* harmony import */ var vs_base_browser_iframe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/browser/iframe */ "./src/vs/base/browser/iframe.ts");
/* harmony import */ var vs_base_common_platform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vs/base/common/platform */ "./src/vs/base/common/platform.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



var StandardMouseEvent = /** @class */ (function () {
    function StandardMouseEvent(e) {
        this.timestamp = Date.now();
        this.browserEvent = e;
        this.leftButton = e.button === 0;
        this.middleButton = e.button === 1;
        this.rightButton = e.button === 2;
        this.target = e.target;
        this.detail = e.detail || 1;
        if (e.type === 'dblclick') {
            this.detail = 2;
        }
        this.ctrlKey = e.ctrlKey;
        this.shiftKey = e.shiftKey;
        this.altKey = e.altKey;
        this.metaKey = e.metaKey;
        if (typeof e.pageX === 'number') {
            this.posx = e.pageX;
            this.posy = e.pageY;
        }
        else {
            // Probably hit by MSGestureEvent
            this.posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
            this.posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;
        }
        // Find the position of the iframe this code is executing in relative to the iframe where the event was captured.
        var iframeOffsets = vs_base_browser_iframe__WEBPACK_IMPORTED_MODULE_1__["IframeUtils"].getPositionOfChildWindowRelativeToAncestorWindow(self, e.view);
        this.posx -= iframeOffsets.left;
        this.posy -= iframeOffsets.top;
    }
    StandardMouseEvent.prototype.preventDefault = function () {
        if (this.browserEvent.preventDefault) {
            this.browserEvent.preventDefault();
        }
    };
    StandardMouseEvent.prototype.stopPropagation = function () {
        if (this.browserEvent.stopPropagation) {
            this.browserEvent.stopPropagation();
        }
    };
    StandardMouseEvent.ctorParameters = function () { return [
        { type: MouseEvent }
    ]; };
    return StandardMouseEvent;
}());

var DragMouseEvent = /** @class */ (function (_super) {
    __extends(DragMouseEvent, _super);
    function DragMouseEvent(e) {
        var _this = _super.call(this, e) || this;
        _this.dataTransfer = e.dataTransfer;
        return _this;
    }
    DragMouseEvent.ctorParameters = function () { return [
        { type: MouseEvent }
    ]; };
    return DragMouseEvent;
}(StandardMouseEvent));

var StandardWheelEvent = /** @class */ (function () {
    function StandardWheelEvent(e, deltaX, deltaY) {
        if (deltaX === void 0) { deltaX = 0; }
        if (deltaY === void 0) { deltaY = 0; }
        this.browserEvent = e || null;
        this.target = e ? (e.target || e.targetNode || e.srcElement) : null;
        this.deltaY = deltaY;
        this.deltaX = deltaX;
        if (e) {
            var e1 = e;
            var e2 = e;
            // vertical delta scroll
            if (typeof e1.wheelDeltaY !== 'undefined') {
                this.deltaY = e1.wheelDeltaY / 120;
            }
            else if (typeof e2.VERTICAL_AXIS !== 'undefined' && e2.axis === e2.VERTICAL_AXIS) {
                this.deltaY = -e2.detail / 3;
            }
            // horizontal delta scroll
            if (typeof e1.wheelDeltaX !== 'undefined') {
                if (vs_base_browser_browser__WEBPACK_IMPORTED_MODULE_0__["isSafari"] && vs_base_common_platform__WEBPACK_IMPORTED_MODULE_2__["isWindows"]) {
                    this.deltaX = -(e1.wheelDeltaX / 120);
                }
                else {
                    this.deltaX = e1.wheelDeltaX / 120;
                }
            }
            else if (typeof e2.HORIZONTAL_AXIS !== 'undefined' && e2.axis === e2.HORIZONTAL_AXIS) {
                this.deltaX = -e.detail / 3;
            }
            // Assume a vertical scroll if nothing else worked
            if (this.deltaY === 0 && this.deltaX === 0 && e.wheelDelta) {
                this.deltaY = e.wheelDelta / 120;
            }
        }
    }
    StandardWheelEvent.prototype.preventDefault = function () {
        if (this.browserEvent) {
            if (this.browserEvent.preventDefault) {
                this.browserEvent.preventDefault();
            }
        }
    };
    StandardWheelEvent.prototype.stopPropagation = function () {
        if (this.browserEvent) {
            if (this.browserEvent.stopPropagation) {
                this.browserEvent.stopPropagation();
            }
        }
    };
    StandardWheelEvent.ctorParameters = function () { return [
        { type: undefined },
        { type: Number },
        { type: Number }
    ]; };
    return StandardWheelEvent;
}());



/***/ }),

/***/ "./src/vs/base/browser/touch.ts":
/*!**************************************!*\
  !*** ./src/vs/base/browser/touch.ts ***!
  \**************************************/
/*! exports provided: EventType, Gesture */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventType", function() { return EventType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Gesture", function() { return Gesture; });
/* harmony import */ var vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/arrays */ "./src/vs/base/common/arrays.ts");
/* harmony import */ var vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/common/lifecycle */ "./src/vs/base/common/lifecycle.ts");
/* harmony import */ var vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vs/base/browser/dom */ "./src/vs/base/browser/dom.ts");
/* harmony import */ var vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vs/base/common/decorators */ "./src/vs/base/common/decorators.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var EventType;
(function (EventType) {
    EventType.Tap = '-monaco-gesturetap';
    EventType.Change = '-monaco-gesturechange';
    EventType.Start = '-monaco-gesturestart';
    EventType.End = '-monaco-gesturesend';
    EventType.Contextmenu = '-monaco-gesturecontextmenu';
})(EventType || (EventType = {}));
var Gesture = /** @class */ (function (_super) {
    __extends(Gesture, _super);
    function Gesture() {
        var _this = _super.call(this) || this;
        _this.activeTouches = {};
        _this.handle = null;
        _this.targets = [];
        _this._register(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["addDisposableListener"](document, 'touchstart', function (e) { return _this.onTouchStart(e); }));
        _this._register(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["addDisposableListener"](document, 'touchend', function (e) { return _this.onTouchEnd(e); }));
        _this._register(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["addDisposableListener"](document, 'touchmove', function (e) { return _this.onTouchMove(e); }));
        return _this;
    }
    Gesture.addTarget = function (element) {
        if (!Gesture.isTouchDevice()) {
            return;
        }
        if (!Gesture.INSTANCE) {
            Gesture.INSTANCE = new Gesture();
        }
        Gesture.INSTANCE.targets.push(element);
    };
    Gesture.isTouchDevice = function () {
        return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || window.navigator.msMaxTouchPoints > 0;
    };
    Gesture.prototype.dispose = function () {
        if (this.handle) {
            this.handle.dispose();
            this.handle = null;
        }
        _super.prototype.dispose.call(this);
    };
    Gesture.prototype.onTouchStart = function (e) {
        var timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.
        if (this.handle) {
            this.handle.dispose();
            this.handle = null;
        }
        for (var i = 0, len = e.targetTouches.length; i < len; i++) {
            var touch = e.targetTouches.item(i);
            this.activeTouches[touch.identifier] = {
                id: touch.identifier,
                initialTarget: touch.target,
                initialTimeStamp: timestamp,
                initialPageX: touch.pageX,
                initialPageY: touch.pageY,
                rollingTimestamps: [timestamp],
                rollingPageX: [touch.pageX],
                rollingPageY: [touch.pageY]
            };
            var evt = this.newGestureEvent(EventType.Start, touch.target);
            evt.pageX = touch.pageX;
            evt.pageY = touch.pageY;
            this.dispatchEvent(evt);
        }
        if (this.dispatched) {
            e.preventDefault();
            e.stopPropagation();
            this.dispatched = false;
        }
    };
    Gesture.prototype.onTouchEnd = function (e) {
        var timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.
        var activeTouchCount = Object.keys(this.activeTouches).length;
        var _loop_1 = function (i, len) {
            var touch = e.changedTouches.item(i);
            if (!this_1.activeTouches.hasOwnProperty(String(touch.identifier))) {
                console.warn('move of an UNKNOWN touch', touch);
                return "continue";
            }
            var data = this_1.activeTouches[touch.identifier], holdTime = Date.now() - data.initialTimeStamp;
            if (holdTime < Gesture.HOLD_DELAY
                && Math.abs(data.initialPageX - vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_0__["tail"](data.rollingPageX)) < 30
                && Math.abs(data.initialPageY - vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_0__["tail"](data.rollingPageY)) < 30) {
                var evt = this_1.newGestureEvent(EventType.Tap, data.initialTarget);
                evt.pageX = vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_0__["tail"](data.rollingPageX);
                evt.pageY = vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_0__["tail"](data.rollingPageY);
                this_1.dispatchEvent(evt);
            }
            else if (holdTime >= Gesture.HOLD_DELAY
                && Math.abs(data.initialPageX - vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_0__["tail"](data.rollingPageX)) < 30
                && Math.abs(data.initialPageY - vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_0__["tail"](data.rollingPageY)) < 30) {
                var evt = this_1.newGestureEvent(EventType.Contextmenu, data.initialTarget);
                evt.pageX = vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_0__["tail"](data.rollingPageX);
                evt.pageY = vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_0__["tail"](data.rollingPageY);
                this_1.dispatchEvent(evt);
            }
            else if (activeTouchCount === 1) {
                var finalX = vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_0__["tail"](data.rollingPageX);
                var finalY = vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_0__["tail"](data.rollingPageY);
                var deltaT = vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_0__["tail"](data.rollingTimestamps) - data.rollingTimestamps[0];
                var deltaX = finalX - data.rollingPageX[0];
                var deltaY = finalY - data.rollingPageY[0];
                // We need to get all the dispatch targets on the start of the inertia event
                var dispatchTo = this_1.targets.filter(function (t) { return data.initialTarget instanceof Node && t.contains(data.initialTarget); });
                this_1.inertia(dispatchTo, timestamp, // time now
                Math.abs(deltaX) / deltaT, // speed
                deltaX > 0 ? 1 : -1, // x direction
                finalX, // x now
                Math.abs(deltaY) / deltaT, // y speed
                deltaY > 0 ? 1 : -1, // y direction
                finalY // y now
                );
            }
            this_1.dispatchEvent(this_1.newGestureEvent(EventType.End, data.initialTarget));
            // forget about this touch
            delete this_1.activeTouches[touch.identifier];
        };
        var this_1 = this;
        for (var i = 0, len = e.changedTouches.length; i < len; i++) {
            _loop_1(i, len);
        }
        if (this.dispatched) {
            e.preventDefault();
            e.stopPropagation();
            this.dispatched = false;
        }
    };
    Gesture.prototype.newGestureEvent = function (type, initialTarget) {
        var event = document.createEvent('CustomEvent');
        event.initEvent(type, false, true);
        event.initialTarget = initialTarget;
        return event;
    };
    Gesture.prototype.dispatchEvent = function (event) {
        var _this = this;
        this.targets.forEach(function (target) {
            if (event.initialTarget instanceof Node && target.contains(event.initialTarget)) {
                target.dispatchEvent(event);
                _this.dispatched = true;
            }
        });
    };
    Gesture.prototype.inertia = function (dispatchTo, t1, vX, dirX, x, vY, dirY, y) {
        var _this = this;
        this.handle = vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["scheduleAtNextAnimationFrame"](function () {
            var now = Date.now();
            // velocity: old speed + accel_over_time
            var deltaT = now - t1, delta_pos_x = 0, delta_pos_y = 0, stopped = true;
            vX += Gesture.SCROLL_FRICTION * deltaT;
            vY += Gesture.SCROLL_FRICTION * deltaT;
            if (vX > 0) {
                stopped = false;
                delta_pos_x = dirX * vX * deltaT;
            }
            if (vY > 0) {
                stopped = false;
                delta_pos_y = dirY * vY * deltaT;
            }
            // dispatch translation event
            var evt = _this.newGestureEvent(EventType.Change);
            evt.translationX = delta_pos_x;
            evt.translationY = delta_pos_y;
            dispatchTo.forEach(function (d) { return d.dispatchEvent(evt); });
            if (!stopped) {
                _this.inertia(dispatchTo, now, vX, dirX, x + delta_pos_x, vY, dirY, y + delta_pos_y);
            }
        });
    };
    Gesture.prototype.onTouchMove = function (e) {
        var timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.
        for (var i = 0, len = e.changedTouches.length; i < len; i++) {
            var touch = e.changedTouches.item(i);
            if (!this.activeTouches.hasOwnProperty(String(touch.identifier))) {
                console.warn('end of an UNKNOWN touch', touch);
                continue;
            }
            var data = this.activeTouches[touch.identifier];
            var evt = this.newGestureEvent(EventType.Change, data.initialTarget);
            evt.translationX = touch.pageX - vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_0__["tail"](data.rollingPageX);
            evt.translationY = touch.pageY - vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_0__["tail"](data.rollingPageY);
            evt.pageX = touch.pageX;
            evt.pageY = touch.pageY;
            this.dispatchEvent(evt);
            // only keep a few data points, to average the final speed
            if (data.rollingPageX.length > 3) {
                data.rollingPageX.shift();
                data.rollingPageY.shift();
                data.rollingTimestamps.shift();
            }
            data.rollingPageX.push(touch.pageX);
            data.rollingPageY.push(touch.pageY);
            data.rollingTimestamps.push(timestamp);
        }
        if (this.dispatched) {
            e.preventDefault();
            e.stopPropagation();
            this.dispatched = false;
        }
    };
    Gesture.SCROLL_FRICTION = -0.005;
    Gesture.HOLD_DELAY = 700;
    __decorate([
        vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_3__["memoize"],
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", Boolean)
    ], Gesture, "isTouchDevice", null);
    return Gesture;
}(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_1__["Disposable"]));



/***/ }),

/***/ "./src/vs/base/browser/ui/list/list.css":
/*!**********************************************!*\
  !*** ./src/vs/base/browser/ui/list/list.css ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n.monaco-list {\r\n\tposition: relative;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\twhite-space: nowrap;\r\n}\r\n\r\n.monaco-list.mouse-support {\r\n\t-webkit-user-select: none;\r\n\t-moz-user-select: -moz-none;\r\n\t-ms-user-select: none;\r\n\t-o-user-select: none;\r\n\tuser-select: none;\r\n}\r\n\r\n.monaco-list > .monaco-scrollable-element {\r\n\theight: 100%;\r\n}\r\n\r\n.monaco-list-rows {\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n}\r\n\r\n.monaco-list.horizontal-scrolling .monaco-list-rows {\r\n\twidth: auto;\r\n\tmin-width: 100%;\r\n}\r\n\r\n.monaco-list-row {\r\n\tposition: absolute;\r\n\t-o-box-sizing:\t\tborder-box;\r\n\t-ms-box-sizing:\t\tborder-box;\r\n\tbox-sizing:\t\t\tborder-box;\r\n\toverflow: hidden;\r\n\twidth: 100%;\r\n}\r\n\r\n.monaco-list.mouse-support .monaco-list-row {\r\n\tcursor: pointer;\r\n\ttouch-action: none;\r\n}\r\n\r\n/* for OS X ballistic scrolling */\r\n\r\n.monaco-list-row.scrolling {\r\n\tdisplay: none !important;\r\n}\r\n\r\n/* Focus */\r\n\r\n.monaco-list.element-focused, .monaco-list.selection-single, .monaco-list.selection-multiple {\r\n\toutline: 0 !important;\r\n}\r\n\r\n/* Dnd */\r\n\r\n.monaco-drag-image {\r\n\tdisplay: inline-block;\r\n\tpadding: 1px 7px;\r\n\tborder-radius: 10px;\r\n\tfont-size: 12px;\r\n\tposition: absolute;\r\n}\r\n\r\n/* Type filter */\r\n\r\n.monaco-list-type-filter {\r\n\tdisplay: -webkit-box;\r\n\tdisplay: flex;\r\n\t-webkit-box-align: center;\r\n\t        align-items: center;\r\n\tposition: absolute;\r\n\tborder-radius: 2px;\r\n\tpadding: 0px 3px;\r\n\tmax-width: calc(100% - 10px);\r\n\ttext-overflow: ellipsis;\r\n\toverflow: hidden;\r\n\ttext-align: right;\r\n\tbox-sizing: border-box;\r\n\tcursor: all-scroll;\r\n\tfont-size: 13px;\r\n\tline-height: 18px;\r\n\theight: 20px;\r\n\tz-index: 1;\r\n\ttop: 4px;\r\n}\r\n\r\n.monaco-list-type-filter.dragging {\r\n\t-webkit-transition: top 0.2s, left 0.2s;\r\n\ttransition: top 0.2s, left 0.2s;\r\n}\r\n\r\n.monaco-list-type-filter.ne {\r\n\tright: 4px;\r\n}\r\n\r\n.monaco-list-type-filter.nw {\r\n\tleft: 4px;\r\n}\r\n\r\n.monaco-list-type-filter > .controls {\r\n\tdisplay: -webkit-box;\r\n\tdisplay: flex;\r\n\t-webkit-box-align: center;\r\n\t        align-items: center;\r\n\tbox-sizing: border-box;\r\n\t-webkit-transition: width 0.2s;\r\n\ttransition: width 0.2s;\r\n\twidth: 0;\r\n}\r\n\r\n.monaco-list-type-filter.dragging > .controls,\r\n.monaco-list-type-filter:hover > .controls {\r\n\twidth: 36px;\r\n}\r\n\r\n.monaco-list-type-filter > .controls > * {\r\n\tbox-sizing: border-box;\r\n\twidth: 16px;\r\n\theight: 16px;\r\n\tmargin: 0 0 0 2px;\r\n\tflex-shrink: 0;\r\n}\r\n\r\n.monaco-list-type-filter > .controls > .filter {\r\n\t-webkit-appearance: none;\r\n\twidth: 16px;\r\n\theight: 16px;\r\n\tbackground: url('no-filter.svg');\r\n\tbackground-position: 50% 50%;\r\n\tcursor: pointer;\r\n}\r\n\r\n.monaco-list-type-filter > .controls > .filter:checked {\r\n\tbackground-image: url('filter.svg');\r\n}\r\n\r\n.vs-dark .monaco-list-type-filter > .controls > .filter {\r\n\tbackground-image: url('no-filter-dark.svg');\r\n}\r\n\r\n.vs-dark .monaco-list-type-filter > .controls > .filter:checked {\r\n\tbackground-image: url('filter-dark.svg');\r\n}\r\n\r\n.hc-black .monaco-list-type-filter > .controls > .filter {\r\n\tbackground-image: url('no-filter-hc.svg');\r\n}\r\n\r\n.hc-black .monaco-list-type-filter > .controls > .filter:checked {\r\n\tbackground-image: url('filter-hc.svg');\r\n}\r\n\r\n.monaco-list-type-filter > .controls > .clear {\r\n\tborder: none;\r\n\tbackground: url('close.svg');\r\n\tcursor: pointer;\r\n}\r\n\r\n.vs-dark .monaco-list-type-filter > .controls > .clear {\r\n\tbackground-image: url('close-dark.svg');\r\n}\r\n\r\n.hc-black .monaco-list-type-filter > .controls > .clear {\r\n\tbackground-image: url('close-hc.svg');\r\n}\r\n\r\n.monaco-list-type-filter-message {\r\n\tposition: absolute;\r\n\tbox-sizing: border-box;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tpadding: 40px 1em 1em 1em;\r\n\ttext-align: center;\r\n\twhite-space: normal;\r\n\topacity: 0.7;\r\n\tpointer-events: none;\r\n}\r\n\r\n.monaco-list-type-filter-message:empty {\r\n\tdisplay: none;\r\n}\r\n\r\n/* Electron */\r\n\r\n.monaco-list-type-filter {\r\n\tcursor: -webkit-grab;\r\n\tcursor: grab;\r\n}\r\n\r\n.monaco-list-type-filter.dragging {\r\n\tcursor: -webkit-grabbing;\r\n\tcursor: grabbing;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/vs/base/browser/ui/list/list.ts":
/*!*********************************************!*\
  !*** ./src/vs/base/browser/ui/list/list.ts ***!
  \*********************************************/
/*! exports provided: ListAriaRootRole, ListDragOverReactions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListAriaRootRole", function() { return ListAriaRootRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListDragOverReactions", function() { return ListDragOverReactions; });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var ListAriaRootRole;
(function (ListAriaRootRole) {
    /** default tree structure role */
    ListAriaRootRole["TREE"] = "tree";
    /** role='tree' can interfere with screenreaders reading nested elements inside the tree row. Use FORM in that case. */
    ListAriaRootRole["FORM"] = "form";
})(ListAriaRootRole || (ListAriaRootRole = {}));
var ListDragOverReactions = {
    reject: function () { return { accept: false }; },
    accept: function () { return { accept: true }; },
};


/***/ }),

/***/ "./src/vs/base/browser/ui/list/listView.ts":
/*!*************************************************!*\
  !*** ./src/vs/base/browser/ui/list/listView.ts ***!
  \*************************************************/
/*! exports provided: ElementsDragAndDropData, ExternalElementsDragAndDropData, DesktopDragAndDropData, ListView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ElementsDragAndDropData", function() { return ElementsDragAndDropData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExternalElementsDragAndDropData", function() { return ExternalElementsDragAndDropData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DesktopDragAndDropData", function() { return DesktopDragAndDropData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListView", function() { return ListView; });
/* harmony import */ var vs_base_common_objects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/objects */ "./src/vs/base/common/objects.ts");
/* harmony import */ var vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/common/lifecycle */ "./src/vs/base/common/lifecycle.ts");
/* harmony import */ var vs_base_browser_touch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vs/base/browser/touch */ "./src/vs/base/browser/touch.ts");
/* harmony import */ var vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vs/base/browser/dom */ "./src/vs/base/browser/dom.ts");
/* harmony import */ var vs_base_common_event__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vs/base/common/event */ "./src/vs/base/common/event.ts");
/* harmony import */ var vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vs/base/browser/event */ "./src/vs/base/browser/event.ts");
/* harmony import */ var vs_base_browser_ui_scrollbar_scrollableElement__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vs/base/browser/ui/scrollbar/scrollableElement */ "./src/vs/base/browser/ui/scrollbar/scrollableElement.ts");
/* harmony import */ var _rangeMap__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./rangeMap */ "./src/vs/base/browser/ui/list/rangeMap.ts");
/* harmony import */ var _rowCache__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rowCache */ "./src/vs/base/browser/ui/list/rowCache.ts");
/* harmony import */ var vs_base_common_platform__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vs/base/common/platform */ "./src/vs/base/common/platform.ts");
/* harmony import */ var vs_base_browser_browser__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! vs/base/browser/browser */ "./src/vs/base/browser/browser.ts");
/* harmony import */ var vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! vs/base/common/decorators */ "./src/vs/base/common/decorators.ts");
/* harmony import */ var vs_base_common_range__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! vs/base/common/range */ "./src/vs/base/common/range.ts");
/* harmony import */ var vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! vs/base/common/arrays */ "./src/vs/base/common/arrays.ts");
/* harmony import */ var vs_base_browser_dnd__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! vs/base/browser/dnd */ "./src/vs/base/browser/dnd.ts");
/* harmony import */ var vs_base_common_async__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! vs/base/common/async */ "./src/vs/base/common/async.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
















var DefaultOptions = {
    useShadows: true,
    verticalScrollMode: 1 /* Auto */,
    setRowLineHeight: true,
    supportDynamicHeights: false,
    dnd: {
        getDragElements: function (e) { return [e]; },
        getDragURI: function () { return null; },
        onDragStart: function () { },
        onDragOver: function () { return false; },
        drop: function () { }
    },
    horizontalScrolling: false
};
var ElementsDragAndDropData = /** @class */ (function () {
    function ElementsDragAndDropData(elements) {
        this.elements = elements;
    }
    ElementsDragAndDropData.prototype.update = function () { };
    ElementsDragAndDropData.prototype.getData = function () {
        return this.elements;
    };
    ElementsDragAndDropData.ctorParameters = function () { return [
        { type: Array }
    ]; };
    return ElementsDragAndDropData;
}());

var ExternalElementsDragAndDropData = /** @class */ (function () {
    function ExternalElementsDragAndDropData(elements) {
        this.elements = elements;
    }
    ExternalElementsDragAndDropData.prototype.update = function () { };
    ExternalElementsDragAndDropData.prototype.getData = function () {
        return this.elements;
    };
    ExternalElementsDragAndDropData.ctorParameters = function () { return [
        { type: Array }
    ]; };
    return ExternalElementsDragAndDropData;
}());

var DesktopDragAndDropData = /** @class */ (function () {
    function DesktopDragAndDropData() {
        this.types = [];
        this.files = [];
    }
    DesktopDragAndDropData.prototype.update = function (dataTransfer) {
        var _a;
        if (dataTransfer.types) {
            (_a = this.types).splice.apply(_a, [0, this.types.length].concat(dataTransfer.types));
        }
        if (dataTransfer.files) {
            this.files.splice(0, this.files.length);
            for (var i = 0; i < dataTransfer.files.length; i++) {
                var file = dataTransfer.files.item(i);
                if (file && (file.size || file.type)) {
                    this.files.push(file);
                }
            }
        }
    };
    DesktopDragAndDropData.prototype.getData = function () {
        return {
            types: this.types,
            files: this.files
        };
    };
    return DesktopDragAndDropData;
}());

function equalsDragFeedback(f1, f2) {
    if (Array.isArray(f1) && Array.isArray(f2)) {
        return Object(vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_13__["equals"])(f1, f2);
    }
    return f1 === f2;
}
var ListView = /** @class */ (function () {
    function ListView(container, virtualDelegate, renderers, options) {
        var _this = this;
        if (options === void 0) { options = DefaultOptions; }
        this.virtualDelegate = virtualDelegate;
        this.domId = "list_id_" + ++ListView.InstanceCount;
        this.renderers = new Map();
        this.renderWidth = 0;
        this.scrollableElementUpdateDisposable = null;
        this.scrollableElementWidthDelayer = new vs_base_common_async__WEBPACK_IMPORTED_MODULE_15__["Delayer"](50);
        this.splicing = false;
        this.dragOverAnimationStopDisposable = vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_1__["Disposable"].None;
        this.canUseTranslate3d = undefined;
        this.canDrop = false;
        this.currentDragFeedbackDisposable = vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_1__["Disposable"].None;
        this.onDragLeaveTimeout = vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_1__["Disposable"].None;
        this._onDidChangeContentHeight = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_4__["Emitter"]();
        this.onDidChangeContentHeight = vs_base_common_event__WEBPACK_IMPORTED_MODULE_4__["Event"].latch(this._onDidChangeContentHeight.event);
        if (options.horizontalScrolling && options.supportDynamicHeights) {
            throw new Error('Horizontal scrolling and dynamic heights not supported simultaneously');
        }
        this.items = [];
        this.itemId = 0;
        this.rangeMap = new _rangeMap__WEBPACK_IMPORTED_MODULE_7__["RangeMap"]();
        for (var _i = 0, renderers_1 = renderers; _i < renderers_1.length; _i++) {
            var renderer = renderers_1[_i];
            this.renderers.set(renderer.templateId, renderer);
        }
        this.cache = new _rowCache__WEBPACK_IMPORTED_MODULE_8__["RowCache"](this.renderers);
        this.lastRenderTop = 0;
        this.lastRenderHeight = 0;
        this.domNode = document.createElement('div');
        this.domNode.className = 'monaco-list';
        vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_3__["addClass"](this.domNode, this.domId);
        this.domNode.tabIndex = 0;
        vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_3__["toggleClass"](this.domNode, 'mouse-support', typeof options.mouseSupport === 'boolean' ? options.mouseSupport : true);
        this.horizontalScrolling = Object(vs_base_common_objects__WEBPACK_IMPORTED_MODULE_0__["getOrDefault"])(options, function (o) { return o.horizontalScrolling; }, DefaultOptions.horizontalScrolling);
        vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_3__["toggleClass"](this.domNode, 'horizontal-scrolling', this.horizontalScrolling);
        this.ariaSetProvider = options.ariaSetProvider || { getSetSize: function (e, i, length) { return length; }, getPosInSet: function (_, index) { return index + 1; } };
        this.rowsContainer = document.createElement('div');
        this.rowsContainer.className = 'monaco-list-rows';
        vs_base_browser_touch__WEBPACK_IMPORTED_MODULE_2__["Gesture"].addTarget(this.rowsContainer);
        this.scrollableElement = new vs_base_browser_ui_scrollbar_scrollableElement__WEBPACK_IMPORTED_MODULE_6__["ScrollableElement"](this.rowsContainer, {
            alwaysConsumeMouseWheel: true,
            horizontal: this.horizontalScrolling ? 1 /* Auto */ : 2 /* Hidden */,
            vertical: Object(vs_base_common_objects__WEBPACK_IMPORTED_MODULE_0__["getOrDefault"])(options, function (o) { return o.verticalScrollMode; }, DefaultOptions.verticalScrollMode),
            useShadows: Object(vs_base_common_objects__WEBPACK_IMPORTED_MODULE_0__["getOrDefault"])(options, function (o) { return o.useShadows; }, DefaultOptions.useShadows)
        });
        this.domNode.appendChild(this.scrollableElement.getDomNode());
        container.appendChild(this.domNode);
        this.disposables = [this.rangeMap, this.gesture, this.scrollableElement, this.cache];
        this.scrollableElement.onScroll(this.onScroll, this, this.disposables);
        Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__["domEvent"])(this.rowsContainer, vs_base_browser_touch__WEBPACK_IMPORTED_MODULE_2__["EventType"].Change)(this.onTouchChange, this, this.disposables);
        // Prevent the monaco-scrollable-element from scrolling
        // https://github.com/Microsoft/vscode/issues/44181
        Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__["domEvent"])(this.scrollableElement.getDomNode(), 'scroll')(function (e) { return e.target.scrollTop = 0; }, null, this.disposables);
        vs_base_common_event__WEBPACK_IMPORTED_MODULE_4__["Event"].map(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__["domEvent"])(this.domNode, 'dragover'), function (e) { return _this.toDragEvent(e); })(this.onDragOver, this, this.disposables);
        vs_base_common_event__WEBPACK_IMPORTED_MODULE_4__["Event"].map(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__["domEvent"])(this.domNode, 'drop'), function (e) { return _this.toDragEvent(e); })(this.onDrop, this, this.disposables);
        Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__["domEvent"])(this.domNode, 'dragleave')(this.onDragLeave, this, this.disposables);
        Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__["domEvent"])(window, 'dragend')(this.onDragEnd, this, this.disposables);
        this.setRowLineHeight = Object(vs_base_common_objects__WEBPACK_IMPORTED_MODULE_0__["getOrDefault"])(options, function (o) { return o.setRowLineHeight; }, DefaultOptions.setRowLineHeight);
        this.supportDynamicHeights = Object(vs_base_common_objects__WEBPACK_IMPORTED_MODULE_0__["getOrDefault"])(options, function (o) { return o.supportDynamicHeights; }, DefaultOptions.supportDynamicHeights);
        this.dnd = Object(vs_base_common_objects__WEBPACK_IMPORTED_MODULE_0__["getOrDefault"])(options, function (o) { return o.dnd; }, DefaultOptions.dnd);
        this.layout();
    }
    Object.defineProperty(ListView.prototype, "contentHeight", {
        get: function () { return this.rangeMap.size; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListView.prototype, "onDidScroll", {
        get: function () { return this.scrollableElement.onScroll; },
        enumerable: true,
        configurable: true
    });
    ListView.prototype.splice = function (start, deleteCount, elements) {
        if (elements === void 0) { elements = []; }
        if (this.splicing) {
            throw new Error('Can\'t run recursive splices.');
        }
        this.splicing = true;
        try {
            return this._splice(start, deleteCount, elements);
        }
        finally {
            this.splicing = false;
            this._onDidChangeContentHeight.fire(this.contentHeight);
        }
    };
    ListView.prototype._splice = function (start, deleteCount, elements) {
        var _this = this;
        var _a;
        if (elements === void 0) { elements = []; }
        var previousRenderRange = this.getRenderRange(this.lastRenderTop, this.lastRenderHeight);
        var deleteRange = { start: start, end: start + deleteCount };
        var removeRange = vs_base_common_range__WEBPACK_IMPORTED_MODULE_12__["Range"].intersect(previousRenderRange, deleteRange);
        for (var i = removeRange.start; i < removeRange.end; i++) {
            this.removeItemFromDOM(i);
        }
        var previousRestRange = { start: start + deleteCount, end: this.items.length };
        var previousRenderedRestRange = vs_base_common_range__WEBPACK_IMPORTED_MODULE_12__["Range"].intersect(previousRestRange, previousRenderRange);
        var previousUnrenderedRestRanges = vs_base_common_range__WEBPACK_IMPORTED_MODULE_12__["Range"].relativeComplement(previousRestRange, previousRenderRange);
        var inserted = elements.map(function (element) { return ({
            id: String(_this.itemId++),
            element: element,
            templateId: _this.virtualDelegate.getTemplateId(element),
            size: _this.virtualDelegate.getHeight(element),
            width: undefined,
            hasDynamicHeight: !!_this.virtualDelegate.hasDynamicHeight && _this.virtualDelegate.hasDynamicHeight(element),
            lastDynamicHeightWidth: undefined,
            row: null,
            uri: undefined,
            dropTarget: false,
            dragStartDisposable: vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_1__["Disposable"].None
        }); });
        var deleted;
        // TODO@joao: improve this optimization to catch even more cases
        if (start === 0 && deleteCount >= this.items.length) {
            this.rangeMap = new _rangeMap__WEBPACK_IMPORTED_MODULE_7__["RangeMap"]();
            this.rangeMap.splice(0, 0, inserted);
            this.items = inserted;
            deleted = [];
        }
        else {
            this.rangeMap.splice(start, deleteCount, inserted);
            deleted = (_a = this.items).splice.apply(_a, [start, deleteCount].concat(inserted));
        }
        var delta = elements.length - deleteCount;
        var renderRange = this.getRenderRange(this.lastRenderTop, this.lastRenderHeight);
        var renderedRestRange = Object(_rangeMap__WEBPACK_IMPORTED_MODULE_7__["shift"])(previousRenderedRestRange, delta);
        var updateRange = vs_base_common_range__WEBPACK_IMPORTED_MODULE_12__["Range"].intersect(renderRange, renderedRestRange);
        for (var i = updateRange.start; i < updateRange.end; i++) {
            this.updateItemInDOM(this.items[i], i);
        }
        var removeRanges = vs_base_common_range__WEBPACK_IMPORTED_MODULE_12__["Range"].relativeComplement(renderedRestRange, renderRange);
        for (var _i = 0, removeRanges_1 = removeRanges; _i < removeRanges_1.length; _i++) {
            var range = removeRanges_1[_i];
            for (var i = range.start; i < range.end; i++) {
                this.removeItemFromDOM(i);
            }
        }
        var unrenderedRestRanges = previousUnrenderedRestRanges.map(function (r) { return Object(_rangeMap__WEBPACK_IMPORTED_MODULE_7__["shift"])(r, delta); });
        var elementsRange = { start: start, end: start + elements.length };
        var insertRanges = [elementsRange].concat(unrenderedRestRanges).map(function (r) { return vs_base_common_range__WEBPACK_IMPORTED_MODULE_12__["Range"].intersect(renderRange, r); });
        var beforeElement = this.getNextToLastElement(insertRanges);
        for (var _b = 0, insertRanges_1 = insertRanges; _b < insertRanges_1.length; _b++) {
            var range = insertRanges_1[_b];
            for (var i = range.start; i < range.end; i++) {
                this.insertItemInDOM(i, beforeElement);
            }
        }
        this.eventuallyUpdateScrollDimensions();
        if (this.supportDynamicHeights) {
            this._rerender(this.scrollTop, this.renderHeight);
        }
        return deleted.map(function (i) { return i.element; });
    };
    ListView.prototype.eventuallyUpdateScrollDimensions = function () {
        var _this = this;
        this._scrollHeight = this.contentHeight;
        this.rowsContainer.style.height = this._scrollHeight + "px";
        if (!this.scrollableElementUpdateDisposable) {
            this.scrollableElementUpdateDisposable = vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_3__["scheduleAtNextAnimationFrame"](function () {
                _this.scrollableElement.setScrollDimensions({ scrollHeight: _this.scrollHeight });
                _this.updateScrollWidth();
                _this.scrollableElementUpdateDisposable = null;
            });
        }
    };
    ListView.prototype.eventuallyUpdateScrollWidth = function () {
        var _this = this;
        if (!this.horizontalScrolling) {
            return;
        }
        this.scrollableElementWidthDelayer.trigger(function () { return _this.updateScrollWidth(); });
    };
    ListView.prototype.updateScrollWidth = function () {
        if (!this.horizontalScrolling) {
            return;
        }
        if (this.items.length === 0) {
            this.scrollableElement.setScrollDimensions({ scrollWidth: 0 });
        }
        var scrollWidth = 0;
        for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
            var item = _a[_i];
            if (typeof item.width !== 'undefined') {
                scrollWidth = Math.max(scrollWidth, item.width);
            }
        }
        this.scrollWidth = scrollWidth;
        this.scrollableElement.setScrollDimensions({ scrollWidth: scrollWidth + 10 });
    };
    ListView.prototype.updateWidth = function (index) {
        if (!this.horizontalScrolling || typeof this.scrollWidth === 'undefined') {
            return;
        }
        var item = this.items[index];
        this.measureItemWidth(item);
        if (typeof item.width !== 'undefined' && item.width > this.scrollWidth) {
            this.scrollWidth = item.width;
            this.scrollableElement.setScrollDimensions({ scrollWidth: this.scrollWidth + 10 });
        }
    };
    ListView.prototype.rerender = function () {
        if (!this.supportDynamicHeights) {
            return;
        }
        for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
            var item = _a[_i];
            item.lastDynamicHeightWidth = undefined;
        }
        this._rerender(this.lastRenderTop, this.lastRenderHeight);
    };
    Object.defineProperty(ListView.prototype, "length", {
        get: function () {
            return this.items.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListView.prototype, "renderHeight", {
        get: function () {
            var scrollDimensions = this.scrollableElement.getScrollDimensions();
            return scrollDimensions.height;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListView.prototype, "firstVisibleIndex", {
        get: function () {
            var range = this.getRenderRange(this.lastRenderTop, this.lastRenderHeight);
            var firstElTop = this.rangeMap.positionAt(range.start);
            var nextElTop = this.rangeMap.positionAt(range.start + 1);
            if (nextElTop !== -1) {
                var firstElMidpoint = (nextElTop - firstElTop) / 2 + firstElTop;
                if (firstElMidpoint < this.scrollTop) {
                    return range.start + 1;
                }
            }
            return range.start;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListView.prototype, "lastVisibleIndex", {
        get: function () {
            var range = this.getRenderRange(this.lastRenderTop, this.lastRenderHeight);
            return range.end - 1;
        },
        enumerable: true,
        configurable: true
    });
    ListView.prototype.element = function (index) {
        return this.items[index].element;
    };
    ListView.prototype.domElement = function (index) {
        var row = this.items[index].row;
        return row && row.domNode;
    };
    ListView.prototype.elementHeight = function (index) {
        return this.items[index].size;
    };
    ListView.prototype.elementTop = function (index) {
        return this.rangeMap.positionAt(index);
    };
    ListView.prototype.indexAt = function (position) {
        return this.rangeMap.indexAt(position);
    };
    ListView.prototype.indexAfter = function (position) {
        return this.rangeMap.indexAfter(position);
    };
    ListView.prototype.layout = function (height, width) {
        var scrollDimensions = {
            height: typeof height === 'number' ? height : vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_3__["getContentHeight"](this.domNode)
        };
        if (this.scrollableElementUpdateDisposable) {
            this.scrollableElementUpdateDisposable.dispose();
            this.scrollableElementUpdateDisposable = null;
            scrollDimensions.scrollHeight = this.scrollHeight;
        }
        this.scrollableElement.setScrollDimensions(scrollDimensions);
        if (typeof width !== 'undefined') {
            this.renderWidth = width;
            if (this.supportDynamicHeights) {
                this._rerender(this.scrollTop, this.renderHeight);
            }
            if (this.horizontalScrolling) {
                this.scrollableElement.setScrollDimensions({
                    width: typeof width === 'number' ? width : vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_3__["getContentWidth"](this.domNode)
                });
            }
        }
    };
    // Render
    ListView.prototype.render = function (renderTop, renderHeight, renderLeft, scrollWidth) {
        var previousRenderRange = this.getRenderRange(this.lastRenderTop, this.lastRenderHeight);
        var renderRange = this.getRenderRange(renderTop, renderHeight);
        var rangesToInsert = vs_base_common_range__WEBPACK_IMPORTED_MODULE_12__["Range"].relativeComplement(renderRange, previousRenderRange);
        var rangesToRemove = vs_base_common_range__WEBPACK_IMPORTED_MODULE_12__["Range"].relativeComplement(previousRenderRange, renderRange);
        var beforeElement = this.getNextToLastElement(rangesToInsert);
        for (var _i = 0, rangesToInsert_1 = rangesToInsert; _i < rangesToInsert_1.length; _i++) {
            var range = rangesToInsert_1[_i];
            for (var i = range.start; i < range.end; i++) {
                this.insertItemInDOM(i, beforeElement);
            }
        }
        for (var _a = 0, rangesToRemove_1 = rangesToRemove; _a < rangesToRemove_1.length; _a++) {
            var range = rangesToRemove_1[_a];
            for (var i = range.start; i < range.end; i++) {
                this.removeItemFromDOM(i);
            }
        }
        var canUseTranslate3d = !vs_base_common_platform__WEBPACK_IMPORTED_MODULE_9__["isWindows"] && !vs_base_browser_browser__WEBPACK_IMPORTED_MODULE_10__["isFirefox"] && vs_base_browser_browser__WEBPACK_IMPORTED_MODULE_10__["getZoomLevel"]() === 0;
        if (canUseTranslate3d) {
            var transform = "translate3d(-" + renderLeft + "px, -" + renderTop + "px, 0px)";
            this.rowsContainer.style.transform = transform;
            this.rowsContainer.style.webkitTransform = transform;
            if (canUseTranslate3d !== this.canUseTranslate3d) {
                this.rowsContainer.style.left = '0';
                this.rowsContainer.style.top = '0';
            }
        }
        else {
            this.rowsContainer.style.left = "-" + renderLeft + "px";
            this.rowsContainer.style.top = "-" + renderTop + "px";
            if (canUseTranslate3d !== this.canUseTranslate3d) {
                this.rowsContainer.style.transform = '';
                this.rowsContainer.style.webkitTransform = '';
            }
        }
        if (this.horizontalScrolling) {
            this.rowsContainer.style.width = Math.max(scrollWidth, this.renderWidth) + "px";
        }
        this.canUseTranslate3d = canUseTranslate3d;
        this.lastRenderTop = renderTop;
        this.lastRenderHeight = renderHeight;
    };
    // DOM operations
    ListView.prototype.insertItemInDOM = function (index, beforeElement) {
        var _this = this;
        var item = this.items[index];
        if (!item.row) {
            item.row = this.cache.alloc(item.templateId);
            item.row.domNode.setAttribute('role', 'treeitem');
        }
        if (!item.row.domNode.parentElement) {
            if (beforeElement) {
                this.rowsContainer.insertBefore(item.row.domNode, beforeElement);
            }
            else {
                this.rowsContainer.appendChild(item.row.domNode);
            }
        }
        this.updateItemInDOM(item, index);
        var renderer = this.renderers.get(item.templateId);
        if (!renderer) {
            throw new Error("No renderer found for template id " + item.templateId);
        }
        if (renderer) {
            renderer.renderElement(item.element, index, item.row.templateData, item.size);
        }
        var uri = this.dnd.getDragURI(item.element);
        item.dragStartDisposable.dispose();
        item.row.domNode.draggable = !!uri;
        if (uri) {
            var onDragStart = Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__["domEvent"])(item.row.domNode, 'dragstart');
            item.dragStartDisposable = onDragStart(function (event) { return _this.onDragStart(item.element, uri, event); });
        }
        if (this.horizontalScrolling) {
            this.measureItemWidth(item);
            this.eventuallyUpdateScrollWidth();
        }
    };
    ListView.prototype.measureItemWidth = function (item) {
        if (!item.row || !item.row.domNode) {
            return;
        }
        item.row.domNode.style.width = 'fit-content';
        item.width = vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_3__["getContentWidth"](item.row.domNode);
        var style = window.getComputedStyle(item.row.domNode);
        if (style.paddingLeft) {
            item.width += parseFloat(style.paddingLeft);
        }
        if (style.paddingRight) {
            item.width += parseFloat(style.paddingRight);
        }
        item.row.domNode.style.width = '';
    };
    ListView.prototype.updateItemInDOM = function (item, index) {
        item.row.domNode.style.top = this.elementTop(index) + "px";
        item.row.domNode.style.height = item.size + "px";
        if (this.setRowLineHeight) {
            item.row.domNode.style.lineHeight = item.size + "px";
        }
        item.row.domNode.setAttribute('data-index', "" + index);
        item.row.domNode.setAttribute('data-last-element', index === this.length - 1 ? 'true' : 'false');
        item.row.domNode.setAttribute('aria-setsize', String(this.ariaSetProvider.getSetSize(item.element, index, this.length)));
        item.row.domNode.setAttribute('aria-posinset', String(this.ariaSetProvider.getPosInSet(item.element, index)));
        item.row.domNode.setAttribute('id', this.getElementDomId(index));
        vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_3__["toggleClass"](item.row.domNode, 'drop-target', item.dropTarget);
    };
    ListView.prototype.removeItemFromDOM = function (index) {
        var item = this.items[index];
        item.dragStartDisposable.dispose();
        var renderer = this.renderers.get(item.templateId);
        if (renderer && renderer.disposeElement) {
            renderer.disposeElement(item.element, index, item.row.templateData, item.size);
        }
        this.cache.release(item.row);
        item.row = null;
        if (this.horizontalScrolling) {
            this.eventuallyUpdateScrollWidth();
        }
    };
    ListView.prototype.getScrollTop = function () {
        var scrollPosition = this.scrollableElement.getScrollPosition();
        return scrollPosition.scrollTop;
    };
    ListView.prototype.setScrollTop = function (scrollTop) {
        if (this.scrollableElementUpdateDisposable) {
            this.scrollableElementUpdateDisposable.dispose();
            this.scrollableElementUpdateDisposable = null;
            this.scrollableElement.setScrollDimensions({ scrollHeight: this.scrollHeight });
        }
        this.scrollableElement.setScrollPosition({ scrollTop: scrollTop });
    };
    Object.defineProperty(ListView.prototype, "scrollTop", {
        get: function () {
            return this.getScrollTop();
        },
        set: function (scrollTop) {
            this.setScrollTop(scrollTop);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListView.prototype, "scrollHeight", {
        get: function () {
            return this._scrollHeight + (this.horizontalScrolling ? 10 : 0);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListView.prototype, "onMouseClick", {
        // Events
        get: function () {
            var _this = this;
            return vs_base_common_event__WEBPACK_IMPORTED_MODULE_4__["Event"].map(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__["domEvent"])(this.domNode, 'click'), function (e) { return _this.toMouseEvent(e); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListView.prototype, "onMouseDblClick", {
        get: function () {
            var _this = this;
            return vs_base_common_event__WEBPACK_IMPORTED_MODULE_4__["Event"].map(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__["domEvent"])(this.domNode, 'dblclick'), function (e) { return _this.toMouseEvent(e); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListView.prototype, "onMouseMiddleClick", {
        get: function () {
            var _this = this;
            return vs_base_common_event__WEBPACK_IMPORTED_MODULE_4__["Event"].filter(vs_base_common_event__WEBPACK_IMPORTED_MODULE_4__["Event"].map(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__["domEvent"])(this.domNode, 'auxclick'), function (e) { return _this.toMouseEvent(e); }), function (e) { return e.browserEvent.button === 1; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListView.prototype, "onMouseUp", {
        get: function () {
            var _this = this;
            return vs_base_common_event__WEBPACK_IMPORTED_MODULE_4__["Event"].map(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__["domEvent"])(this.domNode, 'mouseup'), function (e) { return _this.toMouseEvent(e); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListView.prototype, "onMouseDown", {
        get: function () {
            var _this = this;
            return vs_base_common_event__WEBPACK_IMPORTED_MODULE_4__["Event"].map(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__["domEvent"])(this.domNode, 'mousedown'), function (e) { return _this.toMouseEvent(e); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListView.prototype, "onMouseOver", {
        get: function () {
            var _this = this;
            return vs_base_common_event__WEBPACK_IMPORTED_MODULE_4__["Event"].map(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__["domEvent"])(this.domNode, 'mouseover'), function (e) { return _this.toMouseEvent(e); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListView.prototype, "onMouseMove", {
        get: function () {
            var _this = this;
            return vs_base_common_event__WEBPACK_IMPORTED_MODULE_4__["Event"].map(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__["domEvent"])(this.domNode, 'mousemove'), function (e) { return _this.toMouseEvent(e); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListView.prototype, "onMouseOut", {
        get: function () {
            var _this = this;
            return vs_base_common_event__WEBPACK_IMPORTED_MODULE_4__["Event"].map(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__["domEvent"])(this.domNode, 'mouseout'), function (e) { return _this.toMouseEvent(e); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListView.prototype, "onContextMenu", {
        get: function () {
            var _this = this;
            return vs_base_common_event__WEBPACK_IMPORTED_MODULE_4__["Event"].map(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__["domEvent"])(this.domNode, 'contextmenu'), function (e) { return _this.toMouseEvent(e); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListView.prototype, "onTouchStart", {
        get: function () {
            var _this = this;
            return vs_base_common_event__WEBPACK_IMPORTED_MODULE_4__["Event"].map(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__["domEvent"])(this.domNode, 'touchstart'), function (e) { return _this.toTouchEvent(e); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListView.prototype, "onTap", {
        get: function () {
            var _this = this;
            return vs_base_common_event__WEBPACK_IMPORTED_MODULE_4__["Event"].map(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_5__["domEvent"])(this.rowsContainer, vs_base_browser_touch__WEBPACK_IMPORTED_MODULE_2__["EventType"].Tap), function (e) { return _this.toGestureEvent(e); });
        },
        enumerable: true,
        configurable: true
    });
    ListView.prototype.toMouseEvent = function (browserEvent) {
        var index = this.getItemIndexFromEventTarget(browserEvent.target || null);
        var item = typeof index === 'undefined' ? undefined : this.items[index];
        var element = item && item.element;
        return { browserEvent: browserEvent, index: index, element: element };
    };
    ListView.prototype.toTouchEvent = function (browserEvent) {
        var index = this.getItemIndexFromEventTarget(browserEvent.target || null);
        var item = typeof index === 'undefined' ? undefined : this.items[index];
        var element = item && item.element;
        return { browserEvent: browserEvent, index: index, element: element };
    };
    ListView.prototype.toGestureEvent = function (browserEvent) {
        var index = this.getItemIndexFromEventTarget(browserEvent.initialTarget || null);
        var item = typeof index === 'undefined' ? undefined : this.items[index];
        var element = item && item.element;
        return { browserEvent: browserEvent, index: index, element: element };
    };
    ListView.prototype.toDragEvent = function (browserEvent) {
        var index = this.getItemIndexFromEventTarget(browserEvent.target || null);
        var item = typeof index === 'undefined' ? undefined : this.items[index];
        var element = item && item.element;
        return { browserEvent: browserEvent, index: index, element: element };
    };
    ListView.prototype.onScroll = function (e) {
        try {
            this.render(e.scrollTop, e.height, e.scrollLeft, e.scrollWidth);
            if (this.supportDynamicHeights) {
                this._rerender(e.scrollTop, e.height);
            }
        }
        catch (err) {
            console.error('Got bad scroll event:', e);
            throw err;
        }
    };
    ListView.prototype.onTouchChange = function (event) {
        event.preventDefault();
        event.stopPropagation();
        this.scrollTop -= event.translationY;
    };
    // DND
    ListView.prototype.onDragStart = function (element, uri, event) {
        if (!event.dataTransfer) {
            return;
        }
        var elements = this.dnd.getDragElements(element);
        event.dataTransfer.effectAllowed = 'copyMove';
        event.dataTransfer.setData(vs_base_browser_dnd__WEBPACK_IMPORTED_MODULE_14__["DataTransfers"].RESOURCES, JSON.stringify([uri]));
        if (event.dataTransfer.setDragImage) {
            var label = void 0;
            if (this.dnd.getDragLabel) {
                label = this.dnd.getDragLabel(elements);
            }
            if (typeof label === 'undefined') {
                label = String(elements.length);
            }
            var dragImage_1 = vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_3__["$"]('.monaco-drag-image');
            dragImage_1.textContent = label;
            document.body.appendChild(dragImage_1);
            event.dataTransfer.setDragImage(dragImage_1, -10, -10);
            setTimeout(function () { return document.body.removeChild(dragImage_1); }, 0);
        }
        this.currentDragData = new ElementsDragAndDropData(elements);
        vs_base_browser_dnd__WEBPACK_IMPORTED_MODULE_14__["StaticDND"].CurrentDragAndDropData = new ExternalElementsDragAndDropData(elements);
        if (this.dnd.onDragStart) {
            this.dnd.onDragStart(this.currentDragData, event);
        }
    };
    ListView.prototype.onDragOver = function (event) {
        var _this = this;
        event.browserEvent.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)
        this.onDragLeaveTimeout.dispose();
        if (vs_base_browser_dnd__WEBPACK_IMPORTED_MODULE_14__["StaticDND"].CurrentDragAndDropData && vs_base_browser_dnd__WEBPACK_IMPORTED_MODULE_14__["StaticDND"].CurrentDragAndDropData.getData() === 'vscode-ui') {
            return false;
        }
        this.setupDragAndDropScrollTopAnimation(event.browserEvent);
        if (!event.browserEvent.dataTransfer) {
            return false;
        }
        // Drag over from outside
        if (!this.currentDragData) {
            if (vs_base_browser_dnd__WEBPACK_IMPORTED_MODULE_14__["StaticDND"].CurrentDragAndDropData) {
                // Drag over from another list
                this.currentDragData = vs_base_browser_dnd__WEBPACK_IMPORTED_MODULE_14__["StaticDND"].CurrentDragAndDropData;
            }
            else {
                // Drag over from the desktop
                if (!event.browserEvent.dataTransfer.types) {
                    return false;
                }
                this.currentDragData = new DesktopDragAndDropData();
            }
        }
        var result = this.dnd.onDragOver(this.currentDragData, event.element, event.index, event.browserEvent);
        this.canDrop = typeof result === 'boolean' ? result : result.accept;
        if (!this.canDrop) {
            this.currentDragFeedback = undefined;
            this.currentDragFeedbackDisposable.dispose();
            return false;
        }
        event.browserEvent.dataTransfer.dropEffect = (typeof result !== 'boolean' && result.effect === 0 /* Copy */) ? 'copy' : 'move';
        var feedback;
        if (typeof result !== 'boolean' && result.feedback) {
            feedback = result.feedback;
        }
        else {
            if (typeof event.index === 'undefined') {
                feedback = [-1];
            }
            else {
                feedback = [event.index];
            }
        }
        // sanitize feedback list
        feedback = Object(vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_13__["distinct"])(feedback).filter(function (i) { return i >= -1 && i < _this.length; }).sort();
        feedback = feedback[0] === -1 ? [-1] : feedback;
        if (feedback.length === 0) {
            throw new Error('Invalid empty feedback list');
        }
        if (equalsDragFeedback(this.currentDragFeedback, feedback)) {
            return true;
        }
        this.currentDragFeedback = feedback;
        this.currentDragFeedbackDisposable.dispose();
        if (feedback[0] === -1) { // entire list feedback
            vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_3__["addClass"](this.domNode, 'drop-target');
            this.currentDragFeedbackDisposable = Object(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_1__["toDisposable"])(function () { return vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_3__["removeClass"](_this.domNode, 'drop-target'); });
        }
        else {
            for (var _i = 0, feedback_1 = feedback; _i < feedback_1.length; _i++) {
                var index = feedback_1[_i];
                var item = this.items[index];
                item.dropTarget = true;
                if (item.row && item.row.domNode) {
                    vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_3__["addClass"](item.row.domNode, 'drop-target');
                }
            }
            this.currentDragFeedbackDisposable = Object(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_1__["toDisposable"])(function () {
                for (var _i = 0, feedback_2 = feedback; _i < feedback_2.length; _i++) {
                    var index = feedback_2[_i];
                    var item = _this.items[index];
                    item.dropTarget = false;
                    if (item.row && item.row.domNode) {
                        vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_3__["removeClass"](item.row.domNode, 'drop-target');
                    }
                }
            });
        }
        return true;
    };
    ListView.prototype.onDragLeave = function () {
        var _this = this;
        this.onDragLeaveTimeout.dispose();
        this.onDragLeaveTimeout = Object(vs_base_common_async__WEBPACK_IMPORTED_MODULE_15__["disposableTimeout"])(function () { return _this.clearDragOverFeedback(); }, 100);
    };
    ListView.prototype.onDrop = function (event) {
        if (!this.canDrop) {
            return;
        }
        var dragData = this.currentDragData;
        this.teardownDragAndDropScrollTopAnimation();
        this.clearDragOverFeedback();
        this.currentDragData = undefined;
        vs_base_browser_dnd__WEBPACK_IMPORTED_MODULE_14__["StaticDND"].CurrentDragAndDropData = undefined;
        if (!dragData || !event.browserEvent.dataTransfer) {
            return;
        }
        event.browserEvent.preventDefault();
        dragData.update(event.browserEvent.dataTransfer);
        this.dnd.drop(dragData, event.element, event.index, event.browserEvent);
    };
    ListView.prototype.onDragEnd = function () {
        this.canDrop = false;
        this.teardownDragAndDropScrollTopAnimation();
        this.clearDragOverFeedback();
        this.currentDragData = undefined;
        vs_base_browser_dnd__WEBPACK_IMPORTED_MODULE_14__["StaticDND"].CurrentDragAndDropData = undefined;
    };
    ListView.prototype.clearDragOverFeedback = function () {
        this.currentDragFeedback = undefined;
        this.currentDragFeedbackDisposable.dispose();
        this.currentDragFeedbackDisposable = vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_1__["Disposable"].None;
    };
    // DND scroll top animation
    ListView.prototype.setupDragAndDropScrollTopAnimation = function (event) {
        var _this = this;
        if (!this.dragOverAnimationDisposable) {
            var viewTop = vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_3__["getTopLeftOffset"](this.domNode).top;
            this.dragOverAnimationDisposable = vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_3__["animate"](this.animateDragAndDropScrollTop.bind(this, viewTop));
        }
        this.dragOverAnimationStopDisposable.dispose();
        this.dragOverAnimationStopDisposable = Object(vs_base_common_async__WEBPACK_IMPORTED_MODULE_15__["disposableTimeout"])(function () {
            if (_this.dragOverAnimationDisposable) {
                _this.dragOverAnimationDisposable.dispose();
                _this.dragOverAnimationDisposable = undefined;
            }
        }, 1000);
        this.dragOverMouseY = event.pageY;
    };
    ListView.prototype.animateDragAndDropScrollTop = function (viewTop) {
        if (this.dragOverMouseY === undefined) {
            return;
        }
        var diff = this.dragOverMouseY - viewTop;
        var upperLimit = this.renderHeight - 35;
        if (diff < 35) {
            this.scrollTop += Math.max(-14, Math.floor(0.3 * (diff - 35)));
        }
        else if (diff > upperLimit) {
            this.scrollTop += Math.min(14, Math.floor(0.3 * (diff - upperLimit)));
        }
    };
    ListView.prototype.teardownDragAndDropScrollTopAnimation = function () {
        this.dragOverAnimationStopDisposable.dispose();
        if (this.dragOverAnimationDisposable) {
            this.dragOverAnimationDisposable.dispose();
            this.dragOverAnimationDisposable = undefined;
        }
    };
    // Util
    ListView.prototype.getItemIndexFromEventTarget = function (target) {
        var element = target;
        while (element instanceof HTMLElement && element !== this.rowsContainer) {
            var rawIndex = element.getAttribute('data-index');
            if (rawIndex) {
                var index = Number(rawIndex);
                if (!isNaN(index)) {
                    return index;
                }
            }
            element = element.parentElement;
        }
        return undefined;
    };
    ListView.prototype.getRenderRange = function (renderTop, renderHeight) {
        return {
            start: this.rangeMap.indexAt(renderTop),
            end: this.rangeMap.indexAfter(renderTop + renderHeight - 1)
        };
    };
    /**
     * Given a stable rendered state, checks every rendered element whether it needs
     * to be probed for dynamic height. Adjusts scroll height and top if necessary.
     */
    ListView.prototype._rerender = function (renderTop, renderHeight) {
        var previousRenderRange = this.getRenderRange(renderTop, renderHeight);
        // Let's remember the second element's position, this helps in scrolling up
        // and preserving a linear upwards scroll movement
        var anchorElementIndex;
        var anchorElementTopDelta;
        if (renderTop === this.elementTop(previousRenderRange.start)) {
            anchorElementIndex = previousRenderRange.start;
            anchorElementTopDelta = 0;
        }
        else if (previousRenderRange.end - previousRenderRange.start > 1) {
            anchorElementIndex = previousRenderRange.start + 1;
            anchorElementTopDelta = this.elementTop(anchorElementIndex) - renderTop;
        }
        var heightDiff = 0;
        while (true) {
            var renderRange = this.getRenderRange(renderTop, renderHeight);
            var didChange = false;
            for (var i = renderRange.start; i < renderRange.end; i++) {
                var diff = this.probeDynamicHeight(i);
                if (diff !== 0) {
                    this.rangeMap.splice(i, 1, [this.items[i]]);
                }
                heightDiff += diff;
                didChange = didChange || diff !== 0;
            }
            if (!didChange) {
                if (heightDiff !== 0) {
                    this.eventuallyUpdateScrollDimensions();
                }
                var unrenderRanges = vs_base_common_range__WEBPACK_IMPORTED_MODULE_12__["Range"].relativeComplement(previousRenderRange, renderRange);
                for (var _i = 0, unrenderRanges_1 = unrenderRanges; _i < unrenderRanges_1.length; _i++) {
                    var range = unrenderRanges_1[_i];
                    for (var i = range.start; i < range.end; i++) {
                        if (this.items[i].row) {
                            this.removeItemFromDOM(i);
                        }
                    }
                }
                var renderRanges = vs_base_common_range__WEBPACK_IMPORTED_MODULE_12__["Range"].relativeComplement(renderRange, previousRenderRange);
                for (var _a = 0, renderRanges_1 = renderRanges; _a < renderRanges_1.length; _a++) {
                    var range = renderRanges_1[_a];
                    for (var i = range.start; i < range.end; i++) {
                        var afterIndex = i + 1;
                        var beforeRow = afterIndex < this.items.length ? this.items[afterIndex].row : null;
                        var beforeElement = beforeRow ? beforeRow.domNode : null;
                        this.insertItemInDOM(i, beforeElement);
                    }
                }
                for (var i = renderRange.start; i < renderRange.end; i++) {
                    if (this.items[i].row) {
                        this.updateItemInDOM(this.items[i], i);
                    }
                }
                if (typeof anchorElementIndex === 'number') {
                    this.scrollTop = this.elementTop(anchorElementIndex) - anchorElementTopDelta;
                }
                this._onDidChangeContentHeight.fire(this.contentHeight);
                return;
            }
        }
    };
    ListView.prototype.probeDynamicHeight = function (index) {
        var item = this.items[index];
        if (!item.hasDynamicHeight || item.lastDynamicHeightWidth === this.renderWidth) {
            return 0;
        }
        var size = item.size;
        var row = this.cache.alloc(item.templateId);
        row.domNode.style.height = '';
        this.rowsContainer.appendChild(row.domNode);
        var renderer = this.renderers.get(item.templateId);
        if (renderer) {
            renderer.renderElement(item.element, index, row.templateData, undefined);
            if (renderer.disposeElement) {
                renderer.disposeElement(item.element, index, row.templateData, undefined);
            }
        }
        item.size = row.domNode.offsetHeight;
        if (this.virtualDelegate.setDynamicHeight) {
            this.virtualDelegate.setDynamicHeight(item.element, item.size);
        }
        item.lastDynamicHeightWidth = this.renderWidth;
        this.rowsContainer.removeChild(row.domNode);
        this.cache.release(row);
        return item.size - size;
    };
    ListView.prototype.getNextToLastElement = function (ranges) {
        var lastRange = ranges[ranges.length - 1];
        if (!lastRange) {
            return null;
        }
        var nextToLastItem = this.items[lastRange.end];
        if (!nextToLastItem) {
            return null;
        }
        if (!nextToLastItem.row) {
            return null;
        }
        return nextToLastItem.row.domNode;
    };
    ListView.prototype.getElementDomId = function (index) {
        return this.domId + "_" + index;
    };
    // Dispose
    ListView.prototype.dispose = function () {
        if (this.items) {
            for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
                var item = _a[_i];
                if (item.row) {
                    var renderer = this.renderers.get(item.row.templateId);
                    if (renderer) {
                        renderer.disposeTemplate(item.row.templateData);
                    }
                }
            }
            this.items = [];
        }
        if (this.domNode && this.domNode.parentNode) {
            this.domNode.parentNode.removeChild(this.domNode);
        }
        this.disposables = Object(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_1__["dispose"])(this.disposables);
    };
    ListView.InstanceCount = 0;
    ListView.ctorParameters = function () { return [
        { type: HTMLElement },
        { type: undefined },
        { type: Array },
        { type: undefined }
    ]; };
    __decorate([
        vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_11__["memoize"],
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [])
    ], ListView.prototype, "onMouseClick", null);
    __decorate([
        vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_11__["memoize"],
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [])
    ], ListView.prototype, "onMouseDblClick", null);
    __decorate([
        vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_11__["memoize"],
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [])
    ], ListView.prototype, "onMouseMiddleClick", null);
    __decorate([
        vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_11__["memoize"],
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [])
    ], ListView.prototype, "onMouseUp", null);
    __decorate([
        vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_11__["memoize"],
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [])
    ], ListView.prototype, "onMouseDown", null);
    __decorate([
        vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_11__["memoize"],
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [])
    ], ListView.prototype, "onMouseOver", null);
    __decorate([
        vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_11__["memoize"],
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [])
    ], ListView.prototype, "onMouseMove", null);
    __decorate([
        vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_11__["memoize"],
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [])
    ], ListView.prototype, "onMouseOut", null);
    __decorate([
        vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_11__["memoize"],
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [])
    ], ListView.prototype, "onContextMenu", null);
    __decorate([
        vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_11__["memoize"],
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [])
    ], ListView.prototype, "onTouchStart", null);
    __decorate([
        vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_11__["memoize"],
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [])
    ], ListView.prototype, "onTap", null);
    return ListView;
}());



/***/ }),

/***/ "./src/vs/base/browser/ui/list/listWidget.ts":
/*!***************************************************!*\
  !*** ./src/vs/base/browser/ui/list/listWidget.ts ***!
  \***************************************************/
/*! exports provided: mightProducePrintableCharacter, isSelectionSingleChangeEvent, isSelectionRangeChangeEvent, MouseController, DefaultStyleController, List */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mightProducePrintableCharacter", function() { return mightProducePrintableCharacter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSelectionSingleChangeEvent", function() { return isSelectionSingleChangeEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSelectionRangeChangeEvent", function() { return isSelectionRangeChangeEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MouseController", function() { return MouseController; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultStyleController", function() { return DefaultStyleController; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "List", function() { return List; });
/* harmony import */ var vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/lifecycle */ "./src/vs/base/common/lifecycle.ts");
/* harmony import */ var vs_base_common_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/common/types */ "./src/vs/base/common/types.ts");
/* harmony import */ var vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vs/base/common/arrays */ "./src/vs/base/common/arrays.ts");
/* harmony import */ var vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vs/base/common/decorators */ "./src/vs/base/common/decorators.ts");
/* harmony import */ var vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vs/base/browser/dom */ "./src/vs/base/browser/dom.ts");
/* harmony import */ var vs_base_common_platform__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vs/base/common/platform */ "./src/vs/base/common/platform.ts");
/* harmony import */ var vs_base_browser_touch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vs/base/browser/touch */ "./src/vs/base/browser/touch.ts");
/* harmony import */ var vs_base_browser_keyboardEvent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! vs/base/browser/keyboardEvent */ "./src/vs/base/browser/keyboardEvent.ts");
/* harmony import */ var vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! vs/base/common/event */ "./src/vs/base/common/event.ts");
/* harmony import */ var vs_base_browser_event__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vs/base/browser/event */ "./src/vs/base/browser/event.ts");
/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./list */ "./src/vs/base/browser/ui/list/list.ts");
/* harmony import */ var _listView__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./listView */ "./src/vs/base/browser/ui/list/listView.ts");
/* harmony import */ var vs_base_common_color__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! vs/base/common/color */ "./src/vs/base/common/color.ts");
/* harmony import */ var vs_base_common_objects__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! vs/base/common/objects */ "./src/vs/base/common/objects.ts");
/* harmony import */ var vs_base_browser_ui_list_splice__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! vs/base/browser/ui/list/splice */ "./src/vs/base/browser/ui/list/splice.ts");
/* harmony import */ var vs_base_common_numbers__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! vs/base/common/numbers */ "./src/vs/base/common/numbers.ts");
/* harmony import */ var vs_base_common_filters__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! vs/base/common/filters */ "./src/vs/base/common/filters.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
// import 'vs/css!./list';

















var TraitRenderer = /** @class */ (function () {
    function TraitRenderer(trait) {
        this.trait = trait;
        this.renderedElements = [];
    }
    Object.defineProperty(TraitRenderer.prototype, "templateId", {
        get: function () {
            return "template:" + this.trait.trait;
        },
        enumerable: true,
        configurable: true
    });
    TraitRenderer.prototype.renderTemplate = function (container) {
        return container;
    };
    TraitRenderer.prototype.renderElement = function (element, index, templateData) {
        var renderedElementIndex = Object(vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_2__["firstIndex"])(this.renderedElements, function (el) { return el.templateData === templateData; });
        if (renderedElementIndex >= 0) {
            var rendered = this.renderedElements[renderedElementIndex];
            this.trait.unrender(templateData);
            rendered.index = index;
        }
        else {
            var rendered = { index: index, templateData: templateData };
            this.renderedElements.push(rendered);
        }
        this.trait.renderIndex(index, templateData);
    };
    TraitRenderer.prototype.splice = function (start, deleteCount, insertCount) {
        var rendered = [];
        for (var _i = 0, _a = this.renderedElements; _i < _a.length; _i++) {
            var renderedElement = _a[_i];
            if (renderedElement.index < start) {
                rendered.push(renderedElement);
            }
            else if (renderedElement.index >= start + deleteCount) {
                rendered.push({
                    index: renderedElement.index + insertCount - deleteCount,
                    templateData: renderedElement.templateData
                });
            }
        }
        this.renderedElements = rendered;
    };
    TraitRenderer.prototype.renderIndexes = function (indexes) {
        for (var _i = 0, _a = this.renderedElements; _i < _a.length; _i++) {
            var _b = _a[_i], index = _b.index, templateData = _b.templateData;
            if (indexes.indexOf(index) > -1) {
                this.trait.renderIndex(index, templateData);
            }
        }
    };
    TraitRenderer.prototype.disposeTemplate = function (templateData) {
        var index = Object(vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_2__["firstIndex"])(this.renderedElements, function (el) { return el.templateData === templateData; });
        if (index < 0) {
            return;
        }
        this.renderedElements.splice(index, 1);
    };
    TraitRenderer.ctorParameters = function () { return [
        { type: Trait }
    ]; };
    return TraitRenderer;
}());
var Trait = /** @class */ (function () {
    function Trait(_trait) {
        this._trait = _trait;
        this.indexes = [];
        this.sortedIndexes = [];
        this._onChange = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Emitter"]();
    }
    Object.defineProperty(Trait.prototype, "onChange", {
        get: function () { return this._onChange.event; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Trait.prototype, "trait", {
        get: function () { return this._trait; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Trait.prototype, "renderer", {
        get: function () {
            return new TraitRenderer(this);
        },
        enumerable: true,
        configurable: true
    });
    Trait.prototype.splice = function (start, deleteCount, elements) {
        var diff = elements.length - deleteCount;
        var end = start + deleteCount;
        var indexes = this.sortedIndexes.filter(function (i) { return i < start; }).concat(elements.map(function (hasTrait, i) { return hasTrait ? i + start : -1; }).filter(function (i) { return i !== -1; }), this.sortedIndexes.filter(function (i) { return i >= end; }).map(function (i) { return i + diff; }));
        this.renderer.splice(start, deleteCount, elements.length);
        this._set(indexes, indexes);
    };
    Trait.prototype.renderIndex = function (index, container) {
        vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_4__["toggleClass"](container, this._trait, this.contains(index));
    };
    Trait.prototype.unrender = function (container) {
        vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_4__["removeClass"](container, this._trait);
    };
    /**
     * Sets the indexes which should have this trait.
     *
     * @param indexes Indexes which should have this trait.
     * @return The old indexes which had this trait.
     */
    Trait.prototype.set = function (indexes, browserEvent) {
        return this._set(indexes, indexes.slice().sort(numericSort), browserEvent);
    };
    Trait.prototype._set = function (indexes, sortedIndexes, browserEvent) {
        var result = this.indexes;
        var sortedResult = this.sortedIndexes;
        this.indexes = indexes;
        this.sortedIndexes = sortedIndexes;
        var toRender = disjunction(sortedResult, indexes);
        this.renderer.renderIndexes(toRender);
        this._onChange.fire({ indexes: indexes, browserEvent: browserEvent });
        return result;
    };
    Trait.prototype.get = function () {
        return this.indexes;
    };
    Trait.prototype.contains = function (index) {
        return Object(vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_2__["binarySearch"])(this.sortedIndexes, index, numericSort) >= 0;
    };
    Trait.prototype.dispose = function () {
        this._onChange = Object(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["dispose"])(this._onChange);
    };
    Trait.ctorParameters = function () { return [
        { type: String }
    ]; };
    __decorate([
        vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_3__["memoize"],
        __metadata("design:type", TraitRenderer),
        __metadata("design:paramtypes", [])
    ], Trait.prototype, "renderer", null);
    return Trait;
}());
var FocusTrait = /** @class */ (function (_super) {
    __extends(FocusTrait, _super);
    function FocusTrait() {
        return _super.call(this, 'focused') || this;
    }
    FocusTrait.prototype.renderIndex = function (index, container) {
        _super.prototype.renderIndex.call(this, index, container);
        if (this.contains(index)) {
            container.setAttribute('aria-selected', 'true');
        }
        else {
            container.removeAttribute('aria-selected');
        }
    };
    return FocusTrait;
}(Trait));
/**
 * The TraitSpliceable is used as a util class to be able
 * to preserve traits across splice calls, given an identity
 * provider.
 */
var TraitSpliceable = /** @class */ (function () {
    function TraitSpliceable(trait, view, identityProvider) {
        this.trait = trait;
        this.view = view;
        this.identityProvider = identityProvider;
    }
    TraitSpliceable.prototype.splice = function (start, deleteCount, elements) {
        var _this = this;
        if (!this.identityProvider) {
            return this.trait.splice(start, deleteCount, elements.map(function () { return false; }));
        }
        var pastElementsWithTrait = this.trait.get().map(function (i) { return _this.identityProvider.getId(_this.view.element(i)).toString(); });
        var elementsWithTrait = elements.map(function (e) { return pastElementsWithTrait.indexOf(_this.identityProvider.getId(e).toString()) > -1; });
        this.trait.splice(start, deleteCount, elementsWithTrait);
    };
    TraitSpliceable.ctorParameters = function () { return [
        { type: Trait },
        { type: _listView__WEBPACK_IMPORTED_MODULE_11__["ListView"] },
        { type: undefined }
    ]; };
    return TraitSpliceable;
}());
function isInputElement(e) {
    return e.tagName === 'INPUT' || e.tagName === 'TEXTAREA';
}
var KeyboardController = /** @class */ (function () {
    function KeyboardController(list, view, options) {
        this.list = list;
        this.view = view;
        this.disposables = new vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["DisposableStore"]();
        var multipleSelectionSupport = !(options.multipleSelectionSupport === false);
        this.openController = options.openController || DefaultOpenController;
        var onKeyDown = vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Event"].chain(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_9__["domEvent"])(view.domNode, 'keydown'))
            .filter(function (e) { return !isInputElement(e.target); })
            .map(function (e) { return new vs_base_browser_keyboardEvent__WEBPACK_IMPORTED_MODULE_7__["StandardKeyboardEvent"](e); });
        onKeyDown.filter(function (e) { return e.keyCode === 3 /* Enter */; }).on(this.onEnter, this, this.disposables);
        onKeyDown.filter(function (e) { return e.keyCode === 16 /* UpArrow */; }).on(this.onUpArrow, this, this.disposables);
        onKeyDown.filter(function (e) { return e.keyCode === 18 /* DownArrow */; }).on(this.onDownArrow, this, this.disposables);
        onKeyDown.filter(function (e) { return e.keyCode === 11 /* PageUp */; }).on(this.onPageUpArrow, this, this.disposables);
        onKeyDown.filter(function (e) { return e.keyCode === 12 /* PageDown */; }).on(this.onPageDownArrow, this, this.disposables);
        onKeyDown.filter(function (e) { return e.keyCode === 9 /* Escape */; }).on(this.onEscape, this, this.disposables);
        if (multipleSelectionSupport) {
            onKeyDown.filter(function (e) { return (vs_base_common_platform__WEBPACK_IMPORTED_MODULE_5__["isMacintosh"] ? e.metaKey : e.ctrlKey) && e.keyCode === 31 /* KEY_A */; }).on(this.onCtrlA, this, this.disposables);
        }
    }
    KeyboardController.prototype.onEnter = function (e) {
        e.preventDefault();
        e.stopPropagation();
        this.list.setSelection(this.list.getFocus(), e.browserEvent);
        if (this.openController.shouldOpen(e.browserEvent)) {
            this.list.open(this.list.getFocus(), e.browserEvent);
        }
    };
    KeyboardController.prototype.onUpArrow = function (e) {
        e.preventDefault();
        e.stopPropagation();
        this.list.focusPrevious(1, false, e.browserEvent);
        this.list.reveal(this.list.getFocus()[0]);
        this.view.domNode.focus();
    };
    KeyboardController.prototype.onDownArrow = function (e) {
        e.preventDefault();
        e.stopPropagation();
        this.list.focusNext(1, false, e.browserEvent);
        this.list.reveal(this.list.getFocus()[0]);
        this.view.domNode.focus();
    };
    KeyboardController.prototype.onPageUpArrow = function (e) {
        e.preventDefault();
        e.stopPropagation();
        this.list.focusPreviousPage(e.browserEvent);
        this.list.reveal(this.list.getFocus()[0]);
        this.view.domNode.focus();
    };
    KeyboardController.prototype.onPageDownArrow = function (e) {
        e.preventDefault();
        e.stopPropagation();
        this.list.focusNextPage(e.browserEvent);
        this.list.reveal(this.list.getFocus()[0]);
        this.view.domNode.focus();
    };
    KeyboardController.prototype.onCtrlA = function (e) {
        e.preventDefault();
        e.stopPropagation();
        this.list.setSelection(Object(vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_2__["range"])(this.list.length), e.browserEvent);
        this.view.domNode.focus();
    };
    KeyboardController.prototype.onEscape = function (e) {
        e.preventDefault();
        e.stopPropagation();
        this.list.setSelection([], e.browserEvent);
        this.view.domNode.focus();
    };
    KeyboardController.prototype.dispose = function () {
        this.disposables.dispose();
    };
    KeyboardController.ctorParameters = function () { return [
        { type: List },
        { type: _listView__WEBPACK_IMPORTED_MODULE_11__["ListView"] },
        { type: undefined }
    ]; };
    return KeyboardController;
}());
var TypeLabelControllerState;
(function (TypeLabelControllerState) {
    TypeLabelControllerState[TypeLabelControllerState["Idle"] = 0] = "Idle";
    TypeLabelControllerState[TypeLabelControllerState["Typing"] = 1] = "Typing";
})(TypeLabelControllerState || (TypeLabelControllerState = {}));
function mightProducePrintableCharacter(event) {
    if (event.ctrlKey || event.metaKey || event.altKey) {
        return false;
    }
    return (event.keyCode >= 31 /* KEY_A */ && event.keyCode <= 56 /* KEY_Z */)
        || (event.keyCode >= 21 /* KEY_0 */ && event.keyCode <= 30 /* KEY_9 */)
        || (event.keyCode >= 80 /* US_SEMICOLON */ && event.keyCode <= 90 /* US_QUOTE */);
}
var TypeLabelController = /** @class */ (function () {
    function TypeLabelController(list, view, keyboardNavigationLabelProvider) {
        this.list = list;
        this.view = view;
        this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;
        this.enabled = false;
        this.state = TypeLabelControllerState.Idle;
        this.automaticKeyboardNavigation = true;
        this.triggered = false;
        this.enabledDisposables = new vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["DisposableStore"]();
        this.disposables = new vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["DisposableStore"]();
        this.updateOptions(list.options);
    }
    TypeLabelController.prototype.updateOptions = function (options) {
        var enableKeyboardNavigation = typeof options.enableKeyboardNavigation === 'undefined' ? true : !!options.enableKeyboardNavigation;
        if (enableKeyboardNavigation) {
            this.enable();
        }
        else {
            this.disable();
        }
        if (typeof options.automaticKeyboardNavigation !== 'undefined') {
            this.automaticKeyboardNavigation = options.automaticKeyboardNavigation;
        }
    };
    TypeLabelController.prototype.toggle = function () {
        this.triggered = !this.triggered;
    };
    TypeLabelController.prototype.enable = function () {
        var _this = this;
        if (this.enabled) {
            return;
        }
        var onChar = vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Event"].chain(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_9__["domEvent"])(this.view.domNode, 'keydown'))
            .filter(function (e) { return !isInputElement(e.target); })
            .filter(function () { return _this.automaticKeyboardNavigation || _this.triggered; })
            .map(function (event) { return new vs_base_browser_keyboardEvent__WEBPACK_IMPORTED_MODULE_7__["StandardKeyboardEvent"](event); })
            .filter(this.keyboardNavigationLabelProvider.mightProducePrintableCharacter ? function (e) { return _this.keyboardNavigationLabelProvider.mightProducePrintableCharacter(e); } : function (e) { return mightProducePrintableCharacter(e); })
            .forEach(function (e) { e.stopPropagation(); e.preventDefault(); })
            .map(function (event) { return event.browserEvent.key; })
            .event;
        var onClear = vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Event"].debounce(onChar, function () { return null; }, 800);
        var onInput = vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Event"].reduce(vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Event"].any(onChar, onClear), function (r, i) { return i === null ? null : ((r || '') + i); });
        onInput(this.onInput, this, this.enabledDisposables);
        this.enabled = true;
        this.triggered = false;
    };
    TypeLabelController.prototype.disable = function () {
        if (!this.enabled) {
            return;
        }
        this.enabledDisposables.clear();
        this.enabled = false;
        this.triggered = false;
    };
    TypeLabelController.prototype.onInput = function (word) {
        if (!word) {
            this.state = TypeLabelControllerState.Idle;
            this.triggered = false;
            return;
        }
        var focus = this.list.getFocus();
        var start = focus.length > 0 ? focus[0] : 0;
        var delta = this.state === TypeLabelControllerState.Idle ? 1 : 0;
        this.state = TypeLabelControllerState.Typing;
        for (var i = 0; i < this.list.length; i++) {
            var index = (start + i + delta) % this.list.length;
            var label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(this.view.element(index));
            var labelStr = label && label.toString();
            if (typeof labelStr === 'undefined' || Object(vs_base_common_filters__WEBPACK_IMPORTED_MODULE_16__["matchesPrefix"])(word, labelStr)) {
                this.list.setFocus([index]);
                this.list.reveal(index);
                return;
            }
        }
    };
    TypeLabelController.prototype.dispose = function () {
        this.disable();
        this.enabledDisposables.dispose();
        this.disposables.dispose();
    };
    TypeLabelController.ctorParameters = function () { return [
        { type: List },
        { type: _listView__WEBPACK_IMPORTED_MODULE_11__["ListView"] },
        { type: undefined }
    ]; };
    return TypeLabelController;
}());
var DOMFocusController = /** @class */ (function () {
    function DOMFocusController(list, view) {
        this.list = list;
        this.view = view;
        this.disposables = new vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["DisposableStore"]();
        var onKeyDown = vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Event"].chain(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_9__["domEvent"])(view.domNode, 'keydown'))
            .filter(function (e) { return !isInputElement(e.target); })
            .map(function (e) { return new vs_base_browser_keyboardEvent__WEBPACK_IMPORTED_MODULE_7__["StandardKeyboardEvent"](e); });
        onKeyDown.filter(function (e) { return e.keyCode === 2 /* Tab */ && !e.ctrlKey && !e.metaKey && !e.shiftKey && !e.altKey; })
            .on(this.onTab, this, this.disposables);
    }
    DOMFocusController.prototype.onTab = function (e) {
        if (e.target !== this.view.domNode) {
            return;
        }
        var focus = this.list.getFocus();
        if (focus.length === 0) {
            return;
        }
        var focusedDomElement = this.view.domElement(focus[0]);
        if (!focusedDomElement) {
            return;
        }
        var tabIndexElement = focusedDomElement.querySelector('[tabIndex]');
        if (!tabIndexElement || !(tabIndexElement instanceof HTMLElement) || tabIndexElement.tabIndex === -1) {
            return;
        }
        var style = window.getComputedStyle(tabIndexElement);
        if (style.visibility === 'hidden' || style.display === 'none') {
            return;
        }
        e.preventDefault();
        e.stopPropagation();
        tabIndexElement.focus();
    };
    DOMFocusController.prototype.dispose = function () {
        this.disposables.dispose();
    };
    DOMFocusController.ctorParameters = function () { return [
        { type: List },
        { type: _listView__WEBPACK_IMPORTED_MODULE_11__["ListView"] }
    ]; };
    return DOMFocusController;
}());
function isSelectionSingleChangeEvent(event) {
    return vs_base_common_platform__WEBPACK_IMPORTED_MODULE_5__["isMacintosh"] ? event.browserEvent.metaKey : event.browserEvent.ctrlKey;
}
function isSelectionRangeChangeEvent(event) {
    return event.browserEvent.shiftKey;
}
function isMouseRightClick(event) {
    return event instanceof MouseEvent && event.button === 2;
}
var DefaultMultipleSelectionController = {
    isSelectionSingleChangeEvent: isSelectionSingleChangeEvent,
    isSelectionRangeChangeEvent: isSelectionRangeChangeEvent
};
var DefaultOpenController = {
    shouldOpen: function (event) {
        if (event instanceof MouseEvent) {
            return !isMouseRightClick(event);
        }
        return true;
    }
};
var MouseController = /** @class */ (function () {
    function MouseController(list) {
        this.list = list;
        this.disposables = new vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["DisposableStore"]();
        this.multipleSelectionSupport = !(list.options.multipleSelectionSupport === false);
        if (this.multipleSelectionSupport) {
            this.multipleSelectionController = list.options.multipleSelectionController || DefaultMultipleSelectionController;
        }
        this.openController = list.options.openController || DefaultOpenController;
        this.mouseSupport = typeof list.options.mouseSupport === 'undefined' || !!list.options.mouseSupport;
        if (this.mouseSupport) {
            list.onMouseDown(this.onMouseDown, this, this.disposables);
            list.onContextMenu(this.onContextMenu, this, this.disposables);
            list.onMouseDblClick(this.onDoubleClick, this, this.disposables);
            list.onTouchStart(this.onMouseDown, this, this.disposables);
            vs_base_browser_touch__WEBPACK_IMPORTED_MODULE_6__["Gesture"].addTarget(list.getHTMLElement());
        }
        list.onMouseClick(this.onPointer, this, this.disposables);
        list.onMouseMiddleClick(this.onPointer, this, this.disposables);
        list.onTap(this.onPointer, this, this.disposables);
    }
    MouseController.prototype.isSelectionSingleChangeEvent = function (event) {
        if (this.multipleSelectionController) {
            return this.multipleSelectionController.isSelectionSingleChangeEvent(event);
        }
        return vs_base_common_platform__WEBPACK_IMPORTED_MODULE_5__["isMacintosh"] ? event.browserEvent.metaKey : event.browserEvent.ctrlKey;
    };
    MouseController.prototype.isSelectionRangeChangeEvent = function (event) {
        if (this.multipleSelectionController) {
            return this.multipleSelectionController.isSelectionRangeChangeEvent(event);
        }
        return event.browserEvent.shiftKey;
    };
    MouseController.prototype.isSelectionChangeEvent = function (event) {
        return this.isSelectionSingleChangeEvent(event) || this.isSelectionRangeChangeEvent(event);
    };
    MouseController.prototype.onMouseDown = function (e) {
        if (document.activeElement !== e.browserEvent.target) {
            this.list.domFocus();
        }
    };
    MouseController.prototype.onContextMenu = function (e) {
        var focus = typeof e.index === 'undefined' ? [] : [e.index];
        this.list.setFocus(focus, e.browserEvent);
    };
    MouseController.prototype.onPointer = function (e) {
        if (!this.mouseSupport) {
            return;
        }
        if (isInputElement(e.browserEvent.target)) {
            return;
        }
        var reference = this.list.getFocus()[0];
        var selection = this.list.getSelection();
        reference = reference === undefined ? selection[0] : reference;
        var focus = e.index;
        if (typeof focus === 'undefined') {
            this.list.setFocus([], e.browserEvent);
            this.list.setSelection([], e.browserEvent);
            return;
        }
        if (this.multipleSelectionSupport && this.isSelectionRangeChangeEvent(e)) {
            return this.changeSelection(e, reference);
        }
        if (this.multipleSelectionSupport && this.isSelectionChangeEvent(e)) {
            return this.changeSelection(e, reference);
        }
        this.list.setFocus([focus], e.browserEvent);
        if (!isMouseRightClick(e.browserEvent)) {
            this.list.setSelection([focus], e.browserEvent);
            if (this.openController.shouldOpen(e.browserEvent)) {
                this.list.open([focus], e.browserEvent);
            }
        }
    };
    MouseController.prototype.onDoubleClick = function (e) {
        if (isInputElement(e.browserEvent.target)) {
            return;
        }
        if (this.multipleSelectionSupport && this.isSelectionChangeEvent(e)) {
            return;
        }
        var focus = this.list.getFocus();
        this.list.setSelection(focus, e.browserEvent);
        this.list.pin(focus);
    };
    MouseController.prototype.changeSelection = function (e, reference) {
        var focus = e.index;
        if (this.isSelectionRangeChangeEvent(e) && reference !== undefined) {
            var min = Math.min(reference, focus);
            var max = Math.max(reference, focus);
            var rangeSelection = Object(vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_2__["range"])(min, max + 1);
            var selection = this.list.getSelection();
            var contiguousRange = getContiguousRangeContaining(disjunction(selection, [reference]), reference);
            if (contiguousRange.length === 0) {
                return;
            }
            var newSelection = disjunction(rangeSelection, relativeComplement(selection, contiguousRange));
            this.list.setSelection(newSelection, e.browserEvent);
        }
        else if (this.isSelectionSingleChangeEvent(e)) {
            var selection = this.list.getSelection();
            var newSelection = selection.filter(function (i) { return i !== focus; });
            if (selection.length === newSelection.length) {
                this.list.setSelection(newSelection.concat([focus]), e.browserEvent);
            }
            else {
                this.list.setSelection(newSelection, e.browserEvent);
            }
        }
    };
    MouseController.prototype.dispose = function () {
        this.disposables.dispose();
    };
    MouseController.ctorParameters = function () { return [
        { type: List }
    ]; };
    return MouseController;
}());

var DefaultStyleController = /** @class */ (function () {
    function DefaultStyleController(styleElement, selectorSuffix) {
        this.styleElement = styleElement;
        this.selectorSuffix = selectorSuffix;
    }
    DefaultStyleController.prototype.style = function (styles) {
        var suffix = this.selectorSuffix ? "." + this.selectorSuffix : '';
        var content = [];
        if (styles.listFocusBackground) {
            content.push(".monaco-list" + suffix + ":focus .monaco-list-row.focused { background-color: " + styles.listFocusBackground + "; }");
            content.push(".monaco-list" + suffix + ":focus .monaco-list-row.focused:hover { background-color: " + styles.listFocusBackground + "; }"); // overwrite :hover style in this case!
        }
        if (styles.listFocusForeground) {
            content.push(".monaco-list" + suffix + ":focus .monaco-list-row.focused { color: " + styles.listFocusForeground + "; }");
        }
        if (styles.listActiveSelectionBackground) {
            content.push(".monaco-list" + suffix + ":focus .monaco-list-row.selected { background-color: " + styles.listActiveSelectionBackground + "; }");
            content.push(".monaco-list" + suffix + ":focus .monaco-list-row.selected:hover { background-color: " + styles.listActiveSelectionBackground + "; }"); // overwrite :hover style in this case!
        }
        if (styles.listActiveSelectionForeground) {
            content.push(".monaco-list" + suffix + ":focus .monaco-list-row.selected { color: " + styles.listActiveSelectionForeground + "; }");
        }
        if (styles.listFocusAndSelectionBackground) {
            content.push("\n\t\t\t\t.monaco-drag-image,\n\t\t\t\t.monaco-list" + suffix + ":focus .monaco-list-row.selected.focused { background-color: " + styles.listFocusAndSelectionBackground + "; }\n\t\t\t");
        }
        if (styles.listFocusAndSelectionForeground) {
            content.push("\n\t\t\t\t.monaco-drag-image,\n\t\t\t\t.monaco-list" + suffix + ":focus .monaco-list-row.selected.focused { color: " + styles.listFocusAndSelectionForeground + "; }\n\t\t\t");
        }
        if (styles.listInactiveFocusBackground) {
            content.push(".monaco-list" + suffix + " .monaco-list-row.focused { background-color:  " + styles.listInactiveFocusBackground + "; }");
            content.push(".monaco-list" + suffix + " .monaco-list-row.focused:hover { background-color:  " + styles.listInactiveFocusBackground + "; }"); // overwrite :hover style in this case!
        }
        if (styles.listInactiveSelectionBackground) {
            content.push(".monaco-list" + suffix + " .monaco-list-row.selected { background-color:  " + styles.listInactiveSelectionBackground + "; }");
            content.push(".monaco-list" + suffix + " .monaco-list-row.selected:hover { background-color:  " + styles.listInactiveSelectionBackground + "; }"); // overwrite :hover style in this case!
        }
        if (styles.listInactiveSelectionForeground) {
            content.push(".monaco-list" + suffix + " .monaco-list-row.selected { color: " + styles.listInactiveSelectionForeground + "; }");
        }
        if (styles.listHoverBackground) {
            content.push(".monaco-list" + suffix + ":not(.drop-target) .monaco-list-row:hover:not(.selected):not(.focused) { background-color:  " + styles.listHoverBackground + "; }");
        }
        if (styles.listHoverForeground) {
            content.push(".monaco-list" + suffix + " .monaco-list-row:hover:not(.selected):not(.focused) { color:  " + styles.listHoverForeground + "; }");
        }
        if (styles.listSelectionOutline) {
            content.push(".monaco-list" + suffix + " .monaco-list-row.selected { outline: 1px dotted " + styles.listSelectionOutline + "; outline-offset: -1px; }");
        }
        if (styles.listFocusOutline) {
            content.push("\n\t\t\t\t.monaco-drag-image,\n\t\t\t\t.monaco-list" + suffix + ":focus .monaco-list-row.focused { outline: 1px solid " + styles.listFocusOutline + "; outline-offset: -1px; }\n\t\t\t");
        }
        if (styles.listInactiveFocusOutline) {
            content.push(".monaco-list" + suffix + " .monaco-list-row.focused { outline: 1px dotted " + styles.listInactiveFocusOutline + "; outline-offset: -1px; }");
        }
        if (styles.listHoverOutline) {
            content.push(".monaco-list" + suffix + " .monaco-list-row:hover { outline: 1px dashed " + styles.listHoverOutline + "; outline-offset: -1px; }");
        }
        if (styles.listDropBackground) {
            content.push("\n\t\t\t\t.monaco-list" + suffix + ".drop-target,\n\t\t\t\t.monaco-list" + suffix + " .monaco-list-row.drop-target { background-color: " + styles.listDropBackground + " !important; color: inherit !important; }\n\t\t\t");
        }
        if (styles.listFilterWidgetBackground) {
            content.push(".monaco-list-type-filter { background-color: " + styles.listFilterWidgetBackground + " }");
        }
        if (styles.listFilterWidgetOutline) {
            content.push(".monaco-list-type-filter { border: 1px solid " + styles.listFilterWidgetOutline + "; }");
        }
        if (styles.listFilterWidgetNoMatchesOutline) {
            content.push(".monaco-list-type-filter.no-matches { border: 1px solid " + styles.listFilterWidgetNoMatchesOutline + "; }");
        }
        if (styles.listMatchesShadow) {
            content.push(".monaco-list-type-filter { box-shadow: 1px 1px 1px " + styles.listMatchesShadow + "; }");
        }
        var newStyles = content.join('\n');
        if (newStyles !== this.styleElement.innerHTML) {
            this.styleElement.innerHTML = newStyles;
        }
    };
    DefaultStyleController.ctorParameters = function () { return [
        { type: HTMLStyleElement },
        { type: String }
    ]; };
    return DefaultStyleController;
}());

var defaultStyles = {
    listFocusBackground: vs_base_common_color__WEBPACK_IMPORTED_MODULE_12__["Color"].fromHex('#073655'),
    listActiveSelectionBackground: vs_base_common_color__WEBPACK_IMPORTED_MODULE_12__["Color"].fromHex('#0E639C'),
    listActiveSelectionForeground: vs_base_common_color__WEBPACK_IMPORTED_MODULE_12__["Color"].fromHex('#FFFFFF'),
    listFocusAndSelectionBackground: vs_base_common_color__WEBPACK_IMPORTED_MODULE_12__["Color"].fromHex('#094771'),
    listFocusAndSelectionForeground: vs_base_common_color__WEBPACK_IMPORTED_MODULE_12__["Color"].fromHex('#FFFFFF'),
    listInactiveSelectionBackground: vs_base_common_color__WEBPACK_IMPORTED_MODULE_12__["Color"].fromHex('#3F3F46'),
    listHoverBackground: vs_base_common_color__WEBPACK_IMPORTED_MODULE_12__["Color"].fromHex('#2A2D2E'),
    listDropBackground: vs_base_common_color__WEBPACK_IMPORTED_MODULE_12__["Color"].fromHex('#383B3D'),
    treeIndentGuidesStroke: vs_base_common_color__WEBPACK_IMPORTED_MODULE_12__["Color"].fromHex('#a9a9a9')
};
var DefaultOptions = {
    keyboardSupport: true,
    mouseSupport: true,
    multipleSelectionSupport: true,
    dnd: {
        getDragURI: function () { return null; },
        onDragStart: function () { },
        onDragOver: function () { return false; },
        drop: function () { }
    },
    ariaRootRole: _list__WEBPACK_IMPORTED_MODULE_10__["ListAriaRootRole"].TREE
};
// TODO@Joao: move these utils into a SortedArray class
function getContiguousRangeContaining(range, value) {
    var index = range.indexOf(value);
    if (index === -1) {
        return [];
    }
    var result = [];
    var i = index - 1;
    while (i >= 0 && range[i] === value - (index - i)) {
        result.push(range[i--]);
    }
    result.reverse();
    i = index;
    while (i < range.length && range[i] === value + (i - index)) {
        result.push(range[i++]);
    }
    return result;
}
/**
 * Given two sorted collections of numbers, returns the intersection
 * between them (OR).
 */
function disjunction(one, other) {
    var result = [];
    var i = 0, j = 0;
    while (i < one.length || j < other.length) {
        if (i >= one.length) {
            result.push(other[j++]);
        }
        else if (j >= other.length) {
            result.push(one[i++]);
        }
        else if (one[i] === other[j]) {
            result.push(one[i]);
            i++;
            j++;
            continue;
        }
        else if (one[i] < other[j]) {
            result.push(one[i++]);
        }
        else {
            result.push(other[j++]);
        }
    }
    return result;
}
/**
 * Given two sorted collections of numbers, returns the relative
 * complement between them (XOR).
 */
function relativeComplement(one, other) {
    var result = [];
    var i = 0, j = 0;
    while (i < one.length || j < other.length) {
        if (i >= one.length) {
            result.push(other[j++]);
        }
        else if (j >= other.length) {
            result.push(one[i++]);
        }
        else if (one[i] === other[j]) {
            i++;
            j++;
            continue;
        }
        else if (one[i] < other[j]) {
            result.push(one[i++]);
        }
        else {
            j++;
        }
    }
    return result;
}
var numericSort = function (a, b) { return a - b; };
var PipelineRenderer = /** @class */ (function () {
    function PipelineRenderer(_templateId, renderers) {
        this._templateId = _templateId;
        this.renderers = renderers;
    }
    Object.defineProperty(PipelineRenderer.prototype, "templateId", {
        get: function () {
            return this._templateId;
        },
        enumerable: true,
        configurable: true
    });
    PipelineRenderer.prototype.renderTemplate = function (container) {
        return this.renderers.map(function (r) { return r.renderTemplate(container); });
    };
    PipelineRenderer.prototype.renderElement = function (element, index, templateData, height) {
        var i = 0;
        for (var _i = 0, _a = this.renderers; _i < _a.length; _i++) {
            var renderer = _a[_i];
            renderer.renderElement(element, index, templateData[i++], height);
        }
    };
    PipelineRenderer.prototype.disposeElement = function (element, index, templateData, height) {
        var i = 0;
        for (var _i = 0, _a = this.renderers; _i < _a.length; _i++) {
            var renderer = _a[_i];
            if (renderer.disposeElement) {
                renderer.disposeElement(element, index, templateData[i], height);
            }
            i += 1;
        }
    };
    PipelineRenderer.prototype.disposeTemplate = function (templateData) {
        var i = 0;
        for (var _i = 0, _a = this.renderers; _i < _a.length; _i++) {
            var renderer = _a[_i];
            renderer.disposeTemplate(templateData[i++]);
        }
    };
    PipelineRenderer.ctorParameters = function () { return [
        { type: String },
        { type: Array }
    ]; };
    return PipelineRenderer;
}());
var ListViewDragAndDrop = /** @class */ (function () {
    function ListViewDragAndDrop(list, dnd) {
        this.list = list;
        this.dnd = dnd;
    }
    ListViewDragAndDrop.prototype.getDragElements = function (element) {
        var selection = this.list.getSelectedElements();
        var elements = selection.indexOf(element) > -1 ? selection : [element];
        return elements;
    };
    ListViewDragAndDrop.prototype.getDragURI = function (element) {
        return this.dnd.getDragURI(element);
    };
    ListViewDragAndDrop.prototype.getDragLabel = function (elements) {
        if (this.dnd.getDragLabel) {
            return this.dnd.getDragLabel(elements);
        }
        return undefined;
    };
    ListViewDragAndDrop.prototype.onDragStart = function (data, originalEvent) {
        if (this.dnd.onDragStart) {
            this.dnd.onDragStart(data, originalEvent);
        }
    };
    ListViewDragAndDrop.prototype.onDragOver = function (data, targetElement, targetIndex, originalEvent) {
        return this.dnd.onDragOver(data, targetElement, targetIndex, originalEvent);
    };
    ListViewDragAndDrop.prototype.drop = function (data, targetElement, targetIndex, originalEvent) {
        this.dnd.drop(data, targetElement, targetIndex, originalEvent);
    };
    ListViewDragAndDrop.ctorParameters = function () { return [
        { type: List },
        { type: undefined }
    ]; };
    return ListViewDragAndDrop;
}());
var List = /** @class */ (function () {
    function List(container, virtualDelegate, renderers, _options) {
        if (_options === void 0) { _options = DefaultOptions; }
        this._options = _options;
        this.eventBufferer = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["EventBufferer"]();
        this.disposables = new vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["DisposableStore"]();
        this._onDidOpen = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Emitter"]();
        this.onDidOpen = this._onDidOpen.event;
        this._onPin = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Emitter"]();
        this.didJustPressContextMenuKey = false;
        this._onDidDispose = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Emitter"]();
        this.focus = new FocusTrait();
        this.selection = new Trait('selected');
        Object(vs_base_common_objects__WEBPACK_IMPORTED_MODULE_13__["mixin"])(_options, defaultStyles, false);
        var baseRenderers = [this.focus.renderer, this.selection.renderer];
        renderers = renderers.map(function (r) { return new PipelineRenderer(r.templateId, baseRenderers.concat([r])); });
        var viewOptions = __assign({}, _options, { dnd: _options.dnd && new ListViewDragAndDrop(this, _options.dnd) });
        this.view = new _listView__WEBPACK_IMPORTED_MODULE_11__["ListView"](container, virtualDelegate, renderers, viewOptions);
        if (typeof _options.ariaRole !== 'string') {
            this.view.domNode.setAttribute('role', _list__WEBPACK_IMPORTED_MODULE_10__["ListAriaRootRole"].TREE);
        }
        else {
            this.view.domNode.setAttribute('role', _options.ariaRole);
        }
        this.styleElement = vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_4__["createStyleSheet"](this.view.domNode);
        this.styleController = _options.styleController || new DefaultStyleController(this.styleElement, this.view.domId);
        this.spliceable = new vs_base_browser_ui_list_splice__WEBPACK_IMPORTED_MODULE_14__["CombinedSpliceable"]([
            new TraitSpliceable(this.focus, this.view, _options.identityProvider),
            new TraitSpliceable(this.selection, this.view, _options.identityProvider),
            this.view
        ]);
        this.disposables.add(this.focus);
        this.disposables.add(this.selection);
        this.disposables.add(this.view);
        this.disposables.add(this._onDidDispose);
        this.onDidFocus = vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Event"].map(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_9__["domEvent"])(this.view.domNode, 'focus', true), function () { return null; });
        this.onDidBlur = vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Event"].map(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_9__["domEvent"])(this.view.domNode, 'blur', true), function () { return null; });
        this.disposables.add(new DOMFocusController(this, this.view));
        if (typeof _options.keyboardSupport !== 'boolean' || _options.keyboardSupport) {
            var controller = new KeyboardController(this, this.view, _options);
            this.disposables.add(controller);
        }
        if (_options.keyboardNavigationLabelProvider) {
            this.typeLabelController = new TypeLabelController(this, this.view, _options.keyboardNavigationLabelProvider);
            this.disposables.add(this.typeLabelController);
        }
        this.disposables.add(this.createMouseController(_options));
        this.onFocusChange(this._onFocusChange, this, this.disposables);
        this.onSelectionChange(this._onSelectionChange, this, this.disposables);
        this.style(_options);
    }
    Object.defineProperty(List.prototype, "onFocusChange", {
        get: function () {
            var _this = this;
            return vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Event"].map(this.eventBufferer.wrapEvent(this.focus.onChange), function (e) { return _this.toListEvent(e); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onSelectionChange", {
        get: function () {
            var _this = this;
            return vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Event"].map(this.eventBufferer.wrapEvent(this.selection.onChange), function (e) { return _this.toListEvent(e); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onPin", {
        get: function () {
            var _this = this;
            return vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Event"].map(this._onPin.event, function (indexes) { return _this.toListEvent({ indexes: indexes }); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "domId", {
        get: function () { return this.view.domId; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onDidScroll", {
        get: function () { return this.view.onDidScroll; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onMouseClick", {
        get: function () { return this.view.onMouseClick; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onMouseDblClick", {
        get: function () { return this.view.onMouseDblClick; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onMouseMiddleClick", {
        get: function () { return this.view.onMouseMiddleClick; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onMouseUp", {
        get: function () { return this.view.onMouseUp; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onMouseDown", {
        get: function () { return this.view.onMouseDown; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onMouseOver", {
        get: function () { return this.view.onMouseOver; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onMouseMove", {
        get: function () { return this.view.onMouseMove; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onMouseOut", {
        get: function () { return this.view.onMouseOut; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onTouchStart", {
        get: function () { return this.view.onTouchStart; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onTap", {
        get: function () { return this.view.onTap; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onContextMenu", {
        get: function () {
            var _this = this;
            var fromKeydown = vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Event"].chain(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_9__["domEvent"])(this.view.domNode, 'keydown'))
                .map(function (e) { return new vs_base_browser_keyboardEvent__WEBPACK_IMPORTED_MODULE_7__["StandardKeyboardEvent"](e); })
                .filter(function (e) { return _this.didJustPressContextMenuKey = e.keyCode === 58 /* ContextMenu */ || (e.shiftKey && e.keyCode === 68 /* F10 */); })
                .filter(function (e) { e.preventDefault(); e.stopPropagation(); return false; })
                .event;
            var fromKeyup = vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Event"].chain(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_9__["domEvent"])(this.view.domNode, 'keyup'))
                .filter(function () {
                var didJustPressContextMenuKey = _this.didJustPressContextMenuKey;
                _this.didJustPressContextMenuKey = false;
                return didJustPressContextMenuKey;
            })
                .filter(function () { return _this.getFocus().length > 0 && !!_this.view.domElement(_this.getFocus()[0]); })
                .map(function (browserEvent) {
                var index = _this.getFocus()[0];
                var element = _this.view.element(index);
                var anchor = _this.view.domElement(index);
                return { index: index, element: element, anchor: anchor, browserEvent: browserEvent };
            })
                .event;
            var fromMouse = vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Event"].chain(this.view.onContextMenu)
                .filter(function () { return !_this.didJustPressContextMenuKey; })
                .map(function (_a) {
                var element = _a.element, index = _a.index, browserEvent = _a.browserEvent;
                return ({ element: element, index: index, anchor: { x: browserEvent.clientX + 1, y: browserEvent.clientY }, browserEvent: browserEvent });
            })
                .event;
            return vs_base_common_event__WEBPACK_IMPORTED_MODULE_8__["Event"].any(fromKeydown, fromKeyup, fromMouse);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onKeyDown", {
        get: function () { return Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_9__["domEvent"])(this.view.domNode, 'keydown'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onKeyUp", {
        get: function () { return Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_9__["domEvent"])(this.view.domNode, 'keyup'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onKeyPress", {
        get: function () { return Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_9__["domEvent"])(this.view.domNode, 'keypress'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onDidDispose", {
        get: function () { return this._onDidDispose.event; },
        enumerable: true,
        configurable: true
    });
    List.prototype.createMouseController = function (options) {
        return new MouseController(this);
    };
    List.prototype.updateOptions = function (optionsUpdate) {
        if (optionsUpdate === void 0) { optionsUpdate = {}; }
        this._options = __assign({}, this._options, optionsUpdate);
        if (this.typeLabelController) {
            this.typeLabelController.updateOptions(this._options);
        }
    };
    Object.defineProperty(List.prototype, "options", {
        get: function () {
            return this._options;
        },
        enumerable: true,
        configurable: true
    });
    List.prototype.splice = function (start, deleteCount, elements) {
        var _this = this;
        if (elements === void 0) { elements = []; }
        if (start < 0 || start > this.view.length) {
            throw new Error("Invalid start index: " + start);
        }
        if (deleteCount < 0) {
            throw new Error("Invalid delete count: " + deleteCount);
        }
        if (deleteCount === 0 && elements.length === 0) {
            return;
        }
        this.eventBufferer.bufferEvents(function () { return _this.spliceable.splice(start, deleteCount, elements); });
    };
    List.prototype.updateWidth = function (index) {
        this.view.updateWidth(index);
    };
    List.prototype.rerender = function () {
        this.view.rerender();
    };
    List.prototype.element = function (index) {
        return this.view.element(index);
    };
    Object.defineProperty(List.prototype, "length", {
        get: function () {
            return this.view.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "contentHeight", {
        get: function () {
            return this.view.contentHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "onDidChangeContentHeight", {
        get: function () {
            return this.view.onDidChangeContentHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "scrollTop", {
        get: function () {
            return this.view.getScrollTop();
        },
        set: function (scrollTop) {
            this.view.setScrollTop(scrollTop);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "scrollHeight", {
        get: function () {
            return this.view.scrollHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "renderHeight", {
        get: function () {
            return this.view.renderHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "firstVisibleIndex", {
        get: function () {
            return this.view.firstVisibleIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(List.prototype, "lastVisibleIndex", {
        get: function () {
            return this.view.lastVisibleIndex;
        },
        enumerable: true,
        configurable: true
    });
    List.prototype.domFocus = function () {
        this.view.domNode.focus();
    };
    List.prototype.layout = function (height, width) {
        this.view.layout(height, width);
    };
    List.prototype.toggleKeyboardNavigation = function () {
        if (this.typeLabelController) {
            this.typeLabelController.toggle();
        }
    };
    List.prototype.setSelection = function (indexes, browserEvent) {
        for (var _i = 0, indexes_1 = indexes; _i < indexes_1.length; _i++) {
            var index = indexes_1[_i];
            if (index < 0 || index >= this.length) {
                throw new Error("Invalid index " + index);
            }
        }
        this.selection.set(indexes, browserEvent);
    };
    List.prototype.getSelection = function () {
        return this.selection.get();
    };
    List.prototype.getSelectedElements = function () {
        var _this = this;
        return this.getSelection().map(function (i) { return _this.view.element(i); });
    };
    List.prototype.setFocus = function (indexes, browserEvent) {
        for (var _i = 0, indexes_2 = indexes; _i < indexes_2.length; _i++) {
            var index = indexes_2[_i];
            if (index < 0 || index >= this.length) {
                throw new Error("Invalid index " + index);
            }
        }
        this.focus.set(indexes, browserEvent);
    };
    List.prototype.focusNext = function (n, loop, browserEvent, filter) {
        if (n === void 0) { n = 1; }
        if (loop === void 0) { loop = false; }
        if (this.length === 0) {
            return;
        }
        var focus = this.focus.get();
        var index = this.findNextIndex(focus.length > 0 ? focus[0] + n : 0, loop, filter);
        if (index > -1) {
            this.setFocus([index], browserEvent);
        }
    };
    List.prototype.focusPrevious = function (n, loop, browserEvent, filter) {
        if (n === void 0) { n = 1; }
        if (loop === void 0) { loop = false; }
        if (this.length === 0) {
            return;
        }
        var focus = this.focus.get();
        var index = this.findPreviousIndex(focus.length > 0 ? focus[0] - n : 0, loop, filter);
        if (index > -1) {
            this.setFocus([index], browserEvent);
        }
    };
    List.prototype.focusNextPage = function (browserEvent, filter) {
        var _this = this;
        var lastPageIndex = this.view.indexAt(this.view.getScrollTop() + this.view.renderHeight);
        lastPageIndex = lastPageIndex === 0 ? 0 : lastPageIndex - 1;
        var lastPageElement = this.view.element(lastPageIndex);
        var currentlyFocusedElement = this.getFocusedElements()[0];
        if (currentlyFocusedElement !== lastPageElement) {
            var lastGoodPageIndex = this.findPreviousIndex(lastPageIndex, false, filter);
            if (lastGoodPageIndex > -1 && currentlyFocusedElement !== this.view.element(lastGoodPageIndex)) {
                this.setFocus([lastGoodPageIndex], browserEvent);
            }
            else {
                this.setFocus([lastPageIndex], browserEvent);
            }
        }
        else {
            var previousScrollTop = this.view.getScrollTop();
            this.view.setScrollTop(previousScrollTop + this.view.renderHeight - this.view.elementHeight(lastPageIndex));
            if (this.view.getScrollTop() !== previousScrollTop) {
                // Let the scroll event listener run
                setTimeout(function () { return _this.focusNextPage(browserEvent, filter); }, 0);
            }
        }
    };
    List.prototype.focusPreviousPage = function (browserEvent, filter) {
        var _this = this;
        var firstPageIndex;
        var scrollTop = this.view.getScrollTop();
        if (scrollTop === 0) {
            firstPageIndex = this.view.indexAt(scrollTop);
        }
        else {
            firstPageIndex = this.view.indexAfter(scrollTop - 1);
        }
        var firstPageElement = this.view.element(firstPageIndex);
        var currentlyFocusedElement = this.getFocusedElements()[0];
        if (currentlyFocusedElement !== firstPageElement) {
            var firstGoodPageIndex = this.findNextIndex(firstPageIndex, false, filter);
            if (firstGoodPageIndex > -1 && currentlyFocusedElement !== this.view.element(firstGoodPageIndex)) {
                this.setFocus([firstGoodPageIndex], browserEvent);
            }
            else {
                this.setFocus([firstPageIndex], browserEvent);
            }
        }
        else {
            var previousScrollTop = scrollTop;
            this.view.setScrollTop(scrollTop - this.view.renderHeight);
            if (this.view.getScrollTop() !== previousScrollTop) {
                // Let the scroll event listener run
                setTimeout(function () { return _this.focusPreviousPage(browserEvent, filter); }, 0);
            }
        }
    };
    List.prototype.focusLast = function (browserEvent, filter) {
        if (this.length === 0) {
            return;
        }
        var index = this.findPreviousIndex(this.length - 1, false, filter);
        if (index > -1) {
            this.setFocus([index], browserEvent);
        }
    };
    List.prototype.focusFirst = function (browserEvent, filter) {
        if (this.length === 0) {
            return;
        }
        var index = this.findNextIndex(0, false, filter);
        if (index > -1) {
            this.setFocus([index], browserEvent);
        }
    };
    List.prototype.findNextIndex = function (index, loop, filter) {
        if (loop === void 0) { loop = false; }
        for (var i = 0; i < this.length; i++) {
            if (index >= this.length && !loop) {
                return -1;
            }
            index = index % this.length;
            if (!filter || filter(this.element(index))) {
                return index;
            }
            index++;
        }
        return -1;
    };
    List.prototype.findPreviousIndex = function (index, loop, filter) {
        if (loop === void 0) { loop = false; }
        for (var i = 0; i < this.length; i++) {
            if (index < 0 && !loop) {
                return -1;
            }
            index = (this.length + (index % this.length)) % this.length;
            if (!filter || filter(this.element(index))) {
                return index;
            }
            index--;
        }
        return -1;
    };
    List.prototype.getFocus = function () {
        return this.focus.get();
    };
    List.prototype.getFocusedElements = function () {
        var _this = this;
        return this.getFocus().map(function (i) { return _this.view.element(i); });
    };
    List.prototype.reveal = function (index, relativeTop) {
        if (index < 0 || index >= this.length) {
            throw new Error("Invalid index " + index);
        }
        var scrollTop = this.view.getScrollTop();
        var elementTop = this.view.elementTop(index);
        var elementHeight = this.view.elementHeight(index);
        if (Object(vs_base_common_types__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(relativeTop)) {
            // y = mx + b
            var m = elementHeight - this.view.renderHeight;
            this.view.setScrollTop(m * Object(vs_base_common_numbers__WEBPACK_IMPORTED_MODULE_15__["clamp"])(relativeTop, 0, 1) + elementTop);
        }
        else {
            var viewItemBottom = elementTop + elementHeight;
            var wrapperBottom = scrollTop + this.view.renderHeight;
            if (elementTop < scrollTop) {
                this.view.setScrollTop(elementTop);
            }
            else if (viewItemBottom >= wrapperBottom) {
                this.view.setScrollTop(viewItemBottom - this.view.renderHeight);
            }
        }
    };
    /**
     * Returns the relative position of an element rendered in the list.
     * Returns `null` if the element isn't *entirely* in the visible viewport.
     */
    List.prototype.getRelativeTop = function (index) {
        if (index < 0 || index >= this.length) {
            throw new Error("Invalid index " + index);
        }
        var scrollTop = this.view.getScrollTop();
        var elementTop = this.view.elementTop(index);
        var elementHeight = this.view.elementHeight(index);
        if (elementTop < scrollTop || elementTop + elementHeight > scrollTop + this.view.renderHeight) {
            return null;
        }
        // y = mx + b
        var m = elementHeight - this.view.renderHeight;
        return Math.abs((scrollTop - elementTop) / m);
    };
    List.prototype.isDOMFocused = function () {
        return this.view.domNode === document.activeElement;
    };
    List.prototype.getHTMLElement = function () {
        return this.view.domNode;
    };
    List.prototype.open = function (indexes, browserEvent) {
        var _this = this;
        for (var _i = 0, indexes_3 = indexes; _i < indexes_3.length; _i++) {
            var index = indexes_3[_i];
            if (index < 0 || index >= this.length) {
                throw new Error("Invalid index " + index);
            }
        }
        this._onDidOpen.fire({ indexes: indexes, elements: indexes.map(function (i) { return _this.view.element(i); }), browserEvent: browserEvent });
    };
    List.prototype.pin = function (indexes) {
        for (var _i = 0, indexes_4 = indexes; _i < indexes_4.length; _i++) {
            var index = indexes_4[_i];
            if (index < 0 || index >= this.length) {
                throw new Error("Invalid index " + index);
            }
        }
        this._onPin.fire(indexes);
    };
    List.prototype.style = function (styles) {
        this.styleController.style(styles);
    };
    List.prototype.toListEvent = function (_a) {
        var _this = this;
        var indexes = _a.indexes, browserEvent = _a.browserEvent;
        return { indexes: indexes, elements: indexes.map(function (i) { return _this.view.element(i); }), browserEvent: browserEvent };
    };
    List.prototype._onFocusChange = function () {
        var focus = this.focus.get();
        if (focus.length > 0) {
            this.view.domNode.setAttribute('aria-activedescendant', this.view.getElementDomId(focus[0]));
        }
        else {
            this.view.domNode.removeAttribute('aria-activedescendant');
        }
        this.view.domNode.setAttribute('role', 'tree');
        vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_4__["toggleClass"](this.view.domNode, 'element-focused', focus.length > 0);
    };
    List.prototype._onSelectionChange = function () {
        var selection = this.selection.get();
        vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_4__["toggleClass"](this.view.domNode, 'selection-none', selection.length === 0);
        vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_4__["toggleClass"](this.view.domNode, 'selection-single', selection.length === 1);
        vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_4__["toggleClass"](this.view.domNode, 'selection-multiple', selection.length > 1);
    };
    List.prototype.dispose = function () {
        this._onDidDispose.fire();
        this.disposables.dispose();
        this._onDidOpen.dispose();
        this._onPin.dispose();
        this._onDidDispose.dispose();
    };
    List.ctorParameters = function () { return [
        { type: HTMLElement },
        { type: undefined },
        { type: Array },
        { type: undefined }
    ]; };
    __decorate([
        vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_3__["memoize"],
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [])
    ], List.prototype, "onFocusChange", null);
    __decorate([
        vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_3__["memoize"],
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [])
    ], List.prototype, "onSelectionChange", null);
    __decorate([
        vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_3__["memoize"],
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [])
    ], List.prototype, "onPin", null);
    __decorate([
        vs_base_common_decorators__WEBPACK_IMPORTED_MODULE_3__["memoize"],
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [])
    ], List.prototype, "onContextMenu", null);
    return List;
}());



/***/ }),

/***/ "./src/vs/base/browser/ui/list/rangeMap.ts":
/*!*************************************************!*\
  !*** ./src/vs/base/browser/ui/list/rangeMap.ts ***!
  \*************************************************/
/*! exports provided: groupIntersect, shift, consolidate, RangeMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "groupIntersect", function() { return groupIntersect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shift", function() { return shift; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "consolidate", function() { return consolidate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RangeMap", function() { return RangeMap; });
/* harmony import */ var vs_base_common_range__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/range */ "./src/vs/base/common/range.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

/**
 * Returns the intersection between a ranged group and a range.
 * Returns `[]` if the intersection is empty.
 */
function groupIntersect(range, groups) {
    var result = [];
    for (var _i = 0, groups_1 = groups; _i < groups_1.length; _i++) {
        var r = groups_1[_i];
        if (range.start >= r.range.end) {
            continue;
        }
        if (range.end < r.range.start) {
            break;
        }
        var intersection = vs_base_common_range__WEBPACK_IMPORTED_MODULE_0__["Range"].intersect(range, r.range);
        if (vs_base_common_range__WEBPACK_IMPORTED_MODULE_0__["Range"].isEmpty(intersection)) {
            continue;
        }
        result.push({
            range: intersection,
            size: r.size
        });
    }
    return result;
}
/**
 * Shifts a range by that `much`.
 */
function shift(_a, much) {
    var start = _a.start, end = _a.end;
    return { start: start + much, end: end + much };
}
/**
 * Consolidates a collection of ranged groups.
 *
 * Consolidation is the process of merging consecutive ranged groups
 * that share the same `size`.
 */
function consolidate(groups) {
    var result = [];
    var previousGroup = null;
    for (var _i = 0, groups_2 = groups; _i < groups_2.length; _i++) {
        var group = groups_2[_i];
        var start = group.range.start;
        var end = group.range.end;
        var size = group.size;
        if (previousGroup && size === previousGroup.size) {
            previousGroup.range.end = end;
            continue;
        }
        previousGroup = { range: { start: start, end: end }, size: size };
        result.push(previousGroup);
    }
    return result;
}
/**
 * Concatenates several collections of ranged groups into a single
 * collection.
 */
function concat() {
    var groups = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        groups[_i] = arguments[_i];
    }
    return consolidate(groups.reduce(function (r, g) { return r.concat(g); }, []));
}
var RangeMap = /** @class */ (function () {
    function RangeMap() {
        this.groups = [];
        this._size = 0;
    }
    RangeMap.prototype.splice = function (index, deleteCount, items) {
        if (items === void 0) { items = []; }
        var diff = items.length - deleteCount;
        var before = groupIntersect({ start: 0, end: index }, this.groups);
        var after = groupIntersect({ start: index + deleteCount, end: Number.POSITIVE_INFINITY }, this.groups)
            .map(function (g) { return ({ range: shift(g.range, diff), size: g.size }); });
        var middle = items.map(function (item, i) { return ({
            range: { start: index + i, end: index + i + 1 },
            size: item.size
        }); });
        this.groups = concat(before, middle, after);
        this._size = this.groups.reduce(function (t, g) { return t + (g.size * (g.range.end - g.range.start)); }, 0);
    };
    Object.defineProperty(RangeMap.prototype, "count", {
        /**
         * Returns the number of items in the range map.
         */
        get: function () {
            var len = this.groups.length;
            if (!len) {
                return 0;
            }
            return this.groups[len - 1].range.end;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangeMap.prototype, "size", {
        /**
         * Returns the sum of the sizes of all items in the range map.
         */
        get: function () {
            return this._size;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns the index of the item at the given position.
     */
    RangeMap.prototype.indexAt = function (position) {
        if (position < 0) {
            return -1;
        }
        var index = 0;
        var size = 0;
        for (var _i = 0, _a = this.groups; _i < _a.length; _i++) {
            var group = _a[_i];
            var count = group.range.end - group.range.start;
            var newSize = size + (count * group.size);
            if (position < newSize) {
                return index + Math.floor((position - size) / group.size);
            }
            index += count;
            size = newSize;
        }
        return index;
    };
    /**
     * Returns the index of the item right after the item at the
     * index of the given position.
     */
    RangeMap.prototype.indexAfter = function (position) {
        return Math.min(this.indexAt(position) + 1, this.count);
    };
    /**
     * Returns the start position of the item at the given index.
     */
    RangeMap.prototype.positionAt = function (index) {
        if (index < 0) {
            return -1;
        }
        var position = 0;
        var count = 0;
        for (var _i = 0, _a = this.groups; _i < _a.length; _i++) {
            var group = _a[_i];
            var groupCount = group.range.end - group.range.start;
            var newCount = count + groupCount;
            if (index < newCount) {
                return position + ((index - count) * group.size);
            }
            position += groupCount * group.size;
            count = newCount;
        }
        return -1;
    };
    RangeMap.prototype.dispose = function () {
        this.groups = null; // StrictNullOverride: nulling out ok in dispose
    };
    return RangeMap;
}());



/***/ }),

/***/ "./src/vs/base/browser/ui/list/rowCache.ts":
/*!*************************************************!*\
  !*** ./src/vs/base/browser/ui/list/rowCache.ts ***!
  \*************************************************/
/*! exports provided: RowCache */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RowCache", function() { return RowCache; });
/* harmony import */ var vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/browser/dom */ "./src/vs/base/browser/dom.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

function removeFromParent(element) {
    try {
        if (element.parentElement) {
            element.parentElement.removeChild(element);
        }
    }
    catch (e) {
        // this will throw if this happens due to a blur event, nasty business
    }
}
var RowCache = /** @class */ (function () {
    function RowCache(renderers) {
        this.renderers = renderers;
        this.cache = new Map();
    }
    /**
     * Returns a row either by creating a new one or reusing
     * a previously released row which shares the same templateId.
     */
    RowCache.prototype.alloc = function (templateId) {
        var result = this.getTemplateCache(templateId).pop();
        if (!result) {
            var domNode = Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["$"])('.monaco-list-row');
            var renderer = this.getRenderer(templateId);
            var templateData = renderer.renderTemplate(domNode);
            result = { domNode: domNode, templateId: templateId, templateData: templateData };
        }
        return result;
    };
    /**
     * Releases the row for eventual reuse.
     */
    RowCache.prototype.release = function (row) {
        if (!row) {
            return;
        }
        this.releaseRow(row);
    };
    RowCache.prototype.releaseRow = function (row) {
        var domNode = row.domNode, templateId = row.templateId;
        if (domNode) {
            Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["removeClass"])(domNode, 'scrolling');
            removeFromParent(domNode);
        }
        var cache = this.getTemplateCache(templateId);
        cache.push(row);
    };
    RowCache.prototype.getTemplateCache = function (templateId) {
        var result = this.cache.get(templateId);
        if (!result) {
            result = [];
            this.cache.set(templateId, result);
        }
        return result;
    };
    RowCache.prototype.garbageCollect = function () {
        var _this = this;
        if (!this.renderers) {
            return;
        }
        this.cache.forEach(function (cachedRows, templateId) {
            for (var _i = 0, cachedRows_1 = cachedRows; _i < cachedRows_1.length; _i++) {
                var cachedRow = cachedRows_1[_i];
                var renderer = _this.getRenderer(templateId);
                renderer.disposeTemplate(cachedRow.templateData);
                cachedRow.domNode = null;
                cachedRow.templateData = null;
            }
        });
        this.cache.clear();
    };
    RowCache.prototype.dispose = function () {
        this.garbageCollect();
        this.cache.clear();
        this.renderers = null; // StrictNullOverride: nulling out ok in dispose
    };
    RowCache.prototype.getRenderer = function (templateId) {
        var renderer = this.renderers.get(templateId);
        if (!renderer) {
            throw new Error("No renderer found for " + templateId);
        }
        return renderer;
    };
    RowCache.ctorParameters = function () { return [
        { type: Map }
    ]; };
    return RowCache;
}());



/***/ }),

/***/ "./src/vs/base/browser/ui/list/splice.ts":
/*!***********************************************!*\
  !*** ./src/vs/base/browser/ui/list/splice.ts ***!
  \***********************************************/
/*! exports provided: CombinedSpliceable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CombinedSpliceable", function() { return CombinedSpliceable; });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var CombinedSpliceable = /** @class */ (function () {
    function CombinedSpliceable(spliceables) {
        this.spliceables = spliceables;
    }
    CombinedSpliceable.prototype.splice = function (start, deleteCount, elements) {
        this.spliceables.forEach(function (s) { return s.splice(start, deleteCount, elements); });
    };
    CombinedSpliceable.ctorParameters = function () { return [
        { type: Array }
    ]; };
    return CombinedSpliceable;
}());



/***/ }),

/***/ "./src/vs/base/browser/ui/scrollbar/abstractScrollbar.ts":
/*!***************************************************************!*\
  !*** ./src/vs/base/browser/ui/scrollbar/abstractScrollbar.ts ***!
  \***************************************************************/
/*! exports provided: AbstractScrollbar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AbstractScrollbar", function() { return AbstractScrollbar; });
/* harmony import */ var vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/browser/dom */ "./src/vs/base/browser/dom.ts");
/* harmony import */ var vs_base_browser_fastDomNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/browser/fastDomNode */ "./src/vs/base/browser/fastDomNode.ts");
/* harmony import */ var vs_base_browser_globalMouseMoveMonitor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vs/base/browser/globalMouseMoveMonitor */ "./src/vs/base/browser/globalMouseMoveMonitor.ts");
/* harmony import */ var vs_base_browser_ui_scrollbar_scrollbarArrow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vs/base/browser/ui/scrollbar/scrollbarArrow */ "./src/vs/base/browser/ui/scrollbar/scrollbarArrow.ts");
/* harmony import */ var vs_base_browser_ui_scrollbar_scrollbarVisibilityController__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vs/base/browser/ui/scrollbar/scrollbarVisibilityController */ "./src/vs/base/browser/ui/scrollbar/scrollbarVisibilityController.ts");
/* harmony import */ var vs_base_browser_ui_widget__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vs/base/browser/ui/widget */ "./src/vs/base/browser/ui/widget.ts");
/* harmony import */ var vs_base_common_platform__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vs/base/common/platform */ "./src/vs/base/common/platform.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();







/**
 * The orthogonal distance to the slider at which dragging "resets". This implements "snapping"
 */
var MOUSE_DRAG_RESET_DISTANCE = 140;
var AbstractScrollbar = /** @class */ (function (_super) {
    __extends(AbstractScrollbar, _super);
    function AbstractScrollbar(opts) {
        var _this = _super.call(this) || this;
        _this._lazyRender = opts.lazyRender;
        _this._host = opts.host;
        _this._scrollable = opts.scrollable;
        _this._scrollbarState = opts.scrollbarState;
        _this._visibilityController = _this._register(new vs_base_browser_ui_scrollbar_scrollbarVisibilityController__WEBPACK_IMPORTED_MODULE_4__["ScrollbarVisibilityController"](opts.visibility, 'visible scrollbar ' + opts.extraScrollbarClassName, 'invisible scrollbar ' + opts.extraScrollbarClassName));
        _this._mouseMoveMonitor = _this._register(new vs_base_browser_globalMouseMoveMonitor__WEBPACK_IMPORTED_MODULE_2__["GlobalMouseMoveMonitor"]());
        _this._shouldRender = true;
        _this.domNode = Object(vs_base_browser_fastDomNode__WEBPACK_IMPORTED_MODULE_1__["createFastDomNode"])(document.createElement('div'));
        _this.domNode.setAttribute('role', 'presentation');
        _this.domNode.setAttribute('aria-hidden', 'true');
        _this._visibilityController.setDomNode(_this.domNode);
        _this.domNode.setPosition('absolute');
        _this.onmousedown(_this.domNode.domNode, function (e) { return _this._domNodeMouseDown(e); });
        return _this;
    }
    // ----------------- creation
    /**
     * Creates the dom node for an arrow & adds it to the container
     */
    AbstractScrollbar.prototype._createArrow = function (opts) {
        var arrow = this._register(new vs_base_browser_ui_scrollbar_scrollbarArrow__WEBPACK_IMPORTED_MODULE_3__["ScrollbarArrow"](opts));
        this.domNode.domNode.appendChild(arrow.bgDomNode);
        this.domNode.domNode.appendChild(arrow.domNode);
    };
    /**
     * Creates the slider dom node, adds it to the container & hooks up the events
     */
    AbstractScrollbar.prototype._createSlider = function (top, left, width, height) {
        var _this = this;
        this.slider = Object(vs_base_browser_fastDomNode__WEBPACK_IMPORTED_MODULE_1__["createFastDomNode"])(document.createElement('div'));
        this.slider.setClassName('slider');
        this.slider.setPosition('absolute');
        this.slider.setTop(top);
        this.slider.setLeft(left);
        if (typeof width === 'number') {
            this.slider.setWidth(width);
        }
        if (typeof height === 'number') {
            this.slider.setHeight(height);
        }
        this.slider.setLayerHinting(true);
        this.domNode.domNode.appendChild(this.slider.domNode);
        this.onmousedown(this.slider.domNode, function (e) {
            if (e.leftButton) {
                e.preventDefault();
                _this._sliderMouseDown(e, function () { });
            }
        });
        this.onclick(this.slider.domNode, function (e) {
            if (e.leftButton) {
                e.stopPropagation();
            }
        });
    };
    // ----------------- Update state
    AbstractScrollbar.prototype._onElementSize = function (visibleSize) {
        if (this._scrollbarState.setVisibleSize(visibleSize)) {
            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());
            this._shouldRender = true;
            if (!this._lazyRender) {
                this.render();
            }
        }
        return this._shouldRender;
    };
    AbstractScrollbar.prototype._onElementScrollSize = function (elementScrollSize) {
        if (this._scrollbarState.setScrollSize(elementScrollSize)) {
            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());
            this._shouldRender = true;
            if (!this._lazyRender) {
                this.render();
            }
        }
        return this._shouldRender;
    };
    AbstractScrollbar.prototype._onElementScrollPosition = function (elementScrollPosition) {
        if (this._scrollbarState.setScrollPosition(elementScrollPosition)) {
            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());
            this._shouldRender = true;
            if (!this._lazyRender) {
                this.render();
            }
        }
        return this._shouldRender;
    };
    // ----------------- rendering
    AbstractScrollbar.prototype.beginReveal = function () {
        this._visibilityController.setShouldBeVisible(true);
    };
    AbstractScrollbar.prototype.beginHide = function () {
        this._visibilityController.setShouldBeVisible(false);
    };
    AbstractScrollbar.prototype.render = function () {
        if (!this._shouldRender) {
            return;
        }
        this._shouldRender = false;
        this._renderDomNode(this._scrollbarState.getRectangleLargeSize(), this._scrollbarState.getRectangleSmallSize());
        this._updateSlider(this._scrollbarState.getSliderSize(), this._scrollbarState.getArrowSize() + this._scrollbarState.getSliderPosition());
    };
    // ----------------- DOM events
    AbstractScrollbar.prototype._domNodeMouseDown = function (e) {
        if (e.target !== this.domNode.domNode) {
            return;
        }
        this._onMouseDown(e);
    };
    AbstractScrollbar.prototype.delegateMouseDown = function (e) {
        var domTop = this.domNode.domNode.getClientRects()[0].top;
        var sliderStart = domTop + this._scrollbarState.getSliderPosition();
        var sliderStop = domTop + this._scrollbarState.getSliderPosition() + this._scrollbarState.getSliderSize();
        var mousePos = this._sliderMousePosition(e);
        if (sliderStart <= mousePos && mousePos <= sliderStop) {
            // Act as if it was a mouse down on the slider
            if (e.leftButton) {
                e.preventDefault();
                this._sliderMouseDown(e, function () { });
            }
        }
        else {
            // Act as if it was a mouse down on the scrollbar
            this._onMouseDown(e);
        }
    };
    AbstractScrollbar.prototype._onMouseDown = function (e) {
        var offsetX;
        var offsetY;
        if (e.target === this.domNode.domNode && typeof e.browserEvent.offsetX === 'number' && typeof e.browserEvent.offsetY === 'number') {
            offsetX = e.browserEvent.offsetX;
            offsetY = e.browserEvent.offsetY;
        }
        else {
            var domNodePosition = vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["getDomNodePagePosition"](this.domNode.domNode);
            offsetX = e.posx - domNodePosition.left;
            offsetY = e.posy - domNodePosition.top;
        }
        this._setDesiredScrollPositionNow(this._scrollbarState.getDesiredScrollPositionFromOffset(this._mouseDownRelativePosition(offsetX, offsetY)));
        if (e.leftButton) {
            e.preventDefault();
            this._sliderMouseDown(e, function () { });
        }
    };
    AbstractScrollbar.prototype._sliderMouseDown = function (e, onDragFinished) {
        var _this = this;
        var initialMousePosition = this._sliderMousePosition(e);
        var initialMouseOrthogonalPosition = this._sliderOrthogonalMousePosition(e);
        var initialScrollbarState = this._scrollbarState.clone();
        this.slider.toggleClassName('active', true);
        this._mouseMoveMonitor.startMonitoring(vs_base_browser_globalMouseMoveMonitor__WEBPACK_IMPORTED_MODULE_2__["standardMouseMoveMerger"], function (mouseMoveData) {
            var mouseOrthogonalPosition = _this._sliderOrthogonalMousePosition(mouseMoveData);
            var mouseOrthogonalDelta = Math.abs(mouseOrthogonalPosition - initialMouseOrthogonalPosition);
            if (vs_base_common_platform__WEBPACK_IMPORTED_MODULE_6__["isWindows"] && mouseOrthogonalDelta > MOUSE_DRAG_RESET_DISTANCE) {
                // The mouse has wondered away from the scrollbar => reset dragging
                _this._setDesiredScrollPositionNow(initialScrollbarState.getScrollPosition());
                return;
            }
            var mousePosition = _this._sliderMousePosition(mouseMoveData);
            var mouseDelta = mousePosition - initialMousePosition;
            _this._setDesiredScrollPositionNow(initialScrollbarState.getDesiredScrollPositionFromDelta(mouseDelta));
        }, function () {
            _this.slider.toggleClassName('active', false);
            _this._host.onDragEnd();
            onDragFinished();
        });
        this._host.onDragStart();
    };
    AbstractScrollbar.prototype._setDesiredScrollPositionNow = function (_desiredScrollPosition) {
        var desiredScrollPosition = {};
        this.writeScrollPosition(desiredScrollPosition, _desiredScrollPosition);
        this._scrollable.setScrollPositionNow(desiredScrollPosition);
    };
    AbstractScrollbar.ctorParameters = function () { return [
        { type: undefined }
    ]; };
    return AbstractScrollbar;
}(vs_base_browser_ui_widget__WEBPACK_IMPORTED_MODULE_5__["Widget"]));



/***/ }),

/***/ "./src/vs/base/browser/ui/scrollbar/horizontalScrollbar.ts":
/*!*****************************************************************!*\
  !*** ./src/vs/base/browser/ui/scrollbar/horizontalScrollbar.ts ***!
  \*****************************************************************/
/*! exports provided: HorizontalScrollbar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HorizontalScrollbar", function() { return HorizontalScrollbar; });
/* harmony import */ var vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/browser/mouseEvent */ "./src/vs/base/browser/mouseEvent.ts");
/* harmony import */ var vs_base_browser_ui_scrollbar_abstractScrollbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/browser/ui/scrollbar/abstractScrollbar */ "./src/vs/base/browser/ui/scrollbar/abstractScrollbar.ts");
/* harmony import */ var vs_base_browser_ui_scrollbar_scrollbarArrow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vs/base/browser/ui/scrollbar/scrollbarArrow */ "./src/vs/base/browser/ui/scrollbar/scrollbarArrow.ts");
/* harmony import */ var vs_base_browser_ui_scrollbar_scrollbarState__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vs/base/browser/ui/scrollbar/scrollbarState */ "./src/vs/base/browser/ui/scrollbar/scrollbarState.ts");
/* harmony import */ var vs_base_common_scrollable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vs/base/common/scrollable */ "./src/vs/base/common/scrollable.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





var HorizontalScrollbar = /** @class */ (function (_super) {
    __extends(HorizontalScrollbar, _super);
    function HorizontalScrollbar(scrollable, options, host) {
        var _this = _super.call(this, {
            lazyRender: options.lazyRender,
            host: host,
            scrollbarState: new vs_base_browser_ui_scrollbar_scrollbarState__WEBPACK_IMPORTED_MODULE_3__["ScrollbarState"]((options.horizontalHasArrows ? options.arrowSize : 0), (options.horizontal === 2 /* Hidden */ ? 0 : options.horizontalScrollbarSize), (options.vertical === 2 /* Hidden */ ? 0 : options.verticalScrollbarSize)),
            visibility: options.horizontal,
            extraScrollbarClassName: 'horizontal',
            scrollable: scrollable
        }) || this;
        if (options.horizontalHasArrows) {
            var arrowDelta = (options.arrowSize - vs_base_browser_ui_scrollbar_scrollbarArrow__WEBPACK_IMPORTED_MODULE_2__["ARROW_IMG_SIZE"]) / 2;
            var scrollbarDelta = (options.horizontalScrollbarSize - vs_base_browser_ui_scrollbar_scrollbarArrow__WEBPACK_IMPORTED_MODULE_2__["ARROW_IMG_SIZE"]) / 2;
            _this._createArrow({
                className: 'left-arrow',
                top: scrollbarDelta,
                left: arrowDelta,
                bottom: undefined,
                right: undefined,
                bgWidth: options.arrowSize,
                bgHeight: options.horizontalScrollbarSize,
                onActivate: function () { return _this._host.onMouseWheel(new vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_0__["StandardWheelEvent"](null, 1, 0)); },
            });
            _this._createArrow({
                className: 'right-arrow',
                top: scrollbarDelta,
                left: undefined,
                bottom: undefined,
                right: arrowDelta,
                bgWidth: options.arrowSize,
                bgHeight: options.horizontalScrollbarSize,
                onActivate: function () { return _this._host.onMouseWheel(new vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_0__["StandardWheelEvent"](null, -1, 0)); },
            });
        }
        _this._createSlider(Math.floor((options.horizontalScrollbarSize - options.horizontalSliderSize) / 2), 0, undefined, options.horizontalSliderSize);
        return _this;
    }
    HorizontalScrollbar.prototype._updateSlider = function (sliderSize, sliderPosition) {
        this.slider.setWidth(sliderSize);
        this.slider.setLeft(sliderPosition);
    };
    HorizontalScrollbar.prototype._renderDomNode = function (largeSize, smallSize) {
        this.domNode.setWidth(largeSize);
        this.domNode.setHeight(smallSize);
        this.domNode.setLeft(0);
        this.domNode.setBottom(0);
    };
    HorizontalScrollbar.prototype.onDidScroll = function (e) {
        this._shouldRender = this._onElementScrollSize(e.scrollWidth) || this._shouldRender;
        this._shouldRender = this._onElementScrollPosition(e.scrollLeft) || this._shouldRender;
        this._shouldRender = this._onElementSize(e.width) || this._shouldRender;
        return this._shouldRender;
    };
    HorizontalScrollbar.prototype._mouseDownRelativePosition = function (offsetX, offsetY) {
        return offsetX;
    };
    HorizontalScrollbar.prototype._sliderMousePosition = function (e) {
        return e.posx;
    };
    HorizontalScrollbar.prototype._sliderOrthogonalMousePosition = function (e) {
        return e.posy;
    };
    HorizontalScrollbar.prototype.writeScrollPosition = function (target, scrollPosition) {
        target.scrollLeft = scrollPosition;
    };
    HorizontalScrollbar.ctorParameters = function () { return [
        { type: vs_base_common_scrollable__WEBPACK_IMPORTED_MODULE_4__["Scrollable"] },
        { type: undefined },
        { type: undefined }
    ]; };
    return HorizontalScrollbar;
}(vs_base_browser_ui_scrollbar_abstractScrollbar__WEBPACK_IMPORTED_MODULE_1__["AbstractScrollbar"]));



/***/ }),

/***/ "./src/vs/base/browser/ui/scrollbar/media/scrollbars.css":
/*!***************************************************************!*\
  !*** ./src/vs/base/browser/ui/scrollbar/media/scrollbars.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n/* Arrows */\r\n\r\n.monaco-scrollable-element > .scrollbar > .up-arrow {\r\n\tbackground: url('arrow-up.svg');\r\n\tcursor: pointer;\r\n}\r\n\r\n.monaco-scrollable-element > .scrollbar > .down-arrow {\r\n\tbackground: url('arrow-down.svg');\r\n\tcursor: pointer;\r\n}\r\n\r\n.monaco-scrollable-element > .scrollbar > .left-arrow {\r\n\tbackground: url('arrow-left.svg');\r\n\tcursor: pointer;\r\n}\r\n\r\n.monaco-scrollable-element > .scrollbar > .right-arrow {\r\n\tbackground: url('arrow-right.svg');\r\n\tcursor: pointer;\r\n}\r\n\r\n.hc-black .monaco-scrollable-element > .scrollbar > .up-arrow,\r\n.vs-dark .monaco-scrollable-element > .scrollbar > .up-arrow {\r\n\tbackground: url('arrow-up-dark.svg');\r\n}\r\n\r\n.hc-black .monaco-scrollable-element > .scrollbar > .down-arrow,\r\n.vs-dark .monaco-scrollable-element > .scrollbar > .down-arrow {\r\n\tbackground: url('arrow-down-dark.svg');\r\n}\r\n\r\n.hc-black .monaco-scrollable-element > .scrollbar > .left-arrow,\r\n.vs-dark .monaco-scrollable-element > .scrollbar > .left-arrow {\r\n\tbackground: url('arrow-left-dark.svg');\r\n}\r\n\r\n.hc-black .monaco-scrollable-element > .scrollbar > .right-arrow,\r\n.vs-dark .monaco-scrollable-element > .scrollbar > .right-arrow {\r\n\tbackground: url('arrow-right-dark.svg');\r\n}\r\n\r\n.monaco-scrollable-element > .visible {\r\n\topacity: 1;\r\n\r\n\t/* Background rule added for IE9 - to allow clicks on dom node */\r\n\tbackground:rgba(0,0,0,0);\r\n\r\n\t-webkit-transition: opacity 100ms linear;\r\n\r\n\ttransition: opacity 100ms linear;\r\n}\r\n\r\n.monaco-scrollable-element > .invisible {\r\n\topacity: 0;\r\n\tpointer-events: none;\r\n}\r\n\r\n.monaco-scrollable-element > .invisible.fade {\r\n\t-webkit-transition: opacity 800ms linear;\r\n\ttransition: opacity 800ms linear;\r\n}\r\n\r\n/* Scrollable Content Inset Shadow */\r\n\r\n.monaco-scrollable-element > .shadow {\r\n\tposition: absolute;\r\n\tdisplay: none;\r\n}\r\n\r\n.monaco-scrollable-element > .shadow.top {\r\n\tdisplay: block;\r\n\ttop: 0;\r\n\tleft: 3px;\r\n\theight: 3px;\r\n\twidth: 100%;\r\n\tbox-shadow: #DDD 0 6px 6px -6px inset;\r\n}\r\n\r\n.monaco-scrollable-element > .shadow.left {\r\n\tdisplay: block;\r\n\ttop: 3px;\r\n\tleft: 0;\r\n\theight: 100%;\r\n\twidth: 3px;\r\n\tbox-shadow: #DDD 6px 0 6px -6px inset;\r\n}\r\n\r\n.monaco-scrollable-element > .shadow.top-left-corner {\r\n\tdisplay: block;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\theight: 3px;\r\n\twidth: 3px;\r\n}\r\n\r\n.monaco-scrollable-element > .shadow.top.left {\r\n\tbox-shadow: #DDD 6px 6px 6px -6px inset;\r\n}\r\n\r\n/* ---------- Default Style ---------- */\r\n\r\n.vs .monaco-scrollable-element > .scrollbar > .slider {\r\n\tbackground: rgba(100, 100, 100, .4);\r\n}\r\n\r\n.vs-dark .monaco-scrollable-element > .scrollbar > .slider {\r\n\tbackground: rgba(121, 121, 121, .4);\r\n}\r\n\r\n.hc-black .monaco-scrollable-element > .scrollbar > .slider {\r\n\tbackground: rgba(111, 195, 223, .6);\r\n}\r\n\r\n.monaco-scrollable-element > .scrollbar > .slider:hover {\r\n\tbackground: rgba(100, 100, 100, .7);\r\n}\r\n\r\n.hc-black .monaco-scrollable-element > .scrollbar > .slider:hover {\r\n\tbackground: rgba(111, 195, 223, .8);\r\n}\r\n\r\n.monaco-scrollable-element > .scrollbar > .slider.active {\r\n\tbackground: rgba(0, 0, 0, .6);\r\n}\r\n\r\n.vs-dark .monaco-scrollable-element > .scrollbar > .slider.active {\r\n\tbackground: rgba(191, 191, 191, .4);\r\n}\r\n\r\n.hc-black .monaco-scrollable-element > .scrollbar > .slider.active {\r\n\tbackground: rgba(111, 195, 223, 1);\r\n}\r\n\r\n.vs-dark .monaco-scrollable-element .shadow.top {\r\n\tbox-shadow: none;\r\n}\r\n\r\n.vs-dark .monaco-scrollable-element .shadow.left {\r\n\tbox-shadow: #000 6px 0 6px -6px inset;\r\n}\r\n\r\n.vs-dark .monaco-scrollable-element .shadow.top.left {\r\n\tbox-shadow: #000 6px 6px 6px -6px inset;\r\n}\r\n\r\n.hc-black .monaco-scrollable-element .shadow.top {\r\n\tbox-shadow: none;\r\n}\r\n\r\n.hc-black .monaco-scrollable-element .shadow.left {\r\n\tbox-shadow: none;\r\n}\r\n\r\n.hc-black .monaco-scrollable-element .shadow.top.left {\r\n\tbox-shadow: none;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy92cy9iYXNlL2Jyb3dzZXIvdWkvc2Nyb2xsYmFyL21lZGlhL3Njcm9sbGJhcnMuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7K0ZBRytGOztBQUUvRixXQUFXOztBQUNYO0NBQ0MsK0JBQStCO0NBQy9CLGVBQWU7QUFDaEI7O0FBQ0E7Q0FDQyxpQ0FBaUM7Q0FDakMsZUFBZTtBQUNoQjs7QUFDQTtDQUNDLGlDQUFpQztDQUNqQyxlQUFlO0FBQ2hCOztBQUNBO0NBQ0Msa0NBQWtDO0NBQ2xDLGVBQWU7QUFDaEI7O0FBRUE7O0NBRUMsb0NBQW9DO0FBQ3JDOztBQUNBOztDQUVDLHNDQUFzQztBQUN2Qzs7QUFDQTs7Q0FFQyxzQ0FBc0M7QUFDdkM7O0FBQ0E7O0NBRUMsdUNBQXVDO0FBQ3hDOztBQUVBO0NBQ0MsVUFBVTs7Q0FFVixnRUFBZ0U7Q0FDaEUsd0JBQXdCOztDQUV4Qix3Q0FBZ0M7O0NBQWhDLGdDQUFnQztBQUNqQzs7QUFDQTtDQUNDLFVBQVU7Q0FDVixvQkFBb0I7QUFDckI7O0FBQ0E7Q0FDQyx3Q0FBZ0M7Q0FBaEMsZ0NBQWdDO0FBQ2pDOztBQUVBLG9DQUFvQzs7QUFDcEM7Q0FDQyxrQkFBa0I7Q0FDbEIsYUFBYTtBQUNkOztBQUNBO0NBQ0MsY0FBYztDQUNkLE1BQU07Q0FDTixTQUFTO0NBQ1QsV0FBVztDQUNYLFdBQVc7Q0FDWCxxQ0FBcUM7QUFDdEM7O0FBQ0E7Q0FDQyxjQUFjO0NBQ2QsUUFBUTtDQUNSLE9BQU87Q0FDUCxZQUFZO0NBQ1osVUFBVTtDQUNWLHFDQUFxQztBQUN0Qzs7QUFDQTtDQUNDLGNBQWM7Q0FDZCxNQUFNO0NBQ04sT0FBTztDQUNQLFdBQVc7Q0FDWCxVQUFVO0FBQ1g7O0FBQ0E7Q0FDQyx1Q0FBdUM7QUFDeEM7O0FBRUEsd0NBQXdDOztBQUV4QztDQUNDLG1DQUFtQztBQUNwQzs7QUFDQTtDQUNDLG1DQUFtQztBQUNwQzs7QUFDQTtDQUNDLG1DQUFtQztBQUNwQzs7QUFFQTtDQUNDLG1DQUFtQztBQUNwQzs7QUFDQTtDQUNDLG1DQUFtQztBQUNwQzs7QUFFQTtDQUNDLDZCQUE2QjtBQUM5Qjs7QUFDQTtDQUNDLG1DQUFtQztBQUNwQzs7QUFDQTtDQUNDLGtDQUFrQztBQUNuQzs7QUFFQTtDQUNDLGdCQUFnQjtBQUNqQjs7QUFFQTtDQUNDLHFDQUFxQztBQUN0Qzs7QUFFQTtDQUNDLHVDQUF1QztBQUN4Qzs7QUFFQTtDQUNDLGdCQUFnQjtBQUNqQjs7QUFFQTtDQUNDLGdCQUFnQjtBQUNqQjs7QUFFQTtDQUNDLGdCQUFnQjtBQUNqQiIsImZpbGUiOiJzcmMvdnMvYmFzZS9icm93c2VyL3VpL3Njcm9sbGJhci9tZWRpYS9zY3JvbGxiYXJzLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuLyogQXJyb3dzICovXHJcbi5tb25hY28tc2Nyb2xsYWJsZS1lbGVtZW50ID4gLnNjcm9sbGJhciA+IC51cC1hcnJvdyB7XHJcblx0YmFja2dyb3VuZDogdXJsKCdhcnJvdy11cC5zdmcnKTtcclxuXHRjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuLm1vbmFjby1zY3JvbGxhYmxlLWVsZW1lbnQgPiAuc2Nyb2xsYmFyID4gLmRvd24tYXJyb3cge1xyXG5cdGJhY2tncm91bmQ6IHVybCgnYXJyb3ctZG93bi5zdmcnKTtcclxuXHRjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuLm1vbmFjby1zY3JvbGxhYmxlLWVsZW1lbnQgPiAuc2Nyb2xsYmFyID4gLmxlZnQtYXJyb3cge1xyXG5cdGJhY2tncm91bmQ6IHVybCgnYXJyb3ctbGVmdC5zdmcnKTtcclxuXHRjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuLm1vbmFjby1zY3JvbGxhYmxlLWVsZW1lbnQgPiAuc2Nyb2xsYmFyID4gLnJpZ2h0LWFycm93IHtcclxuXHRiYWNrZ3JvdW5kOiB1cmwoJ2Fycm93LXJpZ2h0LnN2ZycpO1xyXG5cdGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmhjLWJsYWNrIC5tb25hY28tc2Nyb2xsYWJsZS1lbGVtZW50ID4gLnNjcm9sbGJhciA+IC51cC1hcnJvdyxcclxuLnZzLWRhcmsgLm1vbmFjby1zY3JvbGxhYmxlLWVsZW1lbnQgPiAuc2Nyb2xsYmFyID4gLnVwLWFycm93IHtcclxuXHRiYWNrZ3JvdW5kOiB1cmwoJ2Fycm93LXVwLWRhcmsuc3ZnJyk7XHJcbn1cclxuLmhjLWJsYWNrIC5tb25hY28tc2Nyb2xsYWJsZS1lbGVtZW50ID4gLnNjcm9sbGJhciA+IC5kb3duLWFycm93LFxyXG4udnMtZGFyayAubW9uYWNvLXNjcm9sbGFibGUtZWxlbWVudCA+IC5zY3JvbGxiYXIgPiAuZG93bi1hcnJvdyB7XHJcblx0YmFja2dyb3VuZDogdXJsKCdhcnJvdy1kb3duLWRhcmsuc3ZnJyk7XHJcbn1cclxuLmhjLWJsYWNrIC5tb25hY28tc2Nyb2xsYWJsZS1lbGVtZW50ID4gLnNjcm9sbGJhciA+IC5sZWZ0LWFycm93LFxyXG4udnMtZGFyayAubW9uYWNvLXNjcm9sbGFibGUtZWxlbWVudCA+IC5zY3JvbGxiYXIgPiAubGVmdC1hcnJvdyB7XHJcblx0YmFja2dyb3VuZDogdXJsKCdhcnJvdy1sZWZ0LWRhcmsuc3ZnJyk7XHJcbn1cclxuLmhjLWJsYWNrIC5tb25hY28tc2Nyb2xsYWJsZS1lbGVtZW50ID4gLnNjcm9sbGJhciA+IC5yaWdodC1hcnJvdyxcclxuLnZzLWRhcmsgLm1vbmFjby1zY3JvbGxhYmxlLWVsZW1lbnQgPiAuc2Nyb2xsYmFyID4gLnJpZ2h0LWFycm93IHtcclxuXHRiYWNrZ3JvdW5kOiB1cmwoJ2Fycm93LXJpZ2h0LWRhcmsuc3ZnJyk7XHJcbn1cclxuXHJcbi5tb25hY28tc2Nyb2xsYWJsZS1lbGVtZW50ID4gLnZpc2libGUge1xyXG5cdG9wYWNpdHk6IDE7XHJcblxyXG5cdC8qIEJhY2tncm91bmQgcnVsZSBhZGRlZCBmb3IgSUU5IC0gdG8gYWxsb3cgY2xpY2tzIG9uIGRvbSBub2RlICovXHJcblx0YmFja2dyb3VuZDpyZ2JhKDAsMCwwLDApO1xyXG5cclxuXHR0cmFuc2l0aW9uOiBvcGFjaXR5IDEwMG1zIGxpbmVhcjtcclxufVxyXG4ubW9uYWNvLXNjcm9sbGFibGUtZWxlbWVudCA+IC5pbnZpc2libGUge1xyXG5cdG9wYWNpdHk6IDA7XHJcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbn1cclxuLm1vbmFjby1zY3JvbGxhYmxlLWVsZW1lbnQgPiAuaW52aXNpYmxlLmZhZGUge1xyXG5cdHRyYW5zaXRpb246IG9wYWNpdHkgODAwbXMgbGluZWFyO1xyXG59XHJcblxyXG4vKiBTY3JvbGxhYmxlIENvbnRlbnQgSW5zZXQgU2hhZG93ICovXHJcbi5tb25hY28tc2Nyb2xsYWJsZS1lbGVtZW50ID4gLnNoYWRvdyB7XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuLm1vbmFjby1zY3JvbGxhYmxlLWVsZW1lbnQgPiAuc2hhZG93LnRvcCB7XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcblx0dG9wOiAwO1xyXG5cdGxlZnQ6IDNweDtcclxuXHRoZWlnaHQ6IDNweDtcclxuXHR3aWR0aDogMTAwJTtcclxuXHRib3gtc2hhZG93OiAjREREIDAgNnB4IDZweCAtNnB4IGluc2V0O1xyXG59XHJcbi5tb25hY28tc2Nyb2xsYWJsZS1lbGVtZW50ID4gLnNoYWRvdy5sZWZ0IHtcclxuXHRkaXNwbGF5OiBibG9jaztcclxuXHR0b3A6IDNweDtcclxuXHRsZWZ0OiAwO1xyXG5cdGhlaWdodDogMTAwJTtcclxuXHR3aWR0aDogM3B4O1xyXG5cdGJveC1zaGFkb3c6ICNEREQgNnB4IDAgNnB4IC02cHggaW5zZXQ7XHJcbn1cclxuLm1vbmFjby1zY3JvbGxhYmxlLWVsZW1lbnQgPiAuc2hhZG93LnRvcC1sZWZ0LWNvcm5lciB7XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcblx0dG9wOiAwO1xyXG5cdGxlZnQ6IDA7XHJcblx0aGVpZ2h0OiAzcHg7XHJcblx0d2lkdGg6IDNweDtcclxufVxyXG4ubW9uYWNvLXNjcm9sbGFibGUtZWxlbWVudCA+IC5zaGFkb3cudG9wLmxlZnQge1xyXG5cdGJveC1zaGFkb3c6ICNEREQgNnB4IDZweCA2cHggLTZweCBpbnNldDtcclxufVxyXG5cclxuLyogLS0tLS0tLS0tLSBEZWZhdWx0IFN0eWxlIC0tLS0tLS0tLS0gKi9cclxuXHJcbi52cyAubW9uYWNvLXNjcm9sbGFibGUtZWxlbWVudCA+IC5zY3JvbGxiYXIgPiAuc2xpZGVyIHtcclxuXHRiYWNrZ3JvdW5kOiByZ2JhKDEwMCwgMTAwLCAxMDAsIC40KTtcclxufVxyXG4udnMtZGFyayAubW9uYWNvLXNjcm9sbGFibGUtZWxlbWVudCA+IC5zY3JvbGxiYXIgPiAuc2xpZGVyIHtcclxuXHRiYWNrZ3JvdW5kOiByZ2JhKDEyMSwgMTIxLCAxMjEsIC40KTtcclxufVxyXG4uaGMtYmxhY2sgLm1vbmFjby1zY3JvbGxhYmxlLWVsZW1lbnQgPiAuc2Nyb2xsYmFyID4gLnNsaWRlciB7XHJcblx0YmFja2dyb3VuZDogcmdiYSgxMTEsIDE5NSwgMjIzLCAuNik7XHJcbn1cclxuXHJcbi5tb25hY28tc2Nyb2xsYWJsZS1lbGVtZW50ID4gLnNjcm9sbGJhciA+IC5zbGlkZXI6aG92ZXIge1xyXG5cdGJhY2tncm91bmQ6IHJnYmEoMTAwLCAxMDAsIDEwMCwgLjcpO1xyXG59XHJcbi5oYy1ibGFjayAubW9uYWNvLXNjcm9sbGFibGUtZWxlbWVudCA+IC5zY3JvbGxiYXIgPiAuc2xpZGVyOmhvdmVyIHtcclxuXHRiYWNrZ3JvdW5kOiByZ2JhKDExMSwgMTk1LCAyMjMsIC44KTtcclxufVxyXG5cclxuLm1vbmFjby1zY3JvbGxhYmxlLWVsZW1lbnQgPiAuc2Nyb2xsYmFyID4gLnNsaWRlci5hY3RpdmUge1xyXG5cdGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgLjYpO1xyXG59XHJcbi52cy1kYXJrIC5tb25hY28tc2Nyb2xsYWJsZS1lbGVtZW50ID4gLnNjcm9sbGJhciA+IC5zbGlkZXIuYWN0aXZlIHtcclxuXHRiYWNrZ3JvdW5kOiByZ2JhKDE5MSwgMTkxLCAxOTEsIC40KTtcclxufVxyXG4uaGMtYmxhY2sgLm1vbmFjby1zY3JvbGxhYmxlLWVsZW1lbnQgPiAuc2Nyb2xsYmFyID4gLnNsaWRlci5hY3RpdmUge1xyXG5cdGJhY2tncm91bmQ6IHJnYmEoMTExLCAxOTUsIDIyMywgMSk7XHJcbn1cclxuXHJcbi52cy1kYXJrIC5tb25hY28tc2Nyb2xsYWJsZS1lbGVtZW50IC5zaGFkb3cudG9wIHtcclxuXHRib3gtc2hhZG93OiBub25lO1xyXG59XHJcblxyXG4udnMtZGFyayAubW9uYWNvLXNjcm9sbGFibGUtZWxlbWVudCAuc2hhZG93LmxlZnQge1xyXG5cdGJveC1zaGFkb3c6ICMwMDAgNnB4IDAgNnB4IC02cHggaW5zZXQ7XHJcbn1cclxuXHJcbi52cy1kYXJrIC5tb25hY28tc2Nyb2xsYWJsZS1lbGVtZW50IC5zaGFkb3cudG9wLmxlZnQge1xyXG5cdGJveC1zaGFkb3c6ICMwMDAgNnB4IDZweCA2cHggLTZweCBpbnNldDtcclxufVxyXG5cclxuLmhjLWJsYWNrIC5tb25hY28tc2Nyb2xsYWJsZS1lbGVtZW50IC5zaGFkb3cudG9wIHtcclxuXHRib3gtc2hhZG93OiBub25lO1xyXG59XHJcblxyXG4uaGMtYmxhY2sgLm1vbmFjby1zY3JvbGxhYmxlLWVsZW1lbnQgLnNoYWRvdy5sZWZ0IHtcclxuXHRib3gtc2hhZG93OiBub25lO1xyXG59XHJcblxyXG4uaGMtYmxhY2sgLm1vbmFjby1zY3JvbGxhYmxlLWVsZW1lbnQgLnNoYWRvdy50b3AubGVmdCB7XHJcblx0Ym94LXNoYWRvdzogbm9uZTtcclxufSJdfQ== */"

/***/ }),

/***/ "./src/vs/base/browser/ui/scrollbar/scrollableElement.ts":
/*!***************************************************************!*\
  !*** ./src/vs/base/browser/ui/scrollbar/scrollableElement.ts ***!
  \***************************************************************/
/*! exports provided: MouseWheelClassifier, AbstractScrollableElement, ScrollableElement, SmoothScrollableElement, DomScrollableElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MouseWheelClassifier", function() { return MouseWheelClassifier; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AbstractScrollableElement", function() { return AbstractScrollableElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollableElement", function() { return ScrollableElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SmoothScrollableElement", function() { return SmoothScrollableElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DomScrollableElement", function() { return DomScrollableElement; });
/* harmony import */ var vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/browser/dom */ "./src/vs/base/browser/dom.ts");
/* harmony import */ var vs_base_browser_fastDomNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/browser/fastDomNode */ "./src/vs/base/browser/fastDomNode.ts");
/* harmony import */ var vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vs/base/browser/mouseEvent */ "./src/vs/base/browser/mouseEvent.ts");
/* harmony import */ var vs_base_browser_ui_scrollbar_horizontalScrollbar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vs/base/browser/ui/scrollbar/horizontalScrollbar */ "./src/vs/base/browser/ui/scrollbar/horizontalScrollbar.ts");
/* harmony import */ var vs_base_browser_ui_scrollbar_verticalScrollbar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vs/base/browser/ui/scrollbar/verticalScrollbar */ "./src/vs/base/browser/ui/scrollbar/verticalScrollbar.ts");
/* harmony import */ var vs_base_browser_ui_widget__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vs/base/browser/ui/widget */ "./src/vs/base/browser/ui/widget.ts");
/* harmony import */ var vs_base_common_async__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vs/base/common/async */ "./src/vs/base/common/async.ts");
/* harmony import */ var vs_base_common_event__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! vs/base/common/event */ "./src/vs/base/common/event.ts");
/* harmony import */ var vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! vs/base/common/lifecycle */ "./src/vs/base/common/lifecycle.ts");
/* harmony import */ var vs_base_common_platform__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vs/base/common/platform */ "./src/vs/base/common/platform.ts");
/* harmony import */ var vs_base_common_scrollable__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! vs/base/common/scrollable */ "./src/vs/base/common/scrollable.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// import 'vs/css!./media/scrollbars';











var HIDE_TIMEOUT = 500;
var SCROLL_WHEEL_SENSITIVITY = 50;
var SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED = true;
var MouseWheelClassifierItem = /** @class */ (function () {
    function MouseWheelClassifierItem(timestamp, deltaX, deltaY) {
        this.timestamp = timestamp;
        this.deltaX = deltaX;
        this.deltaY = deltaY;
        this.score = 0;
    }
    MouseWheelClassifierItem.ctorParameters = function () { return [
        { type: Number },
        { type: Number },
        { type: Number }
    ]; };
    return MouseWheelClassifierItem;
}());
var MouseWheelClassifier = /** @class */ (function () {
    function MouseWheelClassifier() {
        this._capacity = 5;
        this._memory = [];
        this._front = -1;
        this._rear = -1;
    }
    MouseWheelClassifier.prototype.isPhysicalMouseWheel = function () {
        if (this._front === -1 && this._rear === -1) {
            // no elements
            return false;
        }
        // 0.5 * last + 0.25 * before last + 0.125 * before before last + ...
        var remainingInfluence = 1;
        var score = 0;
        var iteration = 1;
        var index = this._rear;
        do {
            var influence = (index === this._front ? remainingInfluence : Math.pow(2, -iteration));
            remainingInfluence -= influence;
            score += this._memory[index].score * influence;
            if (index === this._front) {
                break;
            }
            index = (this._capacity + index - 1) % this._capacity;
            iteration++;
        } while (true);
        return (score <= 0.5);
    };
    MouseWheelClassifier.prototype.accept = function (timestamp, deltaX, deltaY) {
        var item = new MouseWheelClassifierItem(timestamp, deltaX, deltaY);
        item.score = this._computeScore(item);
        if (this._front === -1 && this._rear === -1) {
            this._memory[0] = item;
            this._front = 0;
            this._rear = 0;
        }
        else {
            this._rear = (this._rear + 1) % this._capacity;
            if (this._rear === this._front) {
                // Drop oldest
                this._front = (this._front + 1) % this._capacity;
            }
            this._memory[this._rear] = item;
        }
    };
    /**
     * A score between 0 and 1 for `item`.
     *  - a score towards 0 indicates that the source appears to be a physical mouse wheel
     *  - a score towards 1 indicates that the source appears to be a touchpad or magic mouse, etc.
     */
    MouseWheelClassifier.prototype._computeScore = function (item) {
        if (Math.abs(item.deltaX) > 0 && Math.abs(item.deltaY) > 0) {
            // both axes exercised => definitely not a physical mouse wheel
            return 1;
        }
        var score = 0.5;
        var prev = (this._front === -1 && this._rear === -1 ? null : this._memory[this._rear]);
        if (prev) {
            // const deltaT = item.timestamp - prev.timestamp;
            // if (deltaT < 1000 / 30) {
            // 	// sooner than X times per second => indicator that this is not a physical mouse wheel
            // 	score += 0.25;
            // }
            // if (item.deltaX === prev.deltaX && item.deltaY === prev.deltaY) {
            // 	// equal amplitude => indicator that this is a physical mouse wheel
            // 	score -= 0.25;
            // }
        }
        if (Math.abs(item.deltaX - Math.round(item.deltaX)) > 0 || Math.abs(item.deltaY - Math.round(item.deltaY)) > 0) {
            // non-integer deltas => indicator that this is not a physical mouse wheel
            score += 0.25;
        }
        return Math.min(Math.max(score, 0), 1);
    };
    MouseWheelClassifier.INSTANCE = new MouseWheelClassifier();
    return MouseWheelClassifier;
}());

var AbstractScrollableElement = /** @class */ (function (_super) {
    __extends(AbstractScrollableElement, _super);
    function AbstractScrollableElement(element, options, scrollable) {
        var _this = _super.call(this) || this;
        _this._onScroll = _this._register(new vs_base_common_event__WEBPACK_IMPORTED_MODULE_7__["Emitter"]());
        _this.onScroll = _this._onScroll.event;
        element.style.overflow = 'hidden';
        _this._options = resolveOptions(options);
        _this._scrollable = scrollable;
        _this._register(_this._scrollable.onScroll(function (e) {
            _this._onDidScroll(e);
            _this._onScroll.fire(e);
        }));
        var scrollbarHost = {
            onMouseWheel: function (mouseWheelEvent) { return _this._onMouseWheel(mouseWheelEvent); },
            onDragStart: function () { return _this._onDragStart(); },
            onDragEnd: function () { return _this._onDragEnd(); },
        };
        _this._verticalScrollbar = _this._register(new vs_base_browser_ui_scrollbar_verticalScrollbar__WEBPACK_IMPORTED_MODULE_4__["VerticalScrollbar"](_this._scrollable, _this._options, scrollbarHost));
        _this._horizontalScrollbar = _this._register(new vs_base_browser_ui_scrollbar_horizontalScrollbar__WEBPACK_IMPORTED_MODULE_3__["HorizontalScrollbar"](_this._scrollable, _this._options, scrollbarHost));
        _this._domNode = document.createElement('div');
        _this._domNode.className = 'monaco-scrollable-element ' + _this._options.className;
        _this._domNode.setAttribute('role', 'presentation');
        _this._domNode.style.position = 'relative';
        _this._domNode.style.overflow = 'hidden';
        _this._domNode.appendChild(element);
        _this._domNode.appendChild(_this._horizontalScrollbar.domNode.domNode);
        _this._domNode.appendChild(_this._verticalScrollbar.domNode.domNode);
        if (_this._options.useShadows) {
            _this._leftShadowDomNode = Object(vs_base_browser_fastDomNode__WEBPACK_IMPORTED_MODULE_1__["createFastDomNode"])(document.createElement('div'));
            _this._leftShadowDomNode.setClassName('shadow');
            _this._domNode.appendChild(_this._leftShadowDomNode.domNode);
            _this._topShadowDomNode = Object(vs_base_browser_fastDomNode__WEBPACK_IMPORTED_MODULE_1__["createFastDomNode"])(document.createElement('div'));
            _this._topShadowDomNode.setClassName('shadow');
            _this._domNode.appendChild(_this._topShadowDomNode.domNode);
            _this._topLeftShadowDomNode = Object(vs_base_browser_fastDomNode__WEBPACK_IMPORTED_MODULE_1__["createFastDomNode"])(document.createElement('div'));
            _this._topLeftShadowDomNode.setClassName('shadow top-left-corner');
            _this._domNode.appendChild(_this._topLeftShadowDomNode.domNode);
        }
        _this._listenOnDomNode = _this._options.listenOnDomNode || _this._domNode;
        _this._mouseWheelToDispose = [];
        _this._setListeningToMouseWheel(_this._options.handleMouseWheel);
        _this.onmouseover(_this._listenOnDomNode, function (e) { return _this._onMouseOver(e); });
        _this.onnonbubblingmouseout(_this._listenOnDomNode, function (e) { return _this._onMouseOut(e); });
        _this._hideTimeout = _this._register(new vs_base_common_async__WEBPACK_IMPORTED_MODULE_6__["TimeoutTimer"]());
        _this._isDragging = false;
        _this._mouseIsOver = false;
        _this._shouldRender = true;
        _this._revealOnScroll = true;
        return _this;
    }
    AbstractScrollableElement.prototype.dispose = function () {
        this._mouseWheelToDispose = Object(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_8__["dispose"])(this._mouseWheelToDispose);
        _super.prototype.dispose.call(this);
    };
    /**
     * Get the generated 'scrollable' dom node
     */
    AbstractScrollableElement.prototype.getDomNode = function () {
        return this._domNode;
    };
    AbstractScrollableElement.prototype.getOverviewRulerLayoutInfo = function () {
        return {
            parent: this._domNode,
            insertBefore: this._verticalScrollbar.domNode.domNode,
        };
    };
    /**
     * Delegate a mouse down event to the vertical scrollbar.
     * This is to help with clicking somewhere else and having the scrollbar react.
     */
    AbstractScrollableElement.prototype.delegateVerticalScrollbarMouseDown = function (browserEvent) {
        this._verticalScrollbar.delegateMouseDown(browserEvent);
    };
    AbstractScrollableElement.prototype.getScrollDimensions = function () {
        return this._scrollable.getScrollDimensions();
    };
    AbstractScrollableElement.prototype.setScrollDimensions = function (dimensions) {
        this._scrollable.setScrollDimensions(dimensions);
    };
    /**
     * Update the class name of the scrollable element.
     */
    AbstractScrollableElement.prototype.updateClassName = function (newClassName) {
        this._options.className = newClassName;
        // Defaults are different on Macs
        if (vs_base_common_platform__WEBPACK_IMPORTED_MODULE_9__["isMacintosh"]) {
            this._options.className += ' mac';
        }
        this._domNode.className = 'monaco-scrollable-element ' + this._options.className;
    };
    /**
     * Update configuration options for the scrollbar.
     * Really this is Editor.IEditorScrollbarOptions, but base shouldn't
     * depend on Editor.
     */
    AbstractScrollableElement.prototype.updateOptions = function (newOptions) {
        var massagedOptions = resolveOptions(newOptions);
        this._options.handleMouseWheel = massagedOptions.handleMouseWheel;
        this._options.mouseWheelScrollSensitivity = massagedOptions.mouseWheelScrollSensitivity;
        this._options.fastScrollSensitivity = massagedOptions.fastScrollSensitivity;
        this._setListeningToMouseWheel(this._options.handleMouseWheel);
        if (!this._options.lazyRender) {
            this._render();
        }
    };
    AbstractScrollableElement.prototype.setRevealOnScroll = function (value) {
        this._revealOnScroll = value;
    };
    // -------------------- mouse wheel scrolling --------------------
    AbstractScrollableElement.prototype._setListeningToMouseWheel = function (shouldListen) {
        var _this = this;
        var isListening = (this._mouseWheelToDispose.length > 0);
        if (isListening === shouldListen) {
            // No change
            return;
        }
        // Stop listening (if necessary)
        this._mouseWheelToDispose = Object(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_8__["dispose"])(this._mouseWheelToDispose);
        // Start listening (if necessary)
        if (shouldListen) {
            var onMouseWheel = function (browserEvent) {
                _this._onMouseWheel(new vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_2__["StandardWheelEvent"](browserEvent));
            };
            this._mouseWheelToDispose.push(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["addDisposableListener"](this._listenOnDomNode, 'mousewheel', onMouseWheel));
        }
    };
    AbstractScrollableElement.prototype._onMouseWheel = function (e) {
        var _a;
        var classifier = MouseWheelClassifier.INSTANCE;
        if (SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED) {
            classifier.accept(Date.now(), e.deltaX, e.deltaY);
        }
        // console.log(`${Date.now()}, ${e.deltaY}, ${e.deltaX}`);
        if (e.deltaY || e.deltaX) {
            var deltaY = e.deltaY * this._options.mouseWheelScrollSensitivity;
            var deltaX = e.deltaX * this._options.mouseWheelScrollSensitivity;
            if (this._options.flipAxes) {
                _a = [deltaX, deltaY], deltaY = _a[0], deltaX = _a[1];
            }
            // Convert vertical scrolling to horizontal if shift is held, this
            // is handled at a higher level on Mac
            var shiftConvert = !vs_base_common_platform__WEBPACK_IMPORTED_MODULE_9__["isMacintosh"] && e.browserEvent && e.browserEvent.shiftKey;
            if ((this._options.scrollYToX || shiftConvert) && !deltaX) {
                deltaX = deltaY;
                deltaY = 0;
            }
            if (e.browserEvent && e.browserEvent.altKey) {
                // fastScrolling
                deltaX = deltaX * this._options.fastScrollSensitivity;
                deltaY = deltaY * this._options.fastScrollSensitivity;
            }
            var futureScrollPosition = this._scrollable.getFutureScrollPosition();
            var desiredScrollPosition = {};
            if (deltaY) {
                var desiredScrollTop = futureScrollPosition.scrollTop - SCROLL_WHEEL_SENSITIVITY * deltaY;
                this._verticalScrollbar.writeScrollPosition(desiredScrollPosition, desiredScrollTop);
            }
            if (deltaX) {
                var desiredScrollLeft = futureScrollPosition.scrollLeft - SCROLL_WHEEL_SENSITIVITY * deltaX;
                this._horizontalScrollbar.writeScrollPosition(desiredScrollPosition, desiredScrollLeft);
            }
            // Check that we are scrolling towards a location which is valid
            desiredScrollPosition = this._scrollable.validateScrollPosition(desiredScrollPosition);
            if (futureScrollPosition.scrollLeft !== desiredScrollPosition.scrollLeft || futureScrollPosition.scrollTop !== desiredScrollPosition.scrollTop) {
                var canPerformSmoothScroll = (SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED
                    && this._options.mouseWheelSmoothScroll
                    && classifier.isPhysicalMouseWheel());
                if (canPerformSmoothScroll) {
                    this._scrollable.setScrollPositionSmooth(desiredScrollPosition);
                }
                else {
                    this._scrollable.setScrollPositionNow(desiredScrollPosition);
                }
                this._shouldRender = true;
            }
        }
        if (this._options.alwaysConsumeMouseWheel || this._shouldRender) {
            e.preventDefault();
            e.stopPropagation();
        }
    };
    AbstractScrollableElement.prototype._onDidScroll = function (e) {
        this._shouldRender = this._horizontalScrollbar.onDidScroll(e) || this._shouldRender;
        this._shouldRender = this._verticalScrollbar.onDidScroll(e) || this._shouldRender;
        if (this._options.useShadows) {
            this._shouldRender = true;
        }
        if (this._revealOnScroll) {
            this._reveal();
        }
        if (!this._options.lazyRender) {
            this._render();
        }
    };
    /**
     * Render / mutate the DOM now.
     * Should be used together with the ctor option `lazyRender`.
     */
    AbstractScrollableElement.prototype.renderNow = function () {
        if (!this._options.lazyRender) {
            throw new Error('Please use `lazyRender` together with `renderNow`!');
        }
        this._render();
    };
    AbstractScrollableElement.prototype._render = function () {
        if (!this._shouldRender) {
            return;
        }
        this._shouldRender = false;
        this._horizontalScrollbar.render();
        this._verticalScrollbar.render();
        if (this._options.useShadows) {
            var scrollState = this._scrollable.getCurrentScrollPosition();
            var enableTop = scrollState.scrollTop > 0;
            var enableLeft = scrollState.scrollLeft > 0;
            this._leftShadowDomNode.setClassName('shadow' + (enableLeft ? ' left' : ''));
            this._topShadowDomNode.setClassName('shadow' + (enableTop ? ' top' : ''));
            this._topLeftShadowDomNode.setClassName('shadow top-left-corner' + (enableTop ? ' top' : '') + (enableLeft ? ' left' : ''));
        }
    };
    // -------------------- fade in / fade out --------------------
    AbstractScrollableElement.prototype._onDragStart = function () {
        this._isDragging = true;
        this._reveal();
    };
    AbstractScrollableElement.prototype._onDragEnd = function () {
        this._isDragging = false;
        this._hide();
    };
    AbstractScrollableElement.prototype._onMouseOut = function (e) {
        this._mouseIsOver = false;
        this._hide();
    };
    AbstractScrollableElement.prototype._onMouseOver = function (e) {
        this._mouseIsOver = true;
        this._reveal();
    };
    AbstractScrollableElement.prototype._reveal = function () {
        this._verticalScrollbar.beginReveal();
        this._horizontalScrollbar.beginReveal();
        this._scheduleHide();
    };
    AbstractScrollableElement.prototype._hide = function () {
        if (!this._mouseIsOver && !this._isDragging) {
            this._verticalScrollbar.beginHide();
            this._horizontalScrollbar.beginHide();
        }
    };
    AbstractScrollableElement.prototype._scheduleHide = function () {
        var _this = this;
        if (!this._mouseIsOver && !this._isDragging) {
            this._hideTimeout.cancelAndSet(function () { return _this._hide(); }, HIDE_TIMEOUT);
        }
    };
    AbstractScrollableElement.ctorParameters = function () { return [
        { type: HTMLElement },
        { type: undefined },
        { type: vs_base_common_scrollable__WEBPACK_IMPORTED_MODULE_10__["Scrollable"] }
    ]; };
    return AbstractScrollableElement;
}(vs_base_browser_ui_widget__WEBPACK_IMPORTED_MODULE_5__["Widget"]));

var ScrollableElement = /** @class */ (function (_super) {
    __extends(ScrollableElement, _super);
    function ScrollableElement(element, options) {
        var _this = this;
        options = options || {};
        options.mouseWheelSmoothScroll = false;
        var scrollable = new vs_base_common_scrollable__WEBPACK_IMPORTED_MODULE_10__["Scrollable"](0, function (callback) { return vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["scheduleAtNextAnimationFrame"](callback); });
        _this = _super.call(this, element, options, scrollable) || this;
        _this._register(scrollable);
        return _this;
    }
    ScrollableElement.prototype.setScrollPosition = function (update) {
        this._scrollable.setScrollPositionNow(update);
    };
    ScrollableElement.prototype.getScrollPosition = function () {
        return this._scrollable.getCurrentScrollPosition();
    };
    ScrollableElement.ctorParameters = function () { return [
        { type: HTMLElement },
        { type: undefined }
    ]; };
    return ScrollableElement;
}(AbstractScrollableElement));

var SmoothScrollableElement = /** @class */ (function (_super) {
    __extends(SmoothScrollableElement, _super);
    function SmoothScrollableElement(element, options, scrollable) {
        return _super.call(this, element, options, scrollable) || this;
    }
    SmoothScrollableElement.ctorParameters = function () { return [
        { type: HTMLElement },
        { type: undefined },
        { type: vs_base_common_scrollable__WEBPACK_IMPORTED_MODULE_10__["Scrollable"] }
    ]; };
    return SmoothScrollableElement;
}(AbstractScrollableElement));

var DomScrollableElement = /** @class */ (function (_super) {
    __extends(DomScrollableElement, _super);
    function DomScrollableElement(element, options) {
        var _this = _super.call(this, element, options) || this;
        _this._element = element;
        _this.onScroll(function (e) {
            if (e.scrollTopChanged) {
                _this._element.scrollTop = e.scrollTop;
            }
            if (e.scrollLeftChanged) {
                _this._element.scrollLeft = e.scrollLeft;
            }
        });
        _this.scanDomNode();
        return _this;
    }
    DomScrollableElement.prototype.scanDomNode = function () {
        // width, scrollLeft, scrollWidth, height, scrollTop, scrollHeight
        this.setScrollDimensions({
            width: this._element.clientWidth,
            scrollWidth: this._element.scrollWidth,
            height: this._element.clientHeight,
            scrollHeight: this._element.scrollHeight
        });
        this.setScrollPosition({
            scrollLeft: this._element.scrollLeft,
            scrollTop: this._element.scrollTop,
        });
    };
    DomScrollableElement.ctorParameters = function () { return [
        { type: HTMLElement },
        { type: undefined }
    ]; };
    return DomScrollableElement;
}(ScrollableElement));

function resolveOptions(opts) {
    var result = {
        lazyRender: (typeof opts.lazyRender !== 'undefined' ? opts.lazyRender : false),
        className: (typeof opts.className !== 'undefined' ? opts.className : ''),
        useShadows: (typeof opts.useShadows !== 'undefined' ? opts.useShadows : true),
        handleMouseWheel: (typeof opts.handleMouseWheel !== 'undefined' ? opts.handleMouseWheel : true),
        flipAxes: (typeof opts.flipAxes !== 'undefined' ? opts.flipAxes : false),
        alwaysConsumeMouseWheel: (typeof opts.alwaysConsumeMouseWheel !== 'undefined' ? opts.alwaysConsumeMouseWheel : false),
        scrollYToX: (typeof opts.scrollYToX !== 'undefined' ? opts.scrollYToX : false),
        mouseWheelScrollSensitivity: (typeof opts.mouseWheelScrollSensitivity !== 'undefined' ? opts.mouseWheelScrollSensitivity : 1),
        fastScrollSensitivity: (typeof opts.fastScrollSensitivity !== 'undefined' ? opts.fastScrollSensitivity : 5),
        mouseWheelSmoothScroll: (typeof opts.mouseWheelSmoothScroll !== 'undefined' ? opts.mouseWheelSmoothScroll : true),
        arrowSize: (typeof opts.arrowSize !== 'undefined' ? opts.arrowSize : 11),
        listenOnDomNode: (typeof opts.listenOnDomNode !== 'undefined' ? opts.listenOnDomNode : null),
        horizontal: (typeof opts.horizontal !== 'undefined' ? opts.horizontal : 1 /* Auto */),
        horizontalScrollbarSize: (typeof opts.horizontalScrollbarSize !== 'undefined' ? opts.horizontalScrollbarSize : 10),
        horizontalSliderSize: (typeof opts.horizontalSliderSize !== 'undefined' ? opts.horizontalSliderSize : 0),
        horizontalHasArrows: (typeof opts.horizontalHasArrows !== 'undefined' ? opts.horizontalHasArrows : false),
        vertical: (typeof opts.vertical !== 'undefined' ? opts.vertical : 1 /* Auto */),
        verticalScrollbarSize: (typeof opts.verticalScrollbarSize !== 'undefined' ? opts.verticalScrollbarSize : 10),
        verticalHasArrows: (typeof opts.verticalHasArrows !== 'undefined' ? opts.verticalHasArrows : false),
        verticalSliderSize: (typeof opts.verticalSliderSize !== 'undefined' ? opts.verticalSliderSize : 0)
    };
    result.horizontalSliderSize = (typeof opts.horizontalSliderSize !== 'undefined' ? opts.horizontalSliderSize : result.horizontalScrollbarSize);
    result.verticalSliderSize = (typeof opts.verticalSliderSize !== 'undefined' ? opts.verticalSliderSize : result.verticalScrollbarSize);
    // Defaults are different on Macs
    if (vs_base_common_platform__WEBPACK_IMPORTED_MODULE_9__["isMacintosh"]) {
        result.className += ' mac';
    }
    return result;
}


/***/ }),

/***/ "./src/vs/base/browser/ui/scrollbar/scrollbarArrow.ts":
/*!************************************************************!*\
  !*** ./src/vs/base/browser/ui/scrollbar/scrollbarArrow.ts ***!
  \************************************************************/
/*! exports provided: ARROW_IMG_SIZE, ScrollbarArrow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ARROW_IMG_SIZE", function() { return ARROW_IMG_SIZE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollbarArrow", function() { return ScrollbarArrow; });
/* harmony import */ var vs_base_browser_globalMouseMoveMonitor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/browser/globalMouseMoveMonitor */ "./src/vs/base/browser/globalMouseMoveMonitor.ts");
/* harmony import */ var vs_base_browser_ui_widget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/browser/ui/widget */ "./src/vs/base/browser/ui/widget.ts");
/* harmony import */ var vs_base_common_async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vs/base/common/async */ "./src/vs/base/common/async.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * The arrow image size.
 */
var ARROW_IMG_SIZE = 11;
var ScrollbarArrow = /** @class */ (function (_super) {
    __extends(ScrollbarArrow, _super);
    function ScrollbarArrow(opts) {
        var _this = _super.call(this) || this;
        _this._onActivate = opts.onActivate;
        _this.bgDomNode = document.createElement('div');
        _this.bgDomNode.className = 'arrow-background';
        _this.bgDomNode.style.position = 'absolute';
        _this.bgDomNode.style.width = opts.bgWidth + 'px';
        _this.bgDomNode.style.height = opts.bgHeight + 'px';
        if (typeof opts.top !== 'undefined') {
            _this.bgDomNode.style.top = '0px';
        }
        if (typeof opts.left !== 'undefined') {
            _this.bgDomNode.style.left = '0px';
        }
        if (typeof opts.bottom !== 'undefined') {
            _this.bgDomNode.style.bottom = '0px';
        }
        if (typeof opts.right !== 'undefined') {
            _this.bgDomNode.style.right = '0px';
        }
        _this.domNode = document.createElement('div');
        _this.domNode.className = opts.className;
        _this.domNode.style.position = 'absolute';
        _this.domNode.style.width = ARROW_IMG_SIZE + 'px';
        _this.domNode.style.height = ARROW_IMG_SIZE + 'px';
        if (typeof opts.top !== 'undefined') {
            _this.domNode.style.top = opts.top + 'px';
        }
        if (typeof opts.left !== 'undefined') {
            _this.domNode.style.left = opts.left + 'px';
        }
        if (typeof opts.bottom !== 'undefined') {
            _this.domNode.style.bottom = opts.bottom + 'px';
        }
        if (typeof opts.right !== 'undefined') {
            _this.domNode.style.right = opts.right + 'px';
        }
        _this._mouseMoveMonitor = _this._register(new vs_base_browser_globalMouseMoveMonitor__WEBPACK_IMPORTED_MODULE_0__["GlobalMouseMoveMonitor"]());
        _this.onmousedown(_this.bgDomNode, function (e) { return _this._arrowMouseDown(e); });
        _this.onmousedown(_this.domNode, function (e) { return _this._arrowMouseDown(e); });
        _this._mousedownRepeatTimer = _this._register(new vs_base_common_async__WEBPACK_IMPORTED_MODULE_2__["IntervalTimer"]());
        _this._mousedownScheduleRepeatTimer = _this._register(new vs_base_common_async__WEBPACK_IMPORTED_MODULE_2__["TimeoutTimer"]());
        return _this;
    }
    ScrollbarArrow.prototype._arrowMouseDown = function (e) {
        var _this = this;
        var scheduleRepeater = function () {
            _this._mousedownRepeatTimer.cancelAndSet(function () { return _this._onActivate(); }, 1000 / 24);
        };
        this._onActivate();
        this._mousedownRepeatTimer.cancel();
        this._mousedownScheduleRepeatTimer.cancelAndSet(scheduleRepeater, 200);
        this._mouseMoveMonitor.startMonitoring(vs_base_browser_globalMouseMoveMonitor__WEBPACK_IMPORTED_MODULE_0__["standardMouseMoveMerger"], function (mouseMoveData) {
            /* Intentional empty */
        }, function () {
            _this._mousedownRepeatTimer.cancel();
            _this._mousedownScheduleRepeatTimer.cancel();
        });
        e.preventDefault();
    };
    ScrollbarArrow.ctorParameters = function () { return [
        { type: undefined }
    ]; };
    return ScrollbarArrow;
}(vs_base_browser_ui_widget__WEBPACK_IMPORTED_MODULE_1__["Widget"]));



/***/ }),

/***/ "./src/vs/base/browser/ui/scrollbar/scrollbarState.ts":
/*!************************************************************!*\
  !*** ./src/vs/base/browser/ui/scrollbar/scrollbarState.ts ***!
  \************************************************************/
/*! exports provided: ScrollbarState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollbarState", function() { return ScrollbarState; });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
/**
 * The minimal size of the slider (such that it can still be clickable) -- it is artificially enlarged.
 */
var MINIMUM_SLIDER_SIZE = 20;
var ScrollbarState = /** @class */ (function () {
    function ScrollbarState(arrowSize, scrollbarSize, oppositeScrollbarSize) {
        this._scrollbarSize = Math.round(scrollbarSize);
        this._oppositeScrollbarSize = Math.round(oppositeScrollbarSize);
        this._arrowSize = Math.round(arrowSize);
        this._visibleSize = 0;
        this._scrollSize = 0;
        this._scrollPosition = 0;
        this._computedAvailableSize = 0;
        this._computedIsNeeded = false;
        this._computedSliderSize = 0;
        this._computedSliderRatio = 0;
        this._computedSliderPosition = 0;
        this._refreshComputedValues();
    }
    ScrollbarState.prototype.clone = function () {
        var r = new ScrollbarState(this._arrowSize, this._scrollbarSize, this._oppositeScrollbarSize);
        r.setVisibleSize(this._visibleSize);
        r.setScrollSize(this._scrollSize);
        r.setScrollPosition(this._scrollPosition);
        return r;
    };
    ScrollbarState.prototype.setVisibleSize = function (visibleSize) {
        var iVisibleSize = Math.round(visibleSize);
        if (this._visibleSize !== iVisibleSize) {
            this._visibleSize = iVisibleSize;
            this._refreshComputedValues();
            return true;
        }
        return false;
    };
    ScrollbarState.prototype.setScrollSize = function (scrollSize) {
        var iScrollSize = Math.round(scrollSize);
        if (this._scrollSize !== iScrollSize) {
            this._scrollSize = iScrollSize;
            this._refreshComputedValues();
            return true;
        }
        return false;
    };
    ScrollbarState.prototype.setScrollPosition = function (scrollPosition) {
        var iScrollPosition = Math.round(scrollPosition);
        if (this._scrollPosition !== iScrollPosition) {
            this._scrollPosition = iScrollPosition;
            this._refreshComputedValues();
            return true;
        }
        return false;
    };
    ScrollbarState._computeValues = function (oppositeScrollbarSize, arrowSize, visibleSize, scrollSize, scrollPosition) {
        var computedAvailableSize = Math.max(0, visibleSize - oppositeScrollbarSize);
        var computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * arrowSize);
        var computedIsNeeded = (scrollSize > 0 && scrollSize > visibleSize);
        if (!computedIsNeeded) {
            // There is no need for a slider
            return {
                computedAvailableSize: Math.round(computedAvailableSize),
                computedIsNeeded: computedIsNeeded,
                computedSliderSize: Math.round(computedRepresentableSize),
                computedSliderRatio: 0,
                computedSliderPosition: 0,
            };
        }
        // We must artificially increase the size of the slider if needed, since the slider would be too small to grab with the mouse otherwise
        var computedSliderSize = Math.round(Math.max(MINIMUM_SLIDER_SIZE, Math.floor(visibleSize * computedRepresentableSize / scrollSize)));
        // The slider can move from 0 to `computedRepresentableSize` - `computedSliderSize`
        // in the same way `scrollPosition` can move from 0 to `scrollSize` - `visibleSize`.
        var computedSliderRatio = (computedRepresentableSize - computedSliderSize) / (scrollSize - visibleSize);
        var computedSliderPosition = (scrollPosition * computedSliderRatio);
        return {
            computedAvailableSize: Math.round(computedAvailableSize),
            computedIsNeeded: computedIsNeeded,
            computedSliderSize: Math.round(computedSliderSize),
            computedSliderRatio: computedSliderRatio,
            computedSliderPosition: Math.round(computedSliderPosition),
        };
    };
    ScrollbarState.prototype._refreshComputedValues = function () {
        var r = ScrollbarState._computeValues(this._oppositeScrollbarSize, this._arrowSize, this._visibleSize, this._scrollSize, this._scrollPosition);
        this._computedAvailableSize = r.computedAvailableSize;
        this._computedIsNeeded = r.computedIsNeeded;
        this._computedSliderSize = r.computedSliderSize;
        this._computedSliderRatio = r.computedSliderRatio;
        this._computedSliderPosition = r.computedSliderPosition;
    };
    ScrollbarState.prototype.getArrowSize = function () {
        return this._arrowSize;
    };
    ScrollbarState.prototype.getScrollPosition = function () {
        return this._scrollPosition;
    };
    ScrollbarState.prototype.getRectangleLargeSize = function () {
        return this._computedAvailableSize;
    };
    ScrollbarState.prototype.getRectangleSmallSize = function () {
        return this._scrollbarSize;
    };
    ScrollbarState.prototype.isNeeded = function () {
        return this._computedIsNeeded;
    };
    ScrollbarState.prototype.getSliderSize = function () {
        return this._computedSliderSize;
    };
    ScrollbarState.prototype.getSliderPosition = function () {
        return this._computedSliderPosition;
    };
    /**
     * Compute a desired `scrollPosition` such that `offset` ends up in the center of the slider.
     * `offset` is based on the same coordinate system as the `sliderPosition`.
     */
    ScrollbarState.prototype.getDesiredScrollPositionFromOffset = function (offset) {
        if (!this._computedIsNeeded) {
            // no need for a slider
            return 0;
        }
        var desiredSliderPosition = offset - this._arrowSize - this._computedSliderSize / 2;
        return Math.round(desiredSliderPosition / this._computedSliderRatio);
    };
    /**
     * Compute a desired `scrollPosition` such that the slider moves by `delta`.
     */
    ScrollbarState.prototype.getDesiredScrollPositionFromDelta = function (delta) {
        if (!this._computedIsNeeded) {
            // no need for a slider
            return 0;
        }
        var desiredSliderPosition = this._computedSliderPosition + delta;
        return Math.round(desiredSliderPosition / this._computedSliderRatio);
    };
    ScrollbarState.ctorParameters = function () { return [
        { type: Number },
        { type: Number },
        { type: Number }
    ]; };
    return ScrollbarState;
}());



/***/ }),

/***/ "./src/vs/base/browser/ui/scrollbar/scrollbarVisibilityController.ts":
/*!***************************************************************************!*\
  !*** ./src/vs/base/browser/ui/scrollbar/scrollbarVisibilityController.ts ***!
  \***************************************************************************/
/*! exports provided: ScrollbarVisibilityController */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollbarVisibilityController", function() { return ScrollbarVisibilityController; });
/* harmony import */ var vs_base_common_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/async */ "./src/vs/base/common/async.ts");
/* harmony import */ var vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/common/lifecycle */ "./src/vs/base/common/lifecycle.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var ScrollbarVisibilityController = /** @class */ (function (_super) {
    __extends(ScrollbarVisibilityController, _super);
    function ScrollbarVisibilityController(visibility, visibleClassName, invisibleClassName) {
        var _this = _super.call(this) || this;
        _this._visibility = visibility;
        _this._visibleClassName = visibleClassName;
        _this._invisibleClassName = invisibleClassName;
        _this._domNode = null;
        _this._isVisible = false;
        _this._isNeeded = false;
        _this._shouldBeVisible = false;
        _this._revealTimer = _this._register(new vs_base_common_async__WEBPACK_IMPORTED_MODULE_0__["TimeoutTimer"]());
        return _this;
    }
    // ----------------- Hide / Reveal
    ScrollbarVisibilityController.prototype.applyVisibilitySetting = function (shouldBeVisible) {
        if (this._visibility === 2 /* Hidden */) {
            return false;
        }
        if (this._visibility === 3 /* Visible */) {
            return true;
        }
        return shouldBeVisible;
    };
    ScrollbarVisibilityController.prototype.setShouldBeVisible = function (rawShouldBeVisible) {
        var shouldBeVisible = this.applyVisibilitySetting(rawShouldBeVisible);
        if (this._shouldBeVisible !== shouldBeVisible) {
            this._shouldBeVisible = shouldBeVisible;
            this.ensureVisibility();
        }
    };
    ScrollbarVisibilityController.prototype.setIsNeeded = function (isNeeded) {
        if (this._isNeeded !== isNeeded) {
            this._isNeeded = isNeeded;
            this.ensureVisibility();
        }
    };
    ScrollbarVisibilityController.prototype.setDomNode = function (domNode) {
        this._domNode = domNode;
        this._domNode.setClassName(this._invisibleClassName);
        // Now that the flags & the dom node are in a consistent state, ensure the Hidden/Visible configuration
        this.setShouldBeVisible(false);
    };
    ScrollbarVisibilityController.prototype.ensureVisibility = function () {
        if (!this._isNeeded) {
            // Nothing to be rendered
            this._hide(false);
            return;
        }
        if (this._shouldBeVisible) {
            this._reveal();
        }
        else {
            this._hide(true);
        }
    };
    ScrollbarVisibilityController.prototype._reveal = function () {
        var _this = this;
        if (this._isVisible) {
            return;
        }
        this._isVisible = true;
        // The CSS animation doesn't play otherwise
        this._revealTimer.setIfNotSet(function () {
            if (_this._domNode) {
                _this._domNode.setClassName(_this._visibleClassName);
            }
        }, 0);
    };
    ScrollbarVisibilityController.prototype._hide = function (withFadeAway) {
        this._revealTimer.cancel();
        if (!this._isVisible) {
            return;
        }
        this._isVisible = false;
        if (this._domNode) {
            this._domNode.setClassName(this._invisibleClassName + (withFadeAway ? ' fade' : ''));
        }
    };
    ScrollbarVisibilityController.ctorParameters = function () { return [
        { type: undefined },
        { type: String },
        { type: String }
    ]; };
    return ScrollbarVisibilityController;
}(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_1__["Disposable"]));



/***/ }),

/***/ "./src/vs/base/browser/ui/scrollbar/verticalScrollbar.ts":
/*!***************************************************************!*\
  !*** ./src/vs/base/browser/ui/scrollbar/verticalScrollbar.ts ***!
  \***************************************************************/
/*! exports provided: VerticalScrollbar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VerticalScrollbar", function() { return VerticalScrollbar; });
/* harmony import */ var vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/browser/mouseEvent */ "./src/vs/base/browser/mouseEvent.ts");
/* harmony import */ var vs_base_browser_ui_scrollbar_abstractScrollbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/browser/ui/scrollbar/abstractScrollbar */ "./src/vs/base/browser/ui/scrollbar/abstractScrollbar.ts");
/* harmony import */ var vs_base_browser_ui_scrollbar_scrollbarArrow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vs/base/browser/ui/scrollbar/scrollbarArrow */ "./src/vs/base/browser/ui/scrollbar/scrollbarArrow.ts");
/* harmony import */ var vs_base_browser_ui_scrollbar_scrollbarState__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vs/base/browser/ui/scrollbar/scrollbarState */ "./src/vs/base/browser/ui/scrollbar/scrollbarState.ts");
/* harmony import */ var vs_base_common_scrollable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vs/base/common/scrollable */ "./src/vs/base/common/scrollable.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





var VerticalScrollbar = /** @class */ (function (_super) {
    __extends(VerticalScrollbar, _super);
    function VerticalScrollbar(scrollable, options, host) {
        var _this = _super.call(this, {
            lazyRender: options.lazyRender,
            host: host,
            scrollbarState: new vs_base_browser_ui_scrollbar_scrollbarState__WEBPACK_IMPORTED_MODULE_3__["ScrollbarState"]((options.verticalHasArrows ? options.arrowSize : 0), (options.vertical === 2 /* Hidden */ ? 0 : options.verticalScrollbarSize), 
            // give priority to vertical scroll bar over horizontal and let it scroll all the way to the bottom
            0),
            visibility: options.vertical,
            extraScrollbarClassName: 'vertical',
            scrollable: scrollable
        }) || this;
        if (options.verticalHasArrows) {
            var arrowDelta = (options.arrowSize - vs_base_browser_ui_scrollbar_scrollbarArrow__WEBPACK_IMPORTED_MODULE_2__["ARROW_IMG_SIZE"]) / 2;
            var scrollbarDelta = (options.verticalScrollbarSize - vs_base_browser_ui_scrollbar_scrollbarArrow__WEBPACK_IMPORTED_MODULE_2__["ARROW_IMG_SIZE"]) / 2;
            _this._createArrow({
                className: 'up-arrow',
                top: arrowDelta,
                left: scrollbarDelta,
                bottom: undefined,
                right: undefined,
                bgWidth: options.verticalScrollbarSize,
                bgHeight: options.arrowSize,
                onActivate: function () { return _this._host.onMouseWheel(new vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_0__["StandardWheelEvent"](null, 0, 1)); },
            });
            _this._createArrow({
                className: 'down-arrow',
                top: undefined,
                left: scrollbarDelta,
                bottom: arrowDelta,
                right: undefined,
                bgWidth: options.verticalScrollbarSize,
                bgHeight: options.arrowSize,
                onActivate: function () { return _this._host.onMouseWheel(new vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_0__["StandardWheelEvent"](null, 0, -1)); },
            });
        }
        _this._createSlider(0, Math.floor((options.verticalScrollbarSize - options.verticalSliderSize) / 2), options.verticalSliderSize, undefined);
        return _this;
    }
    VerticalScrollbar.prototype._updateSlider = function (sliderSize, sliderPosition) {
        this.slider.setHeight(sliderSize);
        this.slider.setTop(sliderPosition);
    };
    VerticalScrollbar.prototype._renderDomNode = function (largeSize, smallSize) {
        this.domNode.setWidth(smallSize);
        this.domNode.setHeight(largeSize);
        this.domNode.setRight(0);
        this.domNode.setTop(0);
    };
    VerticalScrollbar.prototype.onDidScroll = function (e) {
        this._shouldRender = this._onElementScrollSize(e.scrollHeight) || this._shouldRender;
        this._shouldRender = this._onElementScrollPosition(e.scrollTop) || this._shouldRender;
        this._shouldRender = this._onElementSize(e.height) || this._shouldRender;
        return this._shouldRender;
    };
    VerticalScrollbar.prototype._mouseDownRelativePosition = function (offsetX, offsetY) {
        return offsetY;
    };
    VerticalScrollbar.prototype._sliderMousePosition = function (e) {
        return e.posy;
    };
    VerticalScrollbar.prototype._sliderOrthogonalMousePosition = function (e) {
        return e.posx;
    };
    VerticalScrollbar.prototype.writeScrollPosition = function (target, scrollPosition) {
        target.scrollTop = scrollPosition;
    };
    VerticalScrollbar.ctorParameters = function () { return [
        { type: vs_base_common_scrollable__WEBPACK_IMPORTED_MODULE_4__["Scrollable"] },
        { type: undefined },
        { type: undefined }
    ]; };
    return VerticalScrollbar;
}(vs_base_browser_ui_scrollbar_abstractScrollbar__WEBPACK_IMPORTED_MODULE_1__["AbstractScrollbar"]));



/***/ }),

/***/ "./src/vs/base/browser/ui/tree/abstractTree.ts":
/*!*****************************************************!*\
  !*** ./src/vs/base/browser/ui/tree/abstractTree.ts ***!
  \*****************************************************/
/*! exports provided: ComposedTreeDelegate, RenderIndentGuides, AbstractTree */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComposedTreeDelegate", function() { return ComposedTreeDelegate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderIndentGuides", function() { return RenderIndentGuides; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AbstractTree", function() { return AbstractTree; });
/* harmony import */ var vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/lifecycle */ "./src/vs/base/common/lifecycle.ts");
/* harmony import */ var vs_base_browser_ui_list_listWidget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/browser/ui/list/listWidget */ "./src/vs/base/browser/ui/list/listWidget.ts");
/* harmony import */ var vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vs/base/browser/dom */ "./src/vs/base/browser/dom.ts");
/* harmony import */ var vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vs/base/common/event */ "./src/vs/base/common/event.ts");
/* harmony import */ var vs_base_browser_keyboardEvent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vs/base/browser/keyboardEvent */ "./src/vs/base/browser/keyboardEvent.ts");
/* harmony import */ var vs_base_browser_ui_tree_tree__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vs/base/browser/ui/tree/tree */ "./src/vs/base/browser/ui/tree/tree.ts");
/* harmony import */ var vs_base_browser_dnd__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vs/base/browser/dnd */ "./src/vs/base/browser/dnd.ts");
/* harmony import */ var vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! vs/base/common/arrays */ "./src/vs/base/common/arrays.ts");
/* harmony import */ var vs_base_browser_ui_list_listView__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! vs/base/browser/ui/list/listView */ "./src/vs/base/browser/ui/list/listView.ts");
/* harmony import */ var vs_base_browser_event__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vs/base/browser/event */ "./src/vs/base/browser/event.ts");
/* harmony import */ var vs_base_common_filters__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! vs/base/common/filters */ "./src/vs/base/common/filters.ts");
/* harmony import */ var vs_base_browser_ui_tree_indexTreeModel__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! vs/base/browser/ui/tree/indexTreeModel */ "./src/vs/base/browser/ui/tree/indexTreeModel.ts");
/* harmony import */ var vs_base_common_async__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! vs/base/common/async */ "./src/vs/base/common/async.ts");
/* harmony import */ var vs_base_common_platform__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! vs/base/common/platform */ "./src/vs/base/common/platform.ts");
/* harmony import */ var vs_base_common_map__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! vs/base/common/map */ "./src/vs/base/common/map.ts");
/* harmony import */ var vs_base_common_numbers__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! vs/base/common/numbers */ "./src/vs/base/common/numbers.ts");
/* harmony import */ var vs_base_common_collections__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! vs/base/common/collections */ "./src/vs/base/common/collections.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
// import 'vs/css!./media/tree';

















function asTreeDragAndDropData(data) {
    if (data instanceof vs_base_browser_ui_list_listView__WEBPACK_IMPORTED_MODULE_8__["ElementsDragAndDropData"]) {
        var nodes = data.elements;
        return new vs_base_browser_ui_list_listView__WEBPACK_IMPORTED_MODULE_8__["ElementsDragAndDropData"](nodes.map(function (node) { return node.element; }));
    }
    return data;
}
var TreeNodeListDragAndDrop = /** @class */ (function () {
    function TreeNodeListDragAndDrop(modelProvider, dnd) {
        this.modelProvider = modelProvider;
        this.dnd = dnd;
        this.autoExpandDisposable = vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["Disposable"].None;
    }
    TreeNodeListDragAndDrop.prototype.getDragURI = function (node) {
        return this.dnd.getDragURI(node.element);
    };
    TreeNodeListDragAndDrop.prototype.getDragLabel = function (nodes) {
        if (this.dnd.getDragLabel) {
            return this.dnd.getDragLabel(nodes.map(function (node) { return node.element; }));
        }
        return undefined;
    };
    TreeNodeListDragAndDrop.prototype.onDragStart = function (data, originalEvent) {
        if (this.dnd.onDragStart) {
            this.dnd.onDragStart(asTreeDragAndDropData(data), originalEvent);
        }
    };
    TreeNodeListDragAndDrop.prototype.onDragOver = function (data, targetNode, targetIndex, originalEvent, raw) {
        var _this = this;
        if (raw === void 0) { raw = true; }
        var result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);
        var didChangeAutoExpandNode = this.autoExpandNode !== targetNode;
        if (didChangeAutoExpandNode) {
            this.autoExpandDisposable.dispose();
            this.autoExpandNode = targetNode;
        }
        if (typeof targetNode === 'undefined') {
            return result;
        }
        if (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {
            this.autoExpandDisposable = Object(vs_base_common_async__WEBPACK_IMPORTED_MODULE_12__["disposableTimeout"])(function () {
                var model = _this.modelProvider();
                var ref = model.getNodeLocation(targetNode);
                if (model.isCollapsed(ref)) {
                    model.setCollapsed(ref, false);
                }
                _this.autoExpandNode = undefined;
            }, 500);
        }
        if (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined') {
            if (!raw) {
                var accept = typeof result === 'boolean' ? result : result.accept;
                var effect = typeof result === 'boolean' ? undefined : result.effect;
                return { accept: accept, effect: effect, feedback: [targetIndex] };
            }
            return result;
        }
        if (result.bubble === 1 /* Up */) {
            var parentNode = targetNode.parent;
            var model_1 = this.modelProvider();
            var parentIndex = parentNode && model_1.getListIndex(model_1.getNodeLocation(parentNode));
            return this.onDragOver(data, parentNode, parentIndex, originalEvent, false);
        }
        var model = this.modelProvider();
        var ref = model.getNodeLocation(targetNode);
        var start = model.getListIndex(ref);
        var length = model.getListRenderCount(ref);
        return __assign({}, result, { feedback: Object(vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_7__["range"])(start, start + length) });
    };
    TreeNodeListDragAndDrop.prototype.drop = function (data, targetNode, targetIndex, originalEvent) {
        this.autoExpandDisposable.dispose();
        this.autoExpandNode = undefined;
        this.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);
    };
    TreeNodeListDragAndDrop.ctorParameters = function () { return [
        { type: Function },
        { type: undefined }
    ]; };
    return TreeNodeListDragAndDrop;
}());
function asListOptions(modelProvider, options) {
    return options && __assign({}, options, { identityProvider: options.identityProvider && {
            getId: function (el) {
                return options.identityProvider.getId(el.element);
            }
        }, dnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd), multipleSelectionController: options.multipleSelectionController && {
            isSelectionSingleChangeEvent: function (e) {
                return options.multipleSelectionController.isSelectionSingleChangeEvent(__assign({}, e, { element: e.element }));
            },
            isSelectionRangeChangeEvent: function (e) {
                return options.multipleSelectionController.isSelectionRangeChangeEvent(__assign({}, e, { element: e.element }));
            }
        }, keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && __assign({}, options.keyboardNavigationLabelProvider, { getKeyboardNavigationLabel: function (node) {
                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element);
            } }), enableKeyboardNavigation: options.simpleKeyboardNavigation, ariaSetProvider: {
            getSetSize: function (node) {
                return node.parent.visibleChildrenCount;
            },
            getPosInSet: function (node) {
                return node.visibleChildIndex + 1;
            }
        } });
}
var ComposedTreeDelegate = /** @class */ (function () {
    function ComposedTreeDelegate(delegate) {
        this.delegate = delegate;
    }
    ComposedTreeDelegate.prototype.getHeight = function (element) {
        return this.delegate.getHeight(element.element);
    };
    ComposedTreeDelegate.prototype.getTemplateId = function (element) {
        return this.delegate.getTemplateId(element.element);
    };
    ComposedTreeDelegate.prototype.hasDynamicHeight = function (element) {
        return !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);
    };
    ComposedTreeDelegate.prototype.setDynamicHeight = function (element, height) {
        if (this.delegate.setDynamicHeight) {
            this.delegate.setDynamicHeight(element.element, height);
        }
    };
    ComposedTreeDelegate.ctorParameters = function () { return [
        { type: undefined }
    ]; };
    return ComposedTreeDelegate;
}());

var RenderIndentGuides;
(function (RenderIndentGuides) {
    RenderIndentGuides["None"] = "none";
    RenderIndentGuides["OnHover"] = "onHover";
    RenderIndentGuides["Always"] = "always";
})(RenderIndentGuides || (RenderIndentGuides = {}));
var EventCollection = /** @class */ (function () {
    function EventCollection(onDidChange, _elements) {
        var _this = this;
        if (_elements === void 0) { _elements = []; }
        this.onDidChange = onDidChange;
        this._elements = _elements;
        this.disposables = new vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["DisposableStore"]();
        onDidChange(function (e) { return _this._elements = e; }, null, this.disposables);
    }
    Object.defineProperty(EventCollection.prototype, "elements", {
        get: function () {
            return this._elements;
        },
        enumerable: true,
        configurable: true
    });
    EventCollection.prototype.dispose = function () {
        this.disposables.dispose();
    };
    EventCollection.ctorParameters = function () { return [
        { type: undefined },
        { type: Array }
    ]; };
    return EventCollection;
}());
var TreeRenderer = /** @class */ (function () {
    function TreeRenderer(renderer, onDidChangeCollapseState, activeNodes, options) {
        if (options === void 0) { options = {}; }
        this.renderer = renderer;
        this.activeNodes = activeNodes;
        this.renderedElements = new Map();
        this.renderedNodes = new Map();
        this.indent = TreeRenderer.DefaultIndent;
        this._renderIndentGuides = RenderIndentGuides.None;
        this.renderedIndentGuides = new vs_base_common_collections__WEBPACK_IMPORTED_MODULE_16__["SetMap"]();
        this.activeParentNodes = new Set();
        this.indentGuidesDisposable = vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["Disposable"].None;
        this.disposables = [];
        this.templateId = renderer.templateId;
        this.updateOptions(options);
        vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Event"].map(onDidChangeCollapseState, function (e) { return e.node; })(this.onDidChangeNodeTwistieState, this, this.disposables);
        if (renderer.onDidChangeTwistieState) {
            renderer.onDidChangeTwistieState(this.onDidChangeTwistieState, this, this.disposables);
        }
    }
    TreeRenderer.prototype.updateOptions = function (options) {
        if (options === void 0) { options = {}; }
        if (typeof options.indent !== 'undefined') {
            this.indent = Object(vs_base_common_numbers__WEBPACK_IMPORTED_MODULE_15__["clamp"])(options.indent, 0, 40);
        }
        if (typeof options.renderIndentGuides !== 'undefined') {
            var renderIndentGuides = options.renderIndentGuides;
            if (renderIndentGuides !== this._renderIndentGuides) {
                this._renderIndentGuides = renderIndentGuides;
                if (renderIndentGuides) {
                    var disposables = new vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["DisposableStore"]();
                    this.activeNodes.onDidChange(this._onDidChangeActiveNodes, this, disposables);
                    this.indentGuidesDisposable = disposables;
                    this._onDidChangeActiveNodes(this.activeNodes.elements);
                }
                else {
                    this.indentGuidesDisposable.dispose();
                }
            }
        }
    };
    TreeRenderer.prototype.renderTemplate = function (container) {
        var el = Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["append"])(container, Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["$"])('.monaco-tl-row'));
        var indent = Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["append"])(el, Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["$"])('.monaco-tl-indent'));
        var twistie = Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["append"])(el, Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["$"])('.monaco-tl-twistie'));
        var contents = Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["append"])(el, Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["$"])('.monaco-tl-contents'));
        var templateData = this.renderer.renderTemplate(contents);
        return { container: container, indent: indent, twistie: twistie, indentGuidesDisposable: vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["Disposable"].None, templateData: templateData };
    };
    TreeRenderer.prototype.renderElement = function (node, index, templateData, height) {
        if (typeof height === 'number') {
            this.renderedNodes.set(node, { templateData: templateData, height: height });
            this.renderedElements.set(node.element, node);
        }
        var indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;
        templateData.twistie.style.marginLeft = indent + "px";
        templateData.indent.style.width = indent + this.indent - 16 + "px";
        this.renderTwistie(node, templateData);
        if (typeof height === 'number') {
            this.renderIndentGuides(node, templateData);
        }
        this.renderer.renderElement(node, index, templateData.templateData, height);
    };
    TreeRenderer.prototype.disposeElement = function (node, index, templateData, height) {
        templateData.indentGuidesDisposable.dispose();
        if (this.renderer.disposeElement) {
            this.renderer.disposeElement(node, index, templateData.templateData, height);
        }
        if (typeof height === 'number') {
            this.renderedNodes.delete(node);
            this.renderedElements.delete(node.element);
        }
    };
    TreeRenderer.prototype.disposeTemplate = function (templateData) {
        this.renderer.disposeTemplate(templateData.templateData);
    };
    TreeRenderer.prototype.onDidChangeTwistieState = function (element) {
        var node = this.renderedElements.get(element);
        if (!node) {
            return;
        }
        this.onDidChangeNodeTwistieState(node);
    };
    TreeRenderer.prototype.onDidChangeNodeTwistieState = function (node) {
        var data = this.renderedNodes.get(node);
        if (!data) {
            return;
        }
        this.renderTwistie(node, data.templateData);
        this.renderIndentGuides(node, data.templateData);
    };
    TreeRenderer.prototype.renderTwistie = function (node, templateData) {
        if (this.renderer.renderTwistie) {
            this.renderer.renderTwistie(node.element, templateData.twistie);
        }
        Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["toggleClass"])(templateData.twistie, 'collapsible', node.collapsible);
        Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["toggleClass"])(templateData.twistie, 'collapsed', node.collapsible && node.collapsed);
        if (node.collapsible) {
            templateData.container.setAttribute('aria-expanded', String(!node.collapsed));
        }
        else {
            templateData.container.removeAttribute('aria-expanded');
        }
    };
    TreeRenderer.prototype.renderIndentGuides = function (target, templateData) {
        var _this = this;
        Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["clearNode"])(templateData.indent);
        templateData.indentGuidesDisposable.dispose();
        if (this._renderIndentGuides === RenderIndentGuides.None) {
            return;
        }
        var disposableStore = new vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["DisposableStore"]();
        var node = target;
        var _loop_1 = function () {
            var parent_1 = node.parent;
            var guide = Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["$"])('.indent-guide', { style: "width: " + this_1.indent + "px" });
            if (this_1.activeParentNodes.has(parent_1)) {
                Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["addClass"])(guide, 'active');
            }
            if (templateData.indent.childElementCount === 0) {
                templateData.indent.appendChild(guide);
            }
            else {
                templateData.indent.insertBefore(guide, templateData.indent.firstElementChild);
            }
            this_1.renderedIndentGuides.add(parent_1, guide);
            disposableStore.add(Object(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["toDisposable"])(function () { return _this.renderedIndentGuides.delete(parent_1, guide); }));
            node = parent_1;
        };
        var this_1 = this;
        while (node.parent && node.parent.parent) {
            _loop_1();
        }
        templateData.indentGuidesDisposable = disposableStore;
    };
    TreeRenderer.prototype._onDidChangeActiveNodes = function (nodes) {
        var _this = this;
        if (this._renderIndentGuides === RenderIndentGuides.None) {
            return;
        }
        var set = new Set();
        nodes.forEach(function (node) {
            if (node.parent) {
                set.add(node.parent);
            }
        });
        this.activeParentNodes.forEach(function (node) {
            if (!set.has(node)) {
                _this.renderedIndentGuides.forEach(node, function (line) { return Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["removeClass"])(line, 'active'); });
            }
        });
        set.forEach(function (node) {
            if (!_this.activeParentNodes.has(node)) {
                _this.renderedIndentGuides.forEach(node, function (line) { return Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["addClass"])(line, 'active'); });
            }
        });
        this.activeParentNodes = set;
    };
    TreeRenderer.prototype.dispose = function () {
        this.renderedNodes.clear();
        this.renderedElements.clear();
        this.indentGuidesDisposable.dispose();
        this.disposables = Object(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["dispose"])(this.disposables);
    };
    TreeRenderer.DefaultIndent = 8;
    TreeRenderer.ctorParameters = function () { return [
        { type: undefined },
        { type: undefined },
        { type: undefined },
        { type: undefined }
    ]; };
    return TreeRenderer;
}());
var TypeFilter = /** @class */ (function () {
    function TypeFilter(tree, keyboardNavigationLabelProvider, _filter) {
        this.tree = tree;
        this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;
        this._filter = _filter;
        this._totalCount = 0;
        this._matchCount = 0;
        this.disposables = [];
        tree.onWillRefilter(this.reset, this, this.disposables);
    }
    Object.defineProperty(TypeFilter.prototype, "totalCount", {
        get: function () { return this._totalCount; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TypeFilter.prototype, "matchCount", {
        get: function () { return this._matchCount; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TypeFilter.prototype, "pattern", {
        set: function (pattern) {
            this._pattern = pattern;
            this._lowercasePattern = pattern.toLowerCase();
        },
        enumerable: true,
        configurable: true
    });
    TypeFilter.prototype.filter = function (element, parentVisibility) {
        if (this._filter) {
            var result = this._filter.filter(element, parentVisibility);
            if (this.tree.options.simpleKeyboardNavigation) {
                return result;
            }
            var visibility = void 0;
            if (typeof result === 'boolean') {
                visibility = result ? 1 /* Visible */ : 0 /* Hidden */;
            }
            else if (Object(vs_base_browser_ui_tree_indexTreeModel__WEBPACK_IMPORTED_MODULE_11__["isFilterResult"])(result)) {
                visibility = Object(vs_base_browser_ui_tree_indexTreeModel__WEBPACK_IMPORTED_MODULE_11__["getVisibleState"])(result.visibility);
            }
            else {
                visibility = result;
            }
            if (visibility === 0 /* Hidden */) {
                return false;
            }
        }
        this._totalCount++;
        if (this.tree.options.simpleKeyboardNavigation || !this._pattern) {
            this._matchCount++;
            return { data: vs_base_common_filters__WEBPACK_IMPORTED_MODULE_10__["FuzzyScore"].Default, visibility: true };
        }
        var label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);
        var labelStr = label && label.toString();
        if (typeof labelStr === 'undefined') {
            return { data: vs_base_common_filters__WEBPACK_IMPORTED_MODULE_10__["FuzzyScore"].Default, visibility: true };
        }
        var score = Object(vs_base_common_filters__WEBPACK_IMPORTED_MODULE_10__["fuzzyScore"])(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, true);
        if (!score) {
            if (this.tree.options.filterOnType) {
                return 2 /* Recurse */;
            }
            else {
                return { data: vs_base_common_filters__WEBPACK_IMPORTED_MODULE_10__["FuzzyScore"].Default, visibility: true };
            }
            // DEMO: smarter filter ?
            // return parentVisibility === TreeVisibility.Visible ? true : TreeVisibility.Recurse;
        }
        this._matchCount++;
        return { data: score, visibility: true };
    };
    TypeFilter.prototype.reset = function () {
        this._totalCount = 0;
        this._matchCount = 0;
    };
    TypeFilter.prototype.dispose = function () {
        this.disposables = Object(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["dispose"])(this.disposables);
    };
    TypeFilter.ctorParameters = function () { return [
        { type: AbstractTree },
        { type: undefined },
        { type: undefined }
    ]; };
    return TypeFilter;
}());
var TypeFilterController = /** @class */ (function () {
    function TypeFilterController(tree, model, view, filter, keyboardNavigationLabelProvider) {
        this.tree = tree;
        this.view = view;
        this.filter = filter;
        this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;
        this._enabled = false;
        this._pattern = '';
        this._onDidChangeEmptyState = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Emitter"]();
        this.onDidChangeEmptyState = vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Event"].latch(this._onDidChangeEmptyState.event);
        this.positionClassName = 'ne';
        this.automaticKeyboardNavigation = true;
        this.triggered = false;
        this._onDidChangePattern = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Emitter"]();
        this.onDidChangePattern = this._onDidChangePattern.event;
        this.enabledDisposables = [];
        this.disposables = [];
        this.domNode = Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["$"])(".monaco-list-type-filter." + this.positionClassName);
        this.domNode.draggable = true;
        Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_9__["domEvent"])(this.domNode, 'dragstart')(this.onDragStart, this, this.disposables);
        this.messageDomNode = Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["append"])(view.getHTMLElement(), Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["$"])(".monaco-list-type-filter-message"));
        this.labelDomNode = Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["append"])(this.domNode, Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["$"])('span.label'));
        var controls = Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["append"])(this.domNode, Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["$"])('.controls'));
        this._filterOnType = !!tree.options.filterOnType;
        this.filterOnTypeDomNode = Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["append"])(controls, Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["$"])('input.filter'));
        this.filterOnTypeDomNode.type = 'checkbox';
        this.filterOnTypeDomNode.checked = this._filterOnType;
        this.filterOnTypeDomNode.tabIndex = -1;
        this.updateFilterOnTypeTitle();
        Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_9__["domEvent"])(this.filterOnTypeDomNode, 'input')(this.onDidChangeFilterOnType, this, this.disposables);
        this.clearDomNode = Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["append"])(controls, Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["$"])('button.clear'));
        this.clearDomNode.tabIndex = -1;
        this.keyboardNavigationEventFilter = tree.options.keyboardNavigationEventFilter;
        model.onDidSplice(this.onDidSpliceModel, this, this.disposables);
        this.updateOptions(tree.options);
    }
    Object.defineProperty(TypeFilterController.prototype, "enabled", {
        get: function () { return this._enabled; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TypeFilterController.prototype, "pattern", {
        get: function () { return this._pattern; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TypeFilterController.prototype, "filterOnType", {
        get: function () { return this._filterOnType; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TypeFilterController.prototype, "empty", {
        get: function () { return this._empty; },
        enumerable: true,
        configurable: true
    });
    TypeFilterController.prototype.updateOptions = function (options) {
        if (options.simpleKeyboardNavigation) {
            this.disable();
        }
        else {
            this.enable();
        }
        if (typeof options.filterOnType !== 'undefined') {
            this._filterOnType = !!options.filterOnType;
            this.filterOnTypeDomNode.checked = this._filterOnType;
        }
        if (typeof options.automaticKeyboardNavigation !== 'undefined') {
            this.automaticKeyboardNavigation = options.automaticKeyboardNavigation;
        }
        this.tree.refilter();
        this.render();
        if (!this.automaticKeyboardNavigation) {
            this.onEventOrInput('');
        }
    };
    TypeFilterController.prototype.toggle = function () {
        this.triggered = !this.triggered;
        if (!this.triggered) {
            this.onEventOrInput('');
        }
    };
    TypeFilterController.prototype.enable = function () {
        var _this = this;
        if (this._enabled) {
            return;
        }
        var isPrintableCharEvent = this.keyboardNavigationLabelProvider.mightProducePrintableCharacter ? function (e) { return _this.keyboardNavigationLabelProvider.mightProducePrintableCharacter(e); } : function (e) { return Object(vs_base_browser_ui_list_listWidget__WEBPACK_IMPORTED_MODULE_1__["mightProducePrintableCharacter"])(e); };
        var onKeyDown = vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Event"].chain(Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_9__["domEvent"])(this.view.getHTMLElement(), 'keydown'))
            .filter(function (e) { return !isInputElement(e.target) || e.target === _this.filterOnTypeDomNode; })
            .map(function (e) { return new vs_base_browser_keyboardEvent__WEBPACK_IMPORTED_MODULE_4__["StandardKeyboardEvent"](e); })
            .filter(this.keyboardNavigationEventFilter || (function () { return true; }))
            .filter(function () { return _this.automaticKeyboardNavigation || _this.triggered; })
            .filter(function (e) { return isPrintableCharEvent(e) || ((_this.pattern.length > 0 || _this.triggered) && ((e.keyCode === 9 /* Escape */ || e.keyCode === 1 /* Backspace */) && !e.altKey && !e.ctrlKey && !e.metaKey) || (e.keyCode === 1 /* Backspace */ && (vs_base_common_platform__WEBPACK_IMPORTED_MODULE_13__["isMacintosh"] ? (e.altKey && !e.metaKey) : e.ctrlKey) && !e.shiftKey)); })
            .forEach(function (e) { e.stopPropagation(); e.preventDefault(); })
            .event;
        var onClear = Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_9__["domEvent"])(this.clearDomNode, 'click');
        vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Event"].chain(vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Event"].any(onKeyDown, onClear))
            .event(this.onEventOrInput, this, this.enabledDisposables);
        this.filter.pattern = '';
        this.tree.refilter();
        this.render();
        this._enabled = true;
        this.triggered = false;
    };
    TypeFilterController.prototype.disable = function () {
        if (!this._enabled) {
            return;
        }
        this.domNode.remove();
        this.enabledDisposables = Object(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["dispose"])(this.enabledDisposables);
        this.tree.refilter();
        this.render();
        this._enabled = false;
        this.triggered = false;
    };
    TypeFilterController.prototype.onEventOrInput = function (e) {
        if (typeof e === 'string') {
            this.onInput(e);
        }
        else if (e instanceof MouseEvent || e.keyCode === 9 /* Escape */ || (e.keyCode === 1 /* Backspace */ && (vs_base_common_platform__WEBPACK_IMPORTED_MODULE_13__["isMacintosh"] ? e.altKey : e.ctrlKey))) {
            this.onInput('');
        }
        else if (e.keyCode === 1 /* Backspace */) {
            this.onInput(this.pattern.length === 0 ? '' : this.pattern.substr(0, this.pattern.length - 1));
        }
        else {
            this.onInput(this.pattern + e.browserEvent.key);
        }
    };
    TypeFilterController.prototype.onInput = function (pattern) {
        var container = this.view.getHTMLElement();
        if (pattern && !this.domNode.parentElement) {
            container.append(this.domNode);
        }
        else if (!pattern && this.domNode.parentElement) {
            this.domNode.remove();
            this.tree.domFocus();
        }
        this._pattern = pattern;
        this._onDidChangePattern.fire(pattern);
        this.filter.pattern = pattern;
        this.tree.refilter();
        if (pattern) {
            this.tree.focusNext(0, true, undefined, function (node) { return !vs_base_common_filters__WEBPACK_IMPORTED_MODULE_10__["FuzzyScore"].isDefault(node.filterData); });
        }
        var focus = this.tree.getFocus();
        if (focus.length > 0) {
            var element = focus[0];
            if (this.tree.getRelativeTop(element) === null) {
                this.tree.reveal(element, 0.5);
            }
        }
        this.render();
        if (!pattern) {
            this.triggered = false;
        }
    };
    TypeFilterController.prototype.onDragStart = function () {
        var _this = this;
        var container = this.view.getHTMLElement();
        var left = Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["getDomNodePagePosition"])(container).left;
        var containerWidth = container.clientWidth;
        var midContainerWidth = containerWidth / 2;
        var width = this.domNode.clientWidth;
        var disposables = [];
        var positionClassName = this.positionClassName;
        var updatePosition = function () {
            switch (positionClassName) {
                case 'nw':
                    _this.domNode.style.top = "4px";
                    _this.domNode.style.left = "4px";
                    break;
                case 'ne':
                    _this.domNode.style.top = "4px";
                    _this.domNode.style.left = containerWidth - width - 6 + "px";
                    break;
            }
        };
        var onDragOver = function (event) {
            event.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)
            var x = event.screenX - left;
            if (event.dataTransfer) {
                event.dataTransfer.dropEffect = 'none';
            }
            if (x < midContainerWidth) {
                positionClassName = 'nw';
            }
            else {
                positionClassName = 'ne';
            }
            updatePosition();
        };
        var onDragEnd = function () {
            _this.positionClassName = positionClassName;
            _this.domNode.className = "monaco-list-type-filter " + _this.positionClassName;
            _this.domNode.style.top = null;
            _this.domNode.style.left = null;
            Object(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["dispose"])(disposables);
        };
        updatePosition();
        Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["removeClass"])(this.domNode, positionClassName);
        Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["addClass"])(this.domNode, 'dragging');
        disposables.push(Object(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["toDisposable"])(function () { return Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["removeClass"])(_this.domNode, 'dragging'); }));
        Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_9__["domEvent"])(document, 'dragover')(onDragOver, null, disposables);
        Object(vs_base_browser_event__WEBPACK_IMPORTED_MODULE_9__["domEvent"])(this.domNode, 'dragend')(onDragEnd, null, disposables);
        vs_base_browser_dnd__WEBPACK_IMPORTED_MODULE_6__["StaticDND"].CurrentDragAndDropData = new vs_base_browser_dnd__WEBPACK_IMPORTED_MODULE_6__["DragAndDropData"]('vscode-ui');
        disposables.push(Object(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["toDisposable"])(function () { return vs_base_browser_dnd__WEBPACK_IMPORTED_MODULE_6__["StaticDND"].CurrentDragAndDropData = undefined; }));
    };
    TypeFilterController.prototype.onDidSpliceModel = function () {
        if (!this._enabled || this.pattern.length === 0) {
            return;
        }
        this.tree.refilter();
        this.render();
    };
    TypeFilterController.prototype.onDidChangeFilterOnType = function () {
        this.tree.updateOptions({ filterOnType: this.filterOnTypeDomNode.checked });
        this.tree.refilter();
        this.tree.domFocus();
        this.render();
        this.updateFilterOnTypeTitle();
    };
    TypeFilterController.prototype.updateFilterOnTypeTitle = function () {
        if (this.filterOnType) {
        }
        else {
        }
    };
    TypeFilterController.prototype.render = function () {
        var noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;
        if (this.pattern && this.tree.options.filterOnType && noMatches) {
            this._empty = true;
        }
        else {
            this.messageDomNode.innerHTML = '';
            this._empty = false;
        }
        Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["toggleClass"])(this.domNode, 'no-matches', noMatches);
        this.labelDomNode.textContent = this.pattern.length > 16 ? '…' + this.pattern.substr(this.pattern.length - 16) : this.pattern;
        this._onDidChangeEmptyState.fire(this._empty);
    };
    TypeFilterController.prototype.shouldAllowFocus = function (node) {
        if (!this.enabled || !this.pattern || this.filterOnType) {
            return true;
        }
        if (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {
            return true;
        }
        return !vs_base_common_filters__WEBPACK_IMPORTED_MODULE_10__["FuzzyScore"].isDefault(node.filterData);
    };
    TypeFilterController.prototype.dispose = function () {
        this.disable();
        this._onDidChangePattern.dispose();
        this.disposables = Object(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["dispose"])(this.disposables);
    };
    TypeFilterController.ctorParameters = function () { return [
        { type: AbstractTree },
        { type: undefined },
        { type: vs_base_browser_ui_list_listWidget__WEBPACK_IMPORTED_MODULE_1__["List"] },
        { type: TypeFilter },
        { type: undefined }
    ]; };
    return TypeFilterController;
}());
function isInputElement(e) {
    return e.tagName === 'INPUT' || e.tagName === 'TEXTAREA';
}
function asTreeEvent(event) {
    return {
        elements: event.elements.map(function (node) { return node.element; }),
        browserEvent: event.browserEvent
    };
}
function asTreeMouseEvent(event) {
    var target = vs_base_browser_ui_tree_tree__WEBPACK_IMPORTED_MODULE_5__["TreeMouseEventTarget"].Unknown;
    if (Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["hasParentWithClass"])(event.browserEvent.target, 'monaco-tl-twistie', 'monaco-tl-row')) {
        target = vs_base_browser_ui_tree_tree__WEBPACK_IMPORTED_MODULE_5__["TreeMouseEventTarget"].Twistie;
    }
    else if (Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["hasParentWithClass"])(event.browserEvent.target, 'monaco-tl-contents', 'monaco-tl-row')) {
        target = vs_base_browser_ui_tree_tree__WEBPACK_IMPORTED_MODULE_5__["TreeMouseEventTarget"].Element;
    }
    return {
        browserEvent: event.browserEvent,
        element: event.element ? event.element.element : null,
        target: target
    };
}
function asTreeContextMenuEvent(event) {
    return {
        element: event.element ? event.element.element : null,
        browserEvent: event.browserEvent,
        anchor: event.anchor
    };
}
function dfs(node, fn) {
    fn(node);
    node.children.forEach(function (child) { return dfs(child, fn); });
}
/**
 * The trait concept needs to exist at the tree level, because collapsed
 * tree nodes will not be known by the list.
 */
var Trait = /** @class */ (function () {
    function Trait(identityProvider) {
        this.identityProvider = identityProvider;
        this.nodes = [];
        this._onDidChange = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Emitter"]();
        this.onDidChange = this._onDidChange.event;
    }
    Object.defineProperty(Trait.prototype, "nodeSet", {
        get: function () {
            if (!this._nodeSet) {
                this._nodeSet = this.createNodeSet();
            }
            return this._nodeSet;
        },
        enumerable: true,
        configurable: true
    });
    Trait.prototype.set = function (nodes, browserEvent) {
        if (Object(vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_7__["equals"])(this.nodes, nodes)) {
            return;
        }
        this._set(nodes, false, browserEvent);
    };
    Trait.prototype._set = function (nodes, silent, browserEvent) {
        this.nodes = nodes.slice();
        this.elements = undefined;
        this._nodeSet = undefined;
        if (!silent) {
            var that_1 = this;
            this._onDidChange.fire({ get elements() { return that_1.get(); }, browserEvent: browserEvent });
        }
    };
    Trait.prototype.get = function () {
        if (!this.elements) {
            this.elements = this.nodes.map(function (node) { return node.element; });
        }
        return this.elements.slice();
    };
    Trait.prototype.getNodes = function () {
        return this.nodes;
    };
    Trait.prototype.has = function (node) {
        return this.nodeSet.has(node);
    };
    Trait.prototype.onDidModelSplice = function (_a) {
        var _this = this;
        var insertedNodes = _a.insertedNodes, deletedNodes = _a.deletedNodes;
        if (!this.identityProvider) {
            var set_1 = this.createNodeSet();
            var visit_1 = function (node) { return set_1.delete(node); };
            deletedNodes.forEach(function (node) { return dfs(node, visit_1); });
            this.set(Object(vs_base_common_map__WEBPACK_IMPORTED_MODULE_14__["values"])(set_1));
            return;
        }
        var deletedNodesIdSet = new Set();
        var deletedNodesVisitor = function (node) { return deletedNodesIdSet.add(_this.identityProvider.getId(node.element).toString()); };
        deletedNodes.forEach(function (node) { return dfs(node, deletedNodesVisitor); });
        var insertedNodesMap = new Map();
        var insertedNodesVisitor = function (node) { return insertedNodesMap.set(_this.identityProvider.getId(node.element).toString(), node); };
        insertedNodes.forEach(function (node) { return dfs(node, insertedNodesVisitor); });
        var nodes = [];
        var silent = true;
        for (var _i = 0, _b = this.nodes; _i < _b.length; _i++) {
            var node = _b[_i];
            var id = this.identityProvider.getId(node.element).toString();
            var wasDeleted = deletedNodesIdSet.has(id);
            if (!wasDeleted) {
                nodes.push(node);
            }
            else {
                var insertedNode = insertedNodesMap.get(id);
                if (insertedNode) {
                    nodes.push(insertedNode);
                }
                else {
                    silent = false;
                }
            }
        }
        this._set(nodes, silent);
    };
    Trait.prototype.createNodeSet = function () {
        var set = new Set();
        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {
            var node = _a[_i];
            set.add(node);
        }
        return set;
    };
    Trait.ctorParameters = function () { return [
        { type: undefined }
    ]; };
    return Trait;
}());
var TreeNodeListMouseController = /** @class */ (function (_super) {
    __extends(TreeNodeListMouseController, _super);
    function TreeNodeListMouseController(list, tree) {
        var _this = _super.call(this, list) || this;
        _this.tree = tree;
        return _this;
    }
    TreeNodeListMouseController.prototype.onPointer = function (e) {
        if (isInputElement(e.browserEvent.target)) {
            return;
        }
        var node = e.element;
        if (!node) {
            return _super.prototype.onPointer.call(this, e);
        }
        if (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {
            return _super.prototype.onPointer.call(this, e);
        }
        var onTwistie = Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["hasClass"])(e.browserEvent.target, 'monaco-tl-twistie');
        if (!this.tree.openOnSingleClick && e.browserEvent.detail !== 2 && !onTwistie) {
            return _super.prototype.onPointer.call(this, e);
        }
        var expandOnlyOnTwistieClick = false;
        if (typeof this.tree.expandOnlyOnTwistieClick === 'function') {
            expandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);
        }
        else {
            expandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;
        }
        if (expandOnlyOnTwistieClick && !onTwistie) {
            return _super.prototype.onPointer.call(this, e);
        }
        var model = this.tree.model; // internal
        var location = model.getNodeLocation(node);
        var recursive = e.browserEvent.altKey;
        model.setCollapsed(location, undefined, recursive);
        if (expandOnlyOnTwistieClick && onTwistie) {
            return;
        }
        _super.prototype.onPointer.call(this, e);
    };
    TreeNodeListMouseController.ctorParameters = function () { return [
        { type: TreeNodeList },
        { type: AbstractTree }
    ]; };
    return TreeNodeListMouseController;
}(vs_base_browser_ui_list_listWidget__WEBPACK_IMPORTED_MODULE_1__["MouseController"]));
/**
 * We use this List subclass to restore selection and focus as nodes
 * get rendered in the list, possibly due to a node expand() call.
 */
var TreeNodeList = /** @class */ (function (_super) {
    __extends(TreeNodeList, _super);
    function TreeNodeList(container, virtualDelegate, renderers, focusTrait, selectionTrait, options) {
        var _this = _super.call(this, container, virtualDelegate, renderers, options) || this;
        _this.focusTrait = focusTrait;
        _this.selectionTrait = selectionTrait;
        return _this;
    }
    TreeNodeList.prototype.createMouseController = function (options) {
        return new TreeNodeListMouseController(this, options.tree);
    };
    TreeNodeList.prototype.splice = function (start, deleteCount, elements) {
        var _this = this;
        if (elements === void 0) { elements = []; }
        _super.prototype.splice.call(this, start, deleteCount, elements);
        if (elements.length === 0) {
            return;
        }
        var additionalFocus = [];
        var additionalSelection = [];
        elements.forEach(function (node, index) {
            if (_this.focusTrait.has(node)) {
                additionalFocus.push(start + index);
            }
            if (_this.selectionTrait.has(node)) {
                additionalSelection.push(start + index);
            }
        });
        if (additionalFocus.length > 0) {
            _super.prototype.setFocus.call(this, Object(vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_7__["distinctES6"])(_super.prototype.getFocus.call(this).concat(additionalFocus)));
        }
        if (additionalSelection.length > 0) {
            _super.prototype.setSelection.call(this, Object(vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_7__["distinctES6"])(_super.prototype.getSelection.call(this).concat(additionalSelection)));
        }
    };
    TreeNodeList.prototype.setFocus = function (indexes, browserEvent, fromAPI) {
        var _this = this;
        if (fromAPI === void 0) { fromAPI = false; }
        _super.prototype.setFocus.call(this, indexes, browserEvent);
        if (!fromAPI) {
            this.focusTrait.set(indexes.map(function (i) { return _this.element(i); }), browserEvent);
        }
    };
    TreeNodeList.prototype.setSelection = function (indexes, browserEvent, fromAPI) {
        var _this = this;
        if (fromAPI === void 0) { fromAPI = false; }
        _super.prototype.setSelection.call(this, indexes, browserEvent);
        if (!fromAPI) {
            this.selectionTrait.set(indexes.map(function (i) { return _this.element(i); }), browserEvent);
        }
    };
    TreeNodeList.ctorParameters = function () { return [
        { type: HTMLElement },
        { type: undefined },
        { type: Array },
        { type: Trait },
        { type: Trait },
        { type: undefined }
    ]; };
    return TreeNodeList;
}(vs_base_browser_ui_list_listWidget__WEBPACK_IMPORTED_MODULE_1__["List"]));
var AbstractTree = /** @class */ (function () {
    function AbstractTree(container, delegate, renderers, _options) {
        var _this = this;
        var _a;
        if (_options === void 0) { _options = {}; }
        this._options = _options;
        this.eventBufferer = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["EventBufferer"]();
        this.disposables = [];
        this._onWillRefilter = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Emitter"]();
        this.onWillRefilter = this._onWillRefilter.event;
        this._onDidUpdateOptions = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Emitter"]();
        this.onDidUpdateOptions = this._onDidUpdateOptions.event;
        var treeDelegate = new ComposedTreeDelegate(delegate);
        var onDidChangeCollapseStateRelay = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Relay"]();
        var onDidChangeActiveNodes = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Relay"]();
        var activeNodes = new EventCollection(onDidChangeActiveNodes.event);
        this.disposables.push(activeNodes);
        this.renderers = renderers.map(function (r) { return new TreeRenderer(r, onDidChangeCollapseStateRelay.event, activeNodes, _options); });
        (_a = this.disposables).push.apply(_a, this.renderers);
        var filter;
        if (_options.keyboardNavigationLabelProvider) {
            filter = new TypeFilter(this, _options.keyboardNavigationLabelProvider, _options.filter);
            _options = __assign({}, _options, { filter: filter }); // TODO need typescript help here
            this.disposables.push(filter);
        }
        this.focus = new Trait(_options.identityProvider);
        this.selection = new Trait(_options.identityProvider);
        this.view = new TreeNodeList(container, treeDelegate, this.renderers, this.focus, this.selection, __assign({}, asListOptions(function () { return _this.model; }, _options), { tree: this }));
        this.model = this.createModel(this.view, _options);
        onDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;
        this.model.onDidSplice(function (e) {
            _this.focus.onDidModelSplice(e);
            _this.selection.onDidModelSplice(e);
        }, null, this.disposables);
        onDidChangeActiveNodes.input = vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Event"].map(vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Event"].any(this.focus.onDidChange, this.selection.onDidChange, this.model.onDidSplice), function () { return _this.focus.getNodes().concat(_this.selection.getNodes()); });
        if (_options.keyboardSupport !== false) {
            var onKeyDown = vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Event"].chain(this.view.onKeyDown)
                .filter(function (e) { return !isInputElement(e.target); })
                .map(function (e) { return new vs_base_browser_keyboardEvent__WEBPACK_IMPORTED_MODULE_4__["StandardKeyboardEvent"](e); });
            onKeyDown.filter(function (e) { return e.keyCode === 15 /* LeftArrow */; }).on(this.onLeftArrow, this, this.disposables);
            onKeyDown.filter(function (e) { return e.keyCode === 17 /* RightArrow */; }).on(this.onRightArrow, this, this.disposables);
            onKeyDown.filter(function (e) { return e.keyCode === 10 /* Space */; }).on(this.onSpace, this, this.disposables);
        }
        if (_options.keyboardNavigationLabelProvider) {
            this.typeFilterController = new TypeFilterController(this, this.model, this.view, filter, _options.keyboardNavigationLabelProvider);
            this.focusNavigationFilter = function (node) { return _this.typeFilterController.shouldAllowFocus(node); };
            this.disposables.push(this.typeFilterController);
        }
        this.styleElement = Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["createStyleSheet"])(this.view.getHTMLElement());
        Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["toggleClass"])(this.getHTMLElement(), 'always', this._options.renderIndentGuides === RenderIndentGuides.Always);
    }
    Object.defineProperty(AbstractTree.prototype, "onDidScroll", {
        get: function () { return this.view.onDidScroll; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "onDidChangeFocus", {
        get: function () { return this.eventBufferer.wrapEvent(this.focus.onDidChange); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "onDidChangeSelection", {
        get: function () { return this.eventBufferer.wrapEvent(this.selection.onDidChange); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "onDidOpen", {
        get: function () { return vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Event"].map(this.view.onDidOpen, asTreeEvent); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "onMouseClick", {
        get: function () { return vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Event"].map(this.view.onMouseClick, asTreeMouseEvent); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "onMouseDblClick", {
        get: function () { return vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Event"].map(this.view.onMouseDblClick, asTreeMouseEvent); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "onContextMenu", {
        get: function () { return vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Event"].map(this.view.onContextMenu, asTreeContextMenuEvent); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "onKeyDown", {
        get: function () { return this.view.onKeyDown; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "onKeyUp", {
        get: function () { return this.view.onKeyUp; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "onKeyPress", {
        get: function () { return this.view.onKeyPress; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "onDidFocus", {
        get: function () { return this.view.onDidFocus; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "onDidBlur", {
        get: function () { return this.view.onDidBlur; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "onDidChangeCollapseState", {
        get: function () { return this.model.onDidChangeCollapseState; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "onDidChangeRenderNodeCount", {
        get: function () { return this.model.onDidChangeRenderNodeCount; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "filterOnType", {
        get: function () { return !!this._options.filterOnType; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "onDidChangeTypeFilterPattern", {
        get: function () { return this.typeFilterController ? this.typeFilterController.onDidChangePattern : vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Event"].None; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "openOnSingleClick", {
        get: function () { return typeof this._options.openOnSingleClick === 'undefined' ? true : this._options.openOnSingleClick; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "expandOnlyOnTwistieClick", {
        get: function () { return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? false : this._options.expandOnlyOnTwistieClick; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "onDidDispose", {
        get: function () { return this.view.onDidDispose; },
        enumerable: true,
        configurable: true
    });
    AbstractTree.prototype.updateOptions = function (optionsUpdate) {
        if (optionsUpdate === void 0) { optionsUpdate = {}; }
        this._options = __assign({}, this._options, optionsUpdate);
        for (var _i = 0, _a = this.renderers; _i < _a.length; _i++) {
            var renderer = _a[_i];
            renderer.updateOptions(optionsUpdate);
        }
        this.view.updateOptions({
            enableKeyboardNavigation: this._options.simpleKeyboardNavigation,
            automaticKeyboardNavigation: this._options.automaticKeyboardNavigation
        });
        if (this.typeFilterController) {
            this.typeFilterController.updateOptions(this._options);
        }
        this._onDidUpdateOptions.fire(this._options);
        Object(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_2__["toggleClass"])(this.getHTMLElement(), 'always', this._options.renderIndentGuides === RenderIndentGuides.Always);
    };
    Object.defineProperty(AbstractTree.prototype, "options", {
        get: function () {
            return this._options;
        },
        enumerable: true,
        configurable: true
    });
    AbstractTree.prototype.updateWidth = function (element) {
        var index = this.model.getListIndex(element);
        if (index === -1) {
            return;
        }
        this.view.updateWidth(index);
    };
    // Widget
    AbstractTree.prototype.getHTMLElement = function () {
        return this.view.getHTMLElement();
    };
    Object.defineProperty(AbstractTree.prototype, "contentHeight", {
        get: function () {
            if (this.typeFilterController && this.typeFilterController.filterOnType && this.typeFilterController.empty) {
                return 100;
            }
            return this.view.contentHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "onDidChangeContentHeight", {
        get: function () {
            var _this = this;
            var result = this.view.onDidChangeContentHeight;
            if (this.typeFilterController) {
                result = vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Event"].any(result, vs_base_common_event__WEBPACK_IMPORTED_MODULE_3__["Event"].map(this.typeFilterController.onDidChangeEmptyState, function () { return _this.contentHeight; }));
            }
            return result;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "scrollTop", {
        get: function () {
            return this.view.scrollTop;
        },
        set: function (scrollTop) {
            this.view.scrollTop = scrollTop;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "scrollHeight", {
        get: function () {
            return this.view.scrollHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "renderHeight", {
        get: function () {
            return this.view.renderHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "firstVisibleElement", {
        get: function () {
            var index = this.view.firstVisibleIndex;
            var node = this.view.element(index);
            return node.element;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTree.prototype, "lastVisibleElement", {
        get: function () {
            var index = this.view.lastVisibleIndex;
            var node = this.view.element(index);
            return node.element;
        },
        enumerable: true,
        configurable: true
    });
    AbstractTree.prototype.domFocus = function () {
        this.view.domFocus();
    };
    AbstractTree.prototype.isDOMFocused = function () {
        return this.getHTMLElement() === document.activeElement;
    };
    AbstractTree.prototype.layout = function (height, width) {
        this.view.layout(height, width);
    };
    AbstractTree.prototype.style = function (styles) {
        var suffix = "." + this.view.domId;
        var content = [];
        if (styles.treeIndentGuidesStroke) {
            content.push(".monaco-list" + suffix + ":hover .monaco-tl-indent > .indent-guide, .monaco-list" + suffix + ".always .monaco-tl-indent > .indent-guide  { border-color: " + styles.treeIndentGuidesStroke.transparent(0.4) + "; }");
            content.push(".monaco-list" + suffix + " .monaco-tl-indent > .indent-guide.active { border-color: " + styles.treeIndentGuidesStroke + "; }");
        }
        var newStyles = content.join('\n');
        if (newStyles !== this.styleElement.innerHTML) {
            this.styleElement.innerHTML = newStyles;
        }
        this.view.style(styles);
    };
    // Tree navigation
    AbstractTree.prototype.getParentElement = function (location) {
        return this.model.getParentElement(location);
    };
    AbstractTree.prototype.getFirstElementChild = function (location) {
        return this.model.getFirstElementChild(location);
    };
    // Tree
    AbstractTree.prototype.getNode = function (location) {
        return this.model.getNode(location);
    };
    AbstractTree.prototype.collapse = function (location, recursive) {
        if (recursive === void 0) { recursive = false; }
        return this.model.setCollapsed(location, true, recursive);
    };
    AbstractTree.prototype.expand = function (location, recursive) {
        if (recursive === void 0) { recursive = false; }
        return this.model.setCollapsed(location, false, recursive);
    };
    AbstractTree.prototype.toggleCollapsed = function (location, recursive) {
        if (recursive === void 0) { recursive = false; }
        return this.model.setCollapsed(location, undefined, recursive);
    };
    AbstractTree.prototype.expandAll = function () {
        this.model.setCollapsed(this.model.rootRef, false, true);
    };
    AbstractTree.prototype.collapseAll = function () {
        this.model.setCollapsed(this.model.rootRef, true, true);
    };
    AbstractTree.prototype.isCollapsible = function (location) {
        return this.model.isCollapsible(location);
    };
    AbstractTree.prototype.isCollapsed = function (location) {
        return this.model.isCollapsed(location);
    };
    AbstractTree.prototype.toggleKeyboardNavigation = function () {
        this.view.toggleKeyboardNavigation();
        if (this.typeFilterController) {
            this.typeFilterController.toggle();
        }
    };
    AbstractTree.prototype.refilter = function () {
        this._onWillRefilter.fire(undefined);
        this.model.refilter();
    };
    AbstractTree.prototype.setSelection = function (elements, browserEvent) {
        var _this = this;
        var nodes = elements.map(function (e) { return _this.model.getNode(e); });
        this.selection.set(nodes, browserEvent);
        var indexes = elements.map(function (e) { return _this.model.getListIndex(e); }).filter(function (i) { return i > -1; });
        this.view.setSelection(indexes, browserEvent, true);
    };
    AbstractTree.prototype.getSelection = function () {
        return this.selection.get();
    };
    AbstractTree.prototype.setFocus = function (elements, browserEvent) {
        var _this = this;
        var nodes = elements.map(function (e) { return _this.model.getNode(e); });
        this.focus.set(nodes, browserEvent);
        var indexes = elements.map(function (e) { return _this.model.getListIndex(e); }).filter(function (i) { return i > -1; });
        this.view.setFocus(indexes, browserEvent, true);
    };
    AbstractTree.prototype.focusNext = function (n, loop, browserEvent, filter) {
        if (n === void 0) { n = 1; }
        if (loop === void 0) { loop = false; }
        if (filter === void 0) { filter = this.focusNavigationFilter; }
        this.view.focusNext(n, loop, browserEvent, filter);
    };
    AbstractTree.prototype.focusPrevious = function (n, loop, browserEvent, filter) {
        if (n === void 0) { n = 1; }
        if (loop === void 0) { loop = false; }
        if (filter === void 0) { filter = this.focusNavigationFilter; }
        this.view.focusPrevious(n, loop, browserEvent, filter);
    };
    AbstractTree.prototype.focusNextPage = function (browserEvent, filter) {
        if (filter === void 0) { filter = this.focusNavigationFilter; }
        this.view.focusNextPage(browserEvent, filter);
    };
    AbstractTree.prototype.focusPreviousPage = function (browserEvent, filter) {
        if (filter === void 0) { filter = this.focusNavigationFilter; }
        this.view.focusPreviousPage(browserEvent, filter);
    };
    AbstractTree.prototype.focusLast = function (browserEvent, filter) {
        if (filter === void 0) { filter = this.focusNavigationFilter; }
        this.view.focusLast(browserEvent, filter);
    };
    AbstractTree.prototype.focusFirst = function (browserEvent, filter) {
        if (filter === void 0) { filter = this.focusNavigationFilter; }
        this.view.focusFirst(browserEvent, filter);
    };
    AbstractTree.prototype.getFocus = function () {
        return this.focus.get();
    };
    AbstractTree.prototype.open = function (elements, browserEvent) {
        var _this = this;
        var indexes = elements.map(function (e) { return _this.model.getListIndex(e); });
        this.view.open(indexes, browserEvent);
    };
    AbstractTree.prototype.reveal = function (location, relativeTop) {
        this.model.expandTo(location);
        var index = this.model.getListIndex(location);
        if (index === -1) {
            return;
        }
        this.view.reveal(index, relativeTop);
    };
    /**
     * Returns the relative position of an element rendered in the list.
     * Returns `null` if the element isn't *entirely* in the visible viewport.
     */
    AbstractTree.prototype.getRelativeTop = function (location) {
        var index = this.model.getListIndex(location);
        if (index === -1) {
            return null;
        }
        return this.view.getRelativeTop(index);
    };
    // List
    AbstractTree.prototype.onLeftArrow = function (e) {
        e.preventDefault();
        e.stopPropagation();
        var nodes = this.view.getFocusedElements();
        if (nodes.length === 0) {
            return;
        }
        var node = nodes[0];
        var location = this.model.getNodeLocation(node);
        var didChange = this.model.setCollapsed(location, true);
        if (!didChange) {
            var parentLocation = this.model.getParentNodeLocation(location);
            if (parentLocation === null) {
                return;
            }
            var parentListIndex = this.model.getListIndex(parentLocation);
            this.view.reveal(parentListIndex);
            this.view.setFocus([parentListIndex]);
        }
    };
    AbstractTree.prototype.onRightArrow = function (e) {
        e.preventDefault();
        e.stopPropagation();
        var nodes = this.view.getFocusedElements();
        if (nodes.length === 0) {
            return;
        }
        var node = nodes[0];
        var location = this.model.getNodeLocation(node);
        var didChange = this.model.setCollapsed(location, false);
        if (!didChange) {
            if (!node.children.some(function (child) { return child.visible; })) {
                return;
            }
            var focusedIndex = this.view.getFocus()[0];
            var firstChildIndex = focusedIndex + 1;
            this.view.reveal(firstChildIndex);
            this.view.setFocus([firstChildIndex]);
        }
    };
    AbstractTree.prototype.onSpace = function (e) {
        e.preventDefault();
        e.stopPropagation();
        var nodes = this.view.getFocusedElements();
        if (nodes.length === 0) {
            return;
        }
        var node = nodes[0];
        var location = this.model.getNodeLocation(node);
        var recursive = e.browserEvent.altKey;
        this.model.setCollapsed(location, undefined, recursive);
    };
    AbstractTree.prototype.navigate = function (start) {
        return new TreeNavigator(this.view, this.model, start);
    };
    AbstractTree.prototype.dispose = function () {
        this.disposables = Object(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_0__["dispose"])(this.disposables);
        this.view.dispose();
    };
    AbstractTree.ctorParameters = function () { return [
        { type: HTMLElement },
        { type: undefined },
        { type: Array },
        { type: undefined }
    ]; };
    return AbstractTree;
}());

var TreeNavigator = /** @class */ (function () {
    function TreeNavigator(view, model, start) {
        this.view = view;
        this.model = model;
        if (start) {
            this.index = this.model.getListIndex(start);
        }
        else {
            this.index = -1;
        }
    }
    TreeNavigator.prototype.current = function () {
        if (this.index < 0 || this.index >= this.view.length) {
            return null;
        }
        return this.view.element(this.index).element;
    };
    TreeNavigator.prototype.previous = function () {
        this.index--;
        return this.current();
    };
    TreeNavigator.prototype.next = function () {
        this.index++;
        return this.current();
    };
    TreeNavigator.prototype.parent = function () {
        if (this.index < 0 || this.index >= this.view.length) {
            return null;
        }
        var node = this.view.element(this.index);
        if (!node.parent) {
            this.index = -1;
            return this.current();
        }
        this.index = this.model.getListIndex(this.model.getNodeLocation(node.parent));
        return this.current();
    };
    TreeNavigator.prototype.first = function () {
        this.index = 0;
        return this.current();
    };
    TreeNavigator.prototype.last = function () {
        this.index = this.view.length - 1;
        return this.current();
    };
    TreeNavigator.ctorParameters = function () { return [
        { type: undefined },
        { type: undefined },
        { type: undefined }
    ]; };
    return TreeNavigator;
}());


/***/ }),

/***/ "./src/vs/base/browser/ui/tree/indexTree.ts":
/*!**************************************************!*\
  !*** ./src/vs/base/browser/ui/tree/indexTree.ts ***!
  \**************************************************/
/*! exports provided: IndexTree */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IndexTree", function() { return IndexTree; });
/* harmony import */ var vs_base_common_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/iterator */ "./src/vs/base/common/iterator.ts");
/* harmony import */ var vs_base_browser_ui_tree_abstractTree__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/browser/ui/tree/abstractTree */ "./src/vs/base/browser/ui/tree/abstractTree.ts");
/* harmony import */ var vs_base_browser_ui_tree_indexTreeModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vs/base/browser/ui/tree/indexTreeModel */ "./src/vs/base/browser/ui/tree/indexTreeModel.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// import 'vs/css!./media/tree';



var IndexTree = /** @class */ (function (_super) {
    __extends(IndexTree, _super);
    function IndexTree(container, delegate, renderers, rootElement, options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, container, delegate, renderers, options) || this;
        _this.rootElement = rootElement;
        return _this;
    }
    IndexTree.prototype.splice = function (location, deleteCount, toInsert) {
        if (toInsert === void 0) { toInsert = vs_base_common_iterator__WEBPACK_IMPORTED_MODULE_0__["Iterator"].empty(); }
        return this.model.splice(location, deleteCount, toInsert);
    };
    IndexTree.prototype.rerender = function (location) {
        if (location === undefined) {
            this.view.rerender();
            return;
        }
        this.model.rerender(location);
    };
    IndexTree.prototype.createModel = function (view, options) {
        return new vs_base_browser_ui_tree_indexTreeModel__WEBPACK_IMPORTED_MODULE_2__["IndexTreeModel"](view, this.rootElement, options);
    };
    IndexTree.ctorParameters = function () { return [
        { type: HTMLElement },
        { type: undefined },
        { type: Array },
        { type: undefined },
        { type: undefined }
    ]; };
    return IndexTree;
}(vs_base_browser_ui_tree_abstractTree__WEBPACK_IMPORTED_MODULE_1__["AbstractTree"]));



/***/ }),

/***/ "./src/vs/base/browser/ui/tree/indexTreeModel.ts":
/*!*******************************************************!*\
  !*** ./src/vs/base/browser/ui/tree/indexTreeModel.ts ***!
  \*******************************************************/
/*! exports provided: isFilterResult, getVisibleState, IndexTreeModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFilterResult", function() { return isFilterResult; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVisibleState", function() { return getVisibleState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IndexTreeModel", function() { return IndexTreeModel; });
/* harmony import */ var vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/arrays */ "./src/vs/base/common/arrays.ts");
/* harmony import */ var vs_base_common_event__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/common/event */ "./src/vs/base/common/event.ts");
/* harmony import */ var vs_base_common_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vs/base/common/iterator */ "./src/vs/base/common/iterator.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/



function isFilterResult(obj) {
    return typeof obj === 'object' && 'visibility' in obj && 'data' in obj;
}
function getVisibleState(visibility) {
    switch (visibility) {
        case true: return 1 /* Visible */;
        case false: return 0 /* Hidden */;
        default: return visibility;
    }
}
function treeNodeToElement(node) {
    var element = node.element, collapsed = node.collapsed;
    var children = vs_base_common_iterator__WEBPACK_IMPORTED_MODULE_2__["Iterator"].map(vs_base_common_iterator__WEBPACK_IMPORTED_MODULE_2__["Iterator"].fromArray(node.children), treeNodeToElement);
    return { element: element, children: children, collapsed: collapsed };
}
var IndexTreeModel = /** @class */ (function () {
    function IndexTreeModel(list, rootElement, options) {
        if (options === void 0) { options = {}; }
        this.list = list;
        this.rootRef = [];
        this.eventBufferer = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_1__["EventBufferer"]();
        this._onDidChangeCollapseState = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_1__["Emitter"]();
        this.onDidChangeCollapseState = this.eventBufferer.wrapEvent(this._onDidChangeCollapseState.event);
        this._onDidChangeRenderNodeCount = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_1__["Emitter"]();
        this.onDidChangeRenderNodeCount = this.eventBufferer.wrapEvent(this._onDidChangeRenderNodeCount.event);
        this._onDidSplice = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_1__["Emitter"]();
        this.onDidSplice = this._onDidSplice.event;
        this.collapseByDefault = typeof options.collapseByDefault === 'undefined' ? false : options.collapseByDefault;
        this.filter = options.filter;
        this.autoExpandSingleChildren = typeof options.autoExpandSingleChildren === 'undefined' ? false : options.autoExpandSingleChildren;
        this.root = {
            parent: undefined,
            element: rootElement,
            children: [],
            depth: 0,
            visibleChildrenCount: 0,
            visibleChildIndex: -1,
            collapsible: false,
            collapsed: false,
            renderNodeCount: 0,
            visible: true,
            filterData: undefined
        };
    }
    IndexTreeModel.prototype.splice = function (location, deleteCount, toInsert, onDidCreateNode, onDidDeleteNode) {
        var _this = this;
        var _a;
        if (location.length === 0) {
            throw new Error('Invalid tree location');
        }
        var _b = this.getParentNodeWithListIndex(location), parentNode = _b.parentNode, listIndex = _b.listIndex, revealed = _b.revealed, visible = _b.visible;
        var treeListElementsToInsert = [];
        var nodesToInsertIterator = vs_base_common_iterator__WEBPACK_IMPORTED_MODULE_2__["Iterator"].map(vs_base_common_iterator__WEBPACK_IMPORTED_MODULE_2__["Iterator"].from(toInsert), function (el) { return _this.createTreeNode(el, parentNode, parentNode.visible ? 1 /* Visible */ : 0 /* Hidden */, revealed, treeListElementsToInsert, onDidCreateNode); });
        var lastIndex = location[location.length - 1];
        // figure out what's the visible child start index right before the
        // splice point
        var visibleChildStartIndex = 0;
        for (var i = lastIndex; i >= 0 && i < parentNode.children.length; i--) {
            var child = parentNode.children[i];
            if (child.visible) {
                visibleChildStartIndex = child.visibleChildIndex;
                break;
            }
        }
        var nodesToInsert = [];
        var insertedVisibleChildrenCount = 0;
        var renderNodeCount = 0;
        vs_base_common_iterator__WEBPACK_IMPORTED_MODULE_2__["Iterator"].forEach(nodesToInsertIterator, function (child) {
            nodesToInsert.push(child);
            renderNodeCount += child.renderNodeCount;
            if (child.visible) {
                child.visibleChildIndex = visibleChildStartIndex + insertedVisibleChildrenCount++;
            }
        });
        var deletedNodes = (_a = parentNode.children).splice.apply(_a, [lastIndex, deleteCount].concat(nodesToInsert));
        // figure out what is the count of deleted visible children
        var deletedVisibleChildrenCount = 0;
        for (var _i = 0, deletedNodes_1 = deletedNodes; _i < deletedNodes_1.length; _i++) {
            var child = deletedNodes_1[_i];
            if (child.visible) {
                deletedVisibleChildrenCount++;
            }
        }
        // and adjust for all visible children after the splice point
        if (deletedVisibleChildrenCount !== 0) {
            for (var i = lastIndex + nodesToInsert.length; i < parentNode.children.length; i++) {
                var child = parentNode.children[i];
                if (child.visible) {
                    child.visibleChildIndex -= deletedVisibleChildrenCount;
                }
            }
        }
        // update parent's visible children count
        parentNode.visibleChildrenCount += insertedVisibleChildrenCount - deletedVisibleChildrenCount;
        if (revealed && visible) {
            var visibleDeleteCount = deletedNodes.reduce(function (r, node) { return r + node.renderNodeCount; }, 0);
            this._updateAncestorsRenderNodeCount(parentNode, renderNodeCount - visibleDeleteCount);
            this.list.splice(listIndex, visibleDeleteCount, treeListElementsToInsert);
        }
        if (deletedNodes.length > 0 && onDidDeleteNode) {
            var visit_1 = function (node) {
                onDidDeleteNode(node);
                node.children.forEach(visit_1);
            };
            deletedNodes.forEach(visit_1);
        }
        var result = vs_base_common_iterator__WEBPACK_IMPORTED_MODULE_2__["Iterator"].map(vs_base_common_iterator__WEBPACK_IMPORTED_MODULE_2__["Iterator"].fromArray(deletedNodes), treeNodeToElement);
        this._onDidSplice.fire({ insertedNodes: nodesToInsert, deletedNodes: deletedNodes });
        return result;
    };
    IndexTreeModel.prototype.rerender = function (location) {
        if (location.length === 0) {
            throw new Error('Invalid tree location');
        }
        var _a = this.getTreeNodeWithListIndex(location), node = _a.node, listIndex = _a.listIndex, revealed = _a.revealed;
        if (revealed) {
            this.list.splice(listIndex, 1, [node]);
        }
    };
    IndexTreeModel.prototype.getListIndex = function (location) {
        var _a = this.getTreeNodeWithListIndex(location), listIndex = _a.listIndex, visible = _a.visible, revealed = _a.revealed;
        return visible && revealed ? listIndex : -1;
    };
    IndexTreeModel.prototype.getListRenderCount = function (location) {
        return this.getTreeNode(location).renderNodeCount;
    };
    IndexTreeModel.prototype.isCollapsible = function (location) {
        return this.getTreeNode(location).collapsible;
    };
    IndexTreeModel.prototype.isCollapsed = function (location) {
        return this.getTreeNode(location).collapsed;
    };
    IndexTreeModel.prototype.setCollapsed = function (location, collapsed, recursive) {
        var _this = this;
        var node = this.getTreeNode(location);
        if (typeof collapsed === 'undefined') {
            collapsed = !node.collapsed;
        }
        return this.eventBufferer.bufferEvents(function () { return _this._setCollapsed(location, collapsed, recursive); });
    };
    IndexTreeModel.prototype._setCollapsed = function (location, collapsed, recursive) {
        var _a = this.getTreeNodeWithListIndex(location), node = _a.node, listIndex = _a.listIndex, revealed = _a.revealed;
        var result = this._setListNodeCollapsed(node, listIndex, revealed, collapsed, recursive || false);
        if (this.autoExpandSingleChildren && !collapsed && !recursive) {
            var onlyVisibleChildIndex = -1;
            for (var i = 0; i < node.children.length; i++) {
                var child = node.children[i];
                if (child.visible) {
                    if (onlyVisibleChildIndex > -1) {
                        onlyVisibleChildIndex = -1;
                        break;
                    }
                    else {
                        onlyVisibleChildIndex = i;
                    }
                }
            }
            if (onlyVisibleChildIndex > -1) {
                this._setCollapsed(location.concat([onlyVisibleChildIndex]), false, false);
            }
        }
        return result;
    };
    IndexTreeModel.prototype._setListNodeCollapsed = function (node, listIndex, revealed, collapsed, recursive) {
        var result = this._setNodeCollapsed(node, collapsed, recursive, false);
        if (!revealed || !node.visible) {
            return result;
        }
        var previousRenderNodeCount = node.renderNodeCount;
        var toInsert = this.updateNodeAfterCollapseChange(node);
        var deleteCount = previousRenderNodeCount - (listIndex === -1 ? 0 : 1);
        this.list.splice(listIndex + 1, deleteCount, toInsert.slice(1));
        return result;
    };
    IndexTreeModel.prototype._setNodeCollapsed = function (node, collapsed, recursive, deep) {
        var result = node.collapsible && node.collapsed !== collapsed;
        if (node.collapsible) {
            node.collapsed = collapsed;
            if (result) {
                this._onDidChangeCollapseState.fire({ node: node, deep: deep });
            }
        }
        if (recursive) {
            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {
                var child = _a[_i];
                result = this._setNodeCollapsed(child, collapsed, true, true) || result;
            }
        }
        return result;
    };
    IndexTreeModel.prototype.expandTo = function (location) {
        var _this = this;
        this.eventBufferer.bufferEvents(function () {
            var node = _this.getTreeNode(location);
            while (node.parent) {
                node = node.parent;
                location = location.slice(0, location.length - 1);
                if (node.collapsed) {
                    _this._setCollapsed(location, false);
                }
            }
        });
    };
    IndexTreeModel.prototype.refilter = function () {
        var previousRenderNodeCount = this.root.renderNodeCount;
        var toInsert = this.updateNodeAfterFilterChange(this.root);
        this.list.splice(0, previousRenderNodeCount, toInsert);
    };
    IndexTreeModel.prototype.createTreeNode = function (treeElement, parent, parentVisibility, revealed, treeListElements, onDidCreateNode) {
        var _this = this;
        var node = {
            parent: parent,
            element: treeElement.element,
            children: [],
            depth: parent.depth + 1,
            visibleChildrenCount: 0,
            visibleChildIndex: -1,
            collapsible: typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : (typeof treeElement.collapsed !== 'undefined'),
            collapsed: typeof treeElement.collapsed === 'undefined' ? this.collapseByDefault : treeElement.collapsed,
            renderNodeCount: 1,
            visible: true,
            filterData: undefined
        };
        var visibility = this._filterNode(node, parentVisibility);
        if (revealed) {
            treeListElements.push(node);
        }
        var childElements = vs_base_common_iterator__WEBPACK_IMPORTED_MODULE_2__["Iterator"].from(treeElement.children);
        var childRevealed = revealed && visibility !== 0 /* Hidden */ && !node.collapsed;
        var childNodes = vs_base_common_iterator__WEBPACK_IMPORTED_MODULE_2__["Iterator"].map(childElements, function (el) { return _this.createTreeNode(el, node, visibility, childRevealed, treeListElements, onDidCreateNode); });
        var visibleChildrenCount = 0;
        var renderNodeCount = 1;
        vs_base_common_iterator__WEBPACK_IMPORTED_MODULE_2__["Iterator"].forEach(childNodes, function (child) {
            node.children.push(child);
            renderNodeCount += child.renderNodeCount;
            if (child.visible) {
                child.visibleChildIndex = visibleChildrenCount++;
            }
        });
        node.collapsible = node.collapsible || node.children.length > 0;
        node.visibleChildrenCount = visibleChildrenCount;
        node.visible = visibility === 2 /* Recurse */ ? visibleChildrenCount > 0 : (visibility === 1 /* Visible */);
        if (!node.visible) {
            node.renderNodeCount = 0;
            if (revealed) {
                treeListElements.pop();
            }
        }
        else if (!node.collapsed) {
            node.renderNodeCount = renderNodeCount;
        }
        if (onDidCreateNode) {
            onDidCreateNode(node);
        }
        return node;
    };
    IndexTreeModel.prototype.updateNodeAfterCollapseChange = function (node) {
        var previousRenderNodeCount = node.renderNodeCount;
        var result = [];
        this._updateNodeAfterCollapseChange(node, result);
        this._updateAncestorsRenderNodeCount(node.parent, result.length - previousRenderNodeCount);
        return result;
    };
    IndexTreeModel.prototype._updateNodeAfterCollapseChange = function (node, result) {
        if (node.visible === false) {
            return 0;
        }
        result.push(node);
        node.renderNodeCount = 1;
        if (!node.collapsed) {
            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {
                var child = _a[_i];
                node.renderNodeCount += this._updateNodeAfterCollapseChange(child, result);
            }
        }
        this._onDidChangeRenderNodeCount.fire(node);
        return node.renderNodeCount;
    };
    IndexTreeModel.prototype.updateNodeAfterFilterChange = function (node) {
        var previousRenderNodeCount = node.renderNodeCount;
        var result = [];
        this._updateNodeAfterFilterChange(node, node.visible ? 1 /* Visible */ : 0 /* Hidden */, result);
        this._updateAncestorsRenderNodeCount(node.parent, result.length - previousRenderNodeCount);
        return result;
    };
    IndexTreeModel.prototype._updateNodeAfterFilterChange = function (node, parentVisibility, result, revealed) {
        if (revealed === void 0) { revealed = true; }
        var visibility;
        if (node !== this.root) {
            visibility = this._filterNode(node, parentVisibility);
            if (visibility === 0 /* Hidden */) {
                node.visible = false;
                return false;
            }
            if (revealed) {
                result.push(node);
            }
        }
        var resultStartLength = result.length;
        node.renderNodeCount = node === this.root ? 0 : 1;
        var hasVisibleDescendants = false;
        if (!node.collapsed || visibility !== 0 /* Hidden */) {
            var visibleChildIndex = 0;
            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {
                var child = _a[_i];
                hasVisibleDescendants = this._updateNodeAfterFilterChange(child, visibility, result, revealed && !node.collapsed) || hasVisibleDescendants;
                if (child.visible) {
                    child.visibleChildIndex = visibleChildIndex++;
                }
            }
            node.visibleChildrenCount = visibleChildIndex;
        }
        else {
            node.visibleChildrenCount = 0;
        }
        if (node !== this.root) {
            node.visible = visibility === 2 /* Recurse */ ? hasVisibleDescendants : (visibility === 1 /* Visible */);
        }
        if (!node.visible) {
            node.renderNodeCount = 0;
            if (revealed) {
                result.pop();
            }
        }
        else if (!node.collapsed) {
            node.renderNodeCount += result.length - resultStartLength;
        }
        this._onDidChangeRenderNodeCount.fire(node);
        return node.visible;
    };
    IndexTreeModel.prototype._updateAncestorsRenderNodeCount = function (node, diff) {
        if (diff === 0) {
            return;
        }
        while (node) {
            node.renderNodeCount += diff;
            this._onDidChangeRenderNodeCount.fire(node);
            node = node.parent;
        }
    };
    IndexTreeModel.prototype._filterNode = function (node, parentVisibility) {
        var result = this.filter ? this.filter.filter(node.element, parentVisibility) : 1 /* Visible */;
        if (typeof result === 'boolean') {
            node.filterData = undefined;
            return result ? 1 /* Visible */ : 0 /* Hidden */;
        }
        else if (isFilterResult(result)) {
            node.filterData = result.data;
            return getVisibleState(result.visibility);
        }
        else {
            node.filterData = undefined;
            return getVisibleState(result);
        }
    };
    // cheap
    IndexTreeModel.prototype.getTreeNode = function (location, node) {
        if (node === void 0) { node = this.root; }
        if (!location || location.length === 0) {
            return node;
        }
        var index = location[0], rest = location.slice(1);
        if (index < 0 || index > node.children.length) {
            throw new Error('Invalid tree location');
        }
        return this.getTreeNode(rest, node.children[index]);
    };
    // expensive
    IndexTreeModel.prototype.getTreeNodeWithListIndex = function (location) {
        if (location.length === 0) {
            return { node: this.root, listIndex: -1, revealed: true, visible: false };
        }
        var _a = this.getParentNodeWithListIndex(location), parentNode = _a.parentNode, listIndex = _a.listIndex, revealed = _a.revealed, visible = _a.visible;
        var index = location[location.length - 1];
        if (index < 0 || index > parentNode.children.length) {
            throw new Error('Invalid tree location');
        }
        var node = parentNode.children[index];
        return { node: node, listIndex: listIndex, revealed: revealed, visible: visible && node.visible };
    };
    IndexTreeModel.prototype.getParentNodeWithListIndex = function (location, node, listIndex, revealed, visible) {
        if (node === void 0) { node = this.root; }
        if (listIndex === void 0) { listIndex = 0; }
        if (revealed === void 0) { revealed = true; }
        if (visible === void 0) { visible = true; }
        var index = location[0], rest = location.slice(1);
        if (index < 0 || index > node.children.length) {
            throw new Error('Invalid tree location');
        }
        // TODO@joao perf!
        for (var i = 0; i < index; i++) {
            listIndex += node.children[i].renderNodeCount;
        }
        revealed = revealed && !node.collapsed;
        visible = visible && node.visible;
        if (rest.length === 0) {
            return { parentNode: node, listIndex: listIndex, revealed: revealed, visible: visible };
        }
        return this.getParentNodeWithListIndex(rest, node.children[index], listIndex + 1, revealed, visible);
    };
    IndexTreeModel.prototype.getNode = function (location) {
        if (location === void 0) { location = []; }
        return this.getTreeNode(location);
    };
    // TODO@joao perf!
    IndexTreeModel.prototype.getNodeLocation = function (node) {
        var location = [];
        while (node.parent) {
            location.push(node.parent.children.indexOf(node));
            node = node.parent;
        }
        return location.reverse();
    };
    IndexTreeModel.prototype.getParentNodeLocation = function (location) {
        if (location.length <= 1) {
            return [];
        }
        return Object(vs_base_common_arrays__WEBPACK_IMPORTED_MODULE_0__["tail2"])(location)[0];
    };
    IndexTreeModel.prototype.getParentElement = function (location) {
        var parentLocation = this.getParentNodeLocation(location);
        var node = this.getTreeNode(parentLocation);
        return node.element;
    };
    IndexTreeModel.prototype.getFirstElementChild = function (location) {
        var node = this.getTreeNode(location);
        if (node.children.length === 0) {
            return undefined;
        }
        return node.children[0].element;
    };
    IndexTreeModel.prototype.getLastElementAncestor = function (location) {
        if (location === void 0) { location = []; }
        var node = this.getTreeNode(location);
        if (node.children.length === 0) {
            return undefined;
        }
        return this._getLastElementAncestor(node);
    };
    IndexTreeModel.prototype._getLastElementAncestor = function (node) {
        if (node.children.length === 0) {
            return node.element;
        }
        return this._getLastElementAncestor(node.children[node.children.length - 1]);
    };
    IndexTreeModel.ctorParameters = function () { return [
        { type: undefined },
        { type: undefined },
        { type: undefined }
    ]; };
    return IndexTreeModel;
}());



/***/ }),

/***/ "./src/vs/base/browser/ui/tree/media/panelviewlet.css":
/*!************************************************************!*\
  !*** ./src/vs/base/browser/ui/tree/media/panelviewlet.css ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n.monaco-panel-view .panel > .panel-header h3.title {\r\n\twhite-space: nowrap;\r\n\ttext-overflow: ellipsis;\r\n\toverflow: hidden;\r\n\tfont-size: 11px;\r\n\t-webkit-margin-before: 0;\r\n\t-webkit-margin-after: 0;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy92cy9iYXNlL2Jyb3dzZXIvdWkvdHJlZS9tZWRpYS9wYW5lbHZpZXdsZXQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7K0ZBRytGOztBQUUvRjtDQUNDLG1CQUFtQjtDQUNuQix1QkFBdUI7Q0FDdkIsZ0JBQWdCO0NBQ2hCLGVBQWU7Q0FDZix3QkFBd0I7Q0FDeEIsdUJBQXVCO0FBQ3hCIiwiZmlsZSI6InNyYy92cy9iYXNlL2Jyb3dzZXIvdWkvdHJlZS9tZWRpYS9wYW5lbHZpZXdsZXQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG4ubW9uYWNvLXBhbmVsLXZpZXcgLnBhbmVsID4gLnBhbmVsLWhlYWRlciBoMy50aXRsZSB7XHJcblx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuXHR0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuXHRvdmVyZmxvdzogaGlkZGVuO1xyXG5cdGZvbnQtc2l6ZTogMTFweDtcclxuXHQtd2Via2l0LW1hcmdpbi1iZWZvcmU6IDA7XHJcblx0LXdlYmtpdC1tYXJnaW4tYWZ0ZXI6IDA7XHJcbn1cclxuIl19 */"

/***/ }),

/***/ "./src/vs/base/browser/ui/tree/media/tree.css":
/*!****************************************************!*\
  !*** ./src/vs/base/browser/ui/tree/media/tree.css ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\n.monaco-tl-row {\r\n\tdisplay: -webkit-box;\r\n\tdisplay: flex;\r\n\theight: 100%;\r\n\t-webkit-box-align: center;\r\n\t        align-items: center;\r\n\tposition: relative;\r\n}\r\n\r\n.monaco-tl-indent {\r\n\theight: 100%;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 18px;\r\n\tpointer-events: none;\r\n}\r\n\r\n.hide-arrows .monaco-tl-indent {\r\n\tleft: 12px;\r\n}\r\n\r\n.monaco-tl-indent > .indent-guide {\r\n\tdisplay: inline-block;\r\n\tbox-sizing: border-box;\r\n\theight: 100%;\r\n\tborder-left: 1px solid transparent;\r\n}\r\n\r\n.monaco-tl-indent > .indent-guide {\r\n\t-webkit-transition: border-color 0.1s linear;\r\n\ttransition: border-color 0.1s linear;\r\n}\r\n\r\n.monaco-tl-twistie,\r\n.monaco-tl-contents {\r\n\theight: 100%;\r\n}\r\n\r\n.monaco-tl-twistie {\r\n\tfont-size: 10px;\r\n\ttext-align: right;\r\n\tmargin-right: 6px;\r\n\tflex-shrink: 0;\r\n\twidth: 16px;\r\n}\r\n\r\n.monaco-tl-contents {\r\n\t-webkit-box-flex: 1;\r\n\t        flex: 1;\r\n\toverflow: hidden;\r\n}\r\n\r\n.monaco-tl-twistie.collapsible {\r\n\tbackground-size: 16px;\r\n\tbackground-position: 3px 50%;\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-image: url(\"tree-expanded-light.svg\");\r\n}\r\n\r\n.monaco-tl-twistie.collapsible.collapsed:not(.loading) {\r\n\tdisplay: inline-block;\r\n\tbackground-image: url(\"tree-collapsed-light.svg\");\r\n}\r\n\r\n.vs-dark .monaco-tl-twistie.collapsible:not(.loading) {\r\n\tbackground-image: url(\"tree-expanded-dark.svg\");\r\n}\r\n\r\n.vs-dark .monaco-tl-twistie.collapsible.collapsed:not(.loading) {\r\n\tbackground-image: url(\"tree-collapsed-dark.svg\");\r\n}\r\n\r\n.hc-black .monaco-tl-twistie.collapsible:not(.loading) {\r\n\tbackground-image: url(\"tree-expanded-hc.svg\");\r\n}\r\n\r\n.hc-black .monaco-tl-twistie.collapsible.collapsed:not(.loading) {\r\n\tbackground-image: url(\"tree-collapsed-hc.svg\");\r\n}\r\n\r\n.monaco-tl-twistie.loading {\r\n\tbackground-image: url(\"loading.svg\");\r\n\tbackground-position: 0 center;\r\n}\r\n\r\n.vs-dark .monaco-tl-twistie.loading {\r\n\tbackground-image: url(\"loading-dark.svg\");\r\n}\r\n\r\n.hc-black .monaco-tl-twistie.loading {\r\n\tbackground-image: url(\"loading-hc.svg\");\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy92cy9iYXNlL2Jyb3dzZXIvdWkvdHJlZS9tZWRpYS90cmVlLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OytGQUcrRjs7QUFFL0Y7Q0FDQyxvQkFBYTtDQUFiLGFBQWE7Q0FDYixZQUFZO0NBQ1oseUJBQW1CO1NBQW5CLG1CQUFtQjtDQUNuQixrQkFBa0I7QUFDbkI7O0FBRUE7Q0FDQyxZQUFZO0NBQ1osa0JBQWtCO0NBQ2xCLE1BQU07Q0FDTixVQUFVO0NBQ1Ysb0JBQW9CO0FBQ3JCOztBQUVBO0NBQ0MsVUFBVTtBQUNYOztBQUVBO0NBQ0MscUJBQXFCO0NBQ3JCLHNCQUFzQjtDQUN0QixZQUFZO0NBQ1osa0NBQWtDO0FBQ25DOztBQUVBO0NBQ0MsNENBQW9DO0NBQXBDLG9DQUFvQztBQUNyQzs7QUFFQTs7Q0FFQyxZQUFZO0FBQ2I7O0FBRUE7Q0FDQyxlQUFlO0NBQ2YsaUJBQWlCO0NBQ2pCLGlCQUFpQjtDQUNqQixjQUFjO0NBQ2QsV0FBVztBQUNaOztBQUVBO0NBQ0MsbUJBQU87U0FBUCxPQUFPO0NBQ1AsZ0JBQWdCO0FBQ2pCOztBQUVBO0NBQ0MscUJBQXFCO0NBQ3JCLDRCQUE0QjtDQUM1Qiw0QkFBNEI7Q0FDNUIsZ0RBQWdEO0FBQ2pEOztBQUVBO0NBQ0MscUJBQXFCO0NBQ3JCLGlEQUFpRDtBQUNsRDs7QUFFQTtDQUNDLCtDQUErQztBQUNoRDs7QUFFQTtDQUNDLGdEQUFnRDtBQUNqRDs7QUFFQTtDQUNDLDZDQUE2QztBQUM5Qzs7QUFFQTtDQUNDLDhDQUE4QztBQUMvQzs7QUFFQTtDQUNDLG9DQUFvQztDQUNwQyw2QkFBNkI7QUFDOUI7O0FBRUE7Q0FDQyx5Q0FBeUM7QUFDMUM7O0FBRUE7Q0FDQyx1Q0FBdUM7QUFDeEMiLCJmaWxlIjoic3JjL3ZzL2Jhc2UvYnJvd3Nlci91aS90cmVlL21lZGlhL3RyZWUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG4ubW9uYWNvLXRsLXJvdyB7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRoZWlnaHQ6IDEwMCU7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5tb25hY28tdGwtaW5kZW50IHtcclxuXHRoZWlnaHQ6IDEwMCU7XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdHRvcDogMDtcclxuXHRsZWZ0OiAxOHB4O1xyXG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG59XHJcblxyXG4uaGlkZS1hcnJvd3MgLm1vbmFjby10bC1pbmRlbnQge1xyXG5cdGxlZnQ6IDEycHg7XHJcbn1cclxuXHJcbi5tb25hY28tdGwtaW5kZW50ID4gLmluZGVudC1ndWlkZSB7XHJcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcblx0aGVpZ2h0OiAxMDAlO1xyXG5cdGJvcmRlci1sZWZ0OiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbi5tb25hY28tdGwtaW5kZW50ID4gLmluZGVudC1ndWlkZSB7XHJcblx0dHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDAuMXMgbGluZWFyO1xyXG59XHJcblxyXG4ubW9uYWNvLXRsLXR3aXN0aWUsXHJcbi5tb25hY28tdGwtY29udGVudHMge1xyXG5cdGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLm1vbmFjby10bC10d2lzdGllIHtcclxuXHRmb250LXNpemU6IDEwcHg7XHJcblx0dGV4dC1hbGlnbjogcmlnaHQ7XHJcblx0bWFyZ2luLXJpZ2h0OiA2cHg7XHJcblx0ZmxleC1zaHJpbms6IDA7XHJcblx0d2lkdGg6IDE2cHg7XHJcbn1cclxuXHJcbi5tb25hY28tdGwtY29udGVudHMge1xyXG5cdGZsZXg6IDE7XHJcblx0b3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLm1vbmFjby10bC10d2lzdGllLmNvbGxhcHNpYmxlIHtcclxuXHRiYWNrZ3JvdW5kLXNpemU6IDE2cHg7XHJcblx0YmFja2dyb3VuZC1wb3NpdGlvbjogM3B4IDUwJTtcclxuXHRiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG5cdGJhY2tncm91bmQtaW1hZ2U6IHVybChcInRyZWUtZXhwYW5kZWQtbGlnaHQuc3ZnXCIpO1xyXG59XHJcblxyXG4ubW9uYWNvLXRsLXR3aXN0aWUuY29sbGFwc2libGUuY29sbGFwc2VkOm5vdCgubG9hZGluZykge1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHRiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJ0cmVlLWNvbGxhcHNlZC1saWdodC5zdmdcIik7XHJcbn1cclxuXHJcbi52cy1kYXJrIC5tb25hY28tdGwtdHdpc3RpZS5jb2xsYXBzaWJsZTpub3QoLmxvYWRpbmcpIHtcclxuXHRiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJ0cmVlLWV4cGFuZGVkLWRhcmsuc3ZnXCIpO1xyXG59XHJcblxyXG4udnMtZGFyayAubW9uYWNvLXRsLXR3aXN0aWUuY29sbGFwc2libGUuY29sbGFwc2VkOm5vdCgubG9hZGluZykge1xyXG5cdGJhY2tncm91bmQtaW1hZ2U6IHVybChcInRyZWUtY29sbGFwc2VkLWRhcmsuc3ZnXCIpO1xyXG59XHJcblxyXG4uaGMtYmxhY2sgLm1vbmFjby10bC10d2lzdGllLmNvbGxhcHNpYmxlOm5vdCgubG9hZGluZykge1xyXG5cdGJhY2tncm91bmQtaW1hZ2U6IHVybChcInRyZWUtZXhwYW5kZWQtaGMuc3ZnXCIpO1xyXG59XHJcblxyXG4uaGMtYmxhY2sgLm1vbmFjby10bC10d2lzdGllLmNvbGxhcHNpYmxlLmNvbGxhcHNlZDpub3QoLmxvYWRpbmcpIHtcclxuXHRiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJ0cmVlLWNvbGxhcHNlZC1oYy5zdmdcIik7XHJcbn1cclxuXHJcbi5tb25hY28tdGwtdHdpc3RpZS5sb2FkaW5nIHtcclxuXHRiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJsb2FkaW5nLnN2Z1wiKTtcclxuXHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIGNlbnRlcjtcclxufVxyXG5cclxuLnZzLWRhcmsgLm1vbmFjby10bC10d2lzdGllLmxvYWRpbmcge1xyXG5cdGJhY2tncm91bmQtaW1hZ2U6IHVybChcImxvYWRpbmctZGFyay5zdmdcIik7XHJcbn1cclxuXHJcbi5oYy1ibGFjayAubW9uYWNvLXRsLXR3aXN0aWUubG9hZGluZyB7XHJcblx0YmFja2dyb3VuZC1pbWFnZTogdXJsKFwibG9hZGluZy1oYy5zdmdcIik7XHJcbn1cclxuIl19 */"

/***/ }),

/***/ "./src/vs/base/browser/ui/tree/tree.ts":
/*!*********************************************!*\
  !*** ./src/vs/base/browser/ui/tree/tree.ts ***!
  \*********************************************/
/*! exports provided: TreeMouseEventTarget, TreeDragOverReactions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TreeMouseEventTarget", function() { return TreeMouseEventTarget; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TreeDragOverReactions", function() { return TreeDragOverReactions; });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var TreeMouseEventTarget;
(function (TreeMouseEventTarget) {
    TreeMouseEventTarget[TreeMouseEventTarget["Unknown"] = 0] = "Unknown";
    TreeMouseEventTarget[TreeMouseEventTarget["Twistie"] = 1] = "Twistie";
    TreeMouseEventTarget[TreeMouseEventTarget["Element"] = 2] = "Element";
})(TreeMouseEventTarget || (TreeMouseEventTarget = {}));
var TreeDragOverReactions = {
    acceptBubbleUp: function () { return { accept: true, bubble: 1 /* Up */ }; },
    acceptBubbleDown: function (autoExpand) {
        if (autoExpand === void 0) { autoExpand = false; }
        return { accept: true, bubble: 0 /* Down */, autoExpand: autoExpand };
    },
    acceptCopyBubbleUp: function () { return { accept: true, bubble: 1 /* Up */, effect: 0 /* Copy */ }; },
    acceptCopyBubbleDown: function (autoExpand) {
        if (autoExpand === void 0) { autoExpand = false; }
        return { accept: true, bubble: 0 /* Down */, effect: 0 /* Copy */, autoExpand: autoExpand };
    }
};


/***/ }),

/***/ "./src/vs/base/browser/ui/widget.ts":
/*!******************************************!*\
  !*** ./src/vs/base/browser/ui/widget.ts ***!
  \******************************************/
/*! exports provided: Widget */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Widget", function() { return Widget; });
/* harmony import */ var vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/browser/dom */ "./src/vs/base/browser/dom.ts");
/* harmony import */ var vs_base_browser_keyboardEvent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/browser/keyboardEvent */ "./src/vs/base/browser/keyboardEvent.ts");
/* harmony import */ var vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vs/base/browser/mouseEvent */ "./src/vs/base/browser/mouseEvent.ts");
/* harmony import */ var vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vs/base/common/lifecycle */ "./src/vs/base/common/lifecycle.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var Widget = /** @class */ (function (_super) {
    __extends(Widget, _super);
    function Widget() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Widget.prototype.onclick = function (domNode, listener) {
        this._register(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["addDisposableListener"](domNode, vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["EventType"].CLICK, function (e) { return listener(new vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_2__["StandardMouseEvent"](e)); }));
    };
    Widget.prototype.onmousedown = function (domNode, listener) {
        this._register(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["addDisposableListener"](domNode, vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["EventType"].MOUSE_DOWN, function (e) { return listener(new vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_2__["StandardMouseEvent"](e)); }));
    };
    Widget.prototype.onmouseover = function (domNode, listener) {
        this._register(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["addDisposableListener"](domNode, vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["EventType"].MOUSE_OVER, function (e) { return listener(new vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_2__["StandardMouseEvent"](e)); }));
    };
    Widget.prototype.onnonbubblingmouseout = function (domNode, listener) {
        this._register(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["addDisposableNonBubblingMouseOutListener"](domNode, function (e) { return listener(new vs_base_browser_mouseEvent__WEBPACK_IMPORTED_MODULE_2__["StandardMouseEvent"](e)); }));
    };
    Widget.prototype.onkeydown = function (domNode, listener) {
        this._register(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["addDisposableListener"](domNode, vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["EventType"].KEY_DOWN, function (e) { return listener(new vs_base_browser_keyboardEvent__WEBPACK_IMPORTED_MODULE_1__["StandardKeyboardEvent"](e)); }));
    };
    Widget.prototype.onkeyup = function (domNode, listener) {
        this._register(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["addDisposableListener"](domNode, vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["EventType"].KEY_UP, function (e) { return listener(new vs_base_browser_keyboardEvent__WEBPACK_IMPORTED_MODULE_1__["StandardKeyboardEvent"](e)); }));
    };
    Widget.prototype.oninput = function (domNode, listener) {
        this._register(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["addDisposableListener"](domNode, vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["EventType"].INPUT, listener));
    };
    Widget.prototype.onblur = function (domNode, listener) {
        this._register(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["addDisposableListener"](domNode, vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["EventType"].BLUR, listener));
    };
    Widget.prototype.onfocus = function (domNode, listener) {
        this._register(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["addDisposableListener"](domNode, vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["EventType"].FOCUS, listener));
    };
    Widget.prototype.onchange = function (domNode, listener) {
        this._register(vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["addDisposableListener"](domNode, vs_base_browser_dom__WEBPACK_IMPORTED_MODULE_0__["EventType"].CHANGE, listener));
    };
    return Widget;
}(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_3__["Disposable"]));



/***/ }),

/***/ "./src/vs/base/common/arrays.ts":
/*!**************************************!*\
  !*** ./src/vs/base/common/arrays.ts ***!
  \**************************************/
/*! exports provided: tail, tail2, equals, binarySearch, findFirstInSorted, mergeSort, groupBy, sortedDiff, delta, top, topAsync, coalesce, coalesceInPlace, move, isFalsyOrEmpty, isNonEmptyArray, distinct, distinctES6, uniqueFilter, lastIndex, firstIndex, first, commonPrefixLength, flatten, range, fill, index, insert, arrayInsert, shuffle, pushToStart, pushToEnd, find, mapArrayOrNot, asArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tail", function() { return tail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tail2", function() { return tail2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "binarySearch", function() { return binarySearch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findFirstInSorted", function() { return findFirstInSorted; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeSort", function() { return mergeSort; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "groupBy", function() { return groupBy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortedDiff", function() { return sortedDiff; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "delta", function() { return delta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "top", function() { return top; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "topAsync", function() { return topAsync; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coalesce", function() { return coalesce; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coalesceInPlace", function() { return coalesceInPlace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "move", function() { return move; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFalsyOrEmpty", function() { return isFalsyOrEmpty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNonEmptyArray", function() { return isNonEmptyArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distinct", function() { return distinct; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distinctES6", function() { return distinctES6; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "uniqueFilter", function() { return uniqueFilter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lastIndex", function() { return lastIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "firstIndex", function() { return firstIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "first", function() { return first; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "commonPrefixLength", function() { return commonPrefixLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flatten", function() { return flatten; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "range", function() { return range; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fill", function() { return fill; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "index", function() { return index; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "insert", function() { return insert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arrayInsert", function() { return arrayInsert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return shuffle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pushToStart", function() { return pushToStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pushToEnd", function() { return pushToEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "find", function() { return find; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapArrayOrNot", function() { return mapArrayOrNot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asArray", function() { return asArray; });
/* harmony import */ var vs_base_common_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/errors */ "./src/vs/base/common/errors.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};

/**
 * Returns the last element of an array.
 * @param array The array.
 * @param n Which element from the end (default is zero).
 */
function tail(array, n) {
    if (n === void 0) { n = 0; }
    return array[array.length - (1 + n)];
}
function tail2(arr) {
    if (arr.length === 0) {
        throw new Error('Invalid tail call');
    }
    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];
}
function equals(one, other, itemEquals) {
    if (itemEquals === void 0) { itemEquals = function (a, b) { return a === b; }; }
    if (one === other) {
        return true;
    }
    if (!one || !other) {
        return false;
    }
    if (one.length !== other.length) {
        return false;
    }
    for (var i = 0, len = one.length; i < len; i++) {
        if (!itemEquals(one[i], other[i])) {
            return false;
        }
    }
    return true;
}
function binarySearch(array, key, comparator) {
    var low = 0, high = array.length - 1;
    while (low <= high) {
        var mid = ((low + high) / 2) | 0;
        var comp = comparator(array[mid], key);
        if (comp < 0) {
            low = mid + 1;
        }
        else if (comp > 0) {
            high = mid - 1;
        }
        else {
            return mid;
        }
    }
    return -(low + 1);
}
/**
 * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false
 * are located before all elements where p(x) is true.
 * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.
 */
function findFirstInSorted(array, p) {
    var low = 0, high = array.length;
    if (high === 0) {
        return 0; // no children
    }
    while (low < high) {
        var mid = Math.floor((low + high) / 2);
        if (p(array[mid])) {
            high = mid;
        }
        else {
            low = mid + 1;
        }
    }
    return low;
}
/**
 * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`
 * so only use this when actually needing stable sort.
 */
function mergeSort(data, compare) {
    _sort(data, compare, 0, data.length - 1, []);
    return data;
}
function _merge(a, compare, lo, mid, hi, aux) {
    var leftIdx = lo, rightIdx = mid + 1;
    for (var i = lo; i <= hi; i++) {
        aux[i] = a[i];
    }
    for (var i = lo; i <= hi; i++) {
        if (leftIdx > mid) {
            // left side consumed
            a[i] = aux[rightIdx++];
        }
        else if (rightIdx > hi) {
            // right side consumed
            a[i] = aux[leftIdx++];
        }
        else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {
            // right element is less -> comes first
            a[i] = aux[rightIdx++];
        }
        else {
            // left element comes first (less or equal)
            a[i] = aux[leftIdx++];
        }
    }
}
function _sort(a, compare, lo, hi, aux) {
    if (hi <= lo) {
        return;
    }
    var mid = lo + ((hi - lo) / 2) | 0;
    _sort(a, compare, lo, mid, aux);
    _sort(a, compare, mid + 1, hi, aux);
    if (compare(a[mid], a[mid + 1]) <= 0) {
        // left and right are sorted and if the last-left element is less
        // or equals than the first-right element there is nothing else
        // to do
        return;
    }
    _merge(a, compare, lo, mid, hi, aux);
}
function groupBy(data, compare) {
    var result = [];
    var currentGroup = undefined;
    for (var _i = 0, _a = mergeSort(data.slice(0), compare); _i < _a.length; _i++) {
        var element = _a[_i];
        if (!currentGroup || compare(currentGroup[0], element) !== 0) {
            currentGroup = [element];
            result.push(currentGroup);
        }
        else {
            currentGroup.push(element);
        }
    }
    return result;
}
/**
 * Diffs two *sorted* arrays and computes the splices which apply the diff.
 */
function sortedDiff(before, after, compare) {
    var result = [];
    function pushSplice(start, deleteCount, toInsert) {
        var _a;
        if (deleteCount === 0 && toInsert.length === 0) {
            return;
        }
        var latest = result[result.length - 1];
        if (latest && latest.start + latest.deleteCount === start) {
            latest.deleteCount += deleteCount;
            (_a = latest.toInsert).push.apply(_a, toInsert);
        }
        else {
            result.push({ start: start, deleteCount: deleteCount, toInsert: toInsert });
        }
    }
    var beforeIdx = 0;
    var afterIdx = 0;
    while (true) {
        if (beforeIdx === before.length) {
            pushSplice(beforeIdx, 0, after.slice(afterIdx));
            break;
        }
        if (afterIdx === after.length) {
            pushSplice(beforeIdx, before.length - beforeIdx, []);
            break;
        }
        var beforeElement = before[beforeIdx];
        var afterElement = after[afterIdx];
        var n = compare(beforeElement, afterElement);
        if (n === 0) {
            // equal
            beforeIdx += 1;
            afterIdx += 1;
        }
        else if (n < 0) {
            // beforeElement is smaller -> before element removed
            pushSplice(beforeIdx, 1, []);
            beforeIdx += 1;
        }
        else if (n > 0) {
            // beforeElement is greater -> after element added
            pushSplice(beforeIdx, 0, [afterElement]);
            afterIdx += 1;
        }
    }
    return result;
}
/**
 * Takes two *sorted* arrays and computes their delta (removed, added elements).
 * Finishes in `Math.min(before.length, after.length)` steps.
 */
function delta(before, after, compare) {
    var splices = sortedDiff(before, after, compare);
    var removed = [];
    var added = [];
    for (var _i = 0, splices_1 = splices; _i < splices_1.length; _i++) {
        var splice = splices_1[_i];
        removed.push.apply(removed, before.slice(splice.start, splice.start + splice.deleteCount));
        added.push.apply(added, splice.toInsert);
    }
    return { removed: removed, added: added };
}
/**
 * Returns the top N elements from the array.
 *
 * Faster than sorting the entire array when the array is a lot larger than N.
 *
 * @param array The unsorted array.
 * @param compare A sort function for the elements.
 * @param n The number of elements to return.
 * @return The first n elemnts from array when sorted with compare.
 */
function top(array, compare, n) {
    if (n === 0) {
        return [];
    }
    var result = array.slice(0, n).sort(compare);
    topStep(array, compare, result, n, array.length);
    return result;
}
/**
 * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.
 *
 * Returns the top N elements from the array.
 *
 * Faster than sorting the entire array when the array is a lot larger than N.
 *
 * @param array The unsorted array.
 * @param compare A sort function for the elements.
 * @param n The number of elements to return.
 * @param batch The number of elements to examine before yielding to the event loop.
 * @return The first n elemnts from array when sorted with compare.
 */
function topAsync(array, compare, n, batch, token) {
    var _this = this;
    if (n === 0) {
        return Promise.resolve([]);
    }
    return new Promise(function (resolve, reject) {
        (function () { return __awaiter(_this, void 0, void 0, function () {
            var o, result, i, m;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        o = array.length;
                        result = array.slice(0, n).sort(compare);
                        i = n, m = Math.min(n + batch, o);
                        _a.label = 1;
                    case 1:
                        if (!(i < o)) return [3 /*break*/, 5];
                        if (!(i > n)) return [3 /*break*/, 3];
                        return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(resolve); })];
                    case 2:
                        _a.sent(); // nextTick() would starve I/O.
                        _a.label = 3;
                    case 3:
                        if (token && token.isCancellationRequested) {
                            throw Object(vs_base_common_errors__WEBPACK_IMPORTED_MODULE_0__["canceled"])();
                        }
                        topStep(array, compare, result, i, m);
                        _a.label = 4;
                    case 4:
                        i = m, m = Math.min(m + batch, o);
                        return [3 /*break*/, 1];
                    case 5: return [2 /*return*/, result];
                }
            });
        }); })()
            .then(resolve, reject);
    });
}
function topStep(array, compare, result, i, m) {
    var _loop_1 = function (n) {
        var element = array[i];
        if (compare(element, result[n - 1]) < 0) {
            result.pop();
            var j = findFirstInSorted(result, function (e) { return compare(element, e) < 0; });
            result.splice(j, 0, element);
        }
    };
    for (var n = result.length; i < m; i++) {
        _loop_1(n);
    }
}
/**
 * @returns a new array with all falsy values removed. The original array IS NOT modified.
 */
function coalesce(array) {
    if (!array) {
        return array;
    }
    return array.filter(function (e) { return !!e; });
}
/**
 * Remove all falsey values from `array`. The original array IS modified.
 */
function coalesceInPlace(array) {
    if (!array) {
        return;
    }
    var to = 0;
    for (var i = 0; i < array.length; i++) {
        if (!!array[i]) {
            array[to] = array[i];
            to += 1;
        }
    }
    array.length = to;
}
/**
 * Moves the element in the array for the provided positions.
 */
function move(array, from, to) {
    array.splice(to, 0, array.splice(from, 1)[0]);
}
/**
 * @returns false if the provided object is an array and not empty.
 */
function isFalsyOrEmpty(obj) {
    return !Array.isArray(obj) || obj.length === 0;
}
function isNonEmptyArray(obj) {
    return Array.isArray(obj) && obj.length > 0;
}
/**
 * Removes duplicates from the given array. The optional keyFn allows to specify
 * how elements are checked for equalness by returning a unique string for each.
 */
function distinct(array, keyFn) {
    if (!keyFn) {
        return array.filter(function (element, position) {
            return array.indexOf(element) === position;
        });
    }
    var seen = Object.create(null);
    return array.filter(function (elem) {
        var key = keyFn(elem);
        if (seen[key]) {
            return false;
        }
        seen[key] = true;
        return true;
    });
}
function distinctES6(array) {
    var seen = new Set();
    return array.filter(function (element) {
        if (seen.has(element)) {
            return false;
        }
        seen.add(element);
        return true;
    });
}
function uniqueFilter(keyFn) {
    var seen = Object.create(null);
    return function (element) {
        var key = keyFn(element);
        if (seen[key]) {
            return false;
        }
        seen[key] = true;
        return true;
    };
}
function lastIndex(array, fn) {
    for (var i = array.length - 1; i >= 0; i--) {
        var element = array[i];
        if (fn(element)) {
            return i;
        }
    }
    return -1;
}
function firstIndex(array, fn) {
    for (var i = 0; i < array.length; i++) {
        var element = array[i];
        if (fn(element)) {
            return i;
        }
    }
    return -1;
}
function first(array, fn, notFoundValue) {
    if (notFoundValue === void 0) { notFoundValue = undefined; }
    var index = firstIndex(array, fn);
    return index < 0 ? notFoundValue : array[index];
}
function commonPrefixLength(one, other, equals) {
    if (equals === void 0) { equals = function (a, b) { return a === b; }; }
    var result = 0;
    for (var i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {
        result++;
    }
    return result;
}
function flatten(arr) {
    var _a;
    return (_a = []).concat.apply(_a, arr);
}
function range(arg, to) {
    var from = typeof to === 'number' ? arg : 0;
    if (typeof to === 'number') {
        from = arg;
    }
    else {
        from = 0;
        to = arg;
    }
    var result = [];
    if (from <= to) {
        for (var i = from; i < to; i++) {
            result.push(i);
        }
    }
    else {
        for (var i = from; i > to; i--) {
            result.push(i);
        }
    }
    return result;
}
function fill(num, value, arr) {
    if (arr === void 0) { arr = []; }
    for (var i = 0; i < num; i++) {
        arr[i] = value;
    }
    return arr;
}
function index(array, indexer, merger) {
    if (merger === void 0) { merger = function (t) { return t; }; }
    return array.reduce(function (r, t) {
        var key = indexer(t);
        r[key] = merger(t, r[key]);
        return r;
    }, Object.create(null));
}
/**
 * Inserts an element into an array. Returns a function which, when
 * called, will remove that element from the array.
 */
function insert(array, element) {
    array.push(element);
    return function () {
        var index = array.indexOf(element);
        if (index > -1) {
            array.splice(index, 1);
        }
    };
}
/**
 * Insert `insertArr` inside `target` at `insertIndex`.
 * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array
 */
function arrayInsert(target, insertIndex, insertArr) {
    var before = target.slice(0, insertIndex);
    var after = target.slice(insertIndex);
    return before.concat(insertArr, after);
}
/**
 * Uses Fisher-Yates shuffle to shuffle the given array
 */
function shuffle(array, _seed) {
    var rand;
    if (typeof _seed === 'number') {
        var seed_1 = _seed;
        // Seeded random number generator in JS. Modified from:
        // https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript
        rand = function () {
            var x = Math.sin(seed_1++) * 179426549; // throw away most significant digits and reduce any potential bias
            return x - Math.floor(x);
        };
    }
    else {
        rand = Math.random;
    }
    for (var i = array.length - 1; i > 0; i -= 1) {
        var j = Math.floor(rand() * (i + 1));
        var temp = array[i];
        array[i] = array[j];
        array[j] = temp;
    }
}
/**
 * Pushes an element to the start of the array, if found.
 */
function pushToStart(arr, value) {
    var index = arr.indexOf(value);
    if (index > -1) {
        arr.splice(index, 1);
        arr.unshift(value);
    }
}
/**
 * Pushes an element to the end of the array, if found.
 */
function pushToEnd(arr, value) {
    var index = arr.indexOf(value);
    if (index > -1) {
        arr.splice(index, 1);
        arr.push(value);
    }
}
function find(arr, predicate) {
    for (var i = 0; i < arr.length; i++) {
        var element = arr[i];
        if (predicate(element, i, arr)) {
            return element;
        }
    }
    return undefined;
}
function mapArrayOrNot(items, fn) {
    return Array.isArray(items) ?
        items.map(fn) :
        fn(items);
}
function asArray(x) {
    return Array.isArray(x) ? x : [x];
}


/***/ }),

/***/ "./src/vs/base/common/async.ts":
/*!*************************************!*\
  !*** ./src/vs/base/common/async.ts ***!
  \*************************************/
/*! exports provided: isThenable, createCancelablePromise, raceCancellation, asPromise, Throttler, Sequencer, Delayer, ThrottledDelayer, Barrier, timeout, disposableTimeout, ignoreErrors, sequence, first, Limiter, Queue, ResourceQueue, TimeoutTimer, IntervalTimer, RunOnceScheduler, RunOnceWorker, runWhenIdle, IdleValue, retry */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isThenable", function() { return isThenable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCancelablePromise", function() { return createCancelablePromise; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "raceCancellation", function() { return raceCancellation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asPromise", function() { return asPromise; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Throttler", function() { return Throttler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sequencer", function() { return Sequencer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Delayer", function() { return Delayer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThrottledDelayer", function() { return ThrottledDelayer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Barrier", function() { return Barrier; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeout", function() { return timeout; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "disposableTimeout", function() { return disposableTimeout; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ignoreErrors", function() { return ignoreErrors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequence", function() { return sequence; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "first", function() { return first; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Limiter", function() { return Limiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Queue", function() { return Queue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResourceQueue", function() { return ResourceQueue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeoutTimer", function() { return TimeoutTimer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IntervalTimer", function() { return IntervalTimer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RunOnceScheduler", function() { return RunOnceScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RunOnceWorker", function() { return RunOnceWorker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "runWhenIdle", function() { return runWhenIdle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IdleValue", function() { return IdleValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "retry", function() { return retry; });
/* harmony import */ var vs_base_common_cancellation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/cancellation */ "./src/vs/base/common/cancellation.ts");
/* harmony import */ var vs_base_common_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/common/errors */ "./src/vs/base/common/errors.ts");
/* harmony import */ var vs_base_common_event__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vs/base/common/event */ "./src/vs/base/common/event.ts");
/* harmony import */ var vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vs/base/common/lifecycle */ "./src/vs/base/common/lifecycle.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};




function isThenable(obj) {
    return obj && typeof obj.then === 'function';
}
function createCancelablePromise(callback) {
    var source = new vs_base_common_cancellation__WEBPACK_IMPORTED_MODULE_0__["CancellationTokenSource"]();
    var thenable = callback(source.token);
    var promise = new Promise(function (resolve, reject) {
        source.token.onCancellationRequested(function () {
            reject(vs_base_common_errors__WEBPACK_IMPORTED_MODULE_1__["canceled"]());
        });
        Promise.resolve(thenable).then(function (value) {
            source.dispose();
            resolve(value);
        }, function (err) {
            source.dispose();
            reject(err);
        });
    });
    return new /** @class */ (function () {
        function class_1() {
        }
        class_1.prototype.cancel = function () {
            source.cancel();
        };
        class_1.prototype.then = function (resolve, reject) {
            return promise.then(resolve, reject);
        };
        class_1.prototype.catch = function (reject) {
            return this.then(undefined, reject);
        };
        class_1.prototype.finally = function (onfinally) {
            return promise.finally(onfinally);
        };
        return class_1;
    }());
}
function raceCancellation(promise, token, defaultValue) {
    return Promise.race([promise, new Promise(function (resolve) { return token.onCancellationRequested(function () { return resolve(defaultValue); }); })]);
}
function asPromise(callback) {
    return new Promise(function (resolve, reject) {
        var item = callback();
        if (isThenable(item)) {
            item.then(resolve, reject);
        }
        else {
            resolve(item);
        }
    });
}
/**
 * A helper to prevent accumulation of sequential async tasks.
 *
 * Imagine a mail man with the sole task of delivering letters. As soon as
 * a letter submitted for delivery, he drives to the destination, delivers it
 * and returns to his base. Imagine that during the trip, N more letters were submitted.
 * When the mail man returns, he picks those N letters and delivers them all in a
 * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.
 *
 * The throttler implements this via the queue() method, by providing it a task
 * factory. Following the example:
 *
 * 		const throttler = new Throttler();
 * 		const letters = [];
 *
 * 		function deliver() {
 * 			const lettersToDeliver = letters;
 * 			letters = [];
 * 			return makeTheTrip(lettersToDeliver);
 * 		}
 *
 * 		function onLetterReceived(l) {
 * 			letters.push(l);
 * 			throttler.queue(deliver);
 * 		}
 */
var Throttler = /** @class */ (function () {
    function Throttler() {
        this.activePromise = null;
        this.queuedPromise = null;
        this.queuedPromiseFactory = null;
    }
    Throttler.prototype.queue = function (promiseFactory) {
        var _this = this;
        if (this.activePromise) {
            this.queuedPromiseFactory = promiseFactory;
            if (!this.queuedPromise) {
                var onComplete_1 = function () {
                    _this.queuedPromise = null;
                    var result = _this.queue(_this.queuedPromiseFactory);
                    _this.queuedPromiseFactory = null;
                    return result;
                };
                this.queuedPromise = new Promise(function (c) {
                    _this.activePromise.then(onComplete_1, onComplete_1).then(c);
                });
            }
            return new Promise(function (c, e) {
                _this.queuedPromise.then(c, e);
            });
        }
        this.activePromise = promiseFactory();
        return new Promise(function (c, e) {
            _this.activePromise.then(function (result) {
                _this.activePromise = null;
                c(result);
            }, function (err) {
                _this.activePromise = null;
                e(err);
            });
        });
    };
    return Throttler;
}());

var Sequencer = /** @class */ (function () {
    function Sequencer() {
        this.current = Promise.resolve(null);
    }
    Sequencer.prototype.queue = function (promiseTask) {
        return this.current = this.current.then(function () { return promiseTask(); });
    };
    return Sequencer;
}());

/**
 * A helper to delay execution of a task that is being requested often.
 *
 * Following the throttler, now imagine the mail man wants to optimize the number of
 * trips proactively. The trip itself can be long, so he decides not to make the trip
 * as soon as a letter is submitted. Instead he waits a while, in case more
 * letters are submitted. After said waiting period, if no letters were submitted, he
 * decides to make the trip. Imagine that N more letters were submitted after the first
 * one, all within a short period of time between each other. Even though N+1
 * submissions occurred, only 1 delivery was made.
 *
 * The delayer offers this behavior via the trigger() method, into which both the task
 * to be executed and the waiting period (delay) must be passed in as arguments. Following
 * the example:
 *
 * 		const delayer = new Delayer(WAITING_PERIOD);
 * 		const letters = [];
 *
 * 		function letterReceived(l) {
 * 			letters.push(l);
 * 			delayer.trigger(() => { return makeTheTrip(); });
 * 		}
 */
var Delayer = /** @class */ (function () {
    function Delayer(defaultDelay) {
        this.defaultDelay = defaultDelay;
        this.timeout = null;
        this.completionPromise = null;
        this.doResolve = null;
        this.task = null;
    }
    Delayer.prototype.trigger = function (task, delay) {
        var _this = this;
        if (delay === void 0) { delay = this.defaultDelay; }
        this.task = task;
        this.cancelTimeout();
        if (!this.completionPromise) {
            this.completionPromise = new Promise(function (c, e) {
                _this.doResolve = c;
                _this.doReject = e;
            }).then(function () {
                _this.completionPromise = null;
                _this.doResolve = null;
                var task = _this.task;
                _this.task = null;
                return task();
            });
        }
        this.timeout = setTimeout(function () {
            _this.timeout = null;
            _this.doResolve(null);
        }, delay);
        return this.completionPromise;
    };
    Delayer.prototype.isTriggered = function () {
        return this.timeout !== null;
    };
    Delayer.prototype.cancel = function () {
        this.cancelTimeout();
        if (this.completionPromise) {
            this.doReject(vs_base_common_errors__WEBPACK_IMPORTED_MODULE_1__["canceled"]());
            this.completionPromise = null;
        }
    };
    Delayer.prototype.cancelTimeout = function () {
        if (this.timeout !== null) {
            clearTimeout(this.timeout);
            this.timeout = null;
        }
    };
    Delayer.prototype.dispose = function () {
        this.cancelTimeout();
    };
    Delayer.ctorParameters = function () { return [
        { type: Number }
    ]; };
    return Delayer;
}());

/**
 * A helper to delay execution of a task that is being requested often, while
 * preventing accumulation of consecutive executions, while the task runs.
 *
 * The mail man is clever and waits for a certain amount of time, before going
 * out to deliver letters. While the mail man is going out, more letters arrive
 * and can only be delivered once he is back. Once he is back the mail man will
 * do one more trip to deliver the letters that have accumulated while he was out.
 */
var ThrottledDelayer = /** @class */ (function () {
    function ThrottledDelayer(defaultDelay) {
        this.delayer = new Delayer(defaultDelay);
        this.throttler = new Throttler();
    }
    ThrottledDelayer.prototype.trigger = function (promiseFactory, delay) {
        var _this = this;
        return this.delayer.trigger(function () { return _this.throttler.queue(promiseFactory); }, delay);
    };
    ThrottledDelayer.prototype.isTriggered = function () {
        return this.delayer.isTriggered();
    };
    ThrottledDelayer.prototype.cancel = function () {
        this.delayer.cancel();
    };
    ThrottledDelayer.prototype.dispose = function () {
        this.delayer.dispose();
    };
    ThrottledDelayer.ctorParameters = function () { return [
        { type: Number }
    ]; };
    return ThrottledDelayer;
}());

/**
 * A barrier that is initially closed and then becomes opened permanently.
 */
var Barrier = /** @class */ (function () {
    function Barrier() {
        var _this = this;
        this._isOpen = false;
        this._promise = new Promise(function (c, e) {
            _this._completePromise = c;
        });
    }
    Barrier.prototype.isOpen = function () {
        return this._isOpen;
    };
    Barrier.prototype.open = function () {
        this._isOpen = true;
        this._completePromise(true);
    };
    Barrier.prototype.wait = function () {
        return this._promise;
    };
    return Barrier;
}());

function timeout(millis, token) {
    if (!token) {
        return createCancelablePromise(function (token) { return timeout(millis, token); });
    }
    return new Promise(function (resolve, reject) {
        var handle = setTimeout(resolve, millis);
        token.onCancellationRequested(function () {
            clearTimeout(handle);
            reject(vs_base_common_errors__WEBPACK_IMPORTED_MODULE_1__["canceled"]());
        });
    });
}
function disposableTimeout(handler, timeout) {
    if (timeout === void 0) { timeout = 0; }
    var timer = setTimeout(handler, timeout);
    return Object(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_3__["toDisposable"])(function () { return clearTimeout(timer); });
}
function ignoreErrors(promise) {
    return promise.then(undefined, function (_) { return undefined; });
}
/**
 * Runs the provided list of promise factories in sequential order. The returned
 * promise will complete to an array of results from each promise.
 */
function sequence(promiseFactories) {
    var results = [];
    var index = 0;
    var len = promiseFactories.length;
    function next() {
        return index < len ? promiseFactories[index++]() : null;
    }
    function thenHandler(result) {
        if (result !== undefined && result !== null) {
            results.push(result);
        }
        var n = next();
        if (n) {
            return n.then(thenHandler);
        }
        return Promise.resolve(results);
    }
    return Promise.resolve(null).then(thenHandler);
}
function first(promiseFactories, shouldStop, defaultValue) {
    if (shouldStop === void 0) { shouldStop = function (t) { return !!t; }; }
    if (defaultValue === void 0) { defaultValue = null; }
    var index = 0;
    var len = promiseFactories.length;
    var loop = function () {
        if (index >= len) {
            return Promise.resolve(defaultValue);
        }
        var factory = promiseFactories[index++];
        var promise = Promise.resolve(factory());
        return promise.then(function (result) {
            if (shouldStop(result)) {
                return Promise.resolve(result);
            }
            return loop();
        });
    };
    return loop();
}
/**
 * A helper to queue N promises and run them all with a max degree of parallelism. The helper
 * ensures that at any time no more than M promises are running at the same time.
 */
var Limiter = /** @class */ (function () {
    function Limiter(maxDegreeOfParalellism) {
        this._size = 0;
        this.maxDegreeOfParalellism = maxDegreeOfParalellism;
        this.outstandingPromises = [];
        this.runningPromises = 0;
        this._onFinished = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_2__["Emitter"]();
    }
    Object.defineProperty(Limiter.prototype, "onFinished", {
        get: function () {
            return this._onFinished.event;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Limiter.prototype, "size", {
        get: function () {
            return this._size;
            // return this.runningPromises + this.outstandingPromises.length;
        },
        enumerable: true,
        configurable: true
    });
    Limiter.prototype.queue = function (factory) {
        var _this = this;
        this._size++;
        return new Promise(function (c, e) {
            _this.outstandingPromises.push({ factory: factory, c: c, e: e });
            _this.consume();
        });
    };
    Limiter.prototype.consume = function () {
        var _this = this;
        while (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {
            var iLimitedTask = this.outstandingPromises.shift();
            this.runningPromises++;
            var promise = iLimitedTask.factory();
            promise.then(iLimitedTask.c, iLimitedTask.e);
            promise.then(function () { return _this.consumed(); }, function () { return _this.consumed(); });
        }
    };
    Limiter.prototype.consumed = function () {
        this._size--;
        this.runningPromises--;
        if (this.outstandingPromises.length > 0) {
            this.consume();
        }
        else {
            this._onFinished.fire();
        }
    };
    Limiter.prototype.dispose = function () {
        this._onFinished.dispose();
    };
    Limiter.ctorParameters = function () { return [
        { type: Number }
    ]; };
    return Limiter;
}());

/**
 * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.
 */
var Queue = /** @class */ (function (_super) {
    __extends(Queue, _super);
    function Queue() {
        return _super.call(this, 1) || this;
    }
    return Queue;
}(Limiter));

/**
 * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource
 * by disposing them once the queue is empty.
 */
var ResourceQueue = /** @class */ (function () {
    function ResourceQueue() {
        this.queues = new Map();
    }
    ResourceQueue.prototype.queueFor = function (resource) {
        var _this = this;
        var key = resource.toString();
        if (!this.queues.has(key)) {
            var queue_1 = new Queue();
            queue_1.onFinished(function () {
                queue_1.dispose();
                _this.queues.delete(key);
            });
            this.queues.set(key, queue_1);
        }
        return this.queues.get(key);
    };
    return ResourceQueue;
}());

var TimeoutTimer = /** @class */ (function () {
    function TimeoutTimer(runner, timeout) {
        this._token = -1;
        if (typeof runner === 'function' && typeof timeout === 'number') {
            this.setIfNotSet(runner, timeout);
        }
    }
    TimeoutTimer.prototype.dispose = function () {
        this.cancel();
    };
    TimeoutTimer.prototype.cancel = function () {
        if (this._token !== -1) {
            clearTimeout(this._token);
            this._token = -1;
        }
    };
    TimeoutTimer.prototype.cancelAndSet = function (runner, timeout) {
        var _this = this;
        this.cancel();
        this._token = setTimeout(function () {
            _this._token = -1;
            runner();
        }, timeout);
    };
    TimeoutTimer.prototype.setIfNotSet = function (runner, timeout) {
        var _this = this;
        if (this._token !== -1) {
            // timer is already set
            return;
        }
        this._token = setTimeout(function () {
            _this._token = -1;
            runner();
        }, timeout);
    };
    TimeoutTimer.ctorParameters = function () { return [
        { type: Function },
        { type: Number }
    ]; };
    return TimeoutTimer;
}());

var IntervalTimer = /** @class */ (function () {
    function IntervalTimer() {
        this._token = -1;
    }
    IntervalTimer.prototype.dispose = function () {
        this.cancel();
    };
    IntervalTimer.prototype.cancel = function () {
        if (this._token !== -1) {
            clearInterval(this._token);
            this._token = -1;
        }
    };
    IntervalTimer.prototype.cancelAndSet = function (runner, interval) {
        this.cancel();
        this._token = setInterval(function () {
            runner();
        }, interval);
    };
    return IntervalTimer;
}());

var RunOnceScheduler = /** @class */ (function () {
    function RunOnceScheduler(runner, timeout) {
        this.timeoutToken = -1;
        this.runner = runner;
        this.timeout = timeout;
        this.timeoutHandler = this.onTimeout.bind(this);
    }
    /**
     * Dispose RunOnceScheduler
     */
    RunOnceScheduler.prototype.dispose = function () {
        this.cancel();
        this.runner = null;
    };
    /**
     * Cancel current scheduled runner (if any).
     */
    RunOnceScheduler.prototype.cancel = function () {
        if (this.isScheduled()) {
            clearTimeout(this.timeoutToken);
            this.timeoutToken = -1;
        }
    };
    /**
     * Cancel previous runner (if any) & schedule a new runner.
     */
    RunOnceScheduler.prototype.schedule = function (delay) {
        if (delay === void 0) { delay = this.timeout; }
        this.cancel();
        this.timeoutToken = setTimeout(this.timeoutHandler, delay);
    };
    /**
     * Returns true if scheduled.
     */
    RunOnceScheduler.prototype.isScheduled = function () {
        return this.timeoutToken !== -1;
    };
    RunOnceScheduler.prototype.onTimeout = function () {
        this.timeoutToken = -1;
        if (this.runner) {
            this.doRun();
        }
    };
    RunOnceScheduler.prototype.doRun = function () {
        if (this.runner) {
            this.runner();
        }
    };
    RunOnceScheduler.ctorParameters = function () { return [
        { type: Function },
        { type: Number }
    ]; };
    return RunOnceScheduler;
}());

var RunOnceWorker = /** @class */ (function (_super) {
    __extends(RunOnceWorker, _super);
    function RunOnceWorker(runner, timeout) {
        var _this = _super.call(this, runner, timeout) || this;
        _this.units = [];
        return _this;
    }
    RunOnceWorker.prototype.work = function (unit) {
        this.units.push(unit);
        if (!this.isScheduled()) {
            this.schedule();
        }
    };
    RunOnceWorker.prototype.doRun = function () {
        var units = this.units;
        this.units = [];
        if (this.runner) {
            this.runner(units);
        }
    };
    RunOnceWorker.prototype.dispose = function () {
        this.units = [];
        _super.prototype.dispose.call(this);
    };
    RunOnceWorker.ctorParameters = function () { return [
        { type: Function },
        { type: Number }
    ]; };
    return RunOnceWorker;
}(RunOnceScheduler));

/**
 * Execute the callback the next time the browser is idle
 */
var runWhenIdle;
(function () {
    if (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {
        var dummyIdle_1 = Object.freeze({
            didTimeout: true,
            timeRemaining: function () { return 15; }
        });
        runWhenIdle = function (runner) {
            var handle = setTimeout(function () { return runner(dummyIdle_1); });
            var disposed = false;
            return {
                dispose: function () {
                    if (disposed) {
                        return;
                    }
                    disposed = true;
                    clearTimeout(handle);
                }
            };
        };
    }
    else {
        runWhenIdle = function (runner, timeout) {
            var handle = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout: timeout } : undefined);
            var disposed = false;
            return {
                dispose: function () {
                    if (disposed) {
                        return;
                    }
                    disposed = true;
                    cancelIdleCallback(handle);
                }
            };
        };
    }
})();
/**
 * An implementation of the "idle-until-urgent"-strategy as introduced
 * here: https://philipwalton.com/articles/idle-until-urgent/
 */
var IdleValue = /** @class */ (function () {
    function IdleValue(executor) {
        var _this = this;
        this._didRun = false;
        this._executor = function () {
            try {
                _this._value = executor();
            }
            catch (err) {
                _this._error = err;
            }
            finally {
                _this._didRun = true;
            }
        };
        this._handle = runWhenIdle(function () { return _this._executor(); });
    }
    IdleValue.prototype.dispose = function () {
        this._handle.dispose();
    };
    IdleValue.prototype.getValue = function () {
        if (!this._didRun) {
            this._handle.dispose();
            this._executor();
        }
        if (this._error) {
            throw this._error;
        }
        return this._value;
    };
    IdleValue.ctorParameters = function () { return [
        { type: Function }
    ]; };
    return IdleValue;
}());

//#endregion
function retry(task, delay, retries) {
    return __awaiter(this, void 0, void 0, function () {
        var lastError, i, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    i = 0;
                    _a.label = 1;
                case 1:
                    if (!(i < retries)) return [3 /*break*/, 7];
                    _a.label = 2;
                case 2:
                    _a.trys.push([2, 4, , 6]);
                    return [4 /*yield*/, task()];
                case 3: return [2 /*return*/, _a.sent()];
                case 4:
                    error_1 = _a.sent();
                    lastError = error_1;
                    return [4 /*yield*/, timeout(delay)];
                case 5:
                    _a.sent();
                    return [3 /*break*/, 6];
                case 6:
                    i++;
                    return [3 /*break*/, 1];
                case 7: return [2 /*return*/, Promise.reject(lastError)];
            }
        });
    });
}


/***/ }),

/***/ "./src/vs/base/common/cancellation.ts":
/*!********************************************!*\
  !*** ./src/vs/base/common/cancellation.ts ***!
  \********************************************/
/*! exports provided: CancellationToken, CancellationTokenSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CancellationToken", function() { return CancellationToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CancellationTokenSource", function() { return CancellationTokenSource; });
/* harmony import */ var vs_base_common_event__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/event */ "./src/vs/base/common/event.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

var shortcutEvent = Object.freeze(function (callback, context) {
    var handle = setTimeout(callback.bind(context), 0);
    return { dispose: function () { clearTimeout(handle); } };
});
var CancellationToken;
(function (CancellationToken) {
    function isCancellationToken(thing) {
        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {
            return true;
        }
        if (thing instanceof MutableToken) {
            return true;
        }
        if (!thing || typeof thing !== 'object') {
            return false;
        }
        return typeof thing.isCancellationRequested === 'boolean'
            && typeof thing.onCancellationRequested === 'function';
    }
    CancellationToken.isCancellationToken = isCancellationToken;
    CancellationToken.None = Object.freeze({
        isCancellationRequested: false,
        onCancellationRequested: vs_base_common_event__WEBPACK_IMPORTED_MODULE_0__["Event"].None
    });
    CancellationToken.Cancelled = Object.freeze({
        isCancellationRequested: true,
        onCancellationRequested: shortcutEvent
    });
})(CancellationToken || (CancellationToken = {}));
var MutableToken = /** @class */ (function () {
    function MutableToken() {
        this._isCancelled = false;
        this._emitter = null;
    }
    MutableToken.prototype.cancel = function () {
        if (!this._isCancelled) {
            this._isCancelled = true;
            if (this._emitter) {
                this._emitter.fire(undefined);
                this.dispose();
            }
        }
    };
    Object.defineProperty(MutableToken.prototype, "isCancellationRequested", {
        get: function () {
            return this._isCancelled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MutableToken.prototype, "onCancellationRequested", {
        get: function () {
            if (this._isCancelled) {
                return shortcutEvent;
            }
            if (!this._emitter) {
                this._emitter = new vs_base_common_event__WEBPACK_IMPORTED_MODULE_0__["Emitter"]();
            }
            return this._emitter.event;
        },
        enumerable: true,
        configurable: true
    });
    MutableToken.prototype.dispose = function () {
        if (this._emitter) {
            this._emitter.dispose();
            this._emitter = null;
        }
    };
    return MutableToken;
}());
var CancellationTokenSource = /** @class */ (function () {
    function CancellationTokenSource(parent) {
        this._token = undefined;
        this._parentListener = undefined;
        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);
    }
    Object.defineProperty(CancellationTokenSource.prototype, "token", {
        get: function () {
            if (!this._token) {
                // be lazy and create the token only when
                // actually needed
                this._token = new MutableToken();
            }
            return this._token;
        },
        enumerable: true,
        configurable: true
    });
    CancellationTokenSource.prototype.cancel = function () {
        if (!this._token) {
            // save an object by returning the default
            // cancelled token when cancellation happens
            // before someone asks for the token
            this._token = CancellationToken.Cancelled;
        }
        else if (this._token instanceof MutableToken) {
            // actually cancel
            this._token.cancel();
        }
    };
    CancellationTokenSource.prototype.dispose = function () {
        if (this._parentListener) {
            this._parentListener.dispose();
        }
        if (!this._token) {
            // ensure to initialize with an empty token if we had none
            this._token = CancellationToken.None;
        }
        else if (this._token instanceof MutableToken) {
            // actually dispose
            this._token.dispose();
        }
    };
    CancellationTokenSource.ctorParameters = function () { return [
        { type: undefined }
    ]; };
    return CancellationTokenSource;
}());



/***/ }),

/***/ "./src/vs/base/common/collections.ts":
/*!*******************************************!*\
  !*** ./src/vs/base/common/collections.ts ***!
  \*******************************************/
/*! exports provided: values, size, first, forEach, groupBy, fromMap, SetMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "values", function() { return values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "size", function() { return size; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "first", function() { return first; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return forEach; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "groupBy", function() { return groupBy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromMap", function() { return fromMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SetMap", function() { return SetMap; });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var hasOwnProperty = Object.prototype.hasOwnProperty;
/**
 * Returns an array which contains all values that reside
 * in the given set.
 */
function values(from) {
    var result = [];
    for (var key in from) {
        if (hasOwnProperty.call(from, key)) {
            result.push(from[key]);
        }
    }
    return result;
}
function size(from) {
    var count = 0;
    for (var key in from) {
        if (hasOwnProperty.call(from, key)) {
            count += 1;
        }
    }
    return count;
}
function first(from) {
    for (var key in from) {
        if (hasOwnProperty.call(from, key)) {
            return from[key];
        }
    }
    return undefined;
}
/**
 * Iterates over each entry in the provided set. The iterator allows
 * to remove elements and will stop when the callback returns {{false}}.
 */
function forEach(from, callback) {
    var _loop_1 = function (key) {
        if (hasOwnProperty.call(from, key)) {
            var result = callback({ key: key, value: from[key] }, function () {
                delete from[key];
            });
            if (result === false) {
                return { value: void 0 };
            }
        }
    };
    for (var key in from) {
        var state_1 = _loop_1(key);
        if (typeof state_1 === "object")
            return state_1.value;
    }
}
/**
 * Groups the collection into a dictionary based on the provided
 * group function.
 */
function groupBy(data, groupFn) {
    var result = Object.create(null);
    for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
        var element = data_1[_i];
        var key = groupFn(element);
        var target = result[key];
        if (!target) {
            target = result[key] = [];
        }
        target.push(element);
    }
    return result;
}
function fromMap(original) {
    var result = Object.create(null);
    if (original) {
        original.forEach(function (value, key) {
            result[key] = value;
        });
    }
    return result;
}
var SetMap = /** @class */ (function () {
    function SetMap() {
        this.map = new Map();
    }
    SetMap.prototype.add = function (key, value) {
        var values = this.map.get(key);
        if (!values) {
            values = new Set();
            this.map.set(key, values);
        }
        values.add(value);
    };
    SetMap.prototype.delete = function (key, value) {
        var values = this.map.get(key);
        if (!values) {
            return;
        }
        values.delete(value);
        if (values.size === 0) {
            this.map.delete(key);
        }
    };
    SetMap.prototype.forEach = function (key, fn) {
        var values = this.map.get(key);
        if (!values) {
            return;
        }
        values.forEach(fn);
    };
    return SetMap;
}());



/***/ }),

/***/ "./src/vs/base/common/color.ts":
/*!*************************************!*\
  !*** ./src/vs/base/common/color.ts ***!
  \*************************************/
/*! exports provided: RGBA, HSLA, HSVA, Color */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RGBA", function() { return RGBA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HSLA", function() { return HSLA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HSVA", function() { return HSVA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Color", function() { return Color; });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
function roundFloat(number, decimalPoints) {
    var decimal = Math.pow(10, decimalPoints);
    return Math.round(number * decimal) / decimal;
}
var RGBA = /** @class */ (function () {
    function RGBA(r, g, b, a) {
        if (a === void 0) { a = 1; }
        this.r = Math.min(255, Math.max(0, r)) | 0;
        this.g = Math.min(255, Math.max(0, g)) | 0;
        this.b = Math.min(255, Math.max(0, b)) | 0;
        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);
    }
    RGBA.equals = function (a, b) {
        return a.r === b.r && a.g === b.g && a.b === b.b && a.a === b.a;
    };
    RGBA.ctorParameters = function () { return [
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number }
    ]; };
    return RGBA;
}());

var HSLA = /** @class */ (function () {
    function HSLA(h, s, l, a) {
        this.h = Math.max(Math.min(360, h), 0) | 0;
        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);
        this.l = roundFloat(Math.max(Math.min(1, l), 0), 3);
        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);
    }
    HSLA.equals = function (a, b) {
        return a.h === b.h && a.s === b.s && a.l === b.l && a.a === b.a;
    };
    /**
     * Converts an RGB color value to HSL. Conversion formula
     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.
     * Assumes r, g, and b are contained in the set [0, 255] and
     * returns h in the set [0, 360], s, and l in the set [0, 1].
     */
    HSLA.fromRGBA = function (rgba) {
        var r = rgba.r / 255;
        var g = rgba.g / 255;
        var b = rgba.b / 255;
        var a = rgba.a;
        var max = Math.max(r, g, b);
        var min = Math.min(r, g, b);
        var h = 0;
        var s = 0;
        var l = (min + max) / 2;
        var chroma = max - min;
        if (chroma > 0) {
            s = Math.min((l <= 0.5 ? chroma / (2 * l) : chroma / (2 - (2 * l))), 1);
            switch (max) {
                case r:
                    h = (g - b) / chroma + (g < b ? 6 : 0);
                    break;
                case g:
                    h = (b - r) / chroma + 2;
                    break;
                case b:
                    h = (r - g) / chroma + 4;
                    break;
            }
            h *= 60;
            h = Math.round(h);
        }
        return new HSLA(h, s, l, a);
    };
    HSLA._hue2rgb = function (p, q, t) {
        if (t < 0) {
            t += 1;
        }
        if (t > 1) {
            t -= 1;
        }
        if (t < 1 / 6) {
            return p + (q - p) * 6 * t;
        }
        if (t < 1 / 2) {
            return q;
        }
        if (t < 2 / 3) {
            return p + (q - p) * (2 / 3 - t) * 6;
        }
        return p;
    };
    /**
     * Converts an HSL color value to RGB. Conversion formula
     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.
     * Assumes h in the set [0, 360] s, and l are contained in the set [0, 1] and
     * returns r, g, and b in the set [0, 255].
     */
    HSLA.toRGBA = function (hsla) {
        var h = hsla.h / 360;
        var s = hsla.s, l = hsla.l, a = hsla.a;
        var r, g, b;
        if (s === 0) {
            r = g = b = l; // achromatic
        }
        else {
            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
            var p = 2 * l - q;
            r = HSLA._hue2rgb(p, q, h + 1 / 3);
            g = HSLA._hue2rgb(p, q, h);
            b = HSLA._hue2rgb(p, q, h - 1 / 3);
        }
        return new RGBA(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), a);
    };
    HSLA.ctorParameters = function () { return [
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number }
    ]; };
    return HSLA;
}());

var HSVA = /** @class */ (function () {
    function HSVA(h, s, v, a) {
        this.h = Math.max(Math.min(360, h), 0) | 0;
        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);
        this.v = roundFloat(Math.max(Math.min(1, v), 0), 3);
        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);
    }
    HSVA.equals = function (a, b) {
        return a.h === b.h && a.s === b.s && a.v === b.v && a.a === b.a;
    };
    // from http://www.rapidtables.com/convert/color/rgb-to-hsv.htm
    HSVA.fromRGBA = function (rgba) {
        var r = rgba.r / 255;
        var g = rgba.g / 255;
        var b = rgba.b / 255;
        var cmax = Math.max(r, g, b);
        var cmin = Math.min(r, g, b);
        var delta = cmax - cmin;
        var s = cmax === 0 ? 0 : (delta / cmax);
        var m;
        if (delta === 0) {
            m = 0;
        }
        else if (cmax === r) {
            m = ((((g - b) / delta) % 6) + 6) % 6;
        }
        else if (cmax === g) {
            m = ((b - r) / delta) + 2;
        }
        else {
            m = ((r - g) / delta) + 4;
        }
        return new HSVA(Math.round(m * 60), s, cmax, rgba.a);
    };
    // from http://www.rapidtables.com/convert/color/hsv-to-rgb.htm
    HSVA.toRGBA = function (hsva) {
        var h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;
        var c = v * s;
        var x = c * (1 - Math.abs((h / 60) % 2 - 1));
        var m = v - c;
        var _a = [0, 0, 0], r = _a[0], g = _a[1], b = _a[2];
        if (h < 60) {
            r = c;
            g = x;
        }
        else if (h < 120) {
            r = x;
            g = c;
        }
        else if (h < 180) {
            g = c;
            b = x;
        }
        else if (h < 240) {
            g = x;
            b = c;
        }
        else if (h < 300) {
            r = x;
            b = c;
        }
        else if (h < 360) {
            r = c;
            b = x;
        }
        r = Math.round((r + m) * 255);
        g = Math.round((g + m) * 255);
        b = Math.round((b + m) * 255);
        return new RGBA(r, g, b, a);
    };
    HSVA.ctorParameters = function () { return [
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number }
    ]; };
    return HSVA;
}());

var Color = /** @class */ (function () {
    function Color(arg) {
        if (!arg) {
            throw new Error('Color needs a value');
        }
        else if (arg instanceof RGBA) {
            this.rgba = arg;
        }
        else if (arg instanceof HSLA) {
            this._hsla = arg;
            this.rgba = HSLA.toRGBA(arg);
        }
        else if (arg instanceof HSVA) {
            this._hsva = arg;
            this.rgba = HSVA.toRGBA(arg);
        }
        else {
            throw new Error('Invalid color ctor argument');
        }
    }
    Color.fromHex = function (hex) {
        return Color.Format.CSS.parseHex(hex) || Color.red;
    };
    Object.defineProperty(Color.prototype, "hsla", {
        get: function () {
            if (this._hsla) {
                return this._hsla;
            }
            else {
                return HSLA.fromRGBA(this.rgba);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Color.prototype, "hsva", {
        get: function () {
            if (this._hsva) {
                return this._hsva;
            }
            return HSVA.fromRGBA(this.rgba);
        },
        enumerable: true,
        configurable: true
    });
    Color.prototype.equals = function (other) {
        return !!other && RGBA.equals(this.rgba, other.rgba) && HSLA.equals(this.hsla, other.hsla) && HSVA.equals(this.hsva, other.hsva);
    };
    /**
     * http://www.w3.org/TR/WCAG20/#relativeluminancedef
     * Returns the number in the set [0, 1]. O => Darkest Black. 1 => Lightest white.
     */
    Color.prototype.getRelativeLuminance = function () {
        var R = Color._relativeLuminanceForComponent(this.rgba.r);
        var G = Color._relativeLuminanceForComponent(this.rgba.g);
        var B = Color._relativeLuminanceForComponent(this.rgba.b);
        var luminance = 0.2126 * R + 0.7152 * G + 0.0722 * B;
        return roundFloat(luminance, 4);
    };
    Color._relativeLuminanceForComponent = function (color) {
        var c = color / 255;
        return (c <= 0.03928) ? c / 12.92 : Math.pow(((c + 0.055) / 1.055), 2.4);
    };
    /**
     * http://www.w3.org/TR/WCAG20/#contrast-ratiodef
     * Returns the contrast ration number in the set [1, 21].
     */
    Color.prototype.getContrastRatio = function (another) {
        var lum1 = this.getRelativeLuminance();
        var lum2 = another.getRelativeLuminance();
        return lum1 > lum2 ? (lum1 + 0.05) / (lum2 + 0.05) : (lum2 + 0.05) / (lum1 + 0.05);
    };
    /**
     *	http://24ways.org/2010/calculating-color-contrast
     *  Return 'true' if darker color otherwise 'false'
     */
    Color.prototype.isDarker = function () {
        var yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;
        return yiq < 128;
    };
    /**
     *	http://24ways.org/2010/calculating-color-contrast
     *  Return 'true' if lighter color otherwise 'false'
     */
    Color.prototype.isLighter = function () {
        var yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;
        return yiq >= 128;
    };
    Color.prototype.isLighterThan = function (another) {
        var lum1 = this.getRelativeLuminance();
        var lum2 = another.getRelativeLuminance();
        return lum1 > lum2;
    };
    Color.prototype.isDarkerThan = function (another) {
        var lum1 = this.getRelativeLuminance();
        var lum2 = another.getRelativeLuminance();
        return lum1 < lum2;
    };
    Color.prototype.lighten = function (factor) {
        return new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l + this.hsla.l * factor, this.hsla.a));
    };
    Color.prototype.darken = function (factor) {
        return new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l - this.hsla.l * factor, this.hsla.a));
    };
    Color.prototype.transparent = function (factor) {
        var _a = this.rgba, r = _a.r, g = _a.g, b = _a.b, a = _a.a;
        return new Color(new RGBA(r, g, b, a * factor));
    };
    Color.prototype.isTransparent = function () {
        return this.rgba.a === 0;
    };
    Color.prototype.isOpaque = function () {
        return this.rgba.a === 1;
    };
    Color.prototype.opposite = function () {
        return new Color(new RGBA(255 - this.rgba.r, 255 - this.rgba.g, 255 - this.rgba.b, this.rgba.a));
    };
    Color.prototype.blend = function (c) {
        var rgba = c.rgba;
        // Convert to 0..1 opacity
        var thisA = this.rgba.a;
        var colorA = rgba.a;
        var a = thisA + colorA * (1 - thisA);
        if (a < 1e-6) {
            return Color.transparent;
        }
        var r = this.rgba.r * thisA / a + rgba.r * colorA * (1 - thisA) / a;
        var g = this.rgba.g * thisA / a + rgba.g * colorA * (1 - thisA) / a;
        var b = this.rgba.b * thisA / a + rgba.b * colorA * (1 - thisA) / a;
        return new Color(new RGBA(r, g, b, a));
    };
    Color.prototype.flatten = function () {
        var backgrounds = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            backgrounds[_i] = arguments[_i];
        }
        var background = backgrounds.reduceRight(function (accumulator, color) {
            return Color._flatten(color, accumulator);
        });
        return Color._flatten(this, background);
    };
    Color._flatten = function (foreground, background) {
        var backgroundAlpha = 1 - foreground.rgba.a;
        return new Color(new RGBA(backgroundAlpha * background.rgba.r + foreground.rgba.a * foreground.rgba.r, backgroundAlpha * background.rgba.g + foreground.rgba.a * foreground.rgba.g, backgroundAlpha * background.rgba.b + foreground.rgba.a * foreground.rgba.b));
    };
    Color.prototype.toString = function () {
        return '' + Color.Format.CSS.format(this);
    };
    Color.getLighterColor = function (of, relative, factor) {
        if (of.isLighterThan(relative)) {
            return of;
        }
        factor = factor ? factor : 0.5;
        var lum1 = of.getRelativeLuminance();
        var lum2 = relative.getRelativeLuminance();
        factor = factor * (lum2 - lum1) / lum2;
        return of.lighten(factor);
    };
    Color.getDarkerColor = function (of, relative, factor) {
        if (of.isDarkerThan(relative)) {
            return of;
        }
        factor = factor ? factor : 0.5;
        var lum1 = of.getRelativeLuminance();
        var lum2 = relative.getRelativeLuminance();
        factor = factor * (lum1 - lum2) / lum1;
        return of.darken(factor);
    };
    Color.ctorParameters = function () { return [
        { type: undefined }
    ]; };
    Color.white = new Color(new RGBA(255, 255, 255, 1));
    Color.black = new Color(new RGBA(0, 0, 0, 1));
    Color.red = new Color(new RGBA(255, 0, 0, 1));
    Color.blue = new Color(new RGBA(0, 0, 255, 1));
    Color.green = new Color(new RGBA(0, 255, 0, 1));
    Color.cyan = new Color(new RGBA(0, 255, 255, 1));
    Color.lightgrey = new Color(new RGBA(211, 211, 211, 1));
    Color.transparent = new Color(new RGBA(0, 0, 0, 0));
    return Color;
}());

(function (Color) {
    var Format;
    (function (Format) {
        var CSS;
        (function (CSS) {
            function formatRGB(color) {
                if (color.rgba.a === 1) {
                    return "rgb(" + color.rgba.r + ", " + color.rgba.g + ", " + color.rgba.b + ")";
                }
                return Color.Format.CSS.formatRGBA(color);
            }
            CSS.formatRGB = formatRGB;
            function formatRGBA(color) {
                return "rgba(" + color.rgba.r + ", " + color.rgba.g + ", " + color.rgba.b + ", " + +(color.rgba.a).toFixed(2) + ")";
            }
            CSS.formatRGBA = formatRGBA;
            function formatHSL(color) {
                if (color.hsla.a === 1) {
                    return "hsl(" + color.hsla.h + ", " + (color.hsla.s * 100).toFixed(2) + "%, " + (color.hsla.l * 100).toFixed(2) + "%)";
                }
                return Color.Format.CSS.formatHSLA(color);
            }
            CSS.formatHSL = formatHSL;
            function formatHSLA(color) {
                return "hsla(" + color.hsla.h + ", " + (color.hsla.s * 100).toFixed(2) + "%, " + (color.hsla.l * 100).toFixed(2) + "%, " + color.hsla.a.toFixed(2) + ")";
            }
            CSS.formatHSLA = formatHSLA;
            function _toTwoDigitHex(n) {
                var r = n.toString(16);
                return r.length !== 2 ? '0' + r : r;
            }
            /**
             * Formats the color as #RRGGBB
             */
            function formatHex(color) {
                return "#" + _toTwoDigitHex(color.rgba.r) + _toTwoDigitHex(color.rgba.g) + _toTwoDigitHex(color.rgba.b);
            }
            CSS.formatHex = formatHex;
            /**
             * Formats the color as #RRGGBBAA
             * If 'compact' is set, colors without transparancy will be printed as #RRGGBB
             */
            function formatHexA(color, compact) {
                if (compact === void 0) { compact = false; }
                if (compact && color.rgba.a === 1) {
                    return Color.Format.CSS.formatHex(color);
                }
                return "#" + _toTwoDigitHex(color.rgba.r) + _toTwoDigitHex(color.rgba.g) + _toTwoDigitHex(color.rgba.b) + _toTwoDigitHex(Math.round(color.rgba.a * 255));
            }
            CSS.formatHexA = formatHexA;
            /**
             * The default format will use HEX if opaque and RGBA otherwise.
             */
            function format(color) {
                if (!color) {
                    return null;
                }
                if (color.isOpaque()) {
                    return Color.Format.CSS.formatHex(color);
                }
                return Color.Format.CSS.formatRGBA(color);
            }
            CSS.format = format;
            /**
             * Converts an Hex color value to a Color.
             * returns r, g, and b are contained in the set [0, 255]
             * @param hex string (#RGB, #RGBA, #RRGGBB or #RRGGBBAA).
             */
            function parseHex(hex) {
                if (!hex) {
                    // Invalid color
                    return null;
                }
                var length = hex.length;
                if (length === 0) {
                    // Invalid color
                    return null;
                }
                if (hex.charCodeAt(0) !== 35 /* Hash */) {
                    // Does not begin with a #
                    return null;
                }
                if (length === 7) {
                    // #RRGGBB format
                    var r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));
                    var g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));
                    var b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));
                    return new Color(new RGBA(r, g, b, 1));
                }
                if (length === 9) {
                    // #RRGGBBAA format
                    var r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));
                    var g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));
                    var b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));
                    var a = 16 * _parseHexDigit(hex.charCodeAt(7)) + _parseHexDigit(hex.charCodeAt(8));
                    return new Color(new RGBA(r, g, b, a / 255));
                }
                if (length === 4) {
                    // #RGB format
                    var r = _parseHexDigit(hex.charCodeAt(1));
                    var g = _parseHexDigit(hex.charCodeAt(2));
                    var b = _parseHexDigit(hex.charCodeAt(3));
                    return new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b));
                }
                if (length === 5) {
                    // #RGBA format
                    var r = _parseHexDigit(hex.charCodeAt(1));
                    var g = _parseHexDigit(hex.charCodeAt(2));
                    var b = _parseHexDigit(hex.charCodeAt(3));
                    var a = _parseHexDigit(hex.charCodeAt(4));
                    return new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b, (16 * a + a) / 255));
                }
                // Invalid color
                return null;
            }
            CSS.parseHex = parseHex;
            function _parseHexDigit(charCode) {
                switch (charCode) {
                    case 48 /* Digit0 */: return 0;
                    case 49 /* Digit1 */: return 1;
                    case 50 /* Digit2 */: return 2;
                    case 51 /* Digit3 */: return 3;
                    case 52 /* Digit4 */: return 4;
                    case 53 /* Digit5 */: return 5;
                    case 54 /* Digit6 */: return 6;
                    case 55 /* Digit7 */: return 7;
                    case 56 /* Digit8 */: return 8;
                    case 57 /* Digit9 */: return 9;
                    case 97 /* a */: return 10;
                    case 65 /* A */: return 10;
                    case 98 /* b */: return 11;
                    case 66 /* B */: return 11;
                    case 99 /* c */: return 12;
                    case 67 /* C */: return 12;
                    case 100 /* d */: return 13;
                    case 68 /* D */: return 13;
                    case 101 /* e */: return 14;
                    case 69 /* E */: return 14;
                    case 102 /* f */: return 15;
                    case 70 /* F */: return 15;
                }
                return 0;
            }
        })(CSS = Format.CSS || (Format.CSS = {}));
    })(Format = Color.Format || (Color.Format = {}));
})(Color || (Color = {}));


/***/ }),

/***/ "./src/vs/base/common/decorators.ts":
/*!******************************************!*\
  !*** ./src/vs/base/common/decorators.ts ***!
  \******************************************/
/*! exports provided: createDecorator, memoize, debounce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDecorator", function() { return createDecorator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "memoize", function() { return memoize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return debounce; });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
function createDecorator(mapFn) {
    return function (target, key, descriptor) {
        var fnKey = null;
        var fn = null;
        if (typeof descriptor.value === 'function') {
            fnKey = 'value';
            fn = descriptor.value;
        }
        else if (typeof descriptor.get === 'function') {
            fnKey = 'get';
            fn = descriptor.get;
        }
        if (!fn) {
            throw new Error('not supported');
        }
        descriptor[fnKey] = mapFn(fn, key);
    };
}
function memoize(target, key, descriptor) {
    var fnKey = null;
    var fn = null;
    if (typeof descriptor.value === 'function') {
        fnKey = 'value';
        fn = descriptor.value;
        if (fn.length !== 0) {
            console.warn('Memoize should only be used in functions with zero parameters');
        }
    }
    else if (typeof descriptor.get === 'function') {
        fnKey = 'get';
        fn = descriptor.get;
    }
    if (!fn) {
        throw new Error('not supported');
    }
    var memoizeKey = "$memoize$" + key;
    descriptor[fnKey] = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (!this.hasOwnProperty(memoizeKey)) {
            Object.defineProperty(this, memoizeKey, {
                configurable: false,
                enumerable: false,
                writable: false,
                value: fn.apply(this, args)
            });
        }
        return this[memoizeKey];
    };
}
function debounce(delay, reducer, initialValueProvider) {
    return createDecorator(function (fn, key) {
        var timerKey = "$debounce$" + key;
        var resultKey = "$debounce$result$" + key;
        return function () {
            var _this = this;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            if (!this[resultKey]) {
                this[resultKey] = initialValueProvider ? initialValueProvider() : undefined;
            }
            clearTimeout(this[timerKey]);
            if (reducer) {
                this[resultKey] = reducer.apply(void 0, [this[resultKey]].concat(args));
                args = [this[resultKey]];
            }
            this[timerKey] = setTimeout(function () {
                fn.apply(_this, args);
                _this[resultKey] = initialValueProvider ? initialValueProvider() : undefined;
            }, delay);
        };
    });
}


/***/ }),

/***/ "./src/vs/base/common/errors.ts":
/*!**************************************!*\
  !*** ./src/vs/base/common/errors.ts ***!
  \**************************************/
/*! exports provided: ErrorHandler, errorHandler, setUnexpectedErrorHandler, onUnexpectedError, onUnexpectedExternalError, transformErrorForSerialization, isPromiseCanceledError, canceled, illegalArgument, illegalState, readonly, disposed, getErrorMessage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrorHandler", function() { return ErrorHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "errorHandler", function() { return errorHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUnexpectedErrorHandler", function() { return setUnexpectedErrorHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onUnexpectedError", function() { return onUnexpectedError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onUnexpectedExternalError", function() { return onUnexpectedExternalError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformErrorForSerialization", function() { return transformErrorForSerialization; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPromiseCanceledError", function() { return isPromiseCanceledError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "canceled", function() { return canceled; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "illegalArgument", function() { return illegalArgument; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "illegalState", function() { return illegalState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "readonly", function() { return readonly; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "disposed", function() { return disposed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getErrorMessage", function() { return getErrorMessage; });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Avoid circular dependency on EventEmitter by implementing a subset of the interface.
var ErrorHandler = /** @class */ (function () {
    function ErrorHandler() {
        this.listeners = [];
        this.unexpectedErrorHandler = function (e) {
            setTimeout(function () {
                if (e.stack) {
                    throw new Error(e.message + '\n\n' + e.stack);
                }
                throw e;
            }, 0);
        };
    }
    ErrorHandler.prototype.addListener = function (listener) {
        var _this = this;
        this.listeners.push(listener);
        return function () {
            _this._removeListener(listener);
        };
    };
    ErrorHandler.prototype.emit = function (e) {
        this.listeners.forEach(function (listener) {
            listener(e);
        });
    };
    ErrorHandler.prototype._removeListener = function (listener) {
        this.listeners.splice(this.listeners.indexOf(listener), 1);
    };
    ErrorHandler.prototype.setUnexpectedErrorHandler = function (newUnexpectedErrorHandler) {
        this.unexpectedErrorHandler = newUnexpectedErrorHandler;
    };
    ErrorHandler.prototype.getUnexpectedErrorHandler = function () {
        return this.unexpectedErrorHandler;
    };
    ErrorHandler.prototype.onUnexpectedError = function (e) {
        this.unexpectedErrorHandler(e);
        this.emit(e);
    };
    // For external errors, we don't want the listeners to be called
    ErrorHandler.prototype.onUnexpectedExternalError = function (e) {
        this.unexpectedErrorHandler(e);
    };
    return ErrorHandler;
}());

var errorHandler = new ErrorHandler();
function setUnexpectedErrorHandler(newUnexpectedErrorHandler) {
    errorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);
}
function onUnexpectedError(e) {
    // ignore errors from cancelled promises
    if (!isPromiseCanceledError(e)) {
        errorHandler.onUnexpectedError(e);
    }
    return undefined;
}
function onUnexpectedExternalError(e) {
    // ignore errors from cancelled promises
    if (!isPromiseCanceledError(e)) {
        errorHandler.onUnexpectedExternalError(e);
    }
    return undefined;
}
function transformErrorForSerialization(error) {
    if (error instanceof Error) {
        var name_1 = error.name, message = error.message;
        var stack = error.stacktrace || error.stack;
        return {
            $isError: true,
            name: name_1,
            message: message,
            stack: stack
        };
    }
    // return as is
    return error;
}
var canceledName = 'Canceled';
/**
 * Checks if the given error is a promise in canceled state
 */
function isPromiseCanceledError(error) {
    return error instanceof Error && error.name === canceledName && error.message === canceledName;
}
/**
 * Returns an error that signals cancellation.
 */
function canceled() {
    var error = new Error(canceledName);
    error.name = error.message;
    return error;
}
function illegalArgument(name) {
    if (name) {
        return new Error("Illegal argument: " + name);
    }
    else {
        return new Error('Illegal argument');
    }
}
function illegalState(name) {
    if (name) {
        return new Error("Illegal state: " + name);
    }
    else {
        return new Error('Illegal state');
    }
}
function readonly(name) {
    return name
        ? new Error("readonly property '" + name + " cannot be changed'")
        : new Error('readonly property cannot be changed');
}
function disposed(what) {
    var result = new Error(what + " has been disposed");
    result.name = 'DISPOSED';
    return result;
}
function getErrorMessage(err) {
    if (!err) {
        return 'Error';
    }
    if (err.message) {
        return err.message;
    }
    if (err.stack) {
        return err.stack.split('\n')[0];
    }
    return String(err);
}


/***/ }),

/***/ "./src/vs/base/common/event.ts":
/*!*************************************!*\
  !*** ./src/vs/base/common/event.ts ***!
  \*************************************/
/*! exports provided: Event, setGlobalLeakWarningThreshold, Emitter, PauseableEmitter, AsyncEmitter, EventMultiplexer, EventBufferer, Relay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Event", function() { return Event; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setGlobalLeakWarningThreshold", function() { return setGlobalLeakWarningThreshold; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Emitter", function() { return Emitter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PauseableEmitter", function() { return PauseableEmitter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncEmitter", function() { return AsyncEmitter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventMultiplexer", function() { return EventMultiplexer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventBufferer", function() { return EventBufferer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Relay", function() { return Relay; });
/* harmony import */ var vs_base_common_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/errors */ "./src/vs/base/common/errors.ts");
/* harmony import */ var vs_base_common_functional__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/common/functional */ "./src/vs/base/common/functional.ts");
/* harmony import */ var vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vs/base/common/lifecycle */ "./src/vs/base/common/lifecycle.ts");
/* harmony import */ var vs_base_common_linkedList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vs/base/common/linkedList */ "./src/vs/base/common/linkedList.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};




var Event;
(function (Event) {
    Event.None = function () { return vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_2__["Disposable"].None; };
    /**
     * Given an event, returns another event which only fires once.
     */
    function once(event) {
        return function (listener, thisArgs, disposables) {
            if (thisArgs === void 0) { thisArgs = null; }
            // we need this, in case the event fires during the listener call
            var didFire = false;
            var result;
            result = event(function (e) {
                if (didFire) {
                    return;
                }
                else if (result) {
                    result.dispose();
                }
                else {
                    didFire = true;
                }
                return listener.call(thisArgs, e);
            }, null, disposables);
            if (didFire) {
                result.dispose();
            }
            return result;
        };
    }
    Event.once = once;
    /**
     * Given an event and a `map` function, returns another event which maps each element
     * through the mapping function.
     */
    function map(event, map) {
        return snapshot(function (listener, thisArgs, disposables) {
            if (thisArgs === void 0) { thisArgs = null; }
            return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);
        });
    }
    Event.map = map;
    /**
     * Given an event and an `each` function, returns another identical event and calls
     * the `each` function per each element.
     */
    function forEach(event, each) {
        return snapshot(function (listener, thisArgs, disposables) {
            if (thisArgs === void 0) { thisArgs = null; }
            return event(function (i) { each(i); listener.call(thisArgs, i); }, null, disposables);
        });
    }
    Event.forEach = forEach;
    function filter(event, filter) {
        return snapshot(function (listener, thisArgs, disposables) {
            if (thisArgs === void 0) { thisArgs = null; }
            return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);
        });
    }
    Event.filter = filter;
    /**
     * Given an event, returns the same event but typed as `Event<void>`.
     */
    function signal(event) {
        return event;
    }
    Event.signal = signal;
    /**
     * Given a collection of events, returns a single event which emits
     * whenever any of the provided events emit.
     */
    function any() {
        var events = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            events[_i] = arguments[_i];
        }
        return function (listener, thisArgs, disposables) {
            if (thisArgs === void 0) { thisArgs = null; }
            return vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_2__["combinedDisposable"].apply(void 0, events.map(function (event) { return event(function (e) { return listener.call(thisArgs, e); }, null, disposables); }));
        };
    }
    Event.any = any;
    /**
     * Given an event and a `merge` function, returns another event which maps each element
     * and the cumulative result through the `merge` function. Similar to `map`, but with memory.
     */
    function reduce(event, merge, initial) {
        var output = initial;
        return map(event, function (e) {
            output = merge(output, e);
            return output;
        });
    }
    Event.reduce = reduce;
    /**
     * Given a chain of event processing functions (filter, map, etc), each
     * function will be invoked per event & per listener. Snapshotting an event
     * chain allows each function to be invoked just once per event.
     */
    function snapshot(event) {
        var listener;
        var emitter = new Emitter({
            onFirstListenerAdd: function () {
                listener = event(emitter.fire, emitter);
            },
            onLastListenerRemove: function () {
                listener.dispose();
            }
        });
        return emitter.event;
    }
    Event.snapshot = snapshot;
    function debounce(event, merge, delay, leading, leakWarningThreshold) {
        if (delay === void 0) { delay = 100; }
        if (leading === void 0) { leading = false; }
        var subscription;
        var output = undefined;
        var handle = undefined;
        var numDebouncedCalls = 0;
        var emitter = new Emitter({
            leakWarningThreshold: leakWarningThreshold,
            onFirstListenerAdd: function () {
                subscription = event(function (cur) {
                    numDebouncedCalls++;
                    output = merge(output, cur);
                    if (leading && !handle) {
                        emitter.fire(output);
                    }
                    clearTimeout(handle);
                    handle = setTimeout(function () {
                        var _output = output;
                        output = undefined;
                        handle = undefined;
                        if (!leading || numDebouncedCalls > 1) {
                            emitter.fire(_output);
                        }
                        numDebouncedCalls = 0;
                    }, delay);
                });
            },
            onLastListenerRemove: function () {
                subscription.dispose();
            }
        });
        return emitter.event;
    }
    Event.debounce = debounce;
    /**
     * Given an event, it returns another event which fires only once and as soon as
     * the input event emits. The event data is the number of millis it took for the
     * event to fire.
     */
    function stopwatch(event) {
        var start = new Date().getTime();
        return map(once(event), function (_) { return new Date().getTime() - start; });
    }
    Event.stopwatch = stopwatch;
    /**
     * Given an event, it returns another event which fires only when the event
     * element changes.
     */
    function latch(event) {
        var firstCall = true;
        var cache;
        return filter(event, function (value) {
            var shouldEmit = firstCall || value !== cache;
            firstCall = false;
            cache = value;
            return shouldEmit;
        });
    }
    Event.latch = latch;
    /**
     * Buffers the provided event until a first listener comes
     * along, at which point fire all the events at once and
     * pipe the event from then on.
     *
     * ```typescript
     * const emitter = new Emitter<number>();
     * const event = emitter.event;
     * const bufferedEvent = buffer(event);
     *
     * emitter.fire(1);
     * emitter.fire(2);
     * emitter.fire(3);
     * // nothing...
     *
     * const listener = bufferedEvent(num => console.log(num));
     * // 1, 2, 3
     *
     * emitter.fire(4);
     * // 4
     * ```
     */
    function buffer(event, nextTick, _buffer) {
        if (nextTick === void 0) { nextTick = false; }
        if (_buffer === void 0) { _buffer = []; }
        var buffer = _buffer.slice();
        var listener = event(function (e) {
            if (buffer) {
                buffer.push(e);
            }
            else {
                emitter.fire(e);
            }
        });
        var flush = function () {
            if (buffer) {
                buffer.forEach(function (e) { return emitter.fire(e); });
            }
            buffer = null;
        };
        var emitter = new Emitter({
            onFirstListenerAdd: function () {
                if (!listener) {
                    listener = event(function (e) { return emitter.fire(e); });
                }
            },
            onFirstListenerDidAdd: function () {
                if (buffer) {
                    if (nextTick) {
                        setTimeout(flush);
                    }
                    else {
                        flush();
                    }
                }
            },
            onLastListenerRemove: function () {
                if (listener) {
                    listener.dispose();
                }
                listener = null;
            }
        });
        return emitter.event;
    }
    Event.buffer = buffer;
    var ChainableEvent = /** @class */ (function () {
        function ChainableEvent(event) {
            this.event = event;
        }
        ChainableEvent.prototype.map = function (fn) {
            return new ChainableEvent(map(this.event, fn));
        };
        ChainableEvent.prototype.forEach = function (fn) {
            return new ChainableEvent(forEach(this.event, fn));
        };
        ChainableEvent.prototype.filter = function (fn) {
            return new ChainableEvent(filter(this.event, fn));
        };
        ChainableEvent.prototype.reduce = function (merge, initial) {
            return new ChainableEvent(reduce(this.event, merge, initial));
        };
        ChainableEvent.prototype.latch = function () {
            return new ChainableEvent(latch(this.event));
        };
        ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {
            return this.event(listener, thisArgs, disposables);
        };
        ChainableEvent.prototype.once = function (listener, thisArgs, disposables) {
            return once(this.event)(listener, thisArgs, disposables);
        };
        ChainableEvent.ctorParameters = function () { return [
            { type: undefined }
        ]; };
        return ChainableEvent;
    }());
    function chain(event) {
        return new ChainableEvent(event);
    }
    Event.chain = chain;
    function fromNodeEventEmitter(emitter, eventName, map) {
        if (map === void 0) { map = function (id) { return id; }; }
        var fn = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return result.fire(map.apply(void 0, args));
        };
        var onFirstListenerAdd = function () { return emitter.on(eventName, fn); };
        var onLastListenerRemove = function () { return emitter.removeListener(eventName, fn); };
        var result = new Emitter({ onFirstListenerAdd: onFirstListenerAdd, onLastListenerRemove: onLastListenerRemove });
        return result.event;
    }
    Event.fromNodeEventEmitter = fromNodeEventEmitter;
    function fromPromise(promise) {
        var emitter = new Emitter();
        var shouldEmit = false;
        promise
            .then(undefined, function () { return null; })
            .then(function () {
            if (!shouldEmit) {
                setTimeout(function () { return emitter.fire(undefined); }, 0);
            }
            else {
                emitter.fire(undefined);
            }
        });
        shouldEmit = true;
        return emitter.event;
    }
    Event.fromPromise = fromPromise;
    function toPromise(event) {
        return new Promise(function (c) { return once(event)(c); });
    }
    Event.toPromise = toPromise;
})(Event || (Event = {}));
var _globalLeakWarningThreshold = -1;
function setGlobalLeakWarningThreshold(n) {
    var oldValue = _globalLeakWarningThreshold;
    _globalLeakWarningThreshold = n;
    return {
        dispose: function () {
            _globalLeakWarningThreshold = oldValue;
        }
    };
}
var LeakageMonitor = /** @class */ (function () {
    function LeakageMonitor(customThreshold, name) {
        if (name === void 0) { name = Math.random().toString(18).slice(2, 5); }
        this.customThreshold = customThreshold;
        this.name = name;
        this._warnCountdown = 0;
    }
    LeakageMonitor.prototype.dispose = function () {
        if (this._stacks) {
            this._stacks.clear();
        }
    };
    LeakageMonitor.prototype.check = function (listenerCount) {
        var _this = this;
        var threshold = _globalLeakWarningThreshold;
        if (typeof this.customThreshold === 'number') {
            threshold = this.customThreshold;
        }
        if (threshold <= 0 || listenerCount < threshold) {
            return undefined;
        }
        if (!this._stacks) {
            this._stacks = new Map();
        }
        var stack = new Error().stack.split('\n').slice(3).join('\n');
        var count = (this._stacks.get(stack) || 0);
        this._stacks.set(stack, count + 1);
        this._warnCountdown -= 1;
        if (this._warnCountdown <= 0) {
            // only warn on first exceed and then every time the limit
            // is exceeded by 50% again
            this._warnCountdown = threshold * 0.5;
            // find most frequent listener and print warning
            var topStack_1;
            var topCount_1 = 0;
            this._stacks.forEach(function (count, stack) {
                if (!topStack_1 || topCount_1 < count) {
                    topStack_1 = stack;
                    topCount_1 = count;
                }
            });
            console.warn("[" + this.name + "] potential listener LEAK detected, having " + listenerCount + " listeners already. MOST frequent listener (" + topCount_1 + "):");
            console.warn(topStack_1);
        }
        return function () {
            var count = (_this._stacks.get(stack) || 0);
            _this._stacks.set(stack, count - 1);
        };
    };
    LeakageMonitor.ctorParameters = function () { return [
        { type: Number },
        { type: String }
    ]; };
    return LeakageMonitor;
}());
/**
 * The Emitter can be used to expose an Event to the public
 * to fire it from the insides.
 * Sample:
    class Document {

        private _onDidChange = new Emitter<(value:string)=>any>();

        public onDidChange = this._onDidChange.event;

        // getter-style
        // get onDidChange(): Event<(value:string)=>any> {
        // 	return this._onDidChange.event;
        // }

        private _doIt() {
            //...
            this._onDidChange.fire(value);
        }
    }
 */
var Emitter = /** @class */ (function () {
    function Emitter(options) {
        this._disposed = false;
        this._options = options;
        this._leakageMon = _globalLeakWarningThreshold > 0
            ? new LeakageMonitor(this._options && this._options.leakWarningThreshold)
            : undefined;
    }
    Object.defineProperty(Emitter.prototype, "event", {
        /**
         * For the public to allow to subscribe
         * to events from this Emitter
         */
        get: function () {
            var _this = this;
            if (!this._event) {
                this._event = function (listener, thisArgs, disposables) {
                    if (!_this._listeners) {
                        _this._listeners = new vs_base_common_linkedList__WEBPACK_IMPORTED_MODULE_3__["LinkedList"]();
                    }
                    var firstListener = _this._listeners.isEmpty();
                    if (firstListener && _this._options && _this._options.onFirstListenerAdd) {
                        _this._options.onFirstListenerAdd(_this);
                    }
                    var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);
                    if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {
                        _this._options.onFirstListenerDidAdd(_this);
                    }
                    if (_this._options && _this._options.onListenerDidAdd) {
                        _this._options.onListenerDidAdd(_this, listener, thisArgs);
                    }
                    // check and record this emitter for potential leakage
                    var removeMonitor;
                    if (_this._leakageMon) {
                        removeMonitor = _this._leakageMon.check(_this._listeners.size);
                    }
                    var result;
                    result = {
                        dispose: function () {
                            if (removeMonitor) {
                                removeMonitor();
                            }
                            result.dispose = Emitter._noop;
                            if (!_this._disposed) {
                                remove();
                                if (_this._options && _this._options.onLastListenerRemove) {
                                    var hasListeners = (_this._listeners && !_this._listeners.isEmpty());
                                    if (!hasListeners) {
                                        _this._options.onLastListenerRemove(_this);
                                    }
                                }
                            }
                        }
                    };
                    if (disposables instanceof vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_2__["DisposableStore"]) {
                        disposables.add(result);
                    }
                    else if (Array.isArray(disposables)) {
                        disposables.push(result);
                    }
                    return result;
                };
            }
            return this._event;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * To be kept private to fire an event to
     * subscribers
     */
    Emitter.prototype.fire = function (event) {
        if (this._listeners) {
            // put all [listener,event]-pairs into delivery queue
            // then emit all event. an inner/nested event might be
            // the driver of this
            if (!this._deliveryQueue) {
                this._deliveryQueue = new vs_base_common_linkedList__WEBPACK_IMPORTED_MODULE_3__["LinkedList"]();
            }
            for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {
                this._deliveryQueue.push([e.value, event]);
            }
            while (this._deliveryQueue.size > 0) {
                var _a = this._deliveryQueue.shift(), listener = _a[0], event_1 = _a[1];
                try {
                    if (typeof listener === 'function') {
                        listener.call(undefined, event_1);
                    }
                    else {
                        listener[0].call(listener[1], event_1);
                    }
                }
                catch (e) {
                    Object(vs_base_common_errors__WEBPACK_IMPORTED_MODULE_0__["onUnexpectedError"])(e);
                }
            }
        }
    };
    Emitter.prototype.dispose = function () {
        if (this._listeners) {
            this._listeners.clear();
        }
        if (this._deliveryQueue) {
            this._deliveryQueue.clear();
        }
        if (this._leakageMon) {
            this._leakageMon.dispose();
        }
        this._disposed = true;
    };
    Emitter._noop = function () { };
    Emitter.ctorParameters = function () { return [
        { type: undefined }
    ]; };
    return Emitter;
}());

var PauseableEmitter = /** @class */ (function (_super) {
    __extends(PauseableEmitter, _super);
    function PauseableEmitter(options) {
        var _this = _super.call(this, options) || this;
        _this._isPaused = 0;
        _this._eventQueue = new vs_base_common_linkedList__WEBPACK_IMPORTED_MODULE_3__["LinkedList"]();
        _this._mergeFn = options && options.merge;
        return _this;
    }
    PauseableEmitter.prototype.pause = function () {
        this._isPaused++;
    };
    PauseableEmitter.prototype.resume = function () {
        if (this._isPaused !== 0 && --this._isPaused === 0) {
            if (this._mergeFn) {
                // use the merge function to create a single composite
                // event. make a copy in case firing pauses this emitter
                var events = this._eventQueue.toArray();
                this._eventQueue.clear();
                _super.prototype.fire.call(this, this._mergeFn(events));
            }
            else {
                // no merging, fire each event individually and test
                // that this emitter isn't paused halfway through
                while (!this._isPaused && this._eventQueue.size !== 0) {
                    _super.prototype.fire.call(this, this._eventQueue.shift());
                }
            }
        }
    };
    PauseableEmitter.prototype.fire = function (event) {
        if (this._listeners) {
            if (this._isPaused !== 0) {
                this._eventQueue.push(event);
            }
            else {
                _super.prototype.fire.call(this, event);
            }
        }
    };
    PauseableEmitter.ctorParameters = function () { return [
        { type: undefined }
    ]; };
    return PauseableEmitter;
}(Emitter));

var AsyncEmitter = /** @class */ (function (_super) {
    __extends(AsyncEmitter, _super);
    function AsyncEmitter() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._asyncDeliveryQueue = null;
        return _this;
    }
    AsyncEmitter.prototype.fireAsync = function (eventFn) {
        return __awaiter(this, void 0, void 0, function () {
            var iter, e, thenables, _a, listener, event_2, thenables;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this._listeners) {
                            return [2 /*return*/];
                        }
                        // put all [listener,event]-pairs into delivery queue
                        // then emit all event. an inner/nested event might be
                        // the driver of this
                        if (!this._asyncDeliveryQueue) {
                            this._asyncDeliveryQueue = [];
                        }
                        for (iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {
                            thenables = [];
                            this._asyncDeliveryQueue.push([e.value, eventFn(thenables, typeof e.value === 'function' ? e.value : e.value[0]), thenables]);
                        }
                        _b.label = 1;
                    case 1:
                        if (!(this._asyncDeliveryQueue.length > 0)) return [3 /*break*/, 3];
                        _a = this._asyncDeliveryQueue.shift(), listener = _a[0], event_2 = _a[1], thenables = _a[2];
                        try {
                            if (typeof listener === 'function') {
                                listener.call(undefined, event_2);
                            }
                            else {
                                listener[0].call(listener[1], event_2);
                            }
                        }
                        catch (e) {
                            Object(vs_base_common_errors__WEBPACK_IMPORTED_MODULE_0__["onUnexpectedError"])(e);
                            return [3 /*break*/, 1];
                        }
                        // freeze thenables-collection to enforce sync-calls to
                        // wait until and then wait for all thenables to resolve
                        Object.freeze(thenables);
                        return [4 /*yield*/, Promise.all(thenables)];
                    case 2:
                        _b.sent();
                        return [3 /*break*/, 1];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    return AsyncEmitter;
}(Emitter));

var EventMultiplexer = /** @class */ (function () {
    function EventMultiplexer() {
        var _this = this;
        this.hasListeners = false;
        this.events = [];
        this.emitter = new Emitter({
            onFirstListenerAdd: function () { return _this.onFirstListenerAdd(); },
            onLastListenerRemove: function () { return _this.onLastListenerRemove(); }
        });
    }
    Object.defineProperty(EventMultiplexer.prototype, "event", {
        get: function () {
            return this.emitter.event;
        },
        enumerable: true,
        configurable: true
    });
    EventMultiplexer.prototype.add = function (event) {
        var _this = this;
        var e = { event: event, listener: null };
        this.events.push(e);
        if (this.hasListeners) {
            this.hook(e);
        }
        var dispose = function () {
            if (_this.hasListeners) {
                _this.unhook(e);
            }
            var idx = _this.events.indexOf(e);
            _this.events.splice(idx, 1);
        };
        return Object(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_2__["toDisposable"])(Object(vs_base_common_functional__WEBPACK_IMPORTED_MODULE_1__["once"])(dispose));
    };
    EventMultiplexer.prototype.onFirstListenerAdd = function () {
        var _this = this;
        this.hasListeners = true;
        this.events.forEach(function (e) { return _this.hook(e); });
    };
    EventMultiplexer.prototype.onLastListenerRemove = function () {
        var _this = this;
        this.hasListeners = false;
        this.events.forEach(function (e) { return _this.unhook(e); });
    };
    EventMultiplexer.prototype.hook = function (e) {
        var _this = this;
        e.listener = e.event(function (r) { return _this.emitter.fire(r); });
    };
    EventMultiplexer.prototype.unhook = function (e) {
        if (e.listener) {
            e.listener.dispose();
        }
        e.listener = null;
    };
    EventMultiplexer.prototype.dispose = function () {
        this.emitter.dispose();
    };
    return EventMultiplexer;
}());

/**
 * The EventBufferer is useful in situations in which you want
 * to delay firing your events during some code.
 * You can wrap that code and be sure that the event will not
 * be fired during that wrap.
 *
 * ```
 * const emitter: Emitter;
 * const delayer = new EventDelayer();
 * const delayedEvent = delayer.wrapEvent(emitter.event);
 *
 * delayedEvent(console.log);
 *
 * delayer.bufferEvents(() => {
 *   emitter.fire(); // event will not be fired yet
 * });
 *
 * // event will only be fired at this point
 * ```
 */
var EventBufferer = /** @class */ (function () {
    function EventBufferer() {
        this.buffers = [];
    }
    EventBufferer.prototype.wrapEvent = function (event) {
        var _this = this;
        return function (listener, thisArgs, disposables) {
            return event(function (i) {
                var buffer = _this.buffers[_this.buffers.length - 1];
                if (buffer) {
                    buffer.push(function () { return listener.call(thisArgs, i); });
                }
                else {
                    listener.call(thisArgs, i);
                }
            }, undefined, disposables);
        };
    };
    EventBufferer.prototype.bufferEvents = function (fn) {
        var buffer = [];
        this.buffers.push(buffer);
        var r = fn();
        this.buffers.pop();
        buffer.forEach(function (flush) { return flush(); });
        return r;
    };
    return EventBufferer;
}());

/**
 * A Relay is an event forwarder which functions as a replugabble event pipe.
 * Once created, you can connect an input event to it and it will simply forward
 * events from that input event through its own `event` property. The `input`
 * can be changed at any point in time.
 */
var Relay = /** @class */ (function () {
    function Relay() {
        var _this = this;
        this.listening = false;
        this.inputEvent = Event.None;
        this.inputEventListener = vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_2__["Disposable"].None;
        this.emitter = new Emitter({
            onFirstListenerDidAdd: function () {
                _this.listening = true;
                _this.inputEventListener = _this.inputEvent(_this.emitter.fire, _this.emitter);
            },
            onLastListenerRemove: function () {
                _this.listening = false;
                _this.inputEventListener.dispose();
            }
        });
        this.event = this.emitter.event;
    }
    Object.defineProperty(Relay.prototype, "input", {
        set: function (event) {
            this.inputEvent = event;
            if (this.listening) {
                this.inputEventListener.dispose();
                this.inputEventListener = event(this.emitter.fire, this.emitter);
            }
        },
        enumerable: true,
        configurable: true
    });
    Relay.prototype.dispose = function () {
        this.inputEventListener.dispose();
        this.emitter.dispose();
    };
    return Relay;
}());



/***/ }),

/***/ "./src/vs/base/common/filters.ts":
/*!***************************************!*\
  !*** ./src/vs/base/common/filters.ts ***!
  \***************************************/
/*! exports provided: or, matchesStrictPrefix, matchesPrefix, matchesContiguousSubString, matchesSubString, isUpper, matchesCamelCase, matchesWords, matchesFuzzy, matchesFuzzy2, anyScore, createMatches, FuzzyScore, fuzzyScore, fuzzyScoreGracefulAggressive, fuzzyScoreGraceful */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "or", function() { return or; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matchesStrictPrefix", function() { return matchesStrictPrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matchesPrefix", function() { return matchesPrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matchesContiguousSubString", function() { return matchesContiguousSubString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matchesSubString", function() { return matchesSubString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUpper", function() { return isUpper; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matchesCamelCase", function() { return matchesCamelCase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matchesWords", function() { return matchesWords; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matchesFuzzy", function() { return matchesFuzzy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matchesFuzzy2", function() { return matchesFuzzy2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "anyScore", function() { return anyScore; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMatches", function() { return createMatches; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FuzzyScore", function() { return FuzzyScore; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fuzzyScore", function() { return fuzzyScore; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fuzzyScoreGracefulAggressive", function() { return fuzzyScoreGracefulAggressive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fuzzyScoreGraceful", function() { return fuzzyScoreGraceful; });
/* harmony import */ var vs_base_common_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/map */ "./src/vs/base/common/map.ts");
/* harmony import */ var vs_base_common_strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/common/strings */ "./src/vs/base/common/strings.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/


// Combined filters
/**
 * @returns A filter which combines the provided set
 * of filters with an or. The *first* filters that
 * matches defined the return value of the returned
 * filter.
 */
function or() {
    var filter = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        filter[_i] = arguments[_i];
    }
    return function (word, wordToMatchAgainst) {
        for (var i = 0, len = filter.length; i < len; i++) {
            var match = filter[i](word, wordToMatchAgainst);
            if (match) {
                return match;
            }
        }
        return null;
    };
}
// Prefix
var matchesStrictPrefix = _matchesPrefix.bind(undefined, false);
var matchesPrefix = _matchesPrefix.bind(undefined, true);
function _matchesPrefix(ignoreCase, word, wordToMatchAgainst) {
    if (!wordToMatchAgainst || wordToMatchAgainst.length < word.length) {
        return null;
    }
    var matches;
    if (ignoreCase) {
        matches = vs_base_common_strings__WEBPACK_IMPORTED_MODULE_1__["startsWithIgnoreCase"](wordToMatchAgainst, word);
    }
    else {
        matches = wordToMatchAgainst.indexOf(word) === 0;
    }
    if (!matches) {
        return null;
    }
    return word.length > 0 ? [{ start: 0, end: word.length }] : [];
}
// Contiguous Substring
function matchesContiguousSubString(word, wordToMatchAgainst) {
    var index = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());
    if (index === -1) {
        return null;
    }
    return [{ start: index, end: index + word.length }];
}
// Substring
function matchesSubString(word, wordToMatchAgainst) {
    return _matchesSubString(word.toLowerCase(), wordToMatchAgainst.toLowerCase(), 0, 0);
}
function _matchesSubString(word, wordToMatchAgainst, i, j) {
    if (i === word.length) {
        return [];
    }
    else if (j === wordToMatchAgainst.length) {
        return null;
    }
    else {
        if (word[i] === wordToMatchAgainst[j]) {
            var result = null;
            if (result = _matchesSubString(word, wordToMatchAgainst, i + 1, j + 1)) {
                return join({ start: j, end: j + 1 }, result);
            }
            return null;
        }
        return _matchesSubString(word, wordToMatchAgainst, i, j + 1);
    }
}
// CamelCase
function isLower(code) {
    return 97 /* a */ <= code && code <= 122 /* z */;
}
function isUpper(code) {
    return 65 /* A */ <= code && code <= 90 /* Z */;
}
function isNumber(code) {
    return 48 /* Digit0 */ <= code && code <= 57 /* Digit9 */;
}
function isWhitespace(code) {
    return (code === 32 /* Space */
        || code === 9 /* Tab */
        || code === 10 /* LineFeed */
        || code === 13 /* CarriageReturn */);
}
var wordSeparators = new Set();
'`~!@#$%^&*()-=+[{]}\\|;:\'",.<>/?'
    .split('')
    .forEach(function (s) { return wordSeparators.add(s.charCodeAt(0)); });
function isWordSeparator(code) {
    return isWhitespace(code) || wordSeparators.has(code);
}
function charactersMatch(codeA, codeB) {
    return (codeA === codeB) || (isWordSeparator(codeA) && isWordSeparator(codeB));
}
function isAlphanumeric(code) {
    return isLower(code) || isUpper(code) || isNumber(code);
}
function join(head, tail) {
    if (tail.length === 0) {
        tail = [head];
    }
    else if (head.end === tail[0].start) {
        tail[0].start = head.start;
    }
    else {
        tail.unshift(head);
    }
    return tail;
}
function nextAnchor(camelCaseWord, start) {
    for (var i = start; i < camelCaseWord.length; i++) {
        var c = camelCaseWord.charCodeAt(i);
        if (isUpper(c) || isNumber(c) || (i > 0 && !isAlphanumeric(camelCaseWord.charCodeAt(i - 1)))) {
            return i;
        }
    }
    return camelCaseWord.length;
}
function _matchesCamelCase(word, camelCaseWord, i, j) {
    if (i === word.length) {
        return [];
    }
    else if (j === camelCaseWord.length) {
        return null;
    }
    else if (word[i] !== camelCaseWord[j].toLowerCase()) {
        return null;
    }
    else {
        var result = null;
        var nextUpperIndex = j + 1;
        result = _matchesCamelCase(word, camelCaseWord, i + 1, j + 1);
        while (!result && (nextUpperIndex = nextAnchor(camelCaseWord, nextUpperIndex)) < camelCaseWord.length) {
            result = _matchesCamelCase(word, camelCaseWord, i + 1, nextUpperIndex);
            nextUpperIndex++;
        }
        return result === null ? null : join({ start: j, end: j + 1 }, result);
    }
}
// Heuristic to avoid computing camel case matcher for words that don't
// look like camelCaseWords.
function analyzeCamelCaseWord(word) {
    var upper = 0, lower = 0, alpha = 0, numeric = 0, code = 0;
    for (var i = 0; i < word.length; i++) {
        code = word.charCodeAt(i);
        if (isUpper(code)) {
            upper++;
        }
        if (isLower(code)) {
            lower++;
        }
        if (isAlphanumeric(code)) {
            alpha++;
        }
        if (isNumber(code)) {
            numeric++;
        }
    }
    var upperPercent = upper / word.length;
    var lowerPercent = lower / word.length;
    var alphaPercent = alpha / word.length;
    var numericPercent = numeric / word.length;
    return { upperPercent: upperPercent, lowerPercent: lowerPercent, alphaPercent: alphaPercent, numericPercent: numericPercent };
}
function isUpperCaseWord(analysis) {
    var upperPercent = analysis.upperPercent, lowerPercent = analysis.lowerPercent;
    return lowerPercent === 0 && upperPercent > 0.6;
}
function isCamelCaseWord(analysis) {
    var upperPercent = analysis.upperPercent, lowerPercent = analysis.lowerPercent, alphaPercent = analysis.alphaPercent, numericPercent = analysis.numericPercent;
    return lowerPercent > 0.2 && upperPercent < 0.8 && alphaPercent > 0.6 && numericPercent < 0.2;
}
// Heuristic to avoid computing camel case matcher for words that don't
// look like camel case patterns.
function isCamelCasePattern(word) {
    var upper = 0, lower = 0, code = 0, whitespace = 0;
    for (var i = 0; i < word.length; i++) {
        code = word.charCodeAt(i);
        if (isUpper(code)) {
            upper++;
        }
        if (isLower(code)) {
            lower++;
        }
        if (isWhitespace(code)) {
            whitespace++;
        }
    }
    if ((upper === 0 || lower === 0) && whitespace === 0) {
        return word.length <= 30;
    }
    else {
        return upper <= 5;
    }
}
function matchesCamelCase(word, camelCaseWord) {
    if (!camelCaseWord) {
        return null;
    }
    camelCaseWord = camelCaseWord.trim();
    if (camelCaseWord.length === 0) {
        return null;
    }
    if (!isCamelCasePattern(word)) {
        return null;
    }
    if (camelCaseWord.length > 60) {
        return null;
    }
    var analysis = analyzeCamelCaseWord(camelCaseWord);
    if (!isCamelCaseWord(analysis)) {
        if (!isUpperCaseWord(analysis)) {
            return null;
        }
        camelCaseWord = camelCaseWord.toLowerCase();
    }
    var result = null;
    var i = 0;
    word = word.toLowerCase();
    while (i < camelCaseWord.length && (result = _matchesCamelCase(word, camelCaseWord, 0, i)) === null) {
        i = nextAnchor(camelCaseWord, i + 1);
    }
    return result;
}
// Matches beginning of words supporting non-ASCII languages
// If `contiguous` is true then matches word with beginnings of the words in the target. E.g. "pul" will match "Git: Pull"
// Otherwise also matches sub string of the word with beginnings of the words in the target. E.g. "gp" or "g p" will match "Git: Pull"
// Useful in cases where the target is words (e.g. command labels)
function matchesWords(word, target, contiguous) {
    if (contiguous === void 0) { contiguous = false; }
    if (!target || target.length === 0) {
        return null;
    }
    var result = null;
    var i = 0;
    word = word.toLowerCase();
    target = target.toLowerCase();
    while (i < target.length && (result = _matchesWords(word, target, 0, i, contiguous)) === null) {
        i = nextWord(target, i + 1);
    }
    return result;
}
function _matchesWords(word, target, i, j, contiguous) {
    if (i === word.length) {
        return [];
    }
    else if (j === target.length) {
        return null;
    }
    else if (!charactersMatch(word.charCodeAt(i), target.charCodeAt(j))) {
        return null;
    }
    else {
        var result = null;
        var nextWordIndex = j + 1;
        result = _matchesWords(word, target, i + 1, j + 1, contiguous);
        if (!contiguous) {
            while (!result && (nextWordIndex = nextWord(target, nextWordIndex)) < target.length) {
                result = _matchesWords(word, target, i + 1, nextWordIndex, contiguous);
                nextWordIndex++;
            }
        }
        return result === null ? null : join({ start: j, end: j + 1 }, result);
    }
}
function nextWord(word, start) {
    for (var i = start; i < word.length; i++) {
        if (isWordSeparator(word.charCodeAt(i)) ||
            (i > 0 && isWordSeparator(word.charCodeAt(i - 1)))) {
            return i;
        }
    }
    return word.length;
}
// Fuzzy
var fuzzyContiguousFilter = or(matchesPrefix, matchesCamelCase, matchesContiguousSubString);
var fuzzySeparateFilter = or(matchesPrefix, matchesCamelCase, matchesSubString);
var fuzzyRegExpCache = new vs_base_common_map__WEBPACK_IMPORTED_MODULE_0__["LRUCache"](10000); // bounded to 10000 elements
function matchesFuzzy(word, wordToMatchAgainst, enableSeparateSubstringMatching) {
    if (enableSeparateSubstringMatching === void 0) { enableSeparateSubstringMatching = false; }
    if (typeof word !== 'string' || typeof wordToMatchAgainst !== 'string') {
        return null; // return early for invalid input
    }
    // Form RegExp for wildcard matches
    var regexp = fuzzyRegExpCache.get(word);
    if (!regexp) {
        regexp = new RegExp(vs_base_common_strings__WEBPACK_IMPORTED_MODULE_1__["convertSimple2RegExpPattern"](word), 'i');
        fuzzyRegExpCache.set(word, regexp);
    }
    // RegExp Filter
    var match = regexp.exec(wordToMatchAgainst);
    if (match) {
        return [{ start: match.index, end: match.index + match[0].length }];
    }
    // Default Filter
    return enableSeparateSubstringMatching ? fuzzySeparateFilter(word, wordToMatchAgainst) : fuzzyContiguousFilter(word, wordToMatchAgainst);
}
/**
 * Match pattern againt word in a fuzzy way. As in IntelliSense and faster and more
 * powerfull than `matchesFuzzy`
 */
function matchesFuzzy2(pattern, word) {
    var score = fuzzyScore(pattern, pattern.toLowerCase(), 0, word, word.toLowerCase(), 0, true);
    return score ? createMatches(score) : null;
}
function anyScore(pattern, lowPattern, _patternPos, word, lowWord, _wordPos) {
    var result = fuzzyScore(pattern, lowPattern, 0, word, lowWord, 0, true);
    if (result) {
        return result;
    }
    var matches = 0;
    var score = 0;
    var idx = _wordPos;
    for (var patternPos = 0; patternPos < lowPattern.length && patternPos < _maxLen; ++patternPos) {
        var wordPos = lowWord.indexOf(lowPattern.charAt(patternPos), idx);
        if (wordPos >= 0) {
            score += 1;
            matches += Math.pow(2, wordPos);
            idx = wordPos + 1;
        }
        else if (matches !== 0) {
            // once we have started matching things
            // we need to match the remaining pattern
            // characters
            break;
        }
    }
    return [score, matches, _wordPos];
}
//#region --- fuzzyScore ---
function createMatches(score) {
    if (typeof score === 'undefined') {
        return [];
    }
    var matches = score[1].toString(2);
    var wordStart = score[2];
    var res = [];
    for (var pos = wordStart; pos < _maxLen; pos++) {
        if (matches[matches.length - (pos + 1)] === '1') {
            var last = res[res.length - 1];
            if (last && last.end === pos) {
                last.end = pos + 1;
            }
            else {
                res.push({ start: pos, end: pos + 1 });
            }
        }
    }
    return res;
}
var _maxLen = 53;
function initTable() {
    var table = [];
    var row = [0];
    for (var i = 1; i <= _maxLen; i++) {
        row.push(-i);
    }
    for (var i = 0; i <= _maxLen; i++) {
        var thisRow = row.slice(0);
        thisRow[0] = -i;
        table.push(thisRow);
    }
    return table;
}
var _table = initTable();
var _scores = initTable();
var _arrows = initTable();
var _debug = false;
function printTable(table, pattern, patternLen, word, wordLen) {
    function pad(s, n, pad) {
        if (pad === void 0) { pad = ' '; }
        while (s.length < n) {
            s = pad + s;
        }
        return s;
    }
    var ret = " |   |" + word.split('').map(function (c) { return pad(c, 3); }).join('|') + "\n";
    for (var i = 0; i <= patternLen; i++) {
        if (i === 0) {
            ret += ' |';
        }
        else {
            ret += pattern[i - 1] + "|";
        }
        ret += table[i].slice(0, wordLen + 1).map(function (n) { return pad(n.toString(), 3); }).join('|') + '\n';
    }
    return ret;
}
function isSeparatorAtPos(value, index) {
    if (index < 0 || index >= value.length) {
        return false;
    }
    var code = value.charCodeAt(index);
    switch (code) {
        case 95 /* Underline */:
        case 45 /* Dash */:
        case 46 /* Period */:
        case 32 /* Space */:
        case 47 /* Slash */:
        case 92 /* Backslash */:
        case 39 /* SingleQuote */:
        case 34 /* DoubleQuote */:
        case 58 /* Colon */:
        case 36 /* DollarSign */:
            return true;
        default:
            return false;
    }
}
function isWhitespaceAtPos(value, index) {
    if (index < 0 || index >= value.length) {
        return false;
    }
    var code = value.charCodeAt(index);
    switch (code) {
        case 32 /* Space */:
        case 9 /* Tab */:
            return true;
        default:
            return false;
    }
}
function isUpperCaseAtPos(pos, word, wordLow) {
    return word[pos] !== wordLow[pos];
}
function isPatternInWord(patternLow, patternPos, patternLen, wordLow, wordPos, wordLen) {
    while (patternPos < patternLen && wordPos < wordLen) {
        if (patternLow[patternPos] === wordLow[wordPos]) {
            patternPos += 1;
        }
        wordPos += 1;
    }
    return patternPos === patternLen; // pattern must be exhausted
}
var FuzzyScore;
(function (FuzzyScore) {
    /**
     * No matches and value `-100`
     */
    FuzzyScore.Default = Object.freeze([-100, 0, 0]);
    function isDefault(score) {
        return !score || (score[0] === -100 && score[1] === 0 && score[2] === 0);
    }
    FuzzyScore.isDefault = isDefault;
})(FuzzyScore || (FuzzyScore = {}));
function fuzzyScore(pattern, patternLow, patternPos, word, wordLow, wordPos, firstMatchCanBeWeak) {
    var patternLen = pattern.length > _maxLen ? _maxLen : pattern.length;
    var wordLen = word.length > _maxLen ? _maxLen : word.length;
    if (patternPos >= patternLen || wordPos >= wordLen || patternLen > wordLen) {
        return undefined;
    }
    // Run a simple check if the characters of pattern occur
    // (in order) at all in word. If that isn't the case we
    // stop because no match will be possible
    if (!isPatternInWord(patternLow, patternPos, patternLen, wordLow, wordPos, wordLen)) {
        return undefined;
    }
    var patternStartPos = patternPos;
    var wordStartPos = wordPos;
    // There will be a mach, fill in tables
    for (patternPos = patternStartPos + 1; patternPos <= patternLen; patternPos++) {
        for (wordPos = 1; wordPos <= wordLen; wordPos++) {
            var score = -1;
            if (patternLow[patternPos - 1] === wordLow[wordPos - 1]) {
                if (wordPos === (patternPos - patternStartPos)) {
                    // common prefix: `foobar <-> foobaz`
                    //                            ^^^^^
                    if (pattern[patternPos - 1] === word[wordPos - 1]) {
                        score = 7;
                    }
                    else {
                        score = 5;
                    }
                }
                else if (isUpperCaseAtPos(wordPos - 1, word, wordLow) && (wordPos === 1 || !isUpperCaseAtPos(wordPos - 2, word, wordLow))) {
                    // hitting upper-case: `foo <-> forOthers`
                    //                              ^^ ^
                    if (pattern[patternPos - 1] === word[wordPos - 1]) {
                        score = 7;
                    }
                    else {
                        score = 5;
                    }
                }
                else if (isSeparatorAtPos(wordLow, wordPos - 2) || isWhitespaceAtPos(wordLow, wordPos - 2)) {
                    // post separator: `foo <-> bar_foo`
                    //                              ^^^
                    score = 5;
                }
                else {
                    score = 1;
                }
            }
            _scores[patternPos][wordPos] = score;
            var diag = _table[patternPos - 1][wordPos - 1] + (score > 1 ? 1 : score);
            var top_1 = _table[patternPos - 1][wordPos] + -1;
            var left = _table[patternPos][wordPos - 1] + -1;
            if (left >= top_1) {
                // left or diag
                if (left > diag) {
                    _table[patternPos][wordPos] = left;
                    _arrows[patternPos][wordPos] = 4 /* Left */;
                }
                else if (left === diag) {
                    _table[patternPos][wordPos] = left;
                    _arrows[patternPos][wordPos] = 4 /* Left */ | 2 /* Diag */;
                }
                else {
                    _table[patternPos][wordPos] = diag;
                    _arrows[patternPos][wordPos] = 2 /* Diag */;
                }
            }
            else {
                // top or diag
                if (top_1 > diag) {
                    _table[patternPos][wordPos] = top_1;
                    _arrows[patternPos][wordPos] = 1 /* Top */;
                }
                else if (top_1 === diag) {
                    _table[patternPos][wordPos] = top_1;
                    _arrows[patternPos][wordPos] = 1 /* Top */ | 2 /* Diag */;
                }
                else {
                    _table[patternPos][wordPos] = diag;
                    _arrows[patternPos][wordPos] = 2 /* Diag */;
                }
            }
        }
    }
    if (_debug) {
        console.log(printTable(_table, pattern, patternLen, word, wordLen));
        console.log(printTable(_arrows, pattern, patternLen, word, wordLen));
        console.log(printTable(_scores, pattern, patternLen, word, wordLen));
    }
    _matchesCount = 0;
    _topScore = -100;
    _patternStartPos = patternStartPos;
    _firstMatchCanBeWeak = firstMatchCanBeWeak;
    _findAllMatches2(patternLen, wordLen, patternLen === wordLen ? 1 : 0, 0, false);
    if (_matchesCount === 0) {
        return undefined;
    }
    return [_topScore, _topMatch2, wordStartPos];
}
var _matchesCount = 0;
var _topMatch2 = 0;
var _topScore = 0;
var _patternStartPos = 0;
var _firstMatchCanBeWeak = false;
function _findAllMatches2(patternPos, wordPos, total, matches, lastMatched) {
    if (_matchesCount >= 10 || total < -25) {
        // stop when having already 10 results, or
        // when a potential alignment as already 5 gaps
        return;
    }
    var simpleMatchCount = 0;
    while (patternPos > _patternStartPos && wordPos > 0) {
        var score = _scores[patternPos][wordPos];
        var arrow = _arrows[patternPos][wordPos];
        if (arrow === 4 /* Left */) {
            // left -> no match, skip a word character
            wordPos -= 1;
            if (lastMatched) {
                total -= 5; // new gap penalty
            }
            else if (matches !== 0) {
                total -= 1; // gap penalty after first match
            }
            lastMatched = false;
            simpleMatchCount = 0;
        }
        else if (arrow & 2 /* Diag */) {
            if (arrow & 4 /* Left */) {
                // left
                _findAllMatches2(patternPos, wordPos - 1, matches !== 0 ? total - 1 : total, // gap penalty after first match
                matches, lastMatched);
            }
            // diag
            total += score;
            patternPos -= 1;
            wordPos -= 1;
            lastMatched = true;
            // match -> set a 1 at the word pos
            matches += Math.pow(2, wordPos);
            // count simple matches and boost a row of
            // simple matches when they yield in a
            // strong match.
            if (score === 1) {
                simpleMatchCount += 1;
                if (patternPos === _patternStartPos && !_firstMatchCanBeWeak) {
                    // when the first match is a weak
                    // match we discard it
                    return undefined;
                }
            }
            else {
                // boost
                total += 1 + (simpleMatchCount * (score - 1));
                simpleMatchCount = 0;
            }
        }
        else {
            return undefined;
        }
    }
    total -= wordPos >= 3 ? 9 : wordPos * 3; // late start penalty
    // dynamically keep track of the current top score
    // and insert the current best score at head, the rest at tail
    _matchesCount += 1;
    if (total > _topScore) {
        _topScore = total;
        _topMatch2 = matches;
    }
}
//#endregion
//#region --- graceful ---
function fuzzyScoreGracefulAggressive(pattern, lowPattern, patternPos, word, lowWord, wordPos, firstMatchCanBeWeak) {
    return fuzzyScoreWithPermutations(pattern, lowPattern, patternPos, word, lowWord, wordPos, true, firstMatchCanBeWeak);
}
function fuzzyScoreGraceful(pattern, lowPattern, patternPos, word, lowWord, wordPos, firstMatchCanBeWeak) {
    return fuzzyScoreWithPermutations(pattern, lowPattern, patternPos, word, lowWord, wordPos, false, firstMatchCanBeWeak);
}
function fuzzyScoreWithPermutations(pattern, lowPattern, patternPos, word, lowWord, wordPos, aggressive, firstMatchCanBeWeak) {
    var top = fuzzyScore(pattern, lowPattern, patternPos, word, lowWord, wordPos, firstMatchCanBeWeak);
    if (top && !aggressive) {
        // when using the original pattern yield a result we`
        // return it unless we are aggressive and try to find
        // a better alignment, e.g. `cno` -> `^co^ns^ole` or `^c^o^nsole`.
        return top;
    }
    if (pattern.length >= 3) {
        // When the pattern is long enough then try a few (max 7)
        // permutations of the pattern to find a better match. The
        // permutations only swap neighbouring characters, e.g
        // `cnoso` becomes `conso`, `cnsoo`, `cnoos`.
        var tries = Math.min(7, pattern.length - 1);
        for (var movingPatternPos = patternPos + 1; movingPatternPos < tries; movingPatternPos++) {
            var newPattern = nextTypoPermutation(pattern, movingPatternPos);
            if (newPattern) {
                var candidate = fuzzyScore(newPattern, newPattern.toLowerCase(), patternPos, word, lowWord, wordPos, firstMatchCanBeWeak);
                if (candidate) {
                    candidate[0] -= 3; // permutation penalty
                    if (!top || candidate[0] > top[0]) {
                        top = candidate;
                    }
                }
            }
        }
    }
    return top;
}
function nextTypoPermutation(pattern, patternPos) {
    if (patternPos + 1 >= pattern.length) {
        return undefined;
    }
    var swap1 = pattern[patternPos];
    var swap2 = pattern[patternPos + 1];
    if (swap1 === swap2) {
        return undefined;
    }
    return pattern.slice(0, patternPos)
        + swap2
        + swap1
        + pattern.slice(patternPos + 2);
}
//#endregion


/***/ }),

/***/ "./src/vs/base/common/functional.ts":
/*!******************************************!*\
  !*** ./src/vs/base/common/functional.ts ***!
  \******************************************/
/*! exports provided: once */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "once", function() { return once; });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
function once(fn) {
    var _this = this;
    var didCall = false;
    var result;
    return function () {
        if (didCall) {
            return result;
        }
        didCall = true;
        result = fn.apply(_this, arguments);
        return result;
    };
}


/***/ }),

/***/ "./src/vs/base/common/iterator.ts":
/*!****************************************!*\
  !*** ./src/vs/base/common/iterator.ts ***!
  \****************************************/
/*! exports provided: FIN, Iterator, getSequenceIterator, ArrayIterator, ArrayNavigator, MappedIterator, MappedNavigator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FIN", function() { return FIN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Iterator", function() { return Iterator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSequenceIterator", function() { return getSequenceIterator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArrayIterator", function() { return ArrayIterator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArrayNavigator", function() { return ArrayNavigator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MappedIterator", function() { return MappedIterator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MappedNavigator", function() { return MappedNavigator; });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var FIN = { done: true, value: undefined };
var Iterator;
(function (Iterator) {
    var _empty = {
        next: function () {
            return FIN;
        }
    };
    function empty() {
        return _empty;
    }
    Iterator.empty = empty;
    function fromArray(array, index, length) {
        if (index === void 0) { index = 0; }
        if (length === void 0) { length = array.length; }
        return {
            next: function () {
                if (index >= length) {
                    return FIN;
                }
                return { done: false, value: array[index++] };
            }
        };
    }
    Iterator.fromArray = fromArray;
    function from(elements) {
        if (!elements) {
            return Iterator.empty();
        }
        else if (Array.isArray(elements)) {
            return Iterator.fromArray(elements);
        }
        else {
            return elements;
        }
    }
    Iterator.from = from;
    function map(iterator, fn) {
        return {
            next: function () {
                var element = iterator.next();
                if (element.done) {
                    return FIN;
                }
                else {
                    return { done: false, value: fn(element.value) };
                }
            }
        };
    }
    Iterator.map = map;
    function filter(iterator, fn) {
        return {
            next: function () {
                while (true) {
                    var element = iterator.next();
                    if (element.done) {
                        return FIN;
                    }
                    if (fn(element.value)) {
                        return { done: false, value: element.value };
                    }
                }
            }
        };
    }
    Iterator.filter = filter;
    function forEach(iterator, fn) {
        for (var next = iterator.next(); !next.done; next = iterator.next()) {
            fn(next.value);
        }
    }
    Iterator.forEach = forEach;
    function collect(iterator) {
        var result = [];
        forEach(iterator, function (value) { return result.push(value); });
        return result;
    }
    Iterator.collect = collect;
})(Iterator || (Iterator = {}));
function getSequenceIterator(arg) {
    if (Array.isArray(arg)) {
        return Iterator.fromArray(arg);
    }
    else {
        return arg;
    }
}
var ArrayIterator = /** @class */ (function () {
    function ArrayIterator(items, start, end, index) {
        if (start === void 0) { start = 0; }
        if (end === void 0) { end = items.length; }
        if (index === void 0) { index = start - 1; }
        this.items = items;
        this.start = start;
        this.end = end;
        this.index = index;
    }
    ArrayIterator.prototype.first = function () {
        this.index = this.start;
        return this.current();
    };
    ArrayIterator.prototype.next = function () {
        this.index = Math.min(this.index + 1, this.end);
        return this.current();
    };
    ArrayIterator.prototype.current = function () {
        if (this.index === this.start - 1 || this.index === this.end) {
            return null;
        }
        return this.items[this.index];
    };
    ArrayIterator.ctorParameters = function () { return [
        { type: Array },
        { type: Number },
        { type: Number },
        null
    ]; };
    return ArrayIterator;
}());

var ArrayNavigator = /** @class */ (function (_super) {
    __extends(ArrayNavigator, _super);
    function ArrayNavigator(items, start, end, index) {
        if (start === void 0) { start = 0; }
        if (end === void 0) { end = items.length; }
        if (index === void 0) { index = start - 1; }
        return _super.call(this, items, start, end, index) || this;
    }
    ArrayNavigator.prototype.current = function () {
        return _super.prototype.current.call(this);
    };
    ArrayNavigator.prototype.previous = function () {
        this.index = Math.max(this.index - 1, this.start - 1);
        return this.current();
    };
    ArrayNavigator.prototype.first = function () {
        this.index = this.start;
        return this.current();
    };
    ArrayNavigator.prototype.last = function () {
        this.index = this.end - 1;
        return this.current();
    };
    ArrayNavigator.prototype.parent = function () {
        return null;
    };
    ArrayNavigator.ctorParameters = function () { return [
        { type: Array },
        { type: Number },
        { type: Number },
        null
    ]; };
    return ArrayNavigator;
}(ArrayIterator));

var MappedIterator = /** @class */ (function () {
    function MappedIterator(iterator, fn) {
        this.iterator = iterator;
        this.fn = fn;
        // noop
    }
    MappedIterator.prototype.next = function () {
        return this.fn(this.iterator.next());
    };
    MappedIterator.ctorParameters = function () { return [
        { type: undefined },
        { type: Function }
    ]; };
    return MappedIterator;
}());

var MappedNavigator = /** @class */ (function (_super) {
    __extends(MappedNavigator, _super);
    function MappedNavigator(navigator, fn) {
        var _this = _super.call(this, navigator, fn) || this;
        _this.navigator = navigator;
        return _this;
    }
    MappedNavigator.prototype.current = function () {
        return this.fn(this.navigator.current());
    };
    MappedNavigator.prototype.previous = function () {
        return this.fn(this.navigator.previous());
    };
    MappedNavigator.prototype.parent = function () {
        return this.fn(this.navigator.parent());
    };
    MappedNavigator.prototype.first = function () {
        return this.fn(this.navigator.first());
    };
    MappedNavigator.prototype.last = function () {
        return this.fn(this.navigator.last());
    };
    MappedNavigator.prototype.next = function () {
        return this.fn(this.navigator.next());
    };
    MappedNavigator.ctorParameters = function () { return [
        { type: undefined },
        { type: Function }
    ]; };
    return MappedNavigator;
}(MappedIterator));



/***/ }),

/***/ "./src/vs/base/common/keyCodes.ts":
/*!****************************************!*\
  !*** ./src/vs/base/common/keyCodes.ts ***!
  \****************************************/
/*! exports provided: KeyCodeUtils, KeyChord, createKeybinding, createSimpleKeybinding, SimpleKeybinding, ChordKeybinding, ResolvedKeybindingPart, ResolvedKeybinding */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeyCodeUtils", function() { return KeyCodeUtils; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeyChord", function() { return KeyChord; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createKeybinding", function() { return createKeybinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSimpleKeybinding", function() { return createSimpleKeybinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SimpleKeybinding", function() { return SimpleKeybinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChordKeybinding", function() { return ChordKeybinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResolvedKeybindingPart", function() { return ResolvedKeybindingPart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResolvedKeybinding", function() { return ResolvedKeybinding; });
/* harmony import */ var vs_base_common_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/errors */ "./src/vs/base/common/errors.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

var KeyCodeStrMap = /** @class */ (function () {
    function KeyCodeStrMap() {
        this._keyCodeToStr = [];
        this._strToKeyCode = Object.create(null);
    }
    KeyCodeStrMap.prototype.define = function (keyCode, str) {
        this._keyCodeToStr[keyCode] = str;
        this._strToKeyCode[str.toLowerCase()] = keyCode;
    };
    KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {
        return this._keyCodeToStr[keyCode];
    };
    KeyCodeStrMap.prototype.strToKeyCode = function (str) {
        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;
    };
    return KeyCodeStrMap;
}());
var uiMap = new KeyCodeStrMap();
var userSettingsUSMap = new KeyCodeStrMap();
var userSettingsGeneralMap = new KeyCodeStrMap();
(function () {
    function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {
        if (usUserSettingsLabel === void 0) { usUserSettingsLabel = uiLabel; }
        if (generalUserSettingsLabel === void 0) { generalUserSettingsLabel = usUserSettingsLabel; }
        uiMap.define(keyCode, uiLabel);
        userSettingsUSMap.define(keyCode, usUserSettingsLabel);
        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);
    }
    define(0 /* Unknown */, 'unknown');
    define(1 /* Backspace */, 'Backspace');
    define(2 /* Tab */, 'Tab');
    define(3 /* Enter */, 'Enter');
    define(4 /* Shift */, 'Shift');
    define(5 /* Ctrl */, 'Ctrl');
    define(6 /* Alt */, 'Alt');
    define(7 /* PauseBreak */, 'PauseBreak');
    define(8 /* CapsLock */, 'CapsLock');
    define(9 /* Escape */, 'Escape');
    define(10 /* Space */, 'Space');
    define(11 /* PageUp */, 'PageUp');
    define(12 /* PageDown */, 'PageDown');
    define(13 /* End */, 'End');
    define(14 /* Home */, 'Home');
    define(15 /* LeftArrow */, 'LeftArrow', 'Left');
    define(16 /* UpArrow */, 'UpArrow', 'Up');
    define(17 /* RightArrow */, 'RightArrow', 'Right');
    define(18 /* DownArrow */, 'DownArrow', 'Down');
    define(19 /* Insert */, 'Insert');
    define(20 /* Delete */, 'Delete');
    define(21 /* KEY_0 */, '0');
    define(22 /* KEY_1 */, '1');
    define(23 /* KEY_2 */, '2');
    define(24 /* KEY_3 */, '3');
    define(25 /* KEY_4 */, '4');
    define(26 /* KEY_5 */, '5');
    define(27 /* KEY_6 */, '6');
    define(28 /* KEY_7 */, '7');
    define(29 /* KEY_8 */, '8');
    define(30 /* KEY_9 */, '9');
    define(31 /* KEY_A */, 'A');
    define(32 /* KEY_B */, 'B');
    define(33 /* KEY_C */, 'C');
    define(34 /* KEY_D */, 'D');
    define(35 /* KEY_E */, 'E');
    define(36 /* KEY_F */, 'F');
    define(37 /* KEY_G */, 'G');
    define(38 /* KEY_H */, 'H');
    define(39 /* KEY_I */, 'I');
    define(40 /* KEY_J */, 'J');
    define(41 /* KEY_K */, 'K');
    define(42 /* KEY_L */, 'L');
    define(43 /* KEY_M */, 'M');
    define(44 /* KEY_N */, 'N');
    define(45 /* KEY_O */, 'O');
    define(46 /* KEY_P */, 'P');
    define(47 /* KEY_Q */, 'Q');
    define(48 /* KEY_R */, 'R');
    define(49 /* KEY_S */, 'S');
    define(50 /* KEY_T */, 'T');
    define(51 /* KEY_U */, 'U');
    define(52 /* KEY_V */, 'V');
    define(53 /* KEY_W */, 'W');
    define(54 /* KEY_X */, 'X');
    define(55 /* KEY_Y */, 'Y');
    define(56 /* KEY_Z */, 'Z');
    define(57 /* Meta */, 'Meta');
    define(58 /* ContextMenu */, 'ContextMenu');
    define(59 /* F1 */, 'F1');
    define(60 /* F2 */, 'F2');
    define(61 /* F3 */, 'F3');
    define(62 /* F4 */, 'F4');
    define(63 /* F5 */, 'F5');
    define(64 /* F6 */, 'F6');
    define(65 /* F7 */, 'F7');
    define(66 /* F8 */, 'F8');
    define(67 /* F9 */, 'F9');
    define(68 /* F10 */, 'F10');
    define(69 /* F11 */, 'F11');
    define(70 /* F12 */, 'F12');
    define(71 /* F13 */, 'F13');
    define(72 /* F14 */, 'F14');
    define(73 /* F15 */, 'F15');
    define(74 /* F16 */, 'F16');
    define(75 /* F17 */, 'F17');
    define(76 /* F18 */, 'F18');
    define(77 /* F19 */, 'F19');
    define(78 /* NumLock */, 'NumLock');
    define(79 /* ScrollLock */, 'ScrollLock');
    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');
    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');
    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');
    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');
    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');
    define(85 /* US_SLASH */, '/', '/', 'OEM_2');
    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');
    define(110 /* ABNT_C1 */, 'ABNT_C1');
    define(111 /* ABNT_C2 */, 'ABNT_C2');
    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');
    define(88 /* US_BACKSLASH */, '\\', '\\', 'OEM_5');
    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');
    define(90 /* US_QUOTE */, '\'', '\'', 'OEM_7');
    define(91 /* OEM_8 */, 'OEM_8');
    define(92 /* OEM_102 */, 'OEM_102');
    define(93 /* NUMPAD_0 */, 'NumPad0');
    define(94 /* NUMPAD_1 */, 'NumPad1');
    define(95 /* NUMPAD_2 */, 'NumPad2');
    define(96 /* NUMPAD_3 */, 'NumPad3');
    define(97 /* NUMPAD_4 */, 'NumPad4');
    define(98 /* NUMPAD_5 */, 'NumPad5');
    define(99 /* NUMPAD_6 */, 'NumPad6');
    define(100 /* NUMPAD_7 */, 'NumPad7');
    define(101 /* NUMPAD_8 */, 'NumPad8');
    define(102 /* NUMPAD_9 */, 'NumPad9');
    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');
    define(104 /* NUMPAD_ADD */, 'NumPad_Add');
    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');
    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');
    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');
    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');
})();
var KeyCodeUtils;
(function (KeyCodeUtils) {
    function toString(keyCode) {
        return uiMap.keyCodeToStr(keyCode);
    }
    KeyCodeUtils.toString = toString;
    function fromString(key) {
        return uiMap.strToKeyCode(key);
    }
    KeyCodeUtils.fromString = fromString;
    function toUserSettingsUS(keyCode) {
        return userSettingsUSMap.keyCodeToStr(keyCode);
    }
    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;
    function toUserSettingsGeneral(keyCode) {
        return userSettingsGeneralMap.keyCodeToStr(keyCode);
    }
    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;
    function fromUserSettings(key) {
        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);
    }
    KeyCodeUtils.fromUserSettings = fromUserSettings;
})(KeyCodeUtils || (KeyCodeUtils = {}));
function KeyChord(firstPart, secondPart) {
    var chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;
    return (firstPart | chordPart) >>> 0;
}
function createKeybinding(keybinding, OS) {
    if (keybinding === 0) {
        return null;
    }
    var firstPart = (keybinding & 0x0000FFFF) >>> 0;
    var chordPart = (keybinding & 0xFFFF0000) >>> 16;
    if (chordPart !== 0) {
        return new ChordKeybinding([
            createSimpleKeybinding(firstPart, OS),
            createSimpleKeybinding(chordPart, OS)
        ]);
    }
    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);
}
function createSimpleKeybinding(keybinding, OS) {
    var ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);
    var winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);
    var ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);
    var shiftKey = (keybinding & 1024 /* Shift */ ? true : false);
    var altKey = (keybinding & 512 /* Alt */ ? true : false);
    var metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);
    var keyCode = (keybinding & 255 /* KeyCode */);
    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);
}
var SimpleKeybinding = /** @class */ (function () {
    function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {
        this.ctrlKey = ctrlKey;
        this.shiftKey = shiftKey;
        this.altKey = altKey;
        this.metaKey = metaKey;
        this.keyCode = keyCode;
    }
    SimpleKeybinding.prototype.equals = function (other) {
        return (this.ctrlKey === other.ctrlKey
            && this.shiftKey === other.shiftKey
            && this.altKey === other.altKey
            && this.metaKey === other.metaKey
            && this.keyCode === other.keyCode);
    };
    SimpleKeybinding.prototype.getHashCode = function () {
        var ctrl = this.ctrlKey ? '1' : '0';
        var shift = this.shiftKey ? '1' : '0';
        var alt = this.altKey ? '1' : '0';
        var meta = this.metaKey ? '1' : '0';
        return "" + ctrl + shift + alt + meta + this.keyCode;
    };
    SimpleKeybinding.prototype.isModifierKey = function () {
        return (this.keyCode === 0 /* Unknown */
            || this.keyCode === 5 /* Ctrl */
            || this.keyCode === 57 /* Meta */
            || this.keyCode === 6 /* Alt */
            || this.keyCode === 4 /* Shift */);
    };
    SimpleKeybinding.prototype.toChord = function () {
        return new ChordKeybinding([this]);
    };
    /**
     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?
     */
    SimpleKeybinding.prototype.isDuplicateModifierCase = function () {
        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)
            || (this.shiftKey && this.keyCode === 4 /* Shift */)
            || (this.altKey && this.keyCode === 6 /* Alt */)
            || (this.metaKey && this.keyCode === 57 /* Meta */));
    };
    SimpleKeybinding.ctorParameters = function () { return [
        { type: Boolean },
        { type: Boolean },
        { type: Boolean },
        { type: Boolean },
        { type: undefined }
    ]; };
    return SimpleKeybinding;
}());

var ChordKeybinding = /** @class */ (function () {
    function ChordKeybinding(parts) {
        if (parts.length === 0) {
            throw Object(vs_base_common_errors__WEBPACK_IMPORTED_MODULE_0__["illegalArgument"])("parts");
        }
        this.parts = parts;
    }
    ChordKeybinding.prototype.getHashCode = function () {
        var result = '';
        for (var i = 0, len = this.parts.length; i < len; i++) {
            if (i !== 0) {
                result += ';';
            }
            result += this.parts[i].getHashCode();
        }
        return result;
    };
    ChordKeybinding.prototype.equals = function (other) {
        if (other === null) {
            return false;
        }
        if (this.parts.length !== other.parts.length) {
            return false;
        }
        for (var i = 0; i < this.parts.length; i++) {
            if (!this.parts[i].equals(other.parts[i])) {
                return false;
            }
        }
        return true;
    };
    ChordKeybinding.ctorParameters = function () { return [
        { type: Array }
    ]; };
    return ChordKeybinding;
}());

var ResolvedKeybindingPart = /** @class */ (function () {
    function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {
        this.ctrlKey = ctrlKey;
        this.shiftKey = shiftKey;
        this.altKey = altKey;
        this.metaKey = metaKey;
        this.keyLabel = kbLabel;
        this.keyAriaLabel = kbAriaLabel;
    }
    ResolvedKeybindingPart.ctorParameters = function () { return [
        { type: Boolean },
        { type: Boolean },
        { type: Boolean },
        { type: Boolean },
        { type: undefined },
        { type: undefined }
    ]; };
    return ResolvedKeybindingPart;
}());

/**
 * A resolved keybinding. Can be a simple keybinding or a chord keybinding.
 */
var ResolvedKeybinding = /** @class */ (function () {
    function ResolvedKeybinding() {
    }
    return ResolvedKeybinding;
}());



/***/ }),

/***/ "./src/vs/base/common/lifecycle.ts":
/*!*****************************************!*\
  !*** ./src/vs/base/common/lifecycle.ts ***!
  \*****************************************/
/*! exports provided: isDisposable, dispose, combinedDisposable, toDisposable, DisposableStore, Disposable, MutableDisposable, ReferenceCollection, ImmortalReference */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDisposable", function() { return isDisposable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dispose", function() { return dispose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combinedDisposable", function() { return combinedDisposable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toDisposable", function() { return toDisposable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DisposableStore", function() { return DisposableStore; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Disposable", function() { return Disposable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MutableDisposable", function() { return MutableDisposable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReferenceCollection", function() { return ReferenceCollection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImmortalReference", function() { return ImmortalReference; });
/* harmony import */ var vs_base_common_functional__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/functional */ "./src/vs/base/common/functional.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

/**
 * Enables logging of potentially leaked disposables.
 *
 * A disposable is considered leaked if it is not disposed or not registered as the child of
 * another disposable. This tracking is very simple an only works for classes that either
 * extend Disposable or use a DisposableStore. This means there are a lot of false positives.
 */
var TRACK_DISPOSABLES = false;
var __is_disposable_tracked__ = '__is_disposable_tracked__';
function markTracked(x) {
    if (!TRACK_DISPOSABLES) {
        return;
    }
    if (x && x !== Disposable.None) {
        try {
            x[__is_disposable_tracked__] = true;
        }
        catch (_a) {
            // noop
        }
    }
}
function trackDisposable(x) {
    if (!TRACK_DISPOSABLES) {
        return x;
    }
    var stack = new Error('Potentially leaked disposable').stack;
    setTimeout(function () {
        if (!x[__is_disposable_tracked__]) {
            console.log(stack);
        }
    }, 3000);
    return x;
}
function isDisposable(thing) {
    return typeof thing.dispose === 'function'
        && thing.dispose.length === 0;
}
function dispose(disposables) {
    if (Array.isArray(disposables)) {
        disposables.forEach(function (d) {
            if (d) {
                markTracked(d);
                d.dispose();
            }
        });
        return [];
    }
    else if (disposables) {
        markTracked(disposables);
        disposables.dispose();
        return disposables;
    }
    else {
        return undefined;
    }
}
function combinedDisposable() {
    var disposables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        disposables[_i] = arguments[_i];
    }
    disposables.forEach(markTracked);
    return trackDisposable({ dispose: function () { return dispose(disposables); } });
}
function toDisposable(fn) {
    return trackDisposable({ dispose: fn });
}
var DisposableStore = /** @class */ (function () {
    function DisposableStore() {
        this._toDispose = new Set();
        this._isDisposed = false;
    }
    /**
     * Dispose of all registered disposables and mark this object as disposed.
     *
     * Any future disposables added to this object will be disposed of on `add`.
     */
    DisposableStore.prototype.dispose = function () {
        if (this._isDisposed) {
            return;
        }
        markTracked(this);
        this._isDisposed = true;
        this.clear();
    };
    /**
     * Dispose of all registered disposables but do not mark this object as disposed.
     */
    DisposableStore.prototype.clear = function () {
        this._toDispose.forEach(function (item) { return item.dispose(); });
        this._toDispose.clear();
    };
    DisposableStore.prototype.add = function (t) {
        if (!t) {
            return t;
        }
        if (t === this) {
            throw new Error('Cannot register a disposable on itself!');
        }
        markTracked(t);
        if (this._isDisposed) {
            console.warn(new Error('Registering disposable on object that has already been disposed of').stack);
            t.dispose();
        }
        else {
            this._toDispose.add(t);
        }
        return t;
    };
    return DisposableStore;
}());

var Disposable = /** @class */ (function () {
    function Disposable() {
        this._store = new DisposableStore();
        trackDisposable(this);
    }
    Disposable.prototype.dispose = function () {
        markTracked(this);
        this._store.dispose();
    };
    Disposable.prototype._register = function (t) {
        if (t === this) {
            throw new Error('Cannot register a disposable on itself!');
        }
        return this._store.add(t);
    };
    Disposable.None = Object.freeze({ dispose: function () { } });
    return Disposable;
}());

/**
 * Manages the lifecycle of a disposable value that may be changed.
 *
 * This ensures that when the the disposable value is changed, the previously held disposable is disposed of. You can
 * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.
 */
var MutableDisposable = /** @class */ (function () {
    function MutableDisposable() {
        this._isDisposed = false;
        trackDisposable(this);
    }
    Object.defineProperty(MutableDisposable.prototype, "value", {
        get: function () {
            return this._isDisposed ? undefined : this._value;
        },
        set: function (value) {
            if (this._isDisposed || value === this._value) {
                return;
            }
            if (this._value) {
                this._value.dispose();
            }
            if (value) {
                markTracked(value);
            }
            this._value = value;
        },
        enumerable: true,
        configurable: true
    });
    MutableDisposable.prototype.clear = function () {
        this.value = undefined;
    };
    MutableDisposable.prototype.dispose = function () {
        this._isDisposed = true;
        markTracked(this);
        if (this._value) {
            this._value.dispose();
        }
        this._value = undefined;
    };
    return MutableDisposable;
}());

var ReferenceCollection = /** @class */ (function () {
    function ReferenceCollection() {
        this.references = new Map();
    }
    ReferenceCollection.prototype.acquire = function (key) {
        var _this = this;
        var reference = this.references.get(key);
        if (!reference) {
            reference = { counter: 0, object: this.createReferencedObject(key) };
            this.references.set(key, reference);
        }
        var object = reference.object;
        var dispose = Object(vs_base_common_functional__WEBPACK_IMPORTED_MODULE_0__["once"])(function () {
            if (--reference.counter === 0) {
                _this.destroyReferencedObject(key, reference.object);
                _this.references.delete(key);
            }
        });
        reference.counter++;
        return { object: object, dispose: dispose };
    };
    return ReferenceCollection;
}());

var ImmortalReference = /** @class */ (function () {
    function ImmortalReference(object) {
        this.object = object;
    }
    ImmortalReference.prototype.dispose = function () { };
    ImmortalReference.ctorParameters = function () { return [
        { type: undefined }
    ]; };
    return ImmortalReference;
}());



/***/ }),

/***/ "./src/vs/base/common/linkedList.ts":
/*!******************************************!*\
  !*** ./src/vs/base/common/linkedList.ts ***!
  \******************************************/
/*! exports provided: LinkedList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LinkedList", function() { return LinkedList; });
/* harmony import */ var vs_base_common_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/iterator */ "./src/vs/base/common/iterator.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

var Node = /** @class */ (function () {
    function Node(element) {
        this.element = element;
        this.next = Node.Undefined;
        this.prev = Node.Undefined;
    }
    Node.Undefined = new Node(undefined);
    Node.ctorParameters = function () { return [
        { type: undefined }
    ]; };
    return Node;
}());
var LinkedList = /** @class */ (function () {
    function LinkedList() {
        this._first = Node.Undefined;
        this._last = Node.Undefined;
        this._size = 0;
    }
    Object.defineProperty(LinkedList.prototype, "size", {
        get: function () {
            return this._size;
        },
        enumerable: true,
        configurable: true
    });
    LinkedList.prototype.isEmpty = function () {
        return this._first === Node.Undefined;
    };
    LinkedList.prototype.clear = function () {
        this._first = Node.Undefined;
        this._last = Node.Undefined;
        this._size = 0;
    };
    LinkedList.prototype.unshift = function (element) {
        return this._insert(element, false);
    };
    LinkedList.prototype.push = function (element) {
        return this._insert(element, true);
    };
    LinkedList.prototype._insert = function (element, atTheEnd) {
        var _this = this;
        var newNode = new Node(element);
        if (this._first === Node.Undefined) {
            this._first = newNode;
            this._last = newNode;
        }
        else if (atTheEnd) {
            // push
            var oldLast = this._last;
            this._last = newNode;
            newNode.prev = oldLast;
            oldLast.next = newNode;
        }
        else {
            // unshift
            var oldFirst = this._first;
            this._first = newNode;
            newNode.next = oldFirst;
            oldFirst.prev = newNode;
        }
        this._size += 1;
        var didRemove = false;
        return function () {
            if (!didRemove) {
                didRemove = true;
                _this._remove(newNode);
            }
        };
    };
    LinkedList.prototype.shift = function () {
        if (this._first === Node.Undefined) {
            return undefined;
        }
        else {
            var res = this._first.element;
            this._remove(this._first);
            return res;
        }
    };
    LinkedList.prototype.pop = function () {
        if (this._last === Node.Undefined) {
            return undefined;
        }
        else {
            var res = this._last.element;
            this._remove(this._last);
            return res;
        }
    };
    LinkedList.prototype._remove = function (node) {
        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {
            // middle
            var anchor = node.prev;
            anchor.next = node.next;
            node.next.prev = anchor;
        }
        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {
            // only node
            this._first = Node.Undefined;
            this._last = Node.Undefined;
        }
        else if (node.next === Node.Undefined) {
            // last
            this._last = this._last.prev;
            this._last.next = Node.Undefined;
        }
        else if (node.prev === Node.Undefined) {
            // first
            this._first = this._first.next;
            this._first.prev = Node.Undefined;
        }
        // done
        this._size -= 1;
    };
    LinkedList.prototype.iterator = function () {
        var element;
        var node = this._first;
        return {
            next: function () {
                if (node === Node.Undefined) {
                    return vs_base_common_iterator__WEBPACK_IMPORTED_MODULE_0__["FIN"];
                }
                if (!element) {
                    element = { done: false, value: node.element };
                }
                else {
                    element.value = node.element;
                }
                node = node.next;
                return element;
            }
        };
    };
    LinkedList.prototype.toArray = function () {
        var result = [];
        for (var node = this._first; node !== Node.Undefined; node = node.next) {
            result.push(node.element);
        }
        return result;
    };
    return LinkedList;
}());



/***/ }),

/***/ "./src/vs/base/common/map.ts":
/*!***********************************!*\
  !*** ./src/vs/base/common/map.ts ***!
  \***********************************/
/*! exports provided: values, keys, getOrSet, mapToString, setToString, mapToSerializable, serializableToMap, StringIterator, PathIterator, TernarySearchTree, ResourceMap, LinkedMap, LRUCache */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "values", function() { return values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keys", function() { return keys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getOrSet", function() { return getOrSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapToString", function() { return mapToString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setToString", function() { return setToString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapToSerializable", function() { return mapToSerializable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "serializableToMap", function() { return serializableToMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StringIterator", function() { return StringIterator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PathIterator", function() { return PathIterator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TernarySearchTree", function() { return TernarySearchTree; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResourceMap", function() { return ResourceMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LinkedMap", function() { return LinkedMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LRUCache", function() { return LRUCache; });
/* harmony import */ var vs_base_common_uri__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/uri */ "./src/vs/base/common/uri.ts");
/* harmony import */ var _iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterator */ "./src/vs/base/common/iterator.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


function values(forEachable) {
    var result = [];
    forEachable.forEach(function (value) { return result.push(value); });
    return result;
}
function keys(map) {
    var result = [];
    map.forEach(function (value, key) { return result.push(key); });
    return result;
}
function getOrSet(map, key, value) {
    var result = map.get(key);
    if (result === undefined) {
        result = value;
        map.set(key, result);
    }
    return result;
}
function mapToString(map) {
    var entries = [];
    map.forEach(function (value, key) {
        entries.push(key + " => " + value);
    });
    return "Map(" + map.size + ") {" + entries.join(', ') + "}";
}
function setToString(set) {
    var entries = [];
    set.forEach(function (value) {
        entries.push(value);
    });
    return "Set(" + set.size + ") {" + entries.join(', ') + "}";
}
function mapToSerializable(map) {
    var serializable = [];
    map.forEach(function (value, key) {
        serializable.push([key, value]);
    });
    return serializable;
}
function serializableToMap(serializable) {
    var items = new Map();
    for (var _i = 0, serializable_1 = serializable; _i < serializable_1.length; _i++) {
        var _a = serializable_1[_i], key = _a[0], value = _a[1];
        items.set(key, value);
    }
    return items;
}
var StringIterator = /** @class */ (function () {
    function StringIterator() {
        this._value = '';
        this._pos = 0;
    }
    StringIterator.prototype.reset = function (key) {
        this._value = key;
        this._pos = 0;
        return this;
    };
    StringIterator.prototype.next = function () {
        this._pos += 1;
        return this;
    };
    StringIterator.prototype.hasNext = function () {
        return this._pos < this._value.length - 1;
    };
    StringIterator.prototype.cmp = function (a) {
        var aCode = a.charCodeAt(0);
        var thisCode = this._value.charCodeAt(this._pos);
        return aCode - thisCode;
    };
    StringIterator.prototype.value = function () {
        return this._value[this._pos];
    };
    return StringIterator;
}());

var PathIterator = /** @class */ (function () {
    function PathIterator() {
    }
    PathIterator.prototype.reset = function (key) {
        this._value = key.replace(/\\$|\/$/, '');
        this._from = 0;
        this._to = 0;
        return this.next();
    };
    PathIterator.prototype.hasNext = function () {
        return this._to < this._value.length;
    };
    PathIterator.prototype.next = function () {
        // this._data = key.split(/[\\/]/).filter(s => !!s);
        this._from = this._to;
        var justSeps = true;
        for (; this._to < this._value.length; this._to++) {
            var ch = this._value.charCodeAt(this._to);
            if (ch === 47 /* Slash */ || ch === 92 /* Backslash */) {
                if (justSeps) {
                    this._from++;
                }
                else {
                    break;
                }
            }
            else {
                justSeps = false;
            }
        }
        return this;
    };
    PathIterator.prototype.cmp = function (a) {
        var aPos = 0;
        var aLen = a.length;
        var thisPos = this._from;
        while (aPos < aLen && thisPos < this._to) {
            var cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);
            if (cmp !== 0) {
                return cmp;
            }
            aPos += 1;
            thisPos += 1;
        }
        if (aLen === this._to - this._from) {
            return 0;
        }
        else if (aPos < aLen) {
            return -1;
        }
        else {
            return 1;
        }
    };
    PathIterator.prototype.value = function () {
        return this._value.substring(this._from, this._to);
    };
    return PathIterator;
}());

var TernarySearchTreeNode = /** @class */ (function () {
    function TernarySearchTreeNode() {
    }
    TernarySearchTreeNode.prototype.isEmpty = function () {
        return !this.left && !this.mid && !this.right && !this.value;
    };
    return TernarySearchTreeNode;
}());
var TernarySearchTree = /** @class */ (function () {
    function TernarySearchTree(segments) {
        this._iter = segments;
    }
    TernarySearchTree.forPaths = function () {
        return new TernarySearchTree(new PathIterator());
    };
    TernarySearchTree.forStrings = function () {
        return new TernarySearchTree(new StringIterator());
    };
    TernarySearchTree.prototype.clear = function () {
        this._root = undefined;
    };
    TernarySearchTree.prototype.set = function (key, element) {
        var iter = this._iter.reset(key);
        var node;
        if (!this._root) {
            this._root = new TernarySearchTreeNode();
            this._root.segment = iter.value();
        }
        node = this._root;
        while (true) {
            var val = iter.cmp(node.segment);
            if (val > 0) {
                // left
                if (!node.left) {
                    node.left = new TernarySearchTreeNode();
                    node.left.segment = iter.value();
                }
                node = node.left;
            }
            else if (val < 0) {
                // right
                if (!node.right) {
                    node.right = new TernarySearchTreeNode();
                    node.right.segment = iter.value();
                }
                node = node.right;
            }
            else if (iter.hasNext()) {
                // mid
                iter.next();
                if (!node.mid) {
                    node.mid = new TernarySearchTreeNode();
                    node.mid.segment = iter.value();
                }
                node = node.mid;
            }
            else {
                break;
            }
        }
        var oldElement = node.value;
        node.value = element;
        node.key = key;
        return oldElement;
    };
    TernarySearchTree.prototype.get = function (key) {
        var iter = this._iter.reset(key);
        var node = this._root;
        while (node) {
            var val = iter.cmp(node.segment);
            if (val > 0) {
                // left
                node = node.left;
            }
            else if (val < 0) {
                // right
                node = node.right;
            }
            else if (iter.hasNext()) {
                // mid
                iter.next();
                node = node.mid;
            }
            else {
                break;
            }
        }
        return node ? node.value : undefined;
    };
    TernarySearchTree.prototype.delete = function (key) {
        var iter = this._iter.reset(key);
        var stack = [];
        var node = this._root;
        // find and unset node
        while (node) {
            var val = iter.cmp(node.segment);
            if (val > 0) {
                // left
                stack.push([1, node]);
                node = node.left;
            }
            else if (val < 0) {
                // right
                stack.push([-1, node]);
                node = node.right;
            }
            else if (iter.hasNext()) {
                // mid
                iter.next();
                stack.push([0, node]);
                node = node.mid;
            }
            else {
                // remove element
                node.value = undefined;
                // clean up empty nodes
                while (stack.length > 0 && node.isEmpty()) {
                    var _a = stack.pop(), dir = _a[0], parent_1 = _a[1];
                    switch (dir) {
                        case 1:
                            parent_1.left = undefined;
                            break;
                        case 0:
                            parent_1.mid = undefined;
                            break;
                        case -1:
                            parent_1.right = undefined;
                            break;
                    }
                    node = parent_1;
                }
                break;
            }
        }
    };
    TernarySearchTree.prototype.findSubstr = function (key) {
        var iter = this._iter.reset(key);
        var node = this._root;
        var candidate = undefined;
        while (node) {
            var val = iter.cmp(node.segment);
            if (val > 0) {
                // left
                node = node.left;
            }
            else if (val < 0) {
                // right
                node = node.right;
            }
            else if (iter.hasNext()) {
                // mid
                iter.next();
                candidate = node.value || candidate;
                node = node.mid;
            }
            else {
                break;
            }
        }
        return node && node.value || candidate;
    };
    TernarySearchTree.prototype.findSuperstr = function (key) {
        var iter = this._iter.reset(key);
        var node = this._root;
        while (node) {
            var val = iter.cmp(node.segment);
            if (val > 0) {
                // left
                node = node.left;
            }
            else if (val < 0) {
                // right
                node = node.right;
            }
            else if (iter.hasNext()) {
                // mid
                iter.next();
                node = node.mid;
            }
            else {
                // collect
                if (!node.mid) {
                    return undefined;
                }
                else {
                    return this._nodeIterator(node.mid);
                }
            }
        }
        return undefined;
    };
    TernarySearchTree.prototype._nodeIterator = function (node) {
        var _this = this;
        var res;
        var idx;
        var data;
        var next = function () {
            if (!data) {
                // lazy till first invocation
                data = [];
                idx = 0;
                _this._forEach(node, function (value) { return data.push(value); });
            }
            if (idx >= data.length) {
                return _iterator__WEBPACK_IMPORTED_MODULE_1__["FIN"];
            }
            if (!res) {
                res = { done: false, value: data[idx++] };
            }
            else {
                res.value = data[idx++];
            }
            return res;
        };
        return { next: next };
    };
    TernarySearchTree.prototype.forEach = function (callback) {
        this._forEach(this._root, callback);
    };
    TernarySearchTree.prototype._forEach = function (node, callback) {
        if (node) {
            // left
            this._forEach(node.left, callback);
            // node
            if (node.value) {
                // callback(node.value, this._iter.join(parts));
                callback(node.value, node.key);
            }
            // mid
            this._forEach(node.mid, callback);
            // right
            this._forEach(node.right, callback);
        }
    };
    TernarySearchTree.ctorParameters = function () { return [
        { type: undefined }
    ]; };
    return TernarySearchTree;
}());

var ResourceMap = /** @class */ (function () {
    function ResourceMap() {
        this.map = new Map();
        this.ignoreCase = false; // in the future this should be an uri-comparator
    }
    ResourceMap.prototype.set = function (resource, value) {
        this.map.set(this.toKey(resource), value);
    };
    ResourceMap.prototype.get = function (resource) {
        return this.map.get(this.toKey(resource));
    };
    ResourceMap.prototype.has = function (resource) {
        return this.map.has(this.toKey(resource));
    };
    Object.defineProperty(ResourceMap.prototype, "size", {
        get: function () {
            return this.map.size;
        },
        enumerable: true,
        configurable: true
    });
    ResourceMap.prototype.clear = function () {
        this.map.clear();
    };
    ResourceMap.prototype.delete = function (resource) {
        return this.map.delete(this.toKey(resource));
    };
    ResourceMap.prototype.forEach = function (clb) {
        this.map.forEach(clb);
    };
    ResourceMap.prototype.values = function () {
        return values(this.map);
    };
    ResourceMap.prototype.toKey = function (resource) {
        var key = resource.toString();
        if (this.ignoreCase) {
            key = key.toLowerCase();
        }
        return key;
    };
    ResourceMap.prototype.keys = function () {
        return keys(this.map).map(function (k) { return vs_base_common_uri__WEBPACK_IMPORTED_MODULE_0__["URI"].parse(k); });
    };
    ResourceMap.prototype.clone = function () {
        var resourceMap = new ResourceMap();
        this.map.forEach(function (value, key) { return resourceMap.map.set(key, value); });
        return resourceMap;
    };
    return ResourceMap;
}());

var LinkedMap = /** @class */ (function () {
    function LinkedMap() {
        this._map = new Map();
        this._head = undefined;
        this._tail = undefined;
        this._size = 0;
    }
    LinkedMap.prototype.clear = function () {
        this._map.clear();
        this._head = undefined;
        this._tail = undefined;
        this._size = 0;
    };
    LinkedMap.prototype.isEmpty = function () {
        return !this._head && !this._tail;
    };
    Object.defineProperty(LinkedMap.prototype, "size", {
        get: function () {
            return this._size;
        },
        enumerable: true,
        configurable: true
    });
    LinkedMap.prototype.has = function (key) {
        return this._map.has(key);
    };
    LinkedMap.prototype.get = function (key, touch) {
        if (touch === void 0) { touch = 0 /* None */; }
        var item = this._map.get(key);
        if (!item) {
            return undefined;
        }
        if (touch !== 0 /* None */) {
            this.touch(item, touch);
        }
        return item.value;
    };
    LinkedMap.prototype.set = function (key, value, touch) {
        if (touch === void 0) { touch = 0 /* None */; }
        var item = this._map.get(key);
        if (item) {
            item.value = value;
            if (touch !== 0 /* None */) {
                this.touch(item, touch);
            }
        }
        else {
            item = { key: key, value: value, next: undefined, previous: undefined };
            switch (touch) {
                case 0 /* None */:
                    this.addItemLast(item);
                    break;
                case 1 /* AsOld */:
                    this.addItemFirst(item);
                    break;
                case 2 /* AsNew */:
                    this.addItemLast(item);
                    break;
                default:
                    this.addItemLast(item);
                    break;
            }
            this._map.set(key, item);
            this._size++;
        }
    };
    LinkedMap.prototype.delete = function (key) {
        return !!this.remove(key);
    };
    LinkedMap.prototype.remove = function (key) {
        var item = this._map.get(key);
        if (!item) {
            return undefined;
        }
        this._map.delete(key);
        this.removeItem(item);
        this._size--;
        return item.value;
    };
    LinkedMap.prototype.shift = function () {
        if (!this._head && !this._tail) {
            return undefined;
        }
        if (!this._head || !this._tail) {
            throw new Error('Invalid list');
        }
        var item = this._head;
        this._map.delete(item.key);
        this.removeItem(item);
        this._size--;
        return item.value;
    };
    LinkedMap.prototype.forEach = function (callbackfn, thisArg) {
        var current = this._head;
        while (current) {
            if (thisArg) {
                callbackfn.bind(thisArg)(current.value, current.key, this);
            }
            else {
                callbackfn(current.value, current.key, this);
            }
            current = current.next;
        }
    };
    LinkedMap.prototype.values = function () {
        var result = [];
        var current = this._head;
        while (current) {
            result.push(current.value);
            current = current.next;
        }
        return result;
    };
    LinkedMap.prototype.keys = function () {
        var result = [];
        var current = this._head;
        while (current) {
            result.push(current.key);
            current = current.next;
        }
        return result;
    };
    /* VS Code / Monaco editor runs on es5 which has no Symbol.iterator
    keys(): IterableIterator<K> {
        const current = this._head;
        const iterator: IterableIterator<K> = {
            [Symbol.iterator]() {
                return iterator;
            },
            next():IteratorResult<K> {
                if (current) {
                    const result = { value: current.key, done: false };
                    current = current.next;
                    return result;
                } else {
                    return { value: undefined, done: true };
                }
            }
        };
        return iterator;
    }

    values(): IterableIterator<V> {
        const current = this._head;
        const iterator: IterableIterator<V> = {
            [Symbol.iterator]() {
                return iterator;
            },
            next():IteratorResult<V> {
                if (current) {
                    const result = { value: current.value, done: false };
                    current = current.next;
                    return result;
                } else {
                    return { value: undefined, done: true };
                }
            }
        };
        return iterator;
    }
    */
    LinkedMap.prototype.trimOld = function (newSize) {
        if (newSize >= this.size) {
            return;
        }
        if (newSize === 0) {
            this.clear();
            return;
        }
        var current = this._head;
        var currentSize = this.size;
        while (current && currentSize > newSize) {
            this._map.delete(current.key);
            current = current.next;
            currentSize--;
        }
        this._head = current;
        this._size = currentSize;
        if (current) {
            current.previous = undefined;
        }
    };
    LinkedMap.prototype.addItemFirst = function (item) {
        // First time Insert
        if (!this._head && !this._tail) {
            this._tail = item;
        }
        else if (!this._head) {
            throw new Error('Invalid list');
        }
        else {
            item.next = this._head;
            this._head.previous = item;
        }
        this._head = item;
    };
    LinkedMap.prototype.addItemLast = function (item) {
        // First time Insert
        if (!this._head && !this._tail) {
            this._head = item;
        }
        else if (!this._tail) {
            throw new Error('Invalid list');
        }
        else {
            item.previous = this._tail;
            this._tail.next = item;
        }
        this._tail = item;
    };
    LinkedMap.prototype.removeItem = function (item) {
        if (item === this._head && item === this._tail) {
            this._head = undefined;
            this._tail = undefined;
        }
        else if (item === this._head) {
            // This can only happend if size === 1 which is handle
            // by the case above.
            if (!item.next) {
                throw new Error('Invalid list');
            }
            item.next.previous = undefined;
            this._head = item.next;
        }
        else if (item === this._tail) {
            // This can only happend if size === 1 which is handle
            // by the case above.
            if (!item.previous) {
                throw new Error('Invalid list');
            }
            item.previous.next = undefined;
            this._tail = item.previous;
        }
        else {
            var next = item.next;
            var previous = item.previous;
            if (!next || !previous) {
                throw new Error('Invalid list');
            }
            next.previous = previous;
            previous.next = next;
        }
        item.next = undefined;
        item.previous = undefined;
    };
    LinkedMap.prototype.touch = function (item, touch) {
        if (!this._head || !this._tail) {
            throw new Error('Invalid list');
        }
        if ((touch !== 1 /* AsOld */ && touch !== 2 /* AsNew */)) {
            return;
        }
        if (touch === 1 /* AsOld */) {
            if (item === this._head) {
                return;
            }
            var next = item.next;
            var previous = item.previous;
            // Unlink the item
            if (item === this._tail) {
                // previous must be defined since item was not head but is tail
                // So there are more than on item in the map
                previous.next = undefined;
                this._tail = previous;
            }
            else {
                // Both next and previous are not undefined since item was neither head nor tail.
                next.previous = previous;
                previous.next = next;
            }
            // Insert the node at head
            item.previous = undefined;
            item.next = this._head;
            this._head.previous = item;
            this._head = item;
        }
        else if (touch === 2 /* AsNew */) {
            if (item === this._tail) {
                return;
            }
            var next = item.next;
            var previous = item.previous;
            // Unlink the item.
            if (item === this._head) {
                // next must be defined since item was not tail but is head
                // So there are more than on item in the map
                next.previous = undefined;
                this._head = next;
            }
            else {
                // Both next and previous are not undefined since item was neither head nor tail.
                next.previous = previous;
                previous.next = next;
            }
            item.next = undefined;
            item.previous = this._tail;
            this._tail.next = item;
            this._tail = item;
        }
    };
    LinkedMap.prototype.toJSON = function () {
        var data = [];
        this.forEach(function (value, key) {
            data.push([key, value]);
        });
        return data;
    };
    LinkedMap.prototype.fromJSON = function (data) {
        this.clear();
        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
            var _a = data_1[_i], key = _a[0], value = _a[1];
            this.set(key, value);
        }
    };
    return LinkedMap;
}());

var LRUCache = /** @class */ (function (_super) {
    __extends(LRUCache, _super);
    function LRUCache(limit, ratio) {
        if (ratio === void 0) { ratio = 1; }
        var _this = _super.call(this) || this;
        _this._limit = limit;
        _this._ratio = Math.min(Math.max(0, ratio), 1);
        return _this;
    }
    Object.defineProperty(LRUCache.prototype, "limit", {
        get: function () {
            return this._limit;
        },
        set: function (limit) {
            this._limit = limit;
            this.checkTrim();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LRUCache.prototype, "ratio", {
        get: function () {
            return this._ratio;
        },
        set: function (ratio) {
            this._ratio = Math.min(Math.max(0, ratio), 1);
            this.checkTrim();
        },
        enumerable: true,
        configurable: true
    });
    LRUCache.prototype.get = function (key) {
        return _super.prototype.get.call(this, key, 2 /* AsNew */);
    };
    LRUCache.prototype.peek = function (key) {
        return _super.prototype.get.call(this, key, 0 /* None */);
    };
    LRUCache.prototype.set = function (key, value) {
        _super.prototype.set.call(this, key, value, 2 /* AsNew */);
        this.checkTrim();
    };
    LRUCache.prototype.checkTrim = function () {
        if (this.size > this._limit) {
            this.trimOld(Math.round(this._limit * this._ratio));
        }
    };
    LRUCache.ctorParameters = function () { return [
        { type: Number },
        { type: Number }
    ]; };
    return LRUCache;
}(LinkedMap));



/***/ }),

/***/ "./src/vs/base/common/numbers.ts":
/*!***************************************!*\
  !*** ./src/vs/base/common/numbers.ts ***!
  \***************************************/
/*! exports provided: clamp, rot, Counter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clamp", function() { return clamp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rot", function() { return rot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Counter", function() { return Counter; });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
function clamp(value, min, max) {
    return Math.min(Math.max(value, min), max);
}
function rot(index, modulo) {
    return (modulo + (index % modulo)) % modulo;
}
var Counter = /** @class */ (function () {
    function Counter() {
        this._next = 0;
    }
    Counter.prototype.getNext = function () {
        return this._next++;
    };
    return Counter;
}());



/***/ }),

/***/ "./src/vs/base/common/objects.ts":
/*!***************************************!*\
  !*** ./src/vs/base/common/objects.ts ***!
  \***************************************/
/*! exports provided: deepClone, deepFreeze, cloneAndChange, mixin, assign, equals, safeStringify, getOrDefault, distinct */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deepClone", function() { return deepClone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deepFreeze", function() { return deepFreeze; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cloneAndChange", function() { return cloneAndChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixin", function() { return mixin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assign", function() { return assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "safeStringify", function() { return safeStringify; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getOrDefault", function() { return getOrDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distinct", function() { return distinct; });
/* harmony import */ var vs_base_common_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/types */ "./src/vs/base/common/types.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

function deepClone(obj) {
    if (!obj || typeof obj !== 'object') {
        return obj;
    }
    if (obj instanceof RegExp) {
        // See https://github.com/Microsoft/TypeScript/issues/10990
        return obj;
    }
    var result = Array.isArray(obj) ? [] : {};
    Object.keys(obj).forEach(function (key) {
        if (obj[key] && typeof obj[key] === 'object') {
            result[key] = deepClone(obj[key]);
        }
        else {
            result[key] = obj[key];
        }
    });
    return result;
}
function deepFreeze(obj) {
    if (!obj || typeof obj !== 'object') {
        return obj;
    }
    var stack = [obj];
    while (stack.length > 0) {
        var obj_1 = stack.shift();
        Object.freeze(obj_1);
        for (var key in obj_1) {
            if (_hasOwnProperty.call(obj_1, key)) {
                var prop = obj_1[key];
                if (typeof prop === 'object' && !Object.isFrozen(prop)) {
                    stack.push(prop);
                }
            }
        }
    }
    return obj;
}
var _hasOwnProperty = Object.prototype.hasOwnProperty;
function cloneAndChange(obj, changer) {
    return _cloneAndChange(obj, changer, new Set());
}
function _cloneAndChange(obj, changer, seen) {
    if (Object(vs_base_common_types__WEBPACK_IMPORTED_MODULE_0__["isUndefinedOrNull"])(obj)) {
        return obj;
    }
    var changed = changer(obj);
    if (typeof changed !== 'undefined') {
        return changed;
    }
    if (Object(vs_base_common_types__WEBPACK_IMPORTED_MODULE_0__["isArray"])(obj)) {
        var r1 = [];
        for (var _i = 0, obj_2 = obj; _i < obj_2.length; _i++) {
            var e = obj_2[_i];
            r1.push(_cloneAndChange(e, changer, seen));
        }
        return r1;
    }
    if (Object(vs_base_common_types__WEBPACK_IMPORTED_MODULE_0__["isObject"])(obj)) {
        if (seen.has(obj)) {
            throw new Error('Cannot clone recursive data-structure');
        }
        seen.add(obj);
        var r2 = {};
        for (var i2 in obj) {
            if (_hasOwnProperty.call(obj, i2)) {
                r2[i2] = _cloneAndChange(obj[i2], changer, seen);
            }
        }
        seen.delete(obj);
        return r2;
    }
    return obj;
}
/**
 * Copies all properties of source into destination. The optional parameter "overwrite" allows to control
 * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).
 */
function mixin(destination, source, overwrite) {
    if (overwrite === void 0) { overwrite = true; }
    if (!Object(vs_base_common_types__WEBPACK_IMPORTED_MODULE_0__["isObject"])(destination)) {
        return source;
    }
    if (Object(vs_base_common_types__WEBPACK_IMPORTED_MODULE_0__["isObject"])(source)) {
        Object.keys(source).forEach(function (key) {
            if (key in destination) {
                if (overwrite) {
                    if (Object(vs_base_common_types__WEBPACK_IMPORTED_MODULE_0__["isObject"])(destination[key]) && Object(vs_base_common_types__WEBPACK_IMPORTED_MODULE_0__["isObject"])(source[key])) {
                        mixin(destination[key], source[key], overwrite);
                    }
                    else {
                        destination[key] = source[key];
                    }
                }
            }
            else {
                destination[key] = source[key];
            }
        });
    }
    return destination;
}
function assign(destination) {
    var sources = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        sources[_i - 1] = arguments[_i];
    }
    sources.forEach(function (source) { return Object.keys(source).forEach(function (key) { return destination[key] = source[key]; }); });
    return destination;
}
function equals(one, other) {
    if (one === other) {
        return true;
    }
    if (one === null || one === undefined || other === null || other === undefined) {
        return false;
    }
    if (typeof one !== typeof other) {
        return false;
    }
    if (typeof one !== 'object') {
        return false;
    }
    if ((Array.isArray(one)) !== (Array.isArray(other))) {
        return false;
    }
    var i;
    var key;
    if (Array.isArray(one)) {
        if (one.length !== other.length) {
            return false;
        }
        for (i = 0; i < one.length; i++) {
            if (!equals(one[i], other[i])) {
                return false;
            }
        }
    }
    else {
        var oneKeys = [];
        for (key in one) {
            oneKeys.push(key);
        }
        oneKeys.sort();
        var otherKeys = [];
        for (key in other) {
            otherKeys.push(key);
        }
        otherKeys.sort();
        if (!equals(oneKeys, otherKeys)) {
            return false;
        }
        for (i = 0; i < oneKeys.length; i++) {
            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {
                return false;
            }
        }
    }
    return true;
}
/**
 * Calls JSON.Stringify with a replacer to break apart any circular references.
 * This prevents JSON.stringify from throwing the exception
 *  "Uncaught TypeError: Converting circular structure to JSON"
 */
function safeStringify(obj) {
    var seen = [];
    return JSON.stringify(obj, function (key, value) {
        if (Object(vs_base_common_types__WEBPACK_IMPORTED_MODULE_0__["isObject"])(value) || Array.isArray(value)) {
            if (seen.indexOf(value) !== -1) {
                return '[Circular]';
            }
            else {
                seen.push(value);
            }
        }
        return value;
    });
}
function getOrDefault(obj, fn, defaultValue) {
    var result = fn(obj);
    return typeof result === 'undefined' ? defaultValue : result;
}
/**
 * Returns an object that has keys for each value that is different in the base object. Keys
 * that do not exist in the target but in the base object are not considered.
 *
 * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting
 * object if they differ.
 *
 * @param base the object to diff against
 * @param obj the object to use for diffing
 */
function distinct(base, target) {
    var result = Object.create(null);
    if (!base || !target) {
        return result;
    }
    var targetKeys = Object.keys(target);
    targetKeys.forEach(function (k) {
        var baseValue = base[k];
        var targetValue = target[k];
        if (!equals(baseValue, targetValue)) {
            result[k] = targetValue;
        }
    });
    return result;
}


/***/ }),

/***/ "./src/vs/base/common/platform.ts":
/*!****************************************!*\
  !*** ./src/vs/base/common/platform.ts ***!
  \****************************************/
/*! exports provided: PlatformToString, isWindows, isMacintosh, isLinux, isNative, isWeb, platform, isRootUser, language, Language, locale, translationsConfigFile, globals, setImmediate, OS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PlatformToString", function() { return PlatformToString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isWindows", function() { return isWindows; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isMacintosh", function() { return isMacintosh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLinux", function() { return isLinux; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNative", function() { return isNative; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isWeb", function() { return isWeb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "platform", function() { return platform; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRootUser", function() { return isRootUser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "language", function() { return language; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Language", function() { return Language; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "locale", function() { return locale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "translationsConfigFile", function() { return translationsConfigFile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "globals", function() { return globals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setImmediate", function() { return setImmediate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OS", function() { return OS; });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var LANGUAGE_DEFAULT = 'en';
var _isWindows = false;
var _isMacintosh = false;
var _isLinux = false;
var _isNative = false;
var _isWeb = false;
var _locale = undefined;
var _language = LANGUAGE_DEFAULT;
var _translationsConfigFile = undefined;
var isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');
// OS detection
if (typeof navigator === 'object' && !isElectronRenderer) {
    var userAgent = navigator.userAgent;
    _isWindows = userAgent.indexOf('Windows') >= 0;
    _isMacintosh = userAgent.indexOf('Macintosh') >= 0;
    _isLinux = userAgent.indexOf('Linux') >= 0;
    _isWeb = true;
    _locale = navigator.language;
    _language = _locale;
}
else if (typeof process === 'object') {
    _isWindows = (process.platform === 'win32');
    _isMacintosh = (process.platform === 'darwin');
    _isLinux = (process.platform === 'linux');
    _locale = LANGUAGE_DEFAULT;
    _language = LANGUAGE_DEFAULT;
    var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];
    if (rawNlsConfig) {
        try {
            var nlsConfig = JSON.parse(rawNlsConfig);
            var resolved = nlsConfig.availableLanguages['*'];
            _locale = nlsConfig.locale;
            // VSCode's default language is 'en'
            _language = resolved ? resolved : LANGUAGE_DEFAULT;
            _translationsConfigFile = nlsConfig._translationsConfigFile;
        }
        catch (e) {
        }
    }
    _isNative = true;
}
function PlatformToString(platform) {
    switch (platform) {
        case 0 /* Web */: return 'Web';
        case 1 /* Mac */: return 'Mac';
        case 2 /* Linux */: return 'Linux';
        case 3 /* Windows */: return 'Windows';
    }
}
var _platform = 0 /* Web */;
if (_isNative) {
    if (_isMacintosh) {
        _platform = 1 /* Mac */;
    }
    else if (_isWindows) {
        _platform = 3 /* Windows */;
    }
    else if (_isLinux) {
        _platform = 2 /* Linux */;
    }
}
var isWindows = _isWindows;
var isMacintosh = _isMacintosh;
var isLinux = _isLinux;
var isNative = _isNative;
var isWeb = _isWeb;
var platform = _platform;
function isRootUser() {
    return _isNative && !_isWindows && (process.getuid() === 0);
}
/**
 * The language used for the user interface. The format of
 * the string is all lower case (e.g. zh-tw for Traditional
 * Chinese)
 */
var language = _language;
var Language;
(function (Language) {
    function value() {
        return language;
    }
    Language.value = value;
    function isDefaultVariant() {
        if (language.length === 2) {
            return language === 'en';
        }
        else if (language.length >= 3) {
            return language[0] === 'e' && language[1] === 'n' && language[2] === '-';
        }
        else {
            return false;
        }
    }
    Language.isDefaultVariant = isDefaultVariant;
    function isDefault() {
        return language === 'en';
    }
    Language.isDefault = isDefault;
})(Language || (Language = {}));
/**
 * The OS locale or the locale specified by --locale. The format of
 * the string is all lower case (e.g. zh-tw for Traditional
 * Chinese). The UI is not necessarily shown in the provided locale.
 */
var locale = _locale;
/**
 * The translatios that are available through language packs.
 */
var translationsConfigFile = _translationsConfigFile;
var _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});
var globals = _globals;
var _setImmediate = null;
function setImmediate(callback) {
    if (_setImmediate === null) {
        if (globals.setImmediate) {
            _setImmediate = globals.setImmediate.bind(globals);
        }
        else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {
            _setImmediate = process.nextTick.bind(process);
        }
        else {
            _setImmediate = globals.setTimeout.bind(globals);
        }
    }
    return _setImmediate(callback);
}
var OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));


/***/ }),

/***/ "./src/vs/base/common/range.ts":
/*!*************************************!*\
  !*** ./src/vs/base/common/range.ts ***!
  \*************************************/
/*! exports provided: Range */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Range", function() { return Range; });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var Range;
(function (Range) {
    /**
     * Returns the intersection between two ranges as a range itself.
     * Returns `{ start: 0, end: 0 }` if the intersection is empty.
     */
    function intersect(one, other) {
        if (one.start >= other.end || other.start >= one.end) {
            return { start: 0, end: 0 };
        }
        var start = Math.max(one.start, other.start);
        var end = Math.min(one.end, other.end);
        if (end - start <= 0) {
            return { start: 0, end: 0 };
        }
        return { start: start, end: end };
    }
    Range.intersect = intersect;
    function isEmpty(range) {
        return range.end - range.start <= 0;
    }
    Range.isEmpty = isEmpty;
    function intersects(one, other) {
        return !isEmpty(intersect(one, other));
    }
    Range.intersects = intersects;
    function relativeComplement(one, other) {
        var result = [];
        var first = { start: one.start, end: Math.min(other.start, one.end) };
        var second = { start: Math.max(other.end, one.start), end: one.end };
        if (!isEmpty(first)) {
            result.push(first);
        }
        if (!isEmpty(second)) {
            result.push(second);
        }
        return result;
    }
    Range.relativeComplement = relativeComplement;
})(Range || (Range = {}));


/***/ }),

/***/ "./src/vs/base/common/scrollable.ts":
/*!******************************************!*\
  !*** ./src/vs/base/common/scrollable.ts ***!
  \******************************************/
/*! exports provided: ScrollState, Scrollable, SmoothScrollingUpdate, SmoothScrollingOperation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollState", function() { return ScrollState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scrollable", function() { return Scrollable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SmoothScrollingUpdate", function() { return SmoothScrollingUpdate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SmoothScrollingOperation", function() { return SmoothScrollingOperation; });
/* harmony import */ var vs_base_common_event__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/event */ "./src/vs/base/common/event.ts");
/* harmony import */ var vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vs/base/common/lifecycle */ "./src/vs/base/common/lifecycle.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var ScrollState = /** @class */ (function () {
    function ScrollState(width, scrollWidth, scrollLeft, height, scrollHeight, scrollTop) {
        width = width | 0;
        scrollWidth = scrollWidth | 0;
        scrollLeft = scrollLeft | 0;
        height = height | 0;
        scrollHeight = scrollHeight | 0;
        scrollTop = scrollTop | 0;
        if (width < 0) {
            width = 0;
        }
        if (scrollLeft + width > scrollWidth) {
            scrollLeft = scrollWidth - width;
        }
        if (scrollLeft < 0) {
            scrollLeft = 0;
        }
        if (height < 0) {
            height = 0;
        }
        if (scrollTop + height > scrollHeight) {
            scrollTop = scrollHeight - height;
        }
        if (scrollTop < 0) {
            scrollTop = 0;
        }
        this.width = width;
        this.scrollWidth = scrollWidth;
        this.scrollLeft = scrollLeft;
        this.height = height;
        this.scrollHeight = scrollHeight;
        this.scrollTop = scrollTop;
    }
    ScrollState.prototype.equals = function (other) {
        return (this.width === other.width
            && this.scrollWidth === other.scrollWidth
            && this.scrollLeft === other.scrollLeft
            && this.height === other.height
            && this.scrollHeight === other.scrollHeight
            && this.scrollTop === other.scrollTop);
    };
    ScrollState.prototype.withScrollDimensions = function (update) {
        return new ScrollState((typeof update.width !== 'undefined' ? update.width : this.width), (typeof update.scrollWidth !== 'undefined' ? update.scrollWidth : this.scrollWidth), this.scrollLeft, (typeof update.height !== 'undefined' ? update.height : this.height), (typeof update.scrollHeight !== 'undefined' ? update.scrollHeight : this.scrollHeight), this.scrollTop);
    };
    ScrollState.prototype.withScrollPosition = function (update) {
        return new ScrollState(this.width, this.scrollWidth, (typeof update.scrollLeft !== 'undefined' ? update.scrollLeft : this.scrollLeft), this.height, this.scrollHeight, (typeof update.scrollTop !== 'undefined' ? update.scrollTop : this.scrollTop));
    };
    ScrollState.prototype.createScrollEvent = function (previous) {
        var widthChanged = (this.width !== previous.width);
        var scrollWidthChanged = (this.scrollWidth !== previous.scrollWidth);
        var scrollLeftChanged = (this.scrollLeft !== previous.scrollLeft);
        var heightChanged = (this.height !== previous.height);
        var scrollHeightChanged = (this.scrollHeight !== previous.scrollHeight);
        var scrollTopChanged = (this.scrollTop !== previous.scrollTop);
        return {
            width: this.width,
            scrollWidth: this.scrollWidth,
            scrollLeft: this.scrollLeft,
            height: this.height,
            scrollHeight: this.scrollHeight,
            scrollTop: this.scrollTop,
            widthChanged: widthChanged,
            scrollWidthChanged: scrollWidthChanged,
            scrollLeftChanged: scrollLeftChanged,
            heightChanged: heightChanged,
            scrollHeightChanged: scrollHeightChanged,
            scrollTopChanged: scrollTopChanged,
        };
    };
    ScrollState.ctorParameters = function () { return [
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number }
    ]; };
    return ScrollState;
}());

var Scrollable = /** @class */ (function (_super) {
    __extends(Scrollable, _super);
    function Scrollable(smoothScrollDuration, scheduleAtNextAnimationFrame) {
        var _this = _super.call(this) || this;
        _this._onScroll = _this._register(new vs_base_common_event__WEBPACK_IMPORTED_MODULE_0__["Emitter"]());
        _this.onScroll = _this._onScroll.event;
        _this._smoothScrollDuration = smoothScrollDuration;
        _this._scheduleAtNextAnimationFrame = scheduleAtNextAnimationFrame;
        _this._state = new ScrollState(0, 0, 0, 0, 0, 0);
        _this._smoothScrolling = null;
        return _this;
    }
    Scrollable.prototype.dispose = function () {
        if (this._smoothScrolling) {
            this._smoothScrolling.dispose();
            this._smoothScrolling = null;
        }
        _super.prototype.dispose.call(this);
    };
    Scrollable.prototype.setSmoothScrollDuration = function (smoothScrollDuration) {
        this._smoothScrollDuration = smoothScrollDuration;
    };
    Scrollable.prototype.validateScrollPosition = function (scrollPosition) {
        return this._state.withScrollPosition(scrollPosition);
    };
    Scrollable.prototype.getScrollDimensions = function () {
        return this._state;
    };
    Scrollable.prototype.setScrollDimensions = function (dimensions) {
        var newState = this._state.withScrollDimensions(dimensions);
        this._setState(newState);
        // Validate outstanding animated scroll position target
        if (this._smoothScrolling) {
            this._smoothScrolling.acceptScrollDimensions(this._state);
        }
    };
    /**
     * Returns the final scroll position that the instance will have once the smooth scroll animation concludes.
     * If no scroll animation is occurring, it will return the current scroll position instead.
     */
    Scrollable.prototype.getFutureScrollPosition = function () {
        if (this._smoothScrolling) {
            return this._smoothScrolling.to;
        }
        return this._state;
    };
    /**
     * Returns the current scroll position.
     * Note: This result might be an intermediate scroll position, as there might be an ongoing smooth scroll animation.
     */
    Scrollable.prototype.getCurrentScrollPosition = function () {
        return this._state;
    };
    Scrollable.prototype.setScrollPositionNow = function (update) {
        // no smooth scrolling requested
        var newState = this._state.withScrollPosition(update);
        // Terminate any outstanding smooth scrolling
        if (this._smoothScrolling) {
            this._smoothScrolling.dispose();
            this._smoothScrolling = null;
        }
        this._setState(newState);
    };
    Scrollable.prototype.setScrollPositionSmooth = function (update) {
        var _this = this;
        if (this._smoothScrollDuration === 0) {
            // Smooth scrolling not supported.
            return this.setScrollPositionNow(update);
        }
        if (this._smoothScrolling) {
            // Combine our pending scrollLeft/scrollTop with incoming scrollLeft/scrollTop
            update = {
                scrollLeft: (typeof update.scrollLeft === 'undefined' ? this._smoothScrolling.to.scrollLeft : update.scrollLeft),
                scrollTop: (typeof update.scrollTop === 'undefined' ? this._smoothScrolling.to.scrollTop : update.scrollTop)
            };
            // Validate `update`
            var validTarget = this._state.withScrollPosition(update);
            if (this._smoothScrolling.to.scrollLeft === validTarget.scrollLeft && this._smoothScrolling.to.scrollTop === validTarget.scrollTop) {
                // No need to interrupt or extend the current animation since we're going to the same place
                return;
            }
            var newSmoothScrolling = this._smoothScrolling.combine(this._state, validTarget, this._smoothScrollDuration);
            this._smoothScrolling.dispose();
            this._smoothScrolling = newSmoothScrolling;
        }
        else {
            // Validate `update`
            var validTarget = this._state.withScrollPosition(update);
            this._smoothScrolling = SmoothScrollingOperation.start(this._state, validTarget, this._smoothScrollDuration);
        }
        // Begin smooth scrolling animation
        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(function () {
            if (!_this._smoothScrolling) {
                return;
            }
            _this._smoothScrolling.animationFrameDisposable = null;
            _this._performSmoothScrolling();
        });
    };
    Scrollable.prototype._performSmoothScrolling = function () {
        var _this = this;
        if (!this._smoothScrolling) {
            return;
        }
        var update = this._smoothScrolling.tick();
        var newState = this._state.withScrollPosition(update);
        this._setState(newState);
        if (update.isDone) {
            this._smoothScrolling.dispose();
            this._smoothScrolling = null;
            return;
        }
        // Continue smooth scrolling animation
        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(function () {
            if (!_this._smoothScrolling) {
                return;
            }
            _this._smoothScrolling.animationFrameDisposable = null;
            _this._performSmoothScrolling();
        });
    };
    Scrollable.prototype._setState = function (newState) {
        var oldState = this._state;
        if (oldState.equals(newState)) {
            // no change
            return;
        }
        this._state = newState;
        this._onScroll.fire(this._state.createScrollEvent(oldState));
    };
    Scrollable.ctorParameters = function () { return [
        { type: Number },
        { type: Function }
    ]; };
    return Scrollable;
}(vs_base_common_lifecycle__WEBPACK_IMPORTED_MODULE_1__["Disposable"]));

var SmoothScrollingUpdate = /** @class */ (function () {
    function SmoothScrollingUpdate(scrollLeft, scrollTop, isDone) {
        this.scrollLeft = scrollLeft;
        this.scrollTop = scrollTop;
        this.isDone = isDone;
    }
    SmoothScrollingUpdate.ctorParameters = function () { return [
        { type: Number },
        { type: Number },
        { type: Boolean }
    ]; };
    return SmoothScrollingUpdate;
}());

function createEaseOutCubic(from, to) {
    var delta = to - from;
    return function (completion) {
        return from + delta * easeOutCubic(completion);
    };
}
function createComposed(a, b, cut) {
    return function (completion) {
        if (completion < cut) {
            return a(completion / cut);
        }
        return b((completion - cut) / (1 - cut));
    };
}
var SmoothScrollingOperation = /** @class */ (function () {
    function SmoothScrollingOperation(from, to, startTime, duration) {
        this.from = from;
        this.to = to;
        this.duration = duration;
        this._startTime = startTime;
        this.animationFrameDisposable = null;
        this._initAnimations();
    }
    SmoothScrollingOperation.prototype._initAnimations = function () {
        this.scrollLeft = this._initAnimation(this.from.scrollLeft, this.to.scrollLeft, this.to.width);
        this.scrollTop = this._initAnimation(this.from.scrollTop, this.to.scrollTop, this.to.height);
    };
    SmoothScrollingOperation.prototype._initAnimation = function (from, to, viewportSize) {
        var delta = Math.abs(from - to);
        if (delta > 2.5 * viewportSize) {
            var stop1 = void 0, stop2 = void 0;
            if (from < to) {
                // scroll to 75% of the viewportSize
                stop1 = from + 0.75 * viewportSize;
                stop2 = to - 0.75 * viewportSize;
            }
            else {
                stop1 = from - 0.75 * viewportSize;
                stop2 = to + 0.75 * viewportSize;
            }
            return createComposed(createEaseOutCubic(from, stop1), createEaseOutCubic(stop2, to), 0.33);
        }
        return createEaseOutCubic(from, to);
    };
    SmoothScrollingOperation.prototype.dispose = function () {
        if (this.animationFrameDisposable !== null) {
            this.animationFrameDisposable.dispose();
            this.animationFrameDisposable = null;
        }
    };
    SmoothScrollingOperation.prototype.acceptScrollDimensions = function (state) {
        this.to = state.withScrollPosition(this.to);
        this._initAnimations();
    };
    SmoothScrollingOperation.prototype.tick = function () {
        return this._tick(Date.now());
    };
    SmoothScrollingOperation.prototype._tick = function (now) {
        var completion = (now - this._startTime) / this.duration;
        if (completion < 1) {
            var newScrollLeft = this.scrollLeft(completion);
            var newScrollTop = this.scrollTop(completion);
            return new SmoothScrollingUpdate(newScrollLeft, newScrollTop, false);
        }
        return new SmoothScrollingUpdate(this.to.scrollLeft, this.to.scrollTop, true);
    };
    SmoothScrollingOperation.prototype.combine = function (from, to, duration) {
        return SmoothScrollingOperation.start(from, to, duration);
    };
    SmoothScrollingOperation.start = function (from, to, duration) {
        // +10 / -10 : pretend the animation already started for a quicker response to a scroll request
        duration = duration + 10;
        var startTime = Date.now() - 10;
        return new SmoothScrollingOperation(from, to, startTime, duration);
    };
    SmoothScrollingOperation.ctorParameters = function () { return [
        { type: undefined },
        { type: undefined },
        { type: Number },
        { type: Number }
    ]; };
    return SmoothScrollingOperation;
}());

function easeInCubic(t) {
    return Math.pow(t, 3);
}
function easeOutCubic(t) {
    return 1 - easeInCubic(1 - t);
}


/***/ }),

/***/ "./src/vs/base/common/strings.ts":
/*!***************************************!*\
  !*** ./src/vs/base/common/strings.ts ***!
  \***************************************/
/*! exports provided: empty, isFalsyOrWhitespace, pad, format, escape, escapeRegExpCharacters, trim, ltrim, rtrim, convertSimple2RegExpPattern, stripWildcards, startsWith, endsWith, createRegExp, regExpLeadsToEndlessLoop, regExpContainsBackreference, regExpFlags, firstNonWhitespaceIndex, getLeadingWhitespace, lastNonWhitespaceIndex, compare, compareIgnoreCase, isLowerAsciiLetter, isUpperAsciiLetter, equalsIgnoreCase, startsWithIgnoreCase, commonPrefixLength, commonSuffixLength, overlap, isHighSurrogate, isLowSurrogate, containsRTL, containsEmoji, isBasicASCII, containsFullWidthCharacter, isFullWidthCharacter, lcut, removeAnsiEscapeCodes, removeAccents, UTF8_BOM_CHARACTER, startsWithUTF8BOM, stripUTF8BOM, safeBtoa, repeat, fuzzyContains, containsUppercaseCharacter, uppercaseFirstLetter, getNLines */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return empty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFalsyOrWhitespace", function() { return isFalsyOrWhitespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pad", function() { return pad; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "format", function() { return format; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "escape", function() { return escape; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "escapeRegExpCharacters", function() { return escapeRegExpCharacters; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trim", function() { return trim; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ltrim", function() { return ltrim; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rtrim", function() { return rtrim; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertSimple2RegExpPattern", function() { return convertSimple2RegExpPattern; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stripWildcards", function() { return stripWildcards; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "startsWith", function() { return startsWith; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "endsWith", function() { return endsWith; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRegExp", function() { return createRegExp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "regExpLeadsToEndlessLoop", function() { return regExpLeadsToEndlessLoop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "regExpContainsBackreference", function() { return regExpContainsBackreference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "regExpFlags", function() { return regExpFlags; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "firstNonWhitespaceIndex", function() { return firstNonWhitespaceIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLeadingWhitespace", function() { return getLeadingWhitespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lastNonWhitespaceIndex", function() { return lastNonWhitespaceIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compare", function() { return compare; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareIgnoreCase", function() { return compareIgnoreCase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLowerAsciiLetter", function() { return isLowerAsciiLetter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUpperAsciiLetter", function() { return isUpperAsciiLetter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equalsIgnoreCase", function() { return equalsIgnoreCase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "startsWithIgnoreCase", function() { return startsWithIgnoreCase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "commonPrefixLength", function() { return commonPrefixLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "commonSuffixLength", function() { return commonSuffixLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "overlap", function() { return overlap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isHighSurrogate", function() { return isHighSurrogate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLowSurrogate", function() { return isLowSurrogate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "containsRTL", function() { return containsRTL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "containsEmoji", function() { return containsEmoji; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBasicASCII", function() { return isBasicASCII; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "containsFullWidthCharacter", function() { return containsFullWidthCharacter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFullWidthCharacter", function() { return isFullWidthCharacter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lcut", function() { return lcut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeAnsiEscapeCodes", function() { return removeAnsiEscapeCodes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeAccents", function() { return removeAccents; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UTF8_BOM_CHARACTER", function() { return UTF8_BOM_CHARACTER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "startsWithUTF8BOM", function() { return startsWithUTF8BOM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stripUTF8BOM", function() { return stripUTF8BOM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "safeBtoa", function() { return safeBtoa; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "repeat", function() { return repeat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fuzzyContains", function() { return fuzzyContains; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "containsUppercaseCharacter", function() { return containsUppercaseCharacter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "uppercaseFirstLetter", function() { return uppercaseFirstLetter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getNLines", function() { return getNLines; });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
/**
 * The empty string.
 */
var empty = '';
function isFalsyOrWhitespace(str) {
    if (!str || typeof str !== 'string') {
        return true;
    }
    return str.trim().length === 0;
}
/**
 * @returns the provided number with the given number of preceding zeros.
 */
function pad(n, l, char) {
    if (char === void 0) { char = '0'; }
    var str = '' + n;
    var r = [str];
    for (var i = str.length; i < l; i++) {
        r.push(char);
    }
    return r.reverse().join('');
}
var _formatRegexp = /{(\d+)}/g;
/**
 * Helper to produce a string with a variable number of arguments. Insert variable segments
 * into the string using the {n} notation where N is the index of the argument following the string.
 * @param value string to which formatting is applied
 * @param args replacements for {n}-entries
 */
function format(value) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    if (args.length === 0) {
        return value;
    }
    return value.replace(_formatRegexp, function (match, group) {
        var idx = parseInt(group, 10);
        return isNaN(idx) || idx < 0 || idx >= args.length ?
            match :
            args[idx];
    });
}
/**
 * Converts HTML characters inside the string to use entities instead. Makes the string safe from
 * being used e.g. in HTMLElement.innerHTML.
 */
function escape(html) {
    return html.replace(/[<>&]/g, function (match) {
        switch (match) {
            case '<': return '&lt;';
            case '>': return '&gt;';
            case '&': return '&amp;';
            default: return match;
        }
    });
}
/**
 * Escapes regular expression characters in a given string
 */
function escapeRegExpCharacters(value) {
    return value.replace(/[\-\\\{\}\*\+\?\|\^\$\.\[\]\(\)\#]/g, '\\$&');
}
/**
 * Removes all occurrences of needle from the beginning and end of haystack.
 * @param haystack string to trim
 * @param needle the thing to trim (default is a blank)
 */
function trim(haystack, needle) {
    if (needle === void 0) { needle = ' '; }
    var trimmed = ltrim(haystack, needle);
    return rtrim(trimmed, needle);
}
/**
 * Removes all occurrences of needle from the beginning of haystack.
 * @param haystack string to trim
 * @param needle the thing to trim
 */
function ltrim(haystack, needle) {
    if (!haystack || !needle) {
        return haystack;
    }
    var needleLen = needle.length;
    if (needleLen === 0 || haystack.length === 0) {
        return haystack;
    }
    var offset = 0;
    while (haystack.indexOf(needle, offset) === offset) {
        offset = offset + needleLen;
    }
    return haystack.substring(offset);
}
/**
 * Removes all occurrences of needle from the end of haystack.
 * @param haystack string to trim
 * @param needle the thing to trim
 */
function rtrim(haystack, needle) {
    if (!haystack || !needle) {
        return haystack;
    }
    var needleLen = needle.length, haystackLen = haystack.length;
    if (needleLen === 0 || haystackLen === 0) {
        return haystack;
    }
    var offset = haystackLen, idx = -1;
    while (true) {
        idx = haystack.lastIndexOf(needle, offset - 1);
        if (idx === -1 || idx + needleLen !== offset) {
            break;
        }
        if (idx === 0) {
            return '';
        }
        offset = idx;
    }
    return haystack.substring(0, offset);
}
function convertSimple2RegExpPattern(pattern) {
    return pattern.replace(/[\-\\\{\}\+\?\|\^\$\.\,\[\]\(\)\#\s]/g, '\\$&').replace(/[\*]/g, '.*');
}
function stripWildcards(pattern) {
    return pattern.replace(/\*/g, '');
}
/**
 * Determines if haystack starts with needle.
 */
function startsWith(haystack, needle) {
    if (haystack.length < needle.length) {
        return false;
    }
    if (haystack === needle) {
        return true;
    }
    for (var i = 0; i < needle.length; i++) {
        if (haystack[i] !== needle[i]) {
            return false;
        }
    }
    return true;
}
/**
 * Determines if haystack ends with needle.
 */
function endsWith(haystack, needle) {
    var diff = haystack.length - needle.length;
    if (diff > 0) {
        return haystack.indexOf(needle, diff) === diff;
    }
    else if (diff === 0) {
        return haystack === needle;
    }
    else {
        return false;
    }
}
function createRegExp(searchString, isRegex, options) {
    if (options === void 0) { options = {}; }
    if (!searchString) {
        throw new Error('Cannot create regex from empty string');
    }
    if (!isRegex) {
        searchString = escapeRegExpCharacters(searchString);
    }
    if (options.wholeWord) {
        if (!/\B/.test(searchString.charAt(0))) {
            searchString = '\\b' + searchString;
        }
        if (!/\B/.test(searchString.charAt(searchString.length - 1))) {
            searchString = searchString + '\\b';
        }
    }
    var modifiers = '';
    if (options.global) {
        modifiers += 'g';
    }
    if (!options.matchCase) {
        modifiers += 'i';
    }
    if (options.multiline) {
        modifiers += 'm';
    }
    if (options.unicode) {
        modifiers += 'u';
    }
    return new RegExp(searchString, modifiers);
}
function regExpLeadsToEndlessLoop(regexp) {
    // Exit early if it's one of these special cases which are meant to match
    // against an empty string
    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\s*$') {
        return false;
    }
    // We check against an empty string. If the regular expression doesn't advance
    // (e.g. ends in an endless loop) it will match an empty string.
    var match = regexp.exec('');
    return !!(match && regexp.lastIndex === 0);
}
function regExpContainsBackreference(regexpValue) {
    return !!regexpValue.match(/([^\\]|^)(\\\\)*\\\d+/);
}
function regExpFlags(regexp) {
    return (regexp.global ? 'g' : '')
        + (regexp.ignoreCase ? 'i' : '')
        + (regexp.multiline ? 'm' : '')
        + (regexp.unicode ? 'u' : '');
}
/**
 * Returns first index of the string that is not whitespace.
 * If string is empty or contains only whitespaces, returns -1
 */
function firstNonWhitespaceIndex(str) {
    for (var i = 0, len = str.length; i < len; i++) {
        var chCode = str.charCodeAt(i);
        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {
            return i;
        }
    }
    return -1;
}
/**
 * Returns the leading whitespace of the string.
 * If the string contains only whitespaces, returns entire string
 */
function getLeadingWhitespace(str, start, end) {
    if (start === void 0) { start = 0; }
    if (end === void 0) { end = str.length; }
    for (var i = start; i < end; i++) {
        var chCode = str.charCodeAt(i);
        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {
            return str.substring(start, i);
        }
    }
    return str.substring(start, end);
}
/**
 * Returns last index of the string that is not whitespace.
 * If string is empty or contains only whitespaces, returns -1
 */
function lastNonWhitespaceIndex(str, startIndex) {
    if (startIndex === void 0) { startIndex = str.length - 1; }
    for (var i = startIndex; i >= 0; i--) {
        var chCode = str.charCodeAt(i);
        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {
            return i;
        }
    }
    return -1;
}
function compare(a, b) {
    if (a < b) {
        return -1;
    }
    else if (a > b) {
        return 1;
    }
    else {
        return 0;
    }
}
function compareIgnoreCase(a, b) {
    var len = Math.min(a.length, b.length);
    for (var i = 0; i < len; i++) {
        var codeA = a.charCodeAt(i);
        var codeB = b.charCodeAt(i);
        if (codeA === codeB) {
            // equal
            continue;
        }
        if (isUpperAsciiLetter(codeA)) {
            codeA += 32;
        }
        if (isUpperAsciiLetter(codeB)) {
            codeB += 32;
        }
        var diff = codeA - codeB;
        if (diff === 0) {
            // equal -> ignoreCase
            continue;
        }
        else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {
            //
            return diff;
        }
        else {
            return compare(a.toLowerCase(), b.toLowerCase());
        }
    }
    if (a.length < b.length) {
        return -1;
    }
    else if (a.length > b.length) {
        return 1;
    }
    else {
        return 0;
    }
}
function isLowerAsciiLetter(code) {
    return code >= 97 /* a */ && code <= 122 /* z */;
}
function isUpperAsciiLetter(code) {
    return code >= 65 /* A */ && code <= 90 /* Z */;
}
function isAsciiLetter(code) {
    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);
}
function equalsIgnoreCase(a, b) {
    var len1 = a ? a.length : 0;
    var len2 = b ? b.length : 0;
    if (len1 !== len2) {
        return false;
    }
    return doEqualsIgnoreCase(a, b);
}
function doEqualsIgnoreCase(a, b, stopAt) {
    if (stopAt === void 0) { stopAt = a.length; }
    if (typeof a !== 'string' || typeof b !== 'string') {
        return false;
    }
    for (var i = 0; i < stopAt; i++) {
        var codeA = a.charCodeAt(i);
        var codeB = b.charCodeAt(i);
        if (codeA === codeB) {
            continue;
        }
        // a-z A-Z
        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {
            var diff = Math.abs(codeA - codeB);
            if (diff !== 0 && diff !== 32) {
                return false;
            }
        }
        // Any other charcode
        else {
            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {
                return false;
            }
        }
    }
    return true;
}
function startsWithIgnoreCase(str, candidate) {
    var candidateLength = candidate.length;
    if (candidate.length > str.length) {
        return false;
    }
    return doEqualsIgnoreCase(str, candidate, candidateLength);
}
/**
 * @returns the length of the common prefix of the two strings.
 */
function commonPrefixLength(a, b) {
    var i, len = Math.min(a.length, b.length);
    for (i = 0; i < len; i++) {
        if (a.charCodeAt(i) !== b.charCodeAt(i)) {
            return i;
        }
    }
    return len;
}
/**
 * @returns the length of the common suffix of the two strings.
 */
function commonSuffixLength(a, b) {
    var i, len = Math.min(a.length, b.length);
    var aLastIndex = a.length - 1;
    var bLastIndex = b.length - 1;
    for (i = 0; i < len; i++) {
        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {
            return i;
        }
    }
    return len;
}
function substrEquals(a, aStart, aEnd, b, bStart, bEnd) {
    while (aStart < aEnd && bStart < bEnd) {
        if (a[aStart] !== b[bStart]) {
            return false;
        }
        aStart += 1;
        bStart += 1;
    }
    return true;
}
/**
 * Return the overlap between the suffix of `a` and the prefix of `b`.
 * For instance `overlap("foobar", "arr, I'm a pirate") === 2`.
 */
function overlap(a, b) {
    var aEnd = a.length;
    var bEnd = b.length;
    var aStart = aEnd - bEnd;
    if (aStart === 0) {
        return a === b ? aEnd : 0;
    }
    else if (aStart < 0) {
        bEnd += aStart;
        aStart = 0;
    }
    while (aStart < aEnd && bEnd > 0) {
        if (substrEquals(a, aStart, aEnd, b, 0, bEnd)) {
            return bEnd;
        }
        bEnd -= 1;
        aStart += 1;
    }
    return 0;
}
// --- unicode
// http://en.wikipedia.org/wiki/Surrogate_pair
// Returns the code point starting at a specified index in a string
// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character
// Code points U+10000 to U+10FFFF are represented on two consecutive characters
//export function getUnicodePoint(str:string, index:number, len:number):number {
//	const chrCode = str.charCodeAt(index);
//	if (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {
//		const nextChrCode = str.charCodeAt(index + 1);
//		if (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {
//			return (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;
//		}
//	}
//	return chrCode;
//}
function isHighSurrogate(charCode) {
    return (0xD800 <= charCode && charCode <= 0xDBFF);
}
function isLowSurrogate(charCode) {
    return (0xDC00 <= charCode && charCode <= 0xDFFF);
}
/**
 * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js
 */
var CONTAINS_RTL = /(?:[\u05BE\u05C0\u05C3\u05C6\u05D0-\u05F4\u0608\u060B\u060D\u061B-\u064A\u066D-\u066F\u0671-\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u0710\u0712-\u072F\u074D-\u07A5\u07B1-\u07EA\u07F4\u07F5\u07FA-\u0815\u081A\u0824\u0828\u0830-\u0858\u085E-\u08BD\u200F\uFB1D\uFB1F-\uFB28\uFB2A-\uFD3D\uFD50-\uFDFC\uFE70-\uFEFC]|\uD802[\uDC00-\uDD1B\uDD20-\uDE00\uDE10-\uDE33\uDE40-\uDEE4\uDEEB-\uDF35\uDF40-\uDFFF]|\uD803[\uDC00-\uDCFF]|\uD83A[\uDC00-\uDCCF\uDD00-\uDD43\uDD50-\uDFFF]|\uD83B[\uDC00-\uDEBB])/;
/**
 * Returns true if `str` contains any Unicode character that is classified as "R" or "AL".
 */
function containsRTL(str) {
    return CONTAINS_RTL.test(str);
}
/**
 * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js
 */
var CONTAINS_EMOJI = /(?:[\u231A\u231B\u23F0\u23F3\u2600-\u27BF\u2B50\u2B55]|\uD83C[\uDDE6-\uDDFF\uDF00-\uDFFF]|\uD83D[\uDC00-\uDE4F\uDE80-\uDEF8]|\uD83E[\uDD00-\uDDE6])/;
function containsEmoji(str) {
    return CONTAINS_EMOJI.test(str);
}
var IS_BASIC_ASCII = /^[\t\n\r\x20-\x7E]*$/;
/**
 * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \n, \r, \t
 */
function isBasicASCII(str) {
    return IS_BASIC_ASCII.test(str);
}
function containsFullWidthCharacter(str) {
    for (var i = 0, len = str.length; i < len; i++) {
        if (isFullWidthCharacter(str.charCodeAt(i))) {
            return true;
        }
    }
    return false;
}
function isFullWidthCharacter(charCode) {
    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns
    // http://jrgraphix.net/research/unicode_blocks.php
    //          2E80 — 2EFF   CJK Radicals Supplement
    //          2F00 — 2FDF   Kangxi Radicals
    //          2FF0 — 2FFF   Ideographic Description Characters
    //          3000 — 303F   CJK Symbols and Punctuation
    //          3040 — 309F   Hiragana
    //          30A0 — 30FF   Katakana
    //          3100 — 312F   Bopomofo
    //          3130 — 318F   Hangul Compatibility Jamo
    //          3190 — 319F   Kanbun
    //          31A0 — 31BF   Bopomofo Extended
    //          31F0 — 31FF   Katakana Phonetic Extensions
    //          3200 — 32FF   Enclosed CJK Letters and Months
    //          3300 — 33FF   CJK Compatibility
    //          3400 — 4DBF   CJK Unified Ideographs Extension A
    //          4DC0 — 4DFF   Yijing Hexagram Symbols
    //          4E00 — 9FFF   CJK Unified Ideographs
    //          A000 — A48F   Yi Syllables
    //          A490 — A4CF   Yi Radicals
    //          AC00 — D7AF   Hangul Syllables
    // [IGNORE] D800 — DB7F   High Surrogates
    // [IGNORE] DB80 — DBFF   High Private Use Surrogates
    // [IGNORE] DC00 — DFFF   Low Surrogates
    // [IGNORE] E000 — F8FF   Private Use Area
    //          F900 — FAFF   CJK Compatibility Ideographs
    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms
    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A
    // [IGNORE] FE00 — FE0F   Variation Selectors
    // [IGNORE] FE20 — FE2F   Combining Half Marks
    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms
    // [IGNORE] FE50 — FE6F   Small Form Variants
    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B
    //          FF00 — FFEF   Halfwidth and Fullwidth Forms
    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]
    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E
    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul
    // [IGNORE] FFF0 — FFFF   Specials
    charCode = +charCode; // @perf
    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)
        || (charCode >= 0xF900 && charCode <= 0xFAFF)
        || (charCode >= 0xFF01 && charCode <= 0xFF5E));
}
/**
 * Given a string and a max length returns a shorted version. Shorting
 * happens at favorable positions - such as whitespace or punctuation characters.
 */
function lcut(text, n) {
    if (text.length < n) {
        return text;
    }
    var re = /\b/g;
    var i = 0;
    while (re.test(text)) {
        if (text.length - re.lastIndex < n) {
            break;
        }
        i = re.lastIndex;
        re.lastIndex += 1;
    }
    return text.substring(i).replace(/^\s/, empty);
}
// Escape codes
// http://en.wikipedia.org/wiki/ANSI_escape_code
var EL = /\x1B\x5B[12]?K/g; // Erase in line
var COLOR_START = /\x1b\[\d+m/g; // Color
var COLOR_END = /\x1b\[0?m/g; // Color
function removeAnsiEscapeCodes(str) {
    if (str) {
        str = str.replace(EL, '');
        str = str.replace(COLOR_START, '');
        str = str.replace(COLOR_END, '');
    }
    return str;
}
var removeAccents = (function () {
    if (typeof String.prototype.normalize !== 'function') {
        // ☹️ no ES6 features...
        return function (str) { return str; };
    }
    else {
        // transform into NFD form and remove accents
        // see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463
        var regex_1 = /[\u0300-\u036f]/g;
        return function (str) {
            return str.normalize('NFD').replace(regex_1, empty);
        };
    }
})();
// -- UTF-8 BOM
var UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);
function startsWithUTF8BOM(str) {
    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);
}
function stripUTF8BOM(str) {
    return startsWithUTF8BOM(str) ? str.substr(1) : str;
}
function safeBtoa(str) {
    return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values
}
function repeat(s, count) {
    var result = '';
    for (var i = 0; i < count; i++) {
        result += s;
    }
    return result;
}
/**
 * Checks if the characters of the provided query string are included in the
 * target string. The characters do not have to be contiguous within the string.
 */
function fuzzyContains(target, query) {
    if (!target || !query) {
        return false; // return early if target or query are undefined
    }
    if (target.length < query.length) {
        return false; // impossible for query to be contained in target
    }
    var queryLen = query.length;
    var targetLower = target.toLowerCase();
    var index = 0;
    var lastIndexOf = -1;
    while (index < queryLen) {
        var indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);
        if (indexOf < 0) {
            return false;
        }
        lastIndexOf = indexOf;
        index++;
    }
    return true;
}
function containsUppercaseCharacter(target, ignoreEscapedChars) {
    if (ignoreEscapedChars === void 0) { ignoreEscapedChars = false; }
    if (!target) {
        return false;
    }
    if (ignoreEscapedChars) {
        target = target.replace(/\\./g, '');
    }
    return target.toLowerCase() !== target;
}
function uppercaseFirstLetter(str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
}
function getNLines(str, n) {
    if (n === void 0) { n = 1; }
    if (n === 0) {
        return '';
    }
    var idx = -1;
    do {
        idx = str.indexOf('\n', idx + 1);
        n--;
    } while (n > 0 && idx >= 0);
    return idx >= 0 ?
        str.substr(0, idx) :
        str;
}


/***/ }),

/***/ "./src/vs/base/common/types.ts":
/*!*************************************!*\
  !*** ./src/vs/base/common/types.ts ***!
  \*************************************/
/*! exports provided: isArray, isString, isStringArray, isObject, isNumber, isBoolean, isUndefined, isUndefinedOrNull, isEmptyObject, isFunction, areFunctions, validateConstraints, validateConstraint, getAllPropertyNames, withNullAsUndefined, withUndefinedAsNull */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return isArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return isString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isStringArray", function() { return isStringArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return isObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return isNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return isBoolean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUndefined", function() { return isUndefined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUndefinedOrNull", function() { return isUndefinedOrNull; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEmptyObject", function() { return isEmptyObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return isFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "areFunctions", function() { return areFunctions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateConstraints", function() { return validateConstraints; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateConstraint", function() { return validateConstraint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAllPropertyNames", function() { return getAllPropertyNames; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "withNullAsUndefined", function() { return withNullAsUndefined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "withUndefinedAsNull", function() { return withUndefinedAsNull; });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var _typeof = {
    number: 'number',
    string: 'string',
    undefined: 'undefined',
    object: 'object',
    function: 'function'
};
/**
 * @returns whether the provided parameter is a JavaScript Array or not.
 */
function isArray(array) {
    if (Array.isArray) {
        return Array.isArray(array);
    }
    if (array && typeof (array.length) === _typeof.number && array.constructor === Array) {
        return true;
    }
    return false;
}
/**
 * @returns whether the provided parameter is a JavaScript String or not.
 */
function isString(str) {
    if (typeof (str) === _typeof.string || str instanceof String) {
        return true;
    }
    return false;
}
/**
 * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.
 */
function isStringArray(value) {
    return isArray(value) && value.every(function (elem) { return isString(elem); });
}
/**
 *
 * @returns whether the provided parameter is of type `object` but **not**
 *	`null`, an `array`, a `regexp`, nor a `date`.
 */
function isObject(obj) {
    // The method can't do a type cast since there are type (like strings) which
    // are subclasses of any put not positvely matched by the function. Hence type
    // narrowing results in wrong results.
    return typeof obj === _typeof.object
        && obj !== null
        && !Array.isArray(obj)
        && !(obj instanceof RegExp)
        && !(obj instanceof Date);
}
/**
 * In **contrast** to just checking `typeof` this will return `false` for `NaN`.
 * @returns whether the provided parameter is a JavaScript Number or not.
 */
function isNumber(obj) {
    if ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {
        return true;
    }
    return false;
}
/**
 * @returns whether the provided parameter is a JavaScript Boolean or not.
 */
function isBoolean(obj) {
    return obj === true || obj === false;
}
/**
 * @returns whether the provided parameter is undefined.
 */
function isUndefined(obj) {
    return typeof (obj) === _typeof.undefined;
}
/**
 * @returns whether the provided parameter is undefined or null.
 */
function isUndefinedOrNull(obj) {
    return isUndefined(obj) || obj === null;
}
var hasOwnProperty = Object.prototype.hasOwnProperty;
/**
 * @returns whether the provided parameter is an empty JavaScript Object or not.
 */
function isEmptyObject(obj) {
    if (!isObject(obj)) {
        return false;
    }
    for (var key in obj) {
        if (hasOwnProperty.call(obj, key)) {
            return false;
        }
    }
    return true;
}
/**
 * @returns whether the provided parameter is a JavaScript Function or not.
 */
function isFunction(obj) {
    return typeof obj === _typeof.function;
}
/**
 * @returns whether the provided parameters is are JavaScript Function or not.
 */
function areFunctions() {
    var objects = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        objects[_i] = arguments[_i];
    }
    return objects.length > 0 && objects.every(isFunction);
}
function validateConstraints(args, constraints) {
    var len = Math.min(args.length, constraints.length);
    for (var i = 0; i < len; i++) {
        validateConstraint(args[i], constraints[i]);
    }
}
function validateConstraint(arg, constraint) {
    if (isString(constraint)) {
        if (typeof arg !== constraint) {
            throw new Error("argument does not match constraint: typeof " + constraint);
        }
    }
    else if (isFunction(constraint)) {
        try {
            if (arg instanceof constraint) {
                return;
            }
        }
        catch (_a) {
            // ignore
        }
        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {
            return;
        }
        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {
            return;
        }
        throw new Error("argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true");
    }
}
function getAllPropertyNames(obj) {
    var res = [];
    var proto = Object.getPrototypeOf(obj);
    while (Object.prototype !== proto) {
        res = res.concat(Object.getOwnPropertyNames(proto));
        proto = Object.getPrototypeOf(proto);
    }
    return res;
}
/**
 * Converts null to undefined, passes all other values through.
 */
function withNullAsUndefined(x) {
    return x === null ? undefined : x;
}
/**
 * Converts undefined to null, passes all other values through.
 */
function withUndefinedAsNull(x) {
    return typeof x === 'undefined' ? null : x;
}


/***/ }),

/***/ "./src/vs/base/common/uri.ts":
/*!***********************************!*\
  !*** ./src/vs/base/common/uri.ts ***!
  \***********************************/
/*! exports provided: setUriThrowOnMissingScheme, URI */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUriThrowOnMissingScheme", function() { return setUriThrowOnMissingScheme; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "URI", function() { return URI; });
/* harmony import */ var vs_base_common_platform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vs/base/common/platform */ "./src/vs/base/common/platform.ts");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var _a;

var _schemePattern = /^\w[\w\d+.-]*$/;
var _singleSlashStart = /^\//;
var _doubleSlashStart = /^\/\//;
var _throwOnMissingSchema = true;
/**
 * @internal
 */
function setUriThrowOnMissingScheme(value) {
    var old = _throwOnMissingSchema;
    _throwOnMissingSchema = value;
    return old;
}
function _validateUri(ret, _strict) {
    // scheme, must be set
    if (!ret.scheme) {
        if (_strict || _throwOnMissingSchema) {
            throw new Error("[UriError]: Scheme is missing: {scheme: \"\", authority: \"" + ret.authority + "\", path: \"" + ret.path + "\", query: \"" + ret.query + "\", fragment: \"" + ret.fragment + "\"}");
        }
        else {
            console.warn("[UriError]: Scheme is missing: {scheme: \"\", authority: \"" + ret.authority + "\", path: \"" + ret.path + "\", query: \"" + ret.query + "\", fragment: \"" + ret.fragment + "\"}");
        }
    }
    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1
    // ALPHA *( ALPHA / DIGIT / "+" / "-" / "." )
    if (ret.scheme && !_schemePattern.test(ret.scheme)) {
        throw new Error('[UriError]: Scheme contains illegal characters.');
    }
    // path, http://tools.ietf.org/html/rfc3986#section-3.3
    // If a URI contains an authority component, then the path component
    // must either be empty or begin with a slash ("/") character.  If a URI
    // does not contain an authority component, then the path cannot begin
    // with two slash characters ("//").
    if (ret.path) {
        if (ret.authority) {
            if (!_singleSlashStart.test(ret.path)) {
                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character');
            }
        }
        else {
            if (_doubleSlashStart.test(ret.path)) {
                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")');
            }
        }
    }
}
// for a while we allowed uris *without* schemes and this is the migration
// for them, e.g. an uri without scheme and without strict-mode warns and falls
// back to the file-scheme. that should cause the least carnage and still be a
// clear warning
function _schemeFix(scheme, _strict) {
    if (_strict || _throwOnMissingSchema) {
        return scheme || _empty;
    }
    if (!scheme) {
        console.trace('BAD uri lacks scheme, falling back to file-scheme.');
        scheme = 'file';
    }
    return scheme;
}
// implements a bit of https://tools.ietf.org/html/rfc3986#section-5
function _referenceResolution(scheme, path) {
    // the slash-character is our 'default base' as we don't
    // support constructing URIs relative to other URIs. This
    // also means that we alter and potentially break paths.
    // see https://tools.ietf.org/html/rfc3986#section-5.1.4
    switch (scheme) {
        case 'https':
        case 'http':
        case 'file':
            if (!path) {
                path = _slash;
            }
            else if (path[0] !== _slash) {
                path = _slash + path;
            }
            break;
    }
    return path;
}
var _empty = '';
var _slash = '/';
var _regexp = /^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;
function _isQueryStringScheme(scheme) {
    if (!scheme) {
        return false;
    }
    switch (scheme.toLowerCase()) {
        case 'http':
        case 'https':
        case 'ftp':
            return true;
    }
    return false;
}
/**
 * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.
 * This class is a simple parser which creates the basic component parts
 * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation
 * and encoding.
 *
 *       foo://example.com:8042/over/there?name=ferret#nose
 *       \_/   \______________/\_________/ \_________/ \__/
 *        |           |            |            |        |
 *     scheme     authority       path        query   fragment
 *        |   _____________________|__
 *       / \ /                        \
 *       urn:example:animal:ferret:nose
 */
var URI = /** @class */ (function () {
    /**
     * @internal
     */
    function URI(schemeOrData, authority, path, query, fragment, _strict) {
        if (_strict === void 0) { _strict = false; }
        if (typeof schemeOrData === 'object') {
            this.scheme = schemeOrData.scheme || _empty;
            this.authority = schemeOrData.authority || _empty;
            this.path = schemeOrData.path || _empty;
            this.query = schemeOrData.query || _empty;
            this.fragment = schemeOrData.fragment || _empty;
            // no validation because it's this URI
            // that creates uri components.
            // _validateUri(this);
        }
        else {
            this.scheme = _schemeFix(schemeOrData, _strict);
            this.authority = authority || _empty;
            this.path = _referenceResolution(this.scheme, path || _empty);
            this.query = query || _empty;
            this.fragment = fragment || _empty;
            _validateUri(this, _strict);
        }
    }
    URI.isUri = function (thing) {
        if (thing instanceof URI) {
            return true;
        }
        if (!thing) {
            return false;
        }
        return typeof thing.authority === 'string'
            && typeof thing.fragment === 'string'
            && typeof thing.path === 'string'
            && typeof thing.query === 'string'
            && typeof thing.scheme === 'string'
            && typeof thing.fsPath === 'function'
            && typeof thing.with === 'function'
            && typeof thing.toString === 'function';
    };
    Object.defineProperty(URI.prototype, "fsPath", {
        // ---- filesystem path -----------------------
        /**
         * Returns a string representing the corresponding file system path of this URI.
         * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the
         * platform specific path separator.
         *
         * * Will *not* validate the path for invalid characters and semantics.
         * * Will *not* look at the scheme of this URI.
         * * The result shall *not* be used for display purposes but for accessing a file on disk.
         *
         *
         * The *difference* to `URI#path` is the use of the platform specific separator and the handling
         * of UNC paths. See the below sample of a file-uri with an authority (UNC path).
         *
         * ```ts
            const u = URI.parse('file://server/c$/folder/file.txt')
            u.authority === 'server'
            u.path === '/shares/c$/file.txt'
            u.fsPath === '\\server\c$\folder\file.txt'
        ```
         *
         * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,
         * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working
         * with URIs that represent files on disk (`file` scheme).
         */
        get: function () {
            // if (this.scheme !== 'file') {
            // 	console.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);
            // }
            return _makeFsPath(this);
        },
        enumerable: true,
        configurable: true
    });
    // ---- modify to new -------------------------
    URI.prototype.with = function (change) {
        if (!change) {
            return this;
        }
        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;
        if (scheme === undefined) {
            scheme = this.scheme;
        }
        else if (scheme === null) {
            scheme = _empty;
        }
        if (authority === undefined) {
            authority = this.authority;
        }
        else if (authority === null) {
            authority = _empty;
        }
        if (path === undefined) {
            path = this.path;
        }
        else if (path === null) {
            path = _empty;
        }
        if (query === undefined) {
            query = this.query;
        }
        else if (query === null) {
            query = _empty;
        }
        if (fragment === undefined) {
            fragment = this.fragment;
        }
        else if (fragment === null) {
            fragment = _empty;
        }
        if (scheme === this.scheme
            && authority === this.authority
            && path === this.path
            && query === this.query
            && fragment === this.fragment) {
            return this;
        }
        return new _URI(scheme, authority, path, query, fragment);
    };
    // ---- parse & validate ------------------------
    /**
     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,
     * `file:///usr/home`, or `scheme:with/path`.
     *
     * @param value A string which represents an URI (see `URI#toString`).
     */
    URI.parse = function (value, _strict) {
        if (_strict === void 0) { _strict = false; }
        var match = _regexp.exec(value);
        if (!match) {
            return new _URI(_empty, _empty, _empty, _empty, _empty, _strict);
        }
        return new _URI(match[2] || _empty, decodeURIComponentFast(match[4] || _empty, false, false), decodeURIComponentFast(match[5] || _empty, true, false), decodeURIComponentFast(match[7] || _empty, false, _isQueryStringScheme(match[2])), decodeURIComponentFast(match[9] || _empty, false, false), _strict);
    };
    /**
     * Creates a new URI from a file system path, e.g. `c:\my\files`,
     * `/usr/home`, or `\\server\share\some\path`.
     *
     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument
     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**
     * `URI.parse('file://' + path)` because the path might contain characters that are
     * interpreted (# and ?). See the following sample:
     * ```ts
    const good = URI.file('/coding/c#/project1');
    good.scheme === 'file';
    good.path === '/coding/c#/project1';
    good.fragment === '';
    const bad = URI.parse('file://' + '/coding/c#/project1');
    bad.scheme === 'file';
    bad.path === '/coding/c'; // path is now broken
    bad.fragment === '/project1';
    ```
     *
     * @param path A file system path (see `URI#fsPath`)
     */
    URI.file = function (path) {
        var authority = _empty;
        // normalize to fwd-slashes on windows,
        // on other systems bwd-slashes are valid
        // filename character, e.g. /f\oo/ba\r.txt
        if (vs_base_common_platform__WEBPACK_IMPORTED_MODULE_0__["isWindows"]) {
            path = path.replace(/\\/g, _slash);
        }
        // check for authority as used in UNC shares
        // or use the path as given
        if (path[0] === _slash && path[1] === _slash) {
            var idx = path.indexOf(_slash, 2);
            if (idx === -1) {
                authority = path.substring(2);
                path = _slash;
            }
            else {
                authority = path.substring(2, idx);
                path = path.substring(idx) || _slash;
            }
        }
        return new _URI('file', authority, path, _empty, _empty);
    };
    URI.from = function (components) {
        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);
    };
    // ---- printing/externalize ---------------------------
    /**
     * Creates a string representation for this URI. It's guaranteed that calling
     * `URI.parse` with the result of this function creates an URI which is equal
     * to this URI.
     *
     * * The result shall *not* be used for display purposes but for externalization or transport.
     * * The result will be encoded using the percentage encoding and encoding happens mostly
     * ignore the scheme-specific encoding rules.
     *
     * @param skipEncoding Do not encode the result, default is `false`
     */
    URI.prototype.toString = function (skipEncoding) {
        if (skipEncoding === void 0) { skipEncoding = false; }
        return _asFormatted(this, skipEncoding);
    };
    URI.prototype.toJSON = function () {
        return this;
    };
    URI.revive = function (data) {
        if (!data) {
            return data;
        }
        else if (data instanceof URI) {
            return data;
        }
        else {
            var result = new _URI(data);
            result._formatted = data.external;
            result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;
            return result;
        }
    };
    URI.ctorParameters = function () { return [
        { type: undefined },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: Boolean }
    ]; };
    return URI;
}());

var _pathSepMarker = vs_base_common_platform__WEBPACK_IMPORTED_MODULE_0__["isWindows"] ? 1 : undefined;
// tslint:disable-next-line:class-name
var _URI = /** @class */ (function (_super) {
    __extends(_URI, _super);
    function _URI() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._formatted = null;
        _this._fsPath = null;
        return _this;
    }
    Object.defineProperty(_URI.prototype, "fsPath", {
        get: function () {
            if (!this._fsPath) {
                this._fsPath = _makeFsPath(this);
            }
            return this._fsPath;
        },
        enumerable: true,
        configurable: true
    });
    _URI.prototype.toString = function (skipEncoding) {
        if (skipEncoding === void 0) { skipEncoding = false; }
        if (!skipEncoding) {
            if (!this._formatted) {
                this._formatted = _asFormatted(this, false);
            }
            return this._formatted;
        }
        else {
            // we don't cache that
            return _asFormatted(this, true);
        }
    };
    _URI.prototype.toJSON = function () {
        var res = {
            $mid: 1
        };
        // cached state
        if (this._fsPath) {
            res.fsPath = this._fsPath;
            res._sep = _pathSepMarker;
        }
        if (this._formatted) {
            res.external = this._formatted;
        }
        // uri components
        if (this.path) {
            res.path = this.path;
        }
        if (this.scheme) {
            res.scheme = this.scheme;
        }
        if (this.authority) {
            res.authority = this.authority;
        }
        if (this.query) {
            res.query = this.query;
        }
        if (this.fragment) {
            res.fragment = this.fragment;
        }
        return res;
    };
    return _URI;
}(URI));
function isHex(value, pos) {
    if (pos >= value.length) {
        return false;
    }
    var code = value.charCodeAt(pos);
    return (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */) // 0-9
        || (code >= 97 /* a */ && code <= 102 /* f */) //a-f
        || (code >= 65 /* A */ && code <= 70 /* F */); //A-F
}
function decodeURIComponentFast(uriComponent, isPath, isQueryString) {
    var res;
    var nativeDecodePos = -1;
    for (var pos = 0; pos < uriComponent.length; pos++) {
        var code = uriComponent.charCodeAt(pos);
        // decoding needed
        if (code === 37 /* PercentSign */ && isHex(uriComponent, pos + 1) && isHex(uriComponent, pos + 2)) {
            var chA = uriComponent.charCodeAt(pos + 1);
            var chB = uriComponent.charCodeAt(pos + 2);
            // when in a path -> check and accept %2f and %2F (fwd slash)
            // when in a query string -> check and accept %3D, %26, and %3B (equals, ampersand, semi-colon)
            if ((isPath && chA === 50 /* Digit2 */ && (chB === 70 /* F */ || chB === 102 /* f */))
                ||
                    (isQueryString && ((chA === 50 /* Digit2 */ && chB === 54 /* Digit6 */) // %26
                        ||
                            (chA === 51 /* Digit3 */ && (chB === 66 /* B */ || chB === 98 /* b */ || chB === 68 /* D */ || chB === 100 /* d */)) // %3D, %3D
                    ))) {
                if (nativeDecodePos !== -1) {
                    res += decodeURIComponent(uriComponent.substring(nativeDecodePos, pos));
                    nativeDecodePos = -1;
                }
                if (res !== undefined) {
                    res += uriComponent.substr(pos, 3);
                }
                pos += 2;
                continue;
            }
            if (res === undefined) {
                res = uriComponent.substring(0, pos);
            }
            if (nativeDecodePos === -1) {
                nativeDecodePos = pos;
            }
            pos += 2;
        }
        else {
            if (nativeDecodePos !== -1) {
                res += decodeURIComponent(uriComponent.substring(nativeDecodePos, pos));
                nativeDecodePos = -1;
            }
            if (res !== undefined) {
                res += String.fromCharCode(code);
            }
        }
    }
    if (nativeDecodePos !== -1) {
        res += decodeURIComponent(uriComponent.substr(nativeDecodePos));
    }
    return res !== undefined ? res : uriComponent;
}
// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2
var encodeTable = (_a = {},
    _a[58 /* Colon */] = '%3A',
    _a[47 /* Slash */] = '%2F',
    _a[63 /* QuestionMark */] = '%3F',
    _a[35 /* Hash */] = '%23',
    _a[91 /* OpenSquareBracket */] = '%5B',
    _a[93 /* CloseSquareBracket */] = '%5D',
    _a[64 /* AtSign */] = '%40',
    _a[33 /* ExclamationMark */] = '%21',
    _a[36 /* DollarSign */] = '%24',
    _a[38 /* Ampersand */] = '%26',
    _a[39 /* SingleQuote */] = '%27',
    _a[40 /* OpenParen */] = '%28',
    _a[41 /* CloseParen */] = '%29',
    _a[42 /* Asterisk */] = '%2A',
    _a[43 /* Plus */] = '%2B',
    _a[44 /* Comma */] = '%2C',
    _a[59 /* Semicolon */] = '%3B',
    _a[61 /* Equals */] = '%3D',
    _a[32 /* Space */] = '%20',
    _a);
function encodeURIComponentFast(uriComponent, isPath, isQueryString) {
    var res = undefined;
    var nativeEncodePos = -1;
    for (var pos = 0; pos < uriComponent.length; pos++) {
        var code = uriComponent.charCodeAt(pos);
        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3
        if ((code >= 97 /* a */ && code <= 122 /* z */)
            || (code >= 65 /* A */ && code <= 90 /* Z */)
            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)
            || code === 45 /* Dash */
            || code === 46 /* Period */
            || code === 95 /* Underline */
            || code === 126 /* Tilde */
            || (isPath && code === 47 /* Slash */) // path => allow slash AS-IS
            || (isQueryString && (code === 61 /* Equals */ || code === 38 /* Ampersand */ || code === 59 /* Semicolon */)) // query string => allow &=;
        ) {
            // check if we are delaying native encode
            if (nativeEncodePos !== -1) {
                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));
                nativeEncodePos = -1;
            }
            // check if we write into a new string (by default we try to return the param)
            if (res !== undefined) {
                res += uriComponent.charAt(pos);
            }
        }
        else if (code === 37 /* PercentSign */ && isHex(uriComponent, pos + 1) && isHex(uriComponent, pos + 2)) {
            // at percentage encoded value
            // check if we are delaying native encode
            if (nativeEncodePos !== -1) {
                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));
                nativeEncodePos = -1;
            }
            // check if we write into a new string (by default we try to return the param)
            if (res !== undefined) {
                res += uriComponent.substr(pos, 3);
            }
            pos += 2;
        }
        else {
            // encoding needed, we need to allocate a new string
            if (res === undefined) {
                res = uriComponent.substr(0, pos);
            }
            // check with default table first
            var escaped = encodeTable[code];
            if (escaped !== undefined) {
                // check if we are delaying native encode
                if (nativeEncodePos !== -1) {
                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));
                    nativeEncodePos = -1;
                }
                // append escaped variant to result
                res += escaped;
            }
            else if (nativeEncodePos === -1) {
                // use native encode only when needed
                nativeEncodePos = pos;
            }
        }
    }
    if (nativeEncodePos !== -1) {
        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));
    }
    return res !== undefined ? res : uriComponent;
}
function encodeURIComponentMinimal(path) {
    var res = undefined;
    for (var pos = 0; pos < path.length; pos++) {
        var code = path.charCodeAt(pos);
        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {
            if (res === undefined) {
                res = path.substr(0, pos);
            }
            res += encodeTable[code];
        }
        else {
            if (res !== undefined) {
                res += path[pos];
            }
        }
    }
    return res !== undefined ? res : path;
}
/**
 * Compute `fsPath` for the given uri
 */
function _makeFsPath(uri) {
    var value;
    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {
        // unc path: file://shares/c$/far/boo
        value = "//" + uri.authority + uri.path;
    }
    else if (uri.path.charCodeAt(0) === 47 /* Slash */
        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)
        && uri.path.charCodeAt(2) === 58 /* Colon */) {
        // windows drive letter: file:///c:/far/boo
        value = uri.path[1].toLowerCase() + uri.path.substr(2);
    }
    else {
        // other path
        value = uri.path;
    }
    if (vs_base_common_platform__WEBPACK_IMPORTED_MODULE_0__["isWindows"]) {
        value = value.replace(/\//g, '\\');
    }
    return value;
}
/**
 * Create the external version of a uri
 */
function _asFormatted(uri, skipEncoding) {
    var encoder = !skipEncoding
        ? encodeURIComponentFast
        : encodeURIComponentMinimal;
    var res = '';
    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;
    if (scheme) {
        res += scheme;
        res += ':';
    }
    if (authority || scheme === 'file') {
        res += _slash;
        res += _slash;
    }
    if (authority) {
        var idx = authority.indexOf('@');
        if (idx !== -1) {
            // <user>@<auth>
            var userinfo = authority.substr(0, idx);
            authority = authority.substr(idx + 1);
            idx = userinfo.indexOf(':');
            if (idx === -1) {
                res += encoder(userinfo, false, false);
            }
            else {
                // <user>:<pass>@<auth>
                res += encoder(userinfo.substr(0, idx), false, false);
                res += ':';
                res += encoder(userinfo.substr(idx + 1), false, false);
            }
            res += '@';
        }
        authority = authority.toLowerCase();
        idx = authority.indexOf(':');
        if (idx === -1) {
            res += encoder(authority, false, false);
        }
        else {
            // <auth>:<port>
            res += encoder(authority.substr(0, idx), false, false);
            res += authority.substr(idx);
        }
    }
    if (path) {
        // lower-case windows drive letters in /C:/fff or C:/fff
        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {
            var code = path.charCodeAt(1);
            if (code >= 65 /* A */ && code <= 90 /* Z */) {
                path = "/" + String.fromCharCode(code + 32) + ":" + path.substr(3); // "/c:".length === 3
            }
        }
        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {
            var code = path.charCodeAt(0);
            if (code >= 65 /* A */ && code <= 90 /* Z */) {
                path = String.fromCharCode(code + 32) + ":" + path.substr(2); // "/c:".length === 3
            }
        }
        // encode the rest of the path
        res += encoder(path, true, false);
    }
    if (query) {
        res += '?';
        res += encoder(query, false, _isQueryStringScheme(scheme));
    }
    if (fragment) {
        res += '#';
        res += !skipEncoding ? encodeURIComponentFast(fragment, false, false) : fragment;
    }
    return res;
}


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\Users\ynh2\projects\virtual-scroll\src\main.ts */"./src/main.ts");


/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main.js.map